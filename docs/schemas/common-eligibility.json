{
  "info": {
    "description": "Check advertising eligibility of products.",
    "title": "Eligibility",
    "version": "3.0"
  },
  "paths": {
    "/eligibility/product/list": {
      "post": {
        "summary": "Gets advertising eligibility status for a list of products.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductEligibilityRequest"
              }
            }
          },
          "required": true
        },
        "description": "Gets a list of advertising eligibility objects for a set of products. Requests are permitted only for products sold by the merchant associated with the profile. Note that the request object is a list of ASINs, but multiple SKUs are returned if there is more than one SKU associated with an ASIN. If a product is not eligible for advertising, the response includes an object describing the reasons for ineligibility.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "productEligibility",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. Request failed because user does not have access to a specified resource",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          },
          "404": {
            "description": "Cannot find requested entity. Note that this may occur if a product is not associated with the given profile/merchant, or a product is no longer in the catalog.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The request was understood, but it contained invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          },
          "429": {
            "description": "Too many requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error. Retry later. Contact support if this response persists.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductEligibilityError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Product Eligibility"
        ]
      }
    },
    "/eligibility/programs": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramEligibilityRequestContent"
              }
            },
            "application/vnd.programeligibility.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/ProgramEligibilityV2RequestContent"
              },
              "examples": {
                "ProgramEligibilityV2_example1": {
                  "summary": "Valid Request",
                  "value": {
                    "skipChecks": [],
                    "maxResults": "1"
                  }
                }
              }
            }
          }
        },
        "description": "Checks the advertiser's eligibility to ad programs.",
        "operationId": "ProgramEligibility",
        "responses": {
          "200": {
            "description": "ProgramEligibility 200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramEligibilityResponseContent"
                }
              },
              "application/vnd.programeligibility.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProgramEligibilityV2ResponseContent"
                },
                "examples": {
                  "ProgramEligibilityV2_example1": {
                    "summary": "Valid Request",
                    "value": {
                      "nextToken": "token",
                      "eligibilityStatusMaps": [
                        {
                          "marketplaceId": "ATVPDKIKX0DER",
                          "eligibilityStatusMap": {
                            "SD": {
                              "reasons": [
                                {
                                  "code": "NO_BRAND_RELATIONS",
                                  "level": "INELIGIBLE_WITH_RESOLUTION",
                                  "description": "Advertiser has no known relations to a brand."
                                }
                              ],
                              "eligible": "false"
                            },
                            "SPOT": {
                              "reasons": [
                                {
                                  "code": "NO_BRAND_RELATIONS",
                                  "level": "INELIGIBLE_WITH_RESOLUTION",
                                  "description": "Advertiser has no known relations to a brand."
                                }
                              ],
                              "eligible": "false"
                            },
                            "SB": {
                              "reasons": [
                                {
                                  "code": "NO_BRAND_RELATIONS",
                                  "level": "INELIGIBLE_WITH_RESOLUTION",
                                  "description": "Advertiser has no known relations to a brand."
                                }
                              ],
                              "eligible": "false"
                            }
                          },
                          "entityId": "ENTITY123"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestException 400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestExceptionResponseContent"
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException 401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedExceptionResponseContent"
                }
              }
            }
          },
          "404": {
            "description": "NotFoundException 404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NotFoundExceptionResponseContent"
                }
              }
            }
          },
          "429": {
            "description": "RateExceededException 429 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RateExceededExceptionResponseContent"
                }
              }
            }
          },
          "500": {
            "description": "InternalServerErrorException 500 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerErrorExceptionResponseContent"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/components/schemas/AcceptLanguage"
            },
            "in": "header",
            "name": "Accept-Language",
            "description": "Specify the language in which the response is returned."
          },
          {
            "schema": {
              "pattern": "\\S*",
              "description": "The header used to pass global account associated with the advertiser account\nUse `GET` method on the Global Ads Account resource to list the global ads account associated with the access token passed in the HTTP Authorization header and choose AdvertisingAccountIdentifier id from the response to pass it as input.\nUse for v2 global calls",
              "type": "string",
              "maxLength": 120
            },
            "in": "header",
            "name": "Amazon-Ads-Account-ID",
            "description": "The header used to pass global account associated with the advertiser account\nUse `GET` method on the Global Ads Account resource to list the global ads account associated with the access token passed in the HTTP Authorization header and choose AdvertisingAccountIdentifier id from the response to pass it as input.\nUse for v2 global calls"
          },
          {
            "schema": {
              "pattern": "\\S*",
              "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
              "type": "string",
              "maxLength": 120
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "pattern": "\\S*",
              "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
              "type": "string",
              "maxLength": 120
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input."
          },
          {
            "schema": {
              "description": "The content type of the request.",
              "type": "string"
            },
            "in": "header",
            "name": "Content-Type",
            "description": "The content type of the request."
          }
        ],
        "tags": [
          "Program Eligibility"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "UnauthorizedExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "Action": {
        "description": "The action to be performed on the resource.",
        "type": "string",
        "enum": [
          "postalCodeTarget",
          "advertiseAsinLess"
        ]
      },
      "EligibilityStatusDetail": {
        "description": "Describes a single program's eligibility status",
        "type": "object",
        "properties": {
          "reasons": {
            "minItems": 1,
            "maxItems": 99,
            "uniqueItems": true,
            "description": "String identifier for the status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReasonItem"
            }
          },
          "eligible": {
            "description": "Boolean value where if true, advertiser is eligible to access the given program.",
            "type": "boolean"
          }
        }
      },
      "ProgramEligibilityResponseContent": {
        "description": "An object of program eligibility responses for an advertiser.",
        "type": "object",
        "properties": {
          "eligibilityStatusMap": {
            "$ref": "#/components/schemas/EligibilityStatusMap"
          }
        }
      },
      "Check": {
        "oneOf": [
          {
            "type": "object",
            "title": "skipAllBillingChecks",
            "properties": {
              "skipAllBillingChecks": {
                "description": "Skip all billing/payments/suspension related checks",
                "type": "boolean"
              }
            },
            "required": [
              "skipAllBillingChecks"
            ]
          }
        ],
        "description": "A union of all the checks that we would want to skip"
      },
      "ReasonItem": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ReasonCode"
          },
          "level": {
            "$ref": "#/components/schemas/IneligibleLevel"
          },
          "description": {
            "description": "Message explaining what the status means. Example: Payment preference not found for associated billing account. Please add a new payment method",
            "type": "string"
          }
        }
      },
      "EligibilityStatus": {
        "description": "The advertising eligibility status of a product.",
        "type": "object",
        "properties": {
          "severity": {
            "description": "An enumerated advertising eligibility severity status. If set to `INELIGIBLE`, the product cannot be included in an advertisement. If set to `ELIGIBLE_WITH_WARNING`, the product may not receive impressions when included in an advertisement.",
            "type": "string",
            "enum": [
              "INELIGIBLE",
              "ELIGIBLE_WITH_WARNING"
            ]
          },
          "name": {
            "description": "The status identifier.",
            "type": "string",
            "enum": [
              "ADULT_PRODUCT",
              "CLOSED_CATEGORY",
              "INELIGIBLE_CONDITION",
              "INELIGIBLE_OFFER",
              "INELIGIBLE_PRODUCT_COST",
              "LISTING_SUPRESSED",
              "MISSING_IMAGE",
              "MISSING_TITLE",
              "NOT_IN_BUYBOX",
              "OUT_OF_STOCK",
              "RESTRICTED_CATEGORY",
              "VARIATION_PARENT"
            ]
          },
          "helpUrl": {
            "description": "A URL with additional information about the status identifier. May not be present for all status identifiers.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the status identifier specified in the `name` field.",
            "type": "string"
          }
        }
      },
      "Feature": {
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The marketplace to check the feature access in (Can be obfuscated or not)\nEspecially useful for global requests",
            "type": "string"
          },
          "resource": {
            "$ref": "#/components/schemas/Resource"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          }
        },
        "required": [
          "action",
          "marketplaceId",
          "resource"
        ]
      },
      "FeatureAcceptLanguage": {
        "type": "string",
        "enum": [
          "en_US",
          "ar_AE",
          "zh_CN",
          "nl_NL",
          "en_AU",
          "en_CA",
          "en_IN",
          "en_GB",
          "fr_CA",
          "fr_FR",
          "de_DE",
          "it_IT",
          "ja_JP",
          "ko_KR",
          "pl_PL",
          "pt_BR",
          "es_ES",
          "es_US",
          "es_MX",
          "tr_TR"
        ]
      },
      "ProgramEligibilityRequestContent": {
        "description": "A request to evaluate account level eligibility for Amazon ad programs (Sponsored Products, Sponsored Brands, Sponsored Display, Stores, DirectToConsumer, Amazon Attribution, etc).",
        "type": "object",
        "properties": {
          "skipChecks": {
            "$ref": "#/components/schemas/Check"
          }
        }
      },
      "ProgramEligibilityV2RequestContent": {
        "description": "A request to evaluate account level eligibility for Amazon ad programs (Sponsored Products, Sponsored Brands, Sponsored Display, Stores, DirectToConsumer, Amazon Attribution, etc).",
        "type": "object",
        "properties": {
          "skipChecks": {
            "minItems": 0,
            "maxItems": 20,
            "uniqueItems": true,
            "description": "Specify what check, if at all, we want to skip.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CheckV2"
            }
          },
          "maxResults": {
            "description": "Max results for pagination",
            "maximum": 100,
            "type": "number",
            "minimum": 1
          },
          "nextToken": {
            "description": "The pagination token that is required to go to the next page",
            "type": "string"
          }
        }
      },
      "ProductEligibilityRequest": {
        "description": "A product advertising eligibility request object.",
        "type": "object",
        "required": [
          "productDetailsList"
        ],
        "properties": {
          "adType": {
            "default": "sp",
            "description": "Set to 'sp' to check product eligibility for Sponsored Products advertisements. Set to 'sb' to check product eligibility for Sponsored Brands advertisements. Set to 'sd' to check product eligibility for Sponsored Display advertisements.",
            "type": "string",
            "enum": [
              "sp",
              "sb",
              "sd"
            ]
          },
          "productDetailsList": {
            "minItems": 1,
            "maxItems": 30,
            "description": "A list of product identifier objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductDetails"
            }
          },
          "locale": {
            "description": "Set to the locale string in the table below to specify the language in which the response is returned.\n|Locale|Language (ISO 639)|Country (ISO 3166)|\n|------|------------------|------------------|\n|ar-AE|Arabic (ar)|United Arab Emirates (AE)|\n|zh-CN|Chinese (zh)|China (CN)|\n|nl-NL|Dutch (nl)|Netherlands (NL)|\n|en-AU|English (en)|Australia (AU)|\n|en-CA|English (en)|Canada (CA)|\n|en-IN|English (en)|India (IN)|\n|en-GB|English (en)|United Kingdom (GB)|\n|en-US|English (en)|United States (US)|\n|fr-CA|French (fr)|Canada (CA)|\n|fr-FR|French (fr)|France (FR)|\n|de-DE|German (de)|Germany (DE)|\n|it-IT|Italian (it)|Italy (IT)|\n|ja-JP|Japanese (ja)|Japan (JP)|\n|ko-KR|Korean (ko)|South Korea (KR)|\n|pt-BR|Portuguese (pt)|Brazil (BR)|\n|es-ES|Spanish (es)|Spain (ES)|\n|es-US|Spanish (es)|United States (US)|\n|es-MX|Spanish (es)|Mexico (MX)|\n|tr-TR|Turkish (tr)|Turkey (TR)|\n",
            "type": "string"
          }
        }
      },
      "ProductEligibilityError": {
        "description": "The error response object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "FeatureReasonItem": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/ReasonCode"
          },
          "description": {
            "description": "Message explaining what the status means. Example: Payment preference not found for associated billing account. Please add a new payment method",
            "type": "string"
          }
        }
      },
      "ProductDetails": {
        "description": "An Amazon product identifier, seller product identifer, or both.",
        "type": "object",
        "required": [
          "asin"
        ],
        "properties": {
          "asin": {
            "description": "An Amazon product identifier.",
            "type": "string"
          },
          "sku": {
            "description": "A seller product identifier.",
            "type": "string"
          }
        }
      },
      "AcceptLanguage": {
        "type": "string",
        "enum": [
          "en-US",
          "ar-AE",
          "zh-CN",
          "nl-NL",
          "en-AU",
          "en-CA",
          "en-IN",
          "en-GB",
          "fr-CA",
          "fr-FR",
          "de-DE",
          "it-IT",
          "ja-JP",
          "ko-KR",
          "pl-PL",
          "pt-BR",
          "es-ES",
          "es-US",
          "es-MX",
          "tr-TR"
        ]
      },
      "AdProgram": {
        "description": "This defines the AdPrograms supported",
        "type": "string",
        "enum": [
          "SB",
          "SD",
          "MAAS",
          "DTC",
          "SPOT"
        ]
      },
      "EligibilityStatusMap": {
        "description": "This is a map that will be key'd on the ad program (SB/SD/DTC/MAAS/SPOT); the value will be an eligibility object.",
        "additionalProperties": {
          "$ref": "#/components/schemas/EligibilityStatusDetail"
        },
        "type": "object"
      },
      "EligibilityStatusDetailV2": {
        "description": "Describes a single program's eligibility status",
        "type": "object",
        "properties": {
          "reasons": {
            "minItems": 1,
            "maxItems": 99,
            "uniqueItems": true,
            "description": "String identifier for the status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReasonItem"
            }
          },
          "eligible": {
            "description": "Boolean value where if true, advertiser is eligible to access the given program.",
            "type": "boolean"
          },
          "adProgram": {
            "$ref": "#/components/schemas/AdProgram"
          }
        }
      },
      "CheckName": {
        "description": "The name of all the checks that we would want to skip",
        "type": "string",
        "enum": [
          "skipAllBillingChecks"
        ]
      },
      "ProductEligibilityResponse": {
        "description": "A product advertising eligibility response object.",
        "type": "object",
        "properties": {
          "productResponseList": {
            "description": "A list of product advertising eligibility responses.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResponse"
            }
          }
        }
      },
      "FeatureEligibilityError": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "description": "The human readable message for the error encountered",
            "type": "string"
          },
          "errorCode": {
            "description": "The error code ffor the error encountered",
            "type": "string"
          },
          "errorId": {
            "description": "The integer code for the error encountered",
            "type": "number"
          },
          "itemRequestId": {
            "description": "The id of the item that is Marketplace + Resource + Action",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "The http status code of the item",
            "type": "number"
          }
        }
      },
      "Resource": {
        "description": "The advertising resource of which you wish to check feature access for. Example: Sponsored Display Campaign.",
        "type": "string",
        "enum": [
          "sd:campaigns",
          "sd:campaigns:audiences"
        ]
      },
      "FeatureEligibilityItem": {
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The marketplace to check the feature access in, will be obfuscated or not depending on the input",
            "type": "string"
          },
          "reasons": {
            "minItems": 0,
            "maxItems": 20,
            "uniqueItems": true,
            "description": "String identifier for the status.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureReasonItem"
            }
          },
          "resource": {
            "$ref": "#/components/schemas/Resource"
          },
          "action": {
            "$ref": "#/components/schemas/Action"
          },
          "isEligible": {
            "description": "Boolean value where if true, advertiser is eligible to access the given feature.",
            "type": "boolean"
          },
          "itemRequestId": {
            "description": "The id of the item that is Marketplace + Resource + Action",
            "type": "string"
          },
          "httpStatusCode": {
            "description": "the http status code of the item",
            "type": "number"
          }
        }
      },
      "ReasonCode": {
        "type": "string",
        "enum": [
          "BILLING_ACCOUNT_NOT_FOUND",
          "PAYMENT_PROFILE_NOT_FOUND",
          "PAYMENT_METHOD_NOT_FOUND",
          "PAYMENT_METHOD_NOT_VALID",
          "EXPIRED_PAYMENT_METHOD",
          "VETTING_FAILURE",
          "ACCOUNT_SUSPENDED",
          "TAX_INFO_NOT_COMPLETE",
          "PREPAY_BALANCE_TOO_LOW",
          "RO_BALANCE_TOO_LOW",
          "NO_BRAND_RELATIONS",
          "NOT_BRAND_REPRESENTATIVE",
          "NO_TACTIC_ENABLED",
          "DIRECT_TO_CONSUMER_OWNER_TAG_ID_NOT_FOUND",
          "DIRECT_TO_CONSUMER_SUBSCRIPTION_NOT_FOUND",
          "SUBSCRIPTION_NOT_FOUND",
          "ADVERTISING_ACCOUNT_NOT_FOUND",
          "NOT_LAUNCHED_IN_MARKETPLACE",
          "UNKNOWN",
          "BLOCKED"
        ]
      },
      "FeatureEligibilityRequestContent": {
        "description": "A request to evaluate feature eligibility",
        "type": "object",
        "properties": {
          "features": {
            "minItems": 1,
            "maxItems": 30,
            "uniqueItems": true,
            "description": "The List of features and marketplaces of which you wish the feature to be evalulated in",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Feature"
            }
          }
        },
        "required": [
          "features"
        ]
      },
      "ProgramEligibilityV2ResponseContent": {
        "description": "An object of program eligibility responses for an advertiser.",
        "type": "object",
        "properties": {
          "eligibilityStatusLists": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MarketplaceEntitiesEligibilityStatusList"
            }
          },
          "nextToken": {
            "description": "token value allowing to navigate to the next response page",
            "type": "string"
          }
        }
      },
      "BadRequestExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "IneligibleLevel": {
        "type": "string",
        "enum": [
          "INELIGIBLE_WITH_RESOLUTION",
          "INELIGIBLE"
        ]
      },
      "NotFoundExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "RateExceededExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "ExcessiveBatchSizeExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "MarketplaceEntitiesEligibilityStatusList": {
        "type": "object",
        "properties": {
          "marketplaceId": {
            "type": "string"
          },
          "entityId": {
            "type": "string"
          },
          "eligibilityStatusList": {
            "minItems": 0,
            "maxItems": 50,
            "description": "This is a map that will be key'd on the ad program (SB/SD/DTC/MAAS/SPOT); the value will be an eligibility object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EligibilityStatusDetailV2"
            }
          }
        }
      },
      "CheckV2": {
        "description": "Defines which check we would want to skip",
        "type": "object",
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CheckName"
          },
          "skip": {
            "type": "boolean"
          }
        }
      },
      "InternalServerErrorExceptionResponseContent": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "number"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "ProductResponse": {
        "description": "An product advertising eligibility response.",
        "type": "object",
        "required": [
          "eligibilityStatusList",
          "overallStatus",
          "productDetails"
        ],
        "properties": {
          "productDetails": {
            "$ref": "#/components/schemas/ProductDetails"
          },
          "eligibilityStatusList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EligibilityStatus"
            }
          },
          "overallStatus": {
            "description": "A human-readable description of the product's advertising eligibility status. Inherits highest severity from eligibilityStatusList.",
            "type": "string",
            "enum": [
              "ELIGIBLE",
              "INELIGIBLE",
              "ELIGIBLE_WITH_WARNING"
            ]
          }
        }
      },
      "FeatureEligibilityResponseContent": {
        "description": "A list of feature eligibility responses for an advertiser, split by success and error",
        "type": "object",
        "properties": {
          "success": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureEligibilityItem"
            }
          },
          "error": {
            "minItems": 0,
            "maxItems": 30,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FeatureEligibilityError"
            }
          }
        }
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {}
  },
  "openapi": "3.0.1"
}