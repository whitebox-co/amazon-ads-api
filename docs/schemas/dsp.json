{
  "openapi": "3.0.0",
  "info": {
    "version": "3.1",
    "title": "Amazon Ads API - Amazon DSP",
    "description": "Use the Amazon Ads API for DSP for campaign, creative, line item and association operations. For onboarding information, see the [account setup](https://advertising.amazon.com/API/docs/v3/guides/account_setup) topic.<br/><br/> .",
    "contact": {
      "name": "Amazon Ads API Support",
      "url": "https://amzn-clicks.atlassian.net/servicedesk/customer/portals"
    },
    "license": {
      "name": "Amazon Ads API License Agreement",
      "url": "https://advertising.amazon.com/API/docs/license-agreement"
    }
  },
  "tags": [
    {
      "name": "Order"
    },
    {
      "name": "LineItem"
    },
    {
      "name": "Creative"
    },
    {
      "name": "Image Creative"
    },
    {
      "name": "Video Creative"
    },
    {
      "name": "Responsive eCommerce Creative"
    },
    {
      "name": "Third Party Creative"
    },
    {
      "name": "Moderation"
    },
    {
      "name": "LineItemCreativeAssociation"
    },
    {
      "name": "Discovery"
    },
    {
      "name": "Domain Targeting"
    }
  ],
  "paths": {
    "/dsp/orders/{orderId}": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets an order with complete information specified by an identifier.",
        "description": "Gets an order with complete information specified by an identifier.",
        "operationId": "getOrder",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderV2_2"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Order"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON.",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/orders/": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Gets one or more orders with basic information.",
        "description": "Gets one or more orders with basic information.",
        "operationId": "getOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "startIndex",
            "description": "Optional. Sets a zero-based offset into the requested set of orders. Use in conjunction with the `count` parameter to control pagination of the returned array. Default startIndex is 0. Minimum count is 0.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "description": "Optional. Sets the number of orders in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten orders set `startIndex=0` and `count=10`. To return the next ten orders, set `startIndex=10` and `count=10`, and so on. Default count is 100. Minimum count is 1 and maximum count is 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusFilter",
            "description": "Optional. The returned array is filtered to include only orders with delivery status matching those specified in the comma-delimited string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderIdFilter",
            "description": "The returned array is filtered to include only orders with identifiers matching those specified in the comma-delimited string. Either one of (OrderIdFilter or advertiserIdFilter) should be provided.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "advertiserIdFilter",
            "description": "The returned array is filtered to include only orders with identifiers matching those specified in the comma-delimited string. Either one of (OrderIdFilter or advertiserIdFilter) should be provided.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersV2_2"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OrdersV2_1"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Orders"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Create an order.",
        "description": "Create an order.\n\nCallout - A future update will add support for multiple at a time.\n",
        "operationId": "CreateOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of order objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dsporders.v2.2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderV2_2"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsporders.v2.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsporders.v2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Update an order.",
        "description": "This is a full update, not partial patch. All the fields/data returned by GET Order by Id must be provided(including read-only fields). Any field that is changed/removed would be updated as provided in the request.\nTo update `deliveryActivationStatus` use POST deliveryActivationStatus by Order Id instead.\n\nCallout - A future update will add support for multiple at a time.\n",
        "operationId": "UpdateOrders",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of order objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dsporders.v2.2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/OrderV2_2"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsporders.v2.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsporders.v2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Order"
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/orders/{orderId}/deliveryActivationStatus": {
      "post": {
        "tags": [
          "Order"
        ],
        "summary": "Set delivery activation status for the given order id.",
        "description": "Setting delivery activation status for the given order id.",
        "operationId": "SetOrderStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The delivery activation status. If the given status value is not part of enumeration (DeliveryActivationStatus), then response code will be 404.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeliveryActivationStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success with no body content."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/orders/{orderId}/conversionTracking": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get conversion tracking information for given order.",
        "description": "Get conversion tracking information for given order.",
        "operationId": "GetConversionTrackings",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionTrackingV2_1"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ConversionTracking"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Add or remove conversion tracking information from the order.",
        "description": "Add or remove conversion tracking information from the order.",
        "operationId": "UpdateConversionTracking",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Conversion tracking object",
          "content": {
            "application/vnd.dsporders.v2.1+json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionTrackingV2_1"
              }
            },
            "application/vnd.dsporders.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/ConversionTracking"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success with no body content."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsporders.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsporders.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/orders/{orderId}/conversionTracking/products": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get conversion tracking products by identifier",
        "description": "Get conversion tracking products by identifier. If the order was previously updated by list of products, response will be a list of products. The maximum size of list will be 2000. If the order was previously updated by product file, please use '/dsp/orders/{orderId}/conversionTracking/products/export' to export as a file.",
        "operationId": "getProductsByOrderId",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspproducttrackinglist.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTrackingListV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Add or remove conversion tracking products from the order.",
        "description": "Add or remove conversion tracking products from the order. It can be updated by either providing values for productList or productFile field. For productList, up to 2,000 ProductTrackingItems can be added, including up to 20 ProductTrackingItems per domain if FEATURED_WITH_VARIATIONS is specified in productAssociation. For productFile, up to 50,000 Products can be used. Check out our tutorial for more details.",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Conversion tracking product tracking object",
          "content": {
            "application/vnd.dspproducttracking.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductTrackingV1"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success with no body content."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/orders/{orderId}/conversionTracking/products/export": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Export conversion tracking products as a file by identifier.",
        "description": "Export conversion tracking products as a file by identifier. The file URL will expire in 15 minutes.",
        "operationId": "exportProductsByOrderId",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspproducttrackingfile.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductTrackingFile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/orders/{orderId}/conversionTracking/pixels": {
      "get": {
        "tags": [
          "Order"
        ],
        "summary": "Get conversion tracking pixels by identifier",
        "description": "Get conversion tracking pixels by identifier.",
        "operationId": "getPixelsByOrderId",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsppixeltracking.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PixelTracking"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order"
        ],
        "summary": "Add or remove conversion tracking pixels from the order.",
        "description": "Add or remove conversion tracking pixels from the order. The maximum size of pixel list is 100.",
        "operationId": "updatePixelsByOrderId",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "orderId",
            "in": "path",
            "description": "The order identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Conversion tracking pixel tracking object",
          "content": {
            "application/vnd.dsppixeltracking.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/PixelTracking"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success with no body content."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/lineItems/{lineItemId}": {
      "get": {
        "tags": [
          "LineItem"
        ],
        "summary": "Gets line item with complete information specified by identifier.",
        "description": "Gets line item specified by identifier.",
        "operationId": "getLineItem",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The line item identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsplineitems.v3.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemV3_1"
                }
              },
              "application/vnd.dsplineitems.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemV3"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemV2_1"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemV2_1"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItem"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/lineItems/": {
      "get": {
        "tags": [
          "LineItem"
        ],
        "summary": "Gets one or more line items with basic information.",
        "description": "Gets one or more line items with basic information.",
        "operationId": "getLineItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "startIndex",
            "description": "Optional. Sets a zero-based offset into the requested set of line items. Use in conjunction with the `count` parameter to control pagination of the returned array. Default startIndex is 0. Minimum count is 0.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "description": "Optional. Sets the number of line items in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten line items set `startIndex=0` and `count=10`. To return the next ten line items, set `startIndex=10` and `count=10`, and so on. Default count is 100. Minimum count is 1 and maximum count is 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "statusFilter",
            "description": "Optional. The returned array is filtered to include only line items with delivery status matching those specified in the comma-delimited string.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "orderIdFilter",
            "description": "The returned array is filtered to include only line items with identifiers matching those specified in the comma-delimited string. Either one of (orderIdFilter or lineItemIdFilter) should be provided.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineItemIdFilter",
            "description": "The returned array is filtered to include only line items with identifiers matching those specified in the comma-delimited string. Either one of (orderIdFilter or lineItemIdFilter) should be provided.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspbasiclineitems.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemsV2_2"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemsV2_2"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemsV2_1"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItems"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LineItem"
        ],
        "summary": "Create line item.",
        "description": "Create line item.\n\nCallout - A future update will add support for multiple at a time.\n",
        "operationId": "createLineItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of lineitem objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dsplineitems.v3.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV3_1"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v3+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV3"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v2.2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV2_1"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v2.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV2_1"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dsplineitemsresponse.v3.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitemsresponse.v3+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LineItem"
        ],
        "summary": "Update line item.",
        "description": "This is a full update, not partial patch. All the fields/data returned by GET LineItem by Id must be provided(including read-only fields). Any field that is changed/removed would be updated as provided in the request.\nTo update `deliveryActivationStatus` use POST deliveryActivationStatus by LineItem Id instead.\n\nCallout - A future update will add support for multiple at a time.\n",
        "operationId": "updateLineItems",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of line item objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dsplineitems.v3.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV3_1"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v3+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV3"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v2.2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV2_1"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v2.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemV2_1"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitems.v2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItem"
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dsplineitemsresponse.v3.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitemsresponse.v3+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/lineItems/{lineItemId}/deliveryActivationStatus": {
      "post": {
        "tags": [
          "LineItem"
        ],
        "summary": "Set delivery activation status for the given line item id.",
        "description": "Setting delivery activation status for the given line item id. Version 2.x line items accept `application/vnd.dsplineitems.v2+json` for this API. Version 3.x line items accept `application/vnd.dsplineitemsdeliveryactivationstatus.v3+json` for this API.",
        "operationId": "setLineItemStatus",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "lineItemId",
            "in": "path",
            "description": "The line item identifier.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The delivery activation status. If the given delivery activation status value is not part of enumeration (DeliveryActivationStatus), Response code will be 404.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeliveryActivationStatus"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Success with no body content."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user or given delivery activation status value is not part of given enumeration.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitems.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/creatives/": {
      "get": {
        "tags": [
          "Creative"
        ],
        "summary": "Gets one or more creatives.",
        "description": "Gets one or more creatives.",
        "operationId": "getCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "startIndex",
            "description": "Optional. Sets a zero-based offset into the requested set of creatives. Use in conjunction with the `count` parameter to control pagination of the returned array. Default startIndex is 0. Minimum count is 0.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "description": "Optional. Sets the number of creatives in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten creatives set `startIndex=0` and `count=10`. To return the next ten creatives, set `startIndex=10` and `count=10`, and so on. Default count is 100. Minimum count is 1 and maximum count is 100.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "creativeIdFilter",
            "description": "The returned array is filtered to include only creatives with identifiers matching those specified in the comma-delimited string. Either one of (creativeIdFilter or advertiserIdFilter) should be given.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "advertiserIdFilter",
            "description": "The returned array is filtered to include only creatives with identifiers matching those specified in the comma-delimited string. Either one of (creativeIdFilter or advertiserIdFilter) should be given.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lineItemTypeFilter",
            "description": "The returned array is filtered to include only creatives with line item type matching those specified in the comma-delimited string. If the given filter value is not part of enumeration (LineItemType), Response code will be 404. VIDEO line item type filter is available since version `application/vnd.dspcreatives.v2.1+json`.",
            "in": "query",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SupportedLineItemTypes"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Creatives"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Creatives"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthorized Access",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed to perform this operation"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Resource Not Found",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dspcreatives.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dspcreatives.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/creatives/image": {
      "get": {
        "tags": [
          "Image Creative"
        ],
        "summary": "Get image creative(s).",
        "description": "Get an image creative matching criteria provided in request.\n\nCallout - A future update will add support to get multiple Image creatives at a time.\n",
        "operationId": "getImageCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/creativeIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspimagecreatives.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspReadImageCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "post": {
        "tags": [
          "Image Creative"
        ],
        "summary": "Create image creative(s).",
        "description": "Create an image creative.\n\nCallout - A future update will add support to create multiple Image creatives at a time.\n",
        "operationId": "CreateImageCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspcreateimagecreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspCreateImageCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspimagecreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspImageCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "put": {
        "tags": [
          "Image Creative"
        ],
        "summary": "Update image creative(s).",
        "description": "Update an image creative.\n\nCallout - A future update will add support to update multiple Image creatives at a time.\n",
        "operationId": "UpdateImageCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspupdateimagecreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspUpdateImageCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspimagecreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspImageCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/image/preview": {
      "post": {
        "tags": [
          "Image Creative"
        ],
        "summary": "Preview an image creative.",
        "description": "Preview an image creative.\n",
        "operationId": "previewImageCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "A preview request.",
          "content": {
            "application/vnd.dsppreviewimagecreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspImageCreativePreviewRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsppreviewcreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspCreativePreviewResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/video": {
      "get": {
        "tags": [
          "Video Creative"
        ],
        "summary": "Get video creative(s)",
        "description": "Get a video creative matching criteria provided in request.\n\nCallout - A future update will add support to get multiple Video creatives at a time.\n",
        "operationId": "getVideoCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/creativeIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspvideocreatives.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspReadVideoCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "post": {
        "tags": [
          "Video Creative"
        ],
        "summary": "Create video creative(s)",
        "description": "Create a video creative\n\nCallout - A future update will add support to create multiple Video creatives at a time.\n",
        "operationId": "createVideoCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspcreatevideocreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspCreateVideoCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspvideocreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspVideoCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "put": {
        "tags": [
          "Video Creative"
        ],
        "summary": "Update video creative(s)",
        "description": "Update a video creative\n\nCallout - A future update will add support to update multiple Video creatives at a time.\n",
        "operationId": "updateVideoCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspupdatevideocreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspUpdateVideoCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspvideocreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspVideoCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/video/preview": {
      "post": {
        "tags": [
          "Video Creative"
        ],
        "summary": "Preview a video creative",
        "description": "Preview a video creative",
        "operationId": "previewVideoCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "A preview request.",
          "content": {
            "application/vnd.dsppreviewvideocreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspVideoCreativePreviewRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.dsppreviewcreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspCreativePreviewResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/rec": {
      "get": {
        "tags": [
          "Responsive eCommerce Creative"
        ],
        "summary": "Get Responsive eCommerce Creative  (REC).",
        "description": "Get an Responsive eCommerce Creative (REC) matching criteria provided in request.\n\nCallout - A future update will add support to get multiple REC creatives at a time.\n",
        "operationId": "getRecCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/creativeIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspreccreatives.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspReadRecCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "post": {
        "tags": [
          "Responsive eCommerce Creative"
        ],
        "summary": "Create Responsive eCommerce Creatives(REC).",
        "description": "Create a new Responsive eCommerce Creatives(REC).\n\nCallout - A future update will add support to create multiple REC creatives at a time.\n",
        "operationId": "createRecCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspcreatereccreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspCreateRecCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspreccreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspRecCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "put": {
        "tags": [
          "Responsive eCommerce Creative"
        ],
        "summary": "Update Responsive eCommerce Creatives(REC).",
        "description": "Update existing Responsive eCommerce Creatives(REC).\n\nCallout - A future update will add support for multiple at a time.\n",
        "operationId": "updateRecCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspupdatereccreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspUpdateRecCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspreccreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspRecCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/rec/preview": {
      "post": {
        "tags": [
          "Responsive eCommerce Creative"
        ],
        "summary": "Preview a Responsive eCommerce Creative(REC).",
        "description": "Preview a Responsive eCommerce Creative(REC).",
        "operationId": "previewRecCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "A preview request.",
          "content": {
            "application/vnd.dsppreviewreccreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspRecCreativePreviewRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/vnd.dsppreviewcreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspCreativePreviewResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/thirdParty": {
      "get": {
        "tags": [
          "Third Party Creative"
        ],
        "summary": "Get third party creative(s).",
        "description": "Get a third party creative matching criteria provided in request.\n\nNote that a future update will add support to get multiple third party creatives at a time.\n",
        "operationId": "getThirdPartyCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/creativeIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspthirdpartycreatives.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspReadThirdPartyCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "post": {
        "tags": [
          "Third Party Creative"
        ],
        "summary": "Create third party creative(s).",
        "description": "Create a third party creative.\n\nNote that a future update will add support to create multiple third party creatives at a time.\n",
        "operationId": "createThirdPartyCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspcreatethirdpartycreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspCreateThirdPartyCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspthirdpartycreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspThirdPartyCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "put": {
        "tags": [
          "Third Party Creative"
        ],
        "summary": "Update third party creative(s).",
        "description": "Update a third party creative.\n\nNote that a future update will add support to update multiple third party creatives at a time.\n",
        "operationId": "updateThirdPartyCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of creative objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspupdatethirdpartycreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspUpdateThirdPartyCreativesRequestV1"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspthirdpartycreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspThirdPartyCreativesResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/creatives/thirdParty/preview": {
      "post": {
        "tags": [
          "Third Party Creative"
        ],
        "summary": "Preview third party creative.",
        "description": "Preview a third party creative.\n",
        "operationId": "previewThirdPartyCreative",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "A preview request.",
          "content": {
            "application/vnd.dsppreviewthirdpartycreatives.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DspThirdPartyCreativePreviewRequestV1"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dsppreviewcreativesresponse.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DspCreativePreviewResponseV1"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/moderation/creatives": {
      "get": {
        "tags": [
          "Moderation"
        ],
        "summary": "Get creative moderation summary by creativeId.",
        "description": "Get creative moderation summary by creativeId.",
        "operationId": "getCreativeModeration",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "$ref": "#/components/parameters/creativeIdFilter"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspmoderationcreatives.v1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DspCreativeModerationV1"
                  },
                  "minItems": 1,
                  "maxItems": 1
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/lineItemCreativeAssociations": {
      "get": {
        "tags": [
          "LineItemCreativeAssociation"
        ],
        "summary": "Gets a list of line-item / creative associations.",
        "description": "Gets an array of creative associations, filtered by specified criteria.",
        "operationId": "listLineItemCreativeAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "lineItemIdFilter",
            "in": "query",
            "description": "The returned array includes only associations to line items matching those specified in the comma-delimited string.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "count",
            "in": "query",
            "description": "Optional. Sets the number of results in the returned array. Use in conjunction with the `startIndex` parameter to control pagination. For example, to return the first ten results set `startIndex=0` and `count=10`. To return the next ten results, set `startIndex=10` and `count=10`, and so on. Maximum of count is 20.",
            "schema": {
              "type": "integer",
              "default": 20,
              "minimum": 1,
              "maximum": 20
            }
          },
          {
            "name": "startIndex",
            "in": "query",
            "description": "Optional. Sets a zero-based offset into the requested set of results. Use in conjunction with the `count` parameter to control pagination of the returned array. Default startIndex is 0.",
            "schema": {
              "type": "integer",
              "default": 0,
              "minimum": 0
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A list of associations.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemCreativeAssociations"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemCreativeAssociations"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "LineItemCreativeAssociation"
        ],
        "summary": "Update association details.",
        "description": "Update association details. This API will be used to update startDate, endDate and weight parameters. Weight field can be updated only if creativeRotationType is `WEIGHTED`. CreativeRotationType field is under line item setting.\n\nCallout - A future update will add support for multiple at a time.\n",
        "operationId": "updateLineItemCreativeAssociations",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemCreativeAssociation"
                },
                "minItems": 1,
                "maxItems": 1
              }
            },
            "application/vnd.dsplineitemcreativeassociations.v2+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/LineItemCreativeAssociation"
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          },
          "required": false
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemCreativeAssociationsResponse"
                  }
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LineItemCreativeAssociationsResponse"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "LineItemCreativeAssociation"
        ],
        "summary": "Create/delete association between line item and creative.",
        "description": "Create/delete association between line item and creative.\n\nCallout -  Do not pass in startDate, endDate and weight. Use the PUT operation instead to populate these fields. We will add support in POST in a future update. A future update will also include support for multiple at a time.\n",
        "operationId": "AssociateLineItemsToCreatives",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "content": {
            "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemCreativeAssociationsRequest"
              }
            },
            "application/vnd.dsplineitemcreativeassociations.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/LineItemCreativeAssociationsRequest"
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemCreativeAssociationsResponse"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/LineItemCreativeAssociationsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user does not have access to a specified resource",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `Accept` Header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsplineitemcreativeassociations.v2.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              },
              "application/vnd.dsplineitemcreativeassociations.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/fileUploads/policy/": {
      "post": {
        "tags": [
          "FileUploads"
        ],
        "summary": "Create file upload policy.",
        "description": "Create file upload policy that used to upload file to AWS S3. File upload policy will expire in 15 minutes.",
        "operationId": "createFileUploadsPolicy",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "policyType",
            "description": "The returned file upload policy is determined by policyType.",
            "in": "query",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/SupportedPolicyType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspfileuploadpolicies.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/FileUploadPolicy"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Malformed JSON",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Unauthenticated Request",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Too Many Requests",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Internal Server Error",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "502": {
            "description": "Bad Gateway Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Bad Gateway",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Service Unavailable",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
                }
              }
            }
          },
          "504": {
            "description": "Endpoint Request Timed-out Exception.",
            "content": {
              "application/vnd.dsperrors.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "message": "Endpoint Request Timed-out",
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b42"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/pixels": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets a list of pixel objects based on filters",
        "description": "Gets a list of pixels based on filters. AdvertiserIdFilter must be provided. Results are sorted by create time in ascending order (earliest first).",
        "operationId": "getPixels",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "advertiserIdFilter",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "description": "The returned array is filtered to include only pixels owned by the advertiserIds specified. Up to 5 advertisers may be specified in a single request, unless pixelIdFilter is also present (see pixelIdFilter).",
            "required": true
          },
          {
            "in": "query",
            "name": "pixelIdFilter",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "style": "form",
            "explode": false,
            "description": "The returned array is filtered to include only pixels with ID matching those specified in the comma-delimited string. Limited to 25 pixel IDs per request. All pixels specified must belong to the same advertiser and therefore advertiserIdFilter is limited to a single advertiser if pixelIdFilter is non-null.",
            "required": false
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "maximum": 100
            },
            "description": "Sets the maximum number of pixels in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextToken": {
                      "type": "string"
                    },
                    "pixels": {
                      "type": "array",
                      "description": "Array of pixels sorted by create time, earliest first.",
                      "items": {
                        "$ref": "#/components/schemas/Pixel"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/productCategories": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets the hierarchy of product category objects",
        "description": "Gets the hierarchy of product category objects as a list sorted by ID in ascending order.",
        "operationId": "getProductCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 250,
              "maximum": 1000
            },
            "description": "Sets the maximum number of categories in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,1000] with default as 250. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextToken": {
                      "type": "string"
                    },
                    "productCategories": {
                      "type": "array",
                      "description": "Array of ProductCategory sorted by ID in ascending lexicographical order.",
                      "items": {
                        "$ref": "#/components/schemas/ProductCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/supplySources": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets the supply sources based on line item type, advertiser and supply source type",
        "description": "Gets the supply sources based on line item type, advertiser and supply source type. When the supply source type is deal, orderId must be supplied. The returned list of deal supply sources will be filtered to include only those valid for the advertiser that owns the order and are running during the order dates.",
        "operationId": "getSupplySources",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "lineItemType",
            "schema": {
              "$ref": "#/components/schemas/DiscoveryLineItemTypes"
            },
            "description": "Line item type to retrieve supply sources for",
            "required": true
          },
          {
            "in": "query",
            "name": "supplySourceType",
            "description": "Type of supply source to retrieve",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "AMAZON_EXCLUSIVE",
                "OPEN_EXCHANGE",
                "DEAL"
              ]
            }
          },
          {
            "in": "query",
            "name": "orderId",
            "description": "Required for deal supply source type. The start time of the Order will be used to determine which deals to fetch. Returned deals will be valid for the advertiserId used to create the Order.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "advertiserId",
            "description": "Optional, but recommended. If specified, the result set of supply sources will be filtered to only those valid for the given advertiserId. If orderId is also provided, the order must belong to the specified advertiser.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "deviceTypes",
            "description": "Restricts query to the specified device types. If not specified, all valid device types for a line item type will be returned.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "DESKTOP",
                  "MOBILE",
                  "DESKTOP_AND_MOBILE",
                  "CONNECTED_TV"
                ]
              }
            },
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "maximum": 100
            },
            "description": "Sets the maximum number of supply sources in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplySourceResponseV1_2"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplySourceResponse"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplySourceResponseV1_1"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupplySourceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.supplysources.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/vnd.supplysources.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/domainLists": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets the list of domain lists for inclusion/exclusion based on entity",
        "description": "Gets the list of domain lists for inclusion/exclusion based on entity. Lists are sorted by creation time.",
        "operationId": "getDomains",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "maximum": 100
            },
            "description": "Sets the maximum number of domain lists in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextToken": {
                      "type": "string"
                    },
                    "domainLists": {
                      "description": "Array of domain lists sorted by creation time, ascending",
                      "items": {
                        "$ref": "#/components/schemas/DomainListMetadata"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/geoLocations": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets locationTargeting objects based on locationTargetingId or text query",
        "description": "Gets locationTargeting objects based on locationTargetingId or text query, such as city name, zip code, or other address text. Either one of locationTargetingId or text query may be supplied, but not both.",
        "operationId": "getGeoLocations",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "geoLocationIDFilter",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "description": "An array of location IDs to retrieve, up to 10 in one request.",
            "required": false
          },
          {
            "in": "query",
            "name": "textQuery",
            "schema": {
              "type": "string"
            },
            "description": "Filter by text such as city, state, country, dma, or postal code. Retrieves top 100 results in decreasing order of relevancy. Results may be paginated to retrieve these items in pages, but no query will return more than 100 items total.",
            "required": false
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "maximum": 100
            },
            "description": "Sets the maximum number of locations in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "geoLocations": {
                      "type": "array",
                      "description": "Array of results matching the given IDs or text query",
                      "items": {
                        "$ref": "#/components/schemas/GeoLocation"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/iabContentCategories": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets the hierarchy of IAB content categories.",
        "description": "Gets the hierarchy of IAB content categories as a list sorted by ID in ascending order.",
        "operationId": "getIabContentCategories",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "lineItemType",
            "schema": {
              "$ref": "#/components/schemas/DiscoveryLineItemTypes"
            },
            "description": "The line item type to retrieve content categories for. This was introduced in version - `application/vnd.dspiabcontentcategories.v1+json`.",
            "required": false
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 250,
              "maximum": 1000
            },
            "description": "Sets the maximum number of categories in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,1000] with default as 250. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextToken": {
                      "type": "string"
                    },
                    "iabContentCategories": {
                      "type": "array",
                      "description": "Array of IABContentCategory sorted by ID in ascending lexicographical order.",
                      "items": {
                        "$ref": "#/components/schemas/IABContentCategory"
                      }
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "nextToken": {
                      "type": "string"
                    },
                    "iabContentCategories": {
                      "type": "array",
                      "description": "Array of IABContentCategory sorted by ID in ascending lexicographical order.",
                      "items": {
                        "$ref": "#/components/schemas/IABContentCategory"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.dspiabcontentcategories.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/preBidTargeting/doubleVerify/customContextualSegments": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets Double Verify provided custom contextual segments for pre-bid targeting.",
        "description": "Retrieves custom contextual segments pre-bid targeting data for an account that is already linked to Double Verify. If an account is not linked to the provider, no data will be returned.",
        "operationId": "getDvCustomContextualSegments",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "advertiserId",
            "schema": {
              "type": "string"
            },
            "description": "The advertiser to retrieve pre-bid targeting for.",
            "required": true
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 25,
              "maximum": 1000
            },
            "description": "Sets the maximum number of segments in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DvCustomContextualSegments"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/preBidTargeting/oracleDataCloud/customPredicts": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets Oracle Data Cloud provided custom predicts for pre-bid targeting.",
        "description": "Retrieves custom predict pre-bid targeting data for an account that is already linked to Oracle Data Cloud. If an account is not linked to the provider, no data will be returned.",
        "operationId": "getOdcCustomPredicts",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 25,
              "maximum": 1000
            },
            "description": "Sets the maximum number of segments in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OdcCustomPredicts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/preBidTargeting/oracleDataCloud/standardPredicts": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets Oracle Data Cloud provided standard predicts for pre-bid targeting.",
        "description": "Retrieves standard predict pre-bid targeting data.",
        "operationId": "getOdcStandardPredicts",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token to be used to request additional entries. If not provided, up to the first 320 entries are returned. Note: subsequent calls must be made using the same parameters as used in previous requests that returned the provided nextToken.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.odcstandardpredicts.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/OdcStandardPredicts"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    },
    "/dsp/goalConfigurations": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets possible configurations for campaign goals.",
        "description": "Gets a list of configurations that can be applied to orders to optimize for a desired campaign goal, sorted by goal name.",
        "operationId": "getGoalConfigurations",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "productLocation",
            "schema": {
              "type": "string",
              "enum": [
                "SOLD_ON_AMAZON",
                "NOT_SOLD_ON_AMAZON"
              ]
            },
            "description": "Whether to retrieve the goal configurations available for an endemic (sold on Amazon) or non-endemic order.",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "goalConfigurations": {
                      "type": "array",
                      "description": "Array of GoalConfiguration sorted by goal name in ascending lexicographical order.",
                      "items": {
                        "$ref": "#/components/schemas/GoalConfiguration"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/apps": {
      "get": {
        "tags": [
          "Discovery"
        ],
        "summary": "Gets apps based on app Id or text query",
        "description": "Gets apps based on app Ids or text querys. Either one of app Ids or text query may be supplied, but not both.",
        "operationId": "getApps",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "in": "query",
            "name": "appIdFilter",
            "schema": {
              "type": "array",
              "minItems": 1,
              "maxItems": 20,
              "items": {
                "type": "string",
                "minLength": 1,
                "maxLength": 100
              }
            },
            "description": "An array of app Ids to retrieve, up to 20 in one request.",
            "required": false,
            "style": "form",
            "explode": false
          },
          {
            "in": "query",
            "name": "textQuery",
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            },
            "description": "Filter by text. Retrieves up to 1000 results in sorted lexicographically, descending order of relevancy. Results may be paginated to retrieve these items in pages, but no query will return more than 1000 items total.",
            "required": false
          },
          {
            "in": "query",
            "name": "nextToken",
            "schema": {
              "type": "string"
            },
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "in": "query",
            "name": "maxResults",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 10,
              "maximum": 1000
            },
            "description": "Sets the maximum number of apps in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,1000] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Apps"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because the user does not have access to the specified resource.",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.dspgetapps.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/dsp/targeting/domain/": {
      "get": {
        "tags": [
          "Domain Targeting"
        ],
        "summary": "Gets one or more line items domain targeting information.",
        "description": "Gets one or more line items domain targeting information.",
        "operationId": "getDomainTargeting",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "name": "lineItemIdFilter",
            "description": "Comma-delimited string of line item ids. Maximum 100 ids.",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.dspreaddomaintargeting.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ReadDomainTargetingResponses"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      },
      "put": {
        "tags": [
          "Domain Targeting"
        ],
        "summary": "Update line item domain targeting.",
        "description": "Replaces the DomainTargeting for the specified line items with the ones provided in the request body.\n",
        "operationId": "updateDomainTargeting",
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "requestBody": {
          "description": "An array of domain targeting objects. Maximum length of the array is 1.",
          "content": {
            "application/vnd.dspupdatedomaintargeting.v1+json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateDomainTargetingRequest"
                },
                "minItems": 1,
                "maxItems": 1
              }
            }
          }
        },
        "responses": {
          "207": {
            "description": "Multi-status. This holds array of items which represents success or failure corresponding to the index in the request body.",
            "content": {
              "application/vnd.dspdomaintargetingresponse.v1+json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateDomainTargetingResponse"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          },
          "500": {
            "$ref": "#/components/responses/InternalServerError"
          },
          "502": {
            "$ref": "#/components/responses/BadGateway"
          },
          "503": {
            "$ref": "#/components/responses/ServiceUnavailable"
          },
          "504": {
            "$ref": "#/components/responses/EndpointRequestTimedOut"
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "BadRequest": {
        "description": "Bad Request or request body is not matching with input model.",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Malformed JSON",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthenticated request.",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Unauthenticated Request",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden - Request failed because user is not authorized to access a resource.",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Unauthorized Access",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
              "errors": [
                {
                  "errorType": "ENTITY_NOT_ALLOWED",
                  "message": "Given entity is not allowed"
                }
              ]
            }
          }
        }
      },
      "NotFound": {
        "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Resource Not Found",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "UnsupportedMediaType": {
        "description": "Unsupported Media Type - Version not supported.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
              "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Too Many Requests - Request was rate-limited. Retry later.",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Too Many Requests",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "InternalServerError": {
        "description": "Internal Server Error.",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Internal Server Error",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "BadGateway": {
        "description": "Bad Gateway Exception",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Bad Gateway",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "ServiceUnavailable": {
        "description": "Service Unavailable Exception",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Service Unavailable",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      },
      "EndpointRequestTimedOut": {
        "description": "Endpoint Request Timed-out Exception",
        "content": {
          "application/vnd.dsperrors.v1+json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "message": "Endpoint Request Timed-out",
              "requestId": "ad165994-489a-4fcf-a175-7a846c899b41"
            }
          }
        }
      }
    },
    "schemas": {
      "Orders": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderBasic"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "OrdersV2_1": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderBasicV2_1"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "OrdersV2_2": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrderBasicV2_2"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "OrderBasic": {
        "type": "object",
        "description": "This model is designed to support batch get operation for better performance.",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order identifier."
          },
          "advertiserId": {
            "type": "string",
            "description": "The advertiser identifier."
          },
          "name": {
            "type": "string",
            "description": "The order name."
          },
          "externalId": {
            "type": "string",
            "description": "The order external identifier, also known as purchase order number (PO number). This field is required if \"Mandatory PO numbers\" is set at the entity level. `N/A` (not applicable) is a valid value. This field will be deprecated and renamed to `poNumber` in a future release."
          },
          "comments": {
            "type": "string",
            "description": "The order comments."
          },
          "startDateTime": {
            "type": "string",
            "description": "The order start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00 UTC"
          },
          "endDateTime": {
            "type": "string",
            "description": "The order end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00 UTC"
          },
          "budget": {
            "$ref": "#/components/schemas/OrderBudgetBasic"
          },
          "agencyFee": {
            "$ref": "#/components/schemas/AgencyFee"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "deliveryActivationStatus": {
            "$ref": "#/components/schemas/DeliveryActivationStatus"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/OrderDeliveryStatus"
          },
          "frequencyCap": {
            "$ref": "#/components/schemas/FrequencyCap"
          },
          "optimization": {
            "$ref": "#/components/schemas/OrderOptimization"
          }
        }
      },
      "OrderBasicV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderBasic"
          }
        ],
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "The order creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00. This field is available since version `application/vnd.dsporders.v2.1+json`.",
            "readOnly": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The order last update date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00. This field is available since version `application/vnd.dsporders.v2.1+json`.",
            "readOnly": true
          }
        }
      },
      "OrderBasicV2_2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderBasicV2_1"
          }
        ],
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV3"
          }
        }
      },
      "Order": {
        "type": "object",
        "description": "Complete order model which willl be used for create/update and get.",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order identifier. It will be used to perform update operation. Immutable field."
          },
          "advertiserId": {
            "type": "string",
            "description": "The advertiser identifier. Immutable field."
          },
          "name": {
            "type": "string",
            "description": "The order name."
          },
          "externalId": {
            "type": "string",
            "description": "The order external identifier, also known as purchase order number (PO number). This field is required if \"Mandatory PO numbers\" is set at the entity level. `N/A` (not applicable) is a valid value. This field will be deprecated and renamed to `poNumber` in a future release."
          },
          "comments": {
            "type": "string",
            "description": "The order comments."
          },
          "startDateTime": {
            "type": "string",
            "description": "The order start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00 UTC. The start date has to be modeled as a part of flights object.\n",
            "readOnly": true
          },
          "endDateTime": {
            "type": "string",
            "description": "The order end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00 UTC. The end date has to be modeled as a part of flights object.\n",
            "readOnly": true
          },
          "budget": {
            "$ref": "#/components/schemas/OrderBudget"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "agencyFee": {
            "description": "It is immutable if the order has one or more lineItems.",
            "$ref": "#/components/schemas/AgencyFee"
          },
          "frequencyCap": {
            "$ref": "#/components/schemas/FrequencyCap"
          },
          "optimization": {
            "$ref": "#/components/schemas/OrderOptimization"
          },
          "deliveryActivationStatus": {
            "$ref": "#/components/schemas/DeliveryActivationStatus"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/OrderDeliveryStatus"
          },
          "creationDate": {
            "type": "string",
            "description": "The order creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00.",
            "readOnly": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The order last update date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-12-16T19:20:30+01:00.",
            "readOnly": true
          }
        },
        "required": [
          "advertiserId",
          "name",
          "budget",
          "frequencyCap",
          "optimization"
        ]
      },
      "OrderV2_2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Order"
          }
        ],
        "properties": {
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV3"
          }
        }
      },
      "OrderResponse": {
        "description": "Response for the order create/update operations. If operation is successful, it contains only orderId. If it is a failure, it contains only errorDetails. success and failure will be corresponding to that requested index in that batch (array of items).\n",
        "type": "object",
        "properties": {
          "orderId": {
            "type": "string",
            "description": "The order Identifier."
          },
          "errorDetails": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "LineItems": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemBasic"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "LineItemsV2_1": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemBasicV2_1"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "LineItemsV2_2": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemBasicV2_2"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "LineItemBasic": {
        "type": "object",
        "readOnly": true,
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item identifier."
          },
          "lineItemType": {
            "$ref": "#/components/schemas/LineItemType"
          },
          "name": {
            "type": "string",
            "description": "The line item name."
          },
          "externalId": {
            "type": "string",
            "description": "The line item external identifier."
          },
          "comments": {
            "type": "string",
            "description": "The line item comments."
          },
          "orderId": {
            "type": "string",
            "description": "The order to which the line item is associated."
          },
          "startDateTime": {
            "type": "string",
            "description": "The line item start date in ISO date format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-07-16T19:20:30+01:00"
          },
          "endDateTime": {
            "type": "string",
            "description": "The line item end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example,2020-07-16T19:20:30+01:00"
          },
          "deliveryActivationStatus": {
            "$ref": "#/components/schemas/DeliveryActivationStatus"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/LineItemDeliveryStatus"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "budget": {
            "$ref": "#/components/schemas/LineItemBudget"
          },
          "frequencyCap": {
            "$ref": "#/components/schemas/FrequencyCap"
          },
          "optimization": {
            "$ref": "#/components/schemas/LineItemOptimization"
          }
        }
      },
      "LineItemBasicV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemBasic"
          }
        ],
        "properties": {
          "lineItemType": {
            "$ref": "#/components/schemas/LineItemTypeBasicV2_1"
          }
        }
      },
      "LineItemBasicV2_2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemBasic"
          }
        ],
        "properties": {
          "lineItemType": {
            "$ref": "#/components/schemas/LineItemTypeBasicV2_1"
          },
          "creationDate": {
            "type": "string",
            "description": "The line item creation date. This field is available since version `application/vnd.dsplineitems.v2.2+json`.",
            "readOnly": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The line item last updated date. This field is available since version `application/vnd.dsplineitems.v2.2+json`.",
            "readOnly": true
          }
        }
      },
      "LineItem": {
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item identifier. This is required when we perform update operations. Immutable field.",
            "readOnly": true
          },
          "lineItemType": {
            "$ref": "#/components/schemas/LineItemType"
          },
          "name": {
            "type": "string",
            "description": "The line item name."
          },
          "orderId": {
            "type": "string",
            "description": "The order to which the line item is associated. Immutable field."
          },
          "externalId": {
            "type": "string",
            "description": "The external identifier of the line item."
          },
          "startDateTime": {
            "type": "string",
            "description": "The line item start date in ISO date format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-07-16T19:20:30+01:00."
          },
          "endDateTime": {
            "type": "string",
            "description": "The line item end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-07-16T19:20:30+01:00"
          },
          "comments": {
            "type": "string",
            "description": "The line item comments."
          },
          "deliveryActivationStatus": {
            "$ref": "#/components/schemas/DeliveryActivationStatus"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/LineItemDeliveryStatus"
          },
          "lineItemClassification": {
            "$ref": "#/components/schemas/LineItemClassification"
          },
          "frequencyCap": {
            "$ref": "#/components/schemas/FrequencyCap"
          },
          "targeting": {
            "$ref": "#/components/schemas/LineItemTargeting"
          },
          "budget": {
            "$ref": "#/components/schemas/LineItemBudget"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCode"
          },
          "appliedFees": {
            "$ref": "#/components/schemas/AppliedFees"
          },
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "optimization": {
            "$ref": "#/components/schemas/LineItemOptimization"
          },
          "creativeOptions": {
            "$ref": "#/components/schemas/CreativeOptions"
          },
          "creationDate": {
            "type": "string",
            "description": "The line item creation date.",
            "readOnly": true
          },
          "lastUpdateDate": {
            "type": "string",
            "description": "The line item last update date.",
            "readOnly": true
          }
        },
        "required": [
          "lineItemType",
          "name",
          "orderId",
          "startDateTime",
          "endDateTime",
          "lineItemClassification",
          "frequencyCap",
          "bidding",
          "optimization"
        ]
      },
      "LineItemV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItem"
          }
        ],
        "properties": {
          "lineItemType": {
            "$ref": "#/components/schemas/LineItemTypeV2_1"
          },
          "targeting": {
            "$ref": "#/components/schemas/LineItemTargetingV2_1"
          }
        }
      },
      "LineItemV3": {
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item identifier. This is required when we perform update operations. Immutable field.",
            "readOnly": true
          },
          "lineItemType": {
            "$ref": "#/components/schemas/LineItemTypeV2_1"
          },
          "name": {
            "type": "string",
            "description": "The line item name."
          },
          "orderId": {
            "type": "string",
            "description": "The order to which the line item is associated. Immutable field."
          },
          "externalId": {
            "type": "string",
            "description": "The external identifier of the line item."
          },
          "startDateTime": {
            "type": "string",
            "description": "The line item start date in ISO date format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-07-16T19:20:30+01:00."
          },
          "endDateTime": {
            "type": "string",
            "description": "The line item end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. For example, 2020-07-16T19:20:30+01:00"
          },
          "comments": {
            "type": "string",
            "description": "The line item comments."
          },
          "deliveryActivationStatus": {
            "$ref": "#/components/schemas/DeliveryActivationStatus"
          },
          "deliveryStatus": {
            "$ref": "#/components/schemas/LineItemDeliveryStatus"
          },
          "lineItemClassification": {
            "$ref": "#/components/schemas/LineItemClassification"
          },
          "frequencyCap": {
            "$ref": "#/components/schemas/FrequencyCap"
          },
          "targeting": {
            "$ref": "#/components/schemas/LineItemTargetingV3"
          },
          "budget": {
            "$ref": "#/components/schemas/LineItemBudget"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV3"
          },
          "appliedFees": {
            "$ref": "#/components/schemas/AppliedFees"
          },
          "bidding": {
            "$ref": "#/components/schemas/Bidding"
          },
          "optimization": {
            "$ref": "#/components/schemas/LineItemOptimization"
          },
          "creativeOptions": {
            "$ref": "#/components/schemas/CreativeOptions"
          },
          "creationDate": {
            "type": "string",
            "description": "The line item creation date.",
            "readOnly": true
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The line item last updated date.",
            "readOnly": true
          }
        },
        "required": [
          "lineItemType",
          "name",
          "orderId",
          "startDateTime",
          "endDateTime",
          "lineItemClassification",
          "frequencyCap",
          "bidding",
          "optimization"
        ]
      },
      "LineItemV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemV3"
          }
        ],
        "properties": {
          "targeting": {
            "$ref": "#/components/schemas/LineItemTargetingV3_1"
          }
        }
      },
      "LineItemResponse": {
        "description": "Response for the line item create/update operations. Success contains only lineItemId and failure contains only errorDetails corresponding to that requested index in that batch (array of items).",
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The Line item identifier."
          },
          "errorDetails": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "OrderBudgetBasic": {
        "type": "object",
        "properties": {
          "totalBudgetAmount": {
            "type": "number",
            "format": "double",
            "description": "The total budget amount. For create/update operations, budget has to be modeled as part of flights object.\n",
            "readOnly": true
          },
          "budgetCaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetCap"
            }
          }
        }
      },
      "OrderBudget": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OrderBudgetBasic"
          },
          {
            "type": "object",
            "properties": {
              "flights": {
                "type": "array",
                "description": "The budget, start date and end date for an order have to be modeled as flight object. An order can have multiple flights.\n",
                "items": {
                  "$ref": "#/components/schemas/OrderFlight"
                },
                "minItems": 1
              }
            }
          }
        ]
      },
      "OrderFlight": {
        "type": "object",
        "properties": {
          "flightId": {
            "type": "string",
            "description": "The flight identifier. Immutable field."
          },
          "startDateTime": {
            "type": "string",
            "description": "The flight start date in ISO format (YYYY-MM-DD hh:mm:ss z). Timezone is UTC. For example, 2020-10-21 03:59:00 UTC."
          },
          "endDateTime": {
            "type": "string",
            "description": "The flight start date in ISO format (YYYY-MM-DD hh:mm:ss z). Timezone is UTC. For example, 2020-10-21 03:59:00 UTC."
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The total flight budget amount."
          },
          "spentAmount": {
            "type": "number",
            "format": "double",
            "description": "The spent flight budget amount.",
            "readOnly": true
          },
          "remainingAmount": {
            "type": "number",
            "format": "double",
            "description": "The remaining flight budget amount.",
            "readOnly": true
          }
        },
        "required": [
          "startDateTime",
          "endDateTime",
          "amount"
        ]
      },
      "AgencyFee": {
        "type": "object",
        "description": "The service fee associated with an agency.",
        "properties": {
          "feePercentage": {
            "type": "number",
            "format": "double",
            "description": "Fee expressed as a percentage of the total budget."
          }
        }
      },
      "OrderOptimization": {
        "type": "object",
        "properties": {
          "productLocation": {
            "type": "string",
            "description": "The product location indicates whether the product is endemic or non-endemic.",
            "enum": [
              "SOLD_ON_AMAZON",
              "NOT_SOLD_ON_AMAZON"
            ]
          },
          "goal": {
            "type": "string",
            "description": "The budget optimization goal type.",
            "enum": [
              "AWARENESS",
              "ENGAGEMENT_WITH_MY_AD",
              "CONSIDERATIONS_ON_AMAZON",
              "CONVERSIONS_OFF_AMAZON",
              "PURCHASES_ON_AMAZON",
              "MOBILE_APP_INSTALLS"
            ]
          },
          "goalKpi": {
            "type": "string",
            "description": "KPI for the selected goal.",
            "enum": [
              "VIDEO_COMPLETION_RATE",
              "CLICK_THROUGH_RATE",
              "COST_PER_CLICK",
              "COST_PER_ACQUISITION",
              "COST_PER_DOWNLOAD",
              "DETAIL_PAGE_VIEW_RATE",
              "COST_PER_DETAIL_PAGE_VIEW",
              "RETURN_ON_AD_SPEND",
              "TOTAL_RETURN_ON_AD_SPEND",
              "COST_PER_VIDEO_COMPLETION",
              "NONE",
              "OTHER",
              "REACH"
            ]
          },
          "autoOptimizations": {
            "type": "array",
            "description": "The list of optimizations supported.",
            "items": {
              "type": "string",
              "enum": [
                "BUDGET",
                "BID"
              ]
            }
          },
          "biddingStrategy": {
            "description": "It specifies how Amazon Ads determines bids on your behalf for each opportunity to serve an impression. It is immutable once the order has started delivering.\n",
            "type": "string",
            "enum": [
              "SPEND_BUDGET_IN_FULL",
              "MAXIMIZE_PERFORMANCE"
            ]
          }
        },
        "required": [
          "productLocation",
          "goal",
          "goalKpi"
        ]
      },
      "OrderDeliveryStatus": {
        "type": "string",
        "description": "The order delivery status. DELIVERING: The order is delivering. OUT_OF_BUDGET: The order is out of budget. ENDED: The order has ended. LINEITEMS_NOT_RUNNING: The order doesn’t have any active line items to deliver. INACTIVE: The order is paused by the user. READY_TO_DELIVER: The order has not yet started.",
        "enum": [
          "DELIVERING",
          "ENDED",
          "OUT_OF_BUDGET",
          "LINEITEMS_NOT_RUNNING",
          "INACTIVE",
          "READY_TO_DELIVER"
        ],
        "readOnly": true
      },
      "LineItemType": {
        "type": "string",
        "description": "The line item type.",
        "enum": [
          "STANDARD_DISPLAY",
          "AMAZON_MOBILE_DISPLAY",
          "AAP_MOBILE_APP"
        ]
      },
      "LineItemTypeV2_1": {
        "type": "string",
        "description": "The line item type. All operations are supported for VIDEO line item type since version `application/vnd.dsplineitems.v2.1+json`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemType"
          }
        ],
        "enum": [
          "VIDEO"
        ]
      },
      "LineItemTypeBasicV2_1": {
        "type": "string",
        "description": "The line item type. All operations are supported for VIDEO line item type since version `application/vnd.dsplineitems.v2.1+json`. OTT_GUARANTEED is supported only for batch read API since version `application/vnd.dsplineitems.v2.1+json`.",
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemType"
          }
        ],
        "enum": [
          "VIDEO",
          "OTT_GUARANTEED"
        ]
      },
      "LineItemClassification": {
        "type": "object",
        "properties": {
          "productCategories": {
            "description": "The array of identifiers of product categories associated with the line item. For `VIDEO` line item type only one parent product category or multiple sub-categories from one parent product category are allowed.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        },
        "required": [
          "productCategories"
        ]
      },
      "LineItemTargeting": {
        "type": "object",
        "properties": {
          "standardDisplayTargeting": {
            "$ref": "#/components/schemas/StandardDisplayTargeting"
          },
          "aapMobileAppTargeting": {
            "$ref": "#/components/schemas/AapMobileAppTargeting"
          },
          "amazonMobileDisplayTargeting": {
            "$ref": "#/components/schemas/AmazonMobileDisplayTargeting"
          }
        }
      },
      "LineItemTargetingV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/LineItemTargeting"
          }
        ],
        "type": "object",
        "properties": {
          "videoTargeting": {
            "$ref": "#/components/schemas/VideoTargeting"
          }
        }
      },
      "LineItemTargetingV3": {
        "type": "object",
        "properties": {
          "standardDisplayTargeting": {
            "$ref": "#/components/schemas/StandardDisplayTargetingV3"
          },
          "aapMobileAppTargeting": {
            "$ref": "#/components/schemas/AapMobileAppTargetingV3"
          },
          "amazonMobileDisplayTargeting": {
            "$ref": "#/components/schemas/AmazonMobileDisplayTargetingV3"
          },
          "videoTargeting": {
            "$ref": "#/components/schemas/VideoTargetingV3"
          }
        }
      },
      "LineItemTargetingV3_1": {
        "type": "object",
        "properties": {
          "standardDisplayTargeting": {
            "$ref": "#/components/schemas/StandardDisplayTargetingV3_1"
          },
          "aapMobileAppTargeting": {
            "$ref": "#/components/schemas/AapMobileAppTargetingV3_1"
          },
          "amazonMobileDisplayTargeting": {
            "$ref": "#/components/schemas/AmazonMobileDisplayTargetingV3_1"
          },
          "videoTargeting": {
            "$ref": "#/components/schemas/VideoTargetingV3_1"
          }
        }
      },
      "AmazonMobileDisplayTargeting": {
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargeting"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/ThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "mobileOsTargeting": {
            "$ref": "#/components/schemas/MobileOsTargeting"
          },
          "contextualTargeting": {
            "type": "boolean",
            "description": "Set to `true` to enable contextual targeting. Contextual targeting targets the detail page of products that are frequently viewed or purchased with the products in your ad. Note that this feature applies to Dynamic eCommerce ads only."
          }
        }
      },
      "AmazonMobileDisplayTargetingV3": {
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargetingV3"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/MobileDisplayThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "mobileOsTargeting": {
            "$ref": "#/components/schemas/MobileOsTargeting"
          },
          "contextualTargeting": {
            "type": "boolean",
            "description": "Set to `true` to enable contextual targeting. Contextual targeting targets the detail page of products that are frequently viewed or purchased with the products in your ad. Note that this feature applies to Dynamic eCommerce ads only."
          }
        }
      },
      "AmazonMobileDisplayTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AmazonMobileDisplayTargetingV3"
          }
        ],
        "properties": {
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/MobileDisplayThirdPartyPreBidTargetingV3_1"
          }
        }
      },
      "VideoTargeting": {
        "description": "This field is available since version `application/vnd.dsplineitems.v2.1+json`.",
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargeting"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/ThirdPartyPreBidTargetingV2_1"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "domainListTargeting": {
            "$ref": "#/components/schemas/DomainList"
          },
          "deviceTypeTargeting": {
            "type": "array",
            "description": "The targeted device type for video line item type. A list of device types can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "MOBILE",
                "DESKTOP",
                "CONNECTED_TV"
              ]
            }
          },
          "mobileEnvironmentTargeting": {
            "type": "array",
            "description": "The targeted mobile environment for video line item type. It is required only when `MOBILE` device type is selected.",
            "items": {
              "type": "string",
              "enum": [
                "WEB",
                "APP"
              ]
            }
          },
          "siteLanguageTargeting": {
            "$ref": "#/components/schemas/SiteLanguageTargeting"
          },
          "contentTargeting": {
            "description": "The IAB content category type. IAB content categories enable advertisers to target websites according to their subject matter by scanning their content. This helps deliver ads to relevant sites while ensuring that the ads are not displayed near undesirable content.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "videoInitiationTypeTargeting": {
            "type": "array",
            "description": "Target video inventory by how the video will be started. A list can be provided. If ANY is selected, no other type can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "ANY",
                "USER_INITIATED_ONLY",
                "AUTOPLAY_ONLY",
                "UNKNOWN"
              ]
            }
          },
          "videoAdFormatTargeting": {
            "type": "array",
            "description": "Target a specific type of ad slot used to serve the video. A list can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "IN_STREAM",
                "OUT_STREAM",
                "IN_STREAM_AND_OUT_STREAM"
              ]
            }
          },
          "limitToFepTargeting": {
            "type": "boolean",
            "description": "Limit IN STREAM ad slot to full episode players (FEP)."
          },
          "videoPlayerSizeTargeting": {
            "type": "array",
            "description": "Target video inventory by publisher’s player size. A list can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "ANY",
                "SMALL",
                "MEDIUM",
                "LARGE",
                "UNKNOWN"
              ]
            }
          },
          "videoCompletionTargeting": {
            "type": "string",
            "description": "These are predictions based on machine learning and aren’t guaranteed. Selecting a higher percentage limits overall reach.",
            "enum": [
              "NO_TARGETING",
              "VIDEO_COMPLETION_GTE_10",
              "VIDEO_COMPLETION_GTE_20",
              "VIDEO_COMPLETION_GTE_30",
              "VIDEO_COMPLETION_GTE_40",
              "VIDEO_COMPLETION_GTE_50",
              "VIDEO_COMPLETION_GTE_60",
              "VIDEO_COMPLETION_GTE_70",
              "VIDEO_COMPLETION_GTE_80",
              "VIDEO_COMPLETION_GTE_90"
            ]
          },
          "ottTargeting": {
            "$ref": "#/components/schemas/OttTargeting"
          }
        }
      },
      "VideoTargetingV3": {
        "description": "This field is available since version `application/vnd.dsplineitems.v2.1+json`.",
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargetingV3"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/VideoThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "domainListTargeting": {
            "$ref": "#/components/schemas/DomainList"
          },
          "deviceTypeTargeting": {
            "type": "array",
            "description": "The targeted device type for video line item type. A list of device types can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "MOBILE",
                "DESKTOP",
                "CONNECTED_TV"
              ]
            }
          },
          "mobileEnvironmentTargeting": {
            "type": "array",
            "description": "The targeted mobile environment for video line item type. It is required only when `MOBILE` device type is selected.",
            "items": {
              "type": "string",
              "enum": [
                "WEB",
                "APP"
              ]
            }
          },
          "siteLanguageTargeting": {
            "$ref": "#/components/schemas/SiteLanguageTargetingV3"
          },
          "contentTargeting": {
            "description": "The IAB content category type. IAB content categories enable advertisers to target websites according to their subject matter by scanning their content. This helps deliver ads to relevant sites while ensuring that the ads are not displayed near undesirable content.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "videoInitiationTypeTargeting": {
            "type": "array",
            "description": "Target video inventory by how the video will be started. A list can be provided. If ANY is selected, no other type can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "ANY",
                "USER_INITIATED_ONLY",
                "AUTOPLAY_ONLY",
                "UNKNOWN"
              ]
            }
          },
          "videoAdFormatTargeting": {
            "type": "array",
            "description": "Target a specific type of ad slot used to serve the video. A list can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "IN_STREAM",
                "OUT_STREAM",
                "IN_STREAM_AND_OUT_STREAM"
              ]
            }
          },
          "limitToFepTargeting": {
            "type": "boolean",
            "description": "Limit IN STREAM ad slot to full episode players (FEP)."
          },
          "videoPlayerSizeTargeting": {
            "type": "array",
            "description": "Target video inventory by publisher’s player size. A list can be provided.",
            "items": {
              "type": "string",
              "enum": [
                "ANY",
                "SMALL",
                "MEDIUM",
                "LARGE",
                "UNKNOWN"
              ]
            }
          },
          "videoCompletionTargeting": {
            "type": "string",
            "description": "These are predictions based on machine learning and aren’t guaranteed. Selecting a higher percentage limits overall reach.",
            "enum": [
              "NO_TARGETING",
              "VIDEO_COMPLETION_GTE_10",
              "VIDEO_COMPLETION_GTE_20",
              "VIDEO_COMPLETION_GTE_30",
              "VIDEO_COMPLETION_GTE_40",
              "VIDEO_COMPLETION_GTE_50",
              "VIDEO_COMPLETION_GTE_60",
              "VIDEO_COMPLETION_GTE_70",
              "VIDEO_COMPLETION_GTE_80",
              "VIDEO_COMPLETION_GTE_90"
            ]
          },
          "ottTargeting": {
            "$ref": "#/components/schemas/OttTargeting"
          }
        }
      },
      "VideoTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoTargetingV3"
          }
        ],
        "properties": {
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/VideoThirdPartyPreBidTargetingV3_1"
          }
        }
      },
      "StandardDisplayTargeting": {
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargeting"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/ThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "domainListTargeting": {
            "$ref": "#/components/schemas/DomainList"
          },
          "deviceTypeTargeting": {
            "type": "string",
            "description": "The targeted device type for standard display line item type. It is required input for `STANDARD_DISPLAY` line item type.",
            "enum": [
              "DESKTOP_AND_MOBILE",
              "MOBILE",
              "DESKTOP"
            ]
          },
          "mobileOsTargeting": {
            "$ref": "#/components/schemas/MobileOsTargeting"
          },
          "siteLanguageTargeting": {
            "$ref": "#/components/schemas/SiteLanguageTargeting"
          },
          "contentTargeting": {
            "description": "The IAB content category type. IAB content categories enable advertisers to target websites according to their subject matter by scanning their content. This helps deliver ads to relevant sites while ensuring that the ads are not displayed near undesirable content.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "contextualTargeting": {
            "type": "boolean",
            "description": "Set to `true` to enable contextual targeting. Contextual targeting targets the detail page of products that are frequently viewed or purchased with the products in your ad. Note that this feature applies to Dynamic eCommerce ads only."
          }
        }
      },
      "StandardDisplayTargetingV3": {
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargetingV3"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/StandardDisplayThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "domainListTargeting": {
            "$ref": "#/components/schemas/DomainList"
          },
          "deviceTypeTargeting": {
            "type": "string",
            "description": "The targeted device type for standard display line item type. It is required input for `STANDARD_DISPLAY` line item type.",
            "enum": [
              "DESKTOP_AND_MOBILE",
              "MOBILE",
              "DESKTOP"
            ]
          },
          "mobileOsTargeting": {
            "$ref": "#/components/schemas/MobileOsTargeting"
          },
          "siteLanguageTargeting": {
            "$ref": "#/components/schemas/SiteLanguageTargetingV3"
          },
          "contentTargeting": {
            "description": "The IAB content category type. IAB content categories enable advertisers to target websites according to their subject matter by scanning their content. This helps deliver ads to relevant sites while ensuring that the ads are not displayed near undesirable content.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "contextualTargeting": {
            "type": "boolean",
            "description": "Set to `true` to enable contextual targeting. Contextual targeting targets the detail page of products that are frequently viewed or purchased with the products in your ad. Note that this feature applies to Dynamic eCommerce ads only."
          }
        }
      },
      "StandardDisplayTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StandardDisplayTargetingV3"
          }
        ],
        "properties": {
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/StandardDisplayThirdPartyPreBidTargetingV3_1"
          }
        }
      },
      "AapMobileAppTargeting": {
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargeting"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/ThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "mobileAppTargeting": {
            "$ref": "#/components/schemas/MobileAppTargeting"
          },
          "deviceTypeTargeting": {
            "type": "array",
            "description": "The targeted mobile application device type. Note that this is applicable only for the `AAP_MOBILE APP` type of line item. It is required input for `AAP_MOBILE APP` line item type.",
            "items": {
              "type": "string",
              "enum": [
                "IPHONE",
                "IPAD",
                "ANDROID",
                "KINDLE_FIRE",
                "KINDLE_FIRE_HD"
              ]
            }
          },
          "deviceOrientationTargeting": {
            "type": "string",
            "description": "The mobile device orientation targeting type.",
            "enum": [
              "ANY",
              "PORTRAIT",
              "LANDSCAPE"
            ]
          }
        }
      },
      "AapMobileAppTargetingV3": {
        "type": "object",
        "properties": {
          "userLocationTargeting": {
            "$ref": "#/components/schemas/UserLocationTargetingV3"
          },
          "amazonViewabilityTargeting": {
            "$ref": "#/components/schemas/AmazonViewabilityTargeting"
          },
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/MobileAppThirdPartyPreBidTargeting"
          },
          "supplyTargeting": {
            "$ref": "#/components/schemas/SupplyTargeting"
          },
          "geoLocationTargeting": {
            "$ref": "#/components/schemas/GeoLocationTargeting"
          },
          "segmentTargeting": {
            "$ref": "#/components/schemas/SegmentTargeting"
          },
          "dayPartTargeting": {
            "$ref": "#/components/schemas/DayPartTargeting"
          },
          "mobileAppTargeting": {
            "$ref": "#/components/schemas/MobileAppTargeting"
          },
          "deviceTypeTargeting": {
            "type": "array",
            "description": "The targeted mobile application device type. Note that this is applicable only for the `AAP_MOBILE APP` type of line item. It is required input for `AAP_MOBILE APP` line item type.",
            "items": {
              "type": "string",
              "enum": [
                "IPHONE",
                "IPAD",
                "ANDROID",
                "KINDLE_FIRE",
                "KINDLE_FIRE_HD"
              ]
            }
          },
          "deviceOrientationTargeting": {
            "type": "string",
            "description": "The mobile device orientation targeting type.",
            "enum": [
              "ANY",
              "PORTRAIT",
              "LANDSCAPE"
            ]
          }
        }
      },
      "AapMobileAppTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AapMobileAppTargetingV3"
          }
        ],
        "properties": {
          "thirdPartyPreBidTargeting": {
            "$ref": "#/components/schemas/MobileAppThirdPartyPreBidTargetingV3_1"
          }
        }
      },
      "UserLocationTargeting": {
        "type": "string",
        "description": "The geographical location type of Amazon customers targeted. For example, `US`, `EVERYWHERE`, `NON-US`.",
        "enum": [
          "US",
          "EVERYWHERE",
          "NON_US"
        ]
      },
      "UserLocationTargetingV3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UserLocationTargeting"
          }
        ],
        "description": "The geographical location type of Amazon customers targeted. For example, US advertisers can choose from `US`, `EVERYWHERE`, `NON-US`; Canada advertisers can choose from `CA`, `EVERYWHERE`; Mexico advertisers can choose from `MX`, `EVERYWHERE`; Brazil advertisers can choose from `BR`, `EVERYWHERE`.",
        "enum": [
          "CA",
          "MX",
          "BR"
        ]
      },
      "SiteLanguageTargeting": {
        "type": "string",
        "description": "The site language targeting type. For example, `EN`, `ES`.",
        "enum": [
          "EN",
          "ES"
        ]
      },
      "SiteLanguageTargetingV3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/SiteLanguageTargeting"
          }
        ],
        "description": "The site language targeting type. For example, US/Mexico advertisers can choose from `EN`, `ES`; Canada advertisers can choose from `EN`, `FR`; Brazil advertisers can choose from `EN`, `PT`.",
        "enum": [
          "FR",
          "PT"
        ]
      },
      "SupplyTargeting": {
        "type": "object",
        "properties": {
          "supplySourceTargeting": {
            "$ref": "#/components/schemas/SupplySourceTargeting"
          },
          "supplyDealTargeting": {
            "$ref": "#/components/schemas/SupplyDealTargeting"
          }
        }
      },
      "SupplyDealTargeting": {
        "type": "object",
        "properties": {
          "deals": {
            "type": "array",
            "description": "The list of deal supply sources to target.",
            "maxItems": 100,
            "minItems": 0,
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        }
      },
      "SupplySourceTargeting": {
        "type": "object",
        "properties": {
          "supplySources": {
            "type": "array",
            "description": "The list of supply sources to target. In case of OPEN_EXCHANGE, the ID is of consolidated supply source.",
            "maxItems": 1000,
            "minItems": 0,
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        }
      },
      "GeoLocationTargeting": {
        "type": "object",
        "description": "Targets based on city, state, country, DMA , or postal code.",
        "properties": {
          "locationTargetingBy": {
            "type": "string",
            "description": "The geographic location targeting type. IPADDRESS: includes IP address only. IPADDRESS_POSTALCODE: includes both IP address and postal code.",
            "enum": [
              "IPADDRESS",
              "IPADDRESS_POSTALCODE"
            ]
          },
          "inclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "exclusions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        }
      },
      "SegmentTargeting": {
        "type": "object",
        "properties": {
          "segmentGroups": {
            "type": "array",
            "description": "The list of segment groups.",
            "items": {
              "$ref": "#/components/schemas/SegmentGroup"
            }
          }
        }
      },
      "SegmentGroup": {
        "type": "object",
        "description": "This segment group.",
        "properties": {
          "segments": {
            "type": "array",
            "description": "The list of segment clauses.",
            "items": {
              "$ref": "#/components/schemas/SegmentClause"
            }
          },
          "intraOperator": {
            "type": "string",
            "description": "The intra operator used between two segment groups.",
            "enum": [
              "AND",
              "OR"
            ]
          },
          "interOperator": {
            "description": "The inter operator used among segments within the same segment group.",
            "enum": [
              "ANY",
              "ALL"
            ]
          }
        },
        "required": [
          "segments",
          "intraOperator",
          "interOperator"
        ]
      },
      "SegmentClause": {
        "type": "object",
        "description": "The segment clause.",
        "properties": {
          "segmentId": {
            "$ref": "#/components/schemas/Identifier"
          },
          "isNot": {
            "type": "boolean",
            "description": "Set to `true` to set to negative targeting. Set to `false` to set to  positive targeting. Default is false."
          }
        },
        "required": [
          "segmentId"
        ]
      },
      "AmazonViewabilityTargeting": {
        "type": "object",
        "description": "Selects a viewability tier to target. The predicted view rate percentages are based on historical data and are not guaranteed. Actual view rates may vary by measurement provider and order.",
        "properties": {
          "viewabilityTier": {
            "$ref": "#/components/schemas/ViewabilityTier"
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Set to `true` to include impressions where impressions can't be measured."
          }
        },
        "required": [
          "viewabilityTier",
          "includeUnmeasurableImpressions"
        ]
      },
      "ViewabilityTier": {
        "type": "string",
        "description": "The type of viewability tier.",
        "enum": [
          "ALLOW_ALL",
          "VIEWABILITY_TIER_GT_70",
          "VIEWABILITY_TIER_GT_60",
          "VIEWABILITY_TIER_GT_50",
          "VIEWABILITY_TIER_GT_40",
          "VIEWABILITY_TIER_LT_40"
        ]
      },
      "ThirdPartyPreBidTargeting": {
        "type": "object",
        "description": "Amazon DSP automatically filters fraudulent and invalid traffic as well as unsafe content using a combination of proprietary technology and solutions from comScore and Sizmek. This service is available by default and at no extra charge for Amazon DSP customers. You may choose to augment the default filters with pre-bid targeting products offered by third parties. These services are currently offered at no charge.",
        "properties": {
          "doubleVerify": {
            "$ref": "#/components/schemas/DoubleVerify"
          },
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloud"
          },
          "integralAdScience": {
            "$ref": "#/components/schemas/IntegralAdScience"
          }
        }
      },
      "ThirdPartyPreBidTargetingV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ThirdPartyPreBidTargeting"
          }
        ],
        "properties": {
          "doubleVerify": {
            "$ref": "#/components/schemas/DoubleVerifyV2_1"
          }
        }
      },
      "MobileDisplayThirdPartyPreBidTargeting": {
        "type": "object",
        "description": "Amazon DSP automatically filters fraudulent and invalid traffic as well as unsafe content using a combination of proprietary technology and solutions from comScore and Sizmek. This service is available by default and at no extra charge for Amazon DSP customers. You may choose to augment the default filters with pre-bid targeting products offered by third parties. These services are currently offered at no charge.",
        "properties": {
          "doubleVerify": {
            "$ref": "#/components/schemas/MobileDisplayDoubleVerify"
          },
          "integralAdScience": {
            "$ref": "#/components/schemas/MobileDisplayIntegralAdScience"
          }
        }
      },
      "MobileDisplayThirdPartyPreBidTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileDisplayThirdPartyPreBidTargeting"
          }
        ],
        "properties": {
          "pixalate": {
            "$ref": "#/components/schemas/Pixalate"
          }
        }
      },
      "StandardDisplayThirdPartyPreBidTargeting": {
        "type": "object",
        "description": "Amazon DSP automatically filters fraudulent and invalid traffic as well as unsafe content using a combination of proprietary technology and solutions from comScore and Sizmek. This service is available by default and at no extra charge for Amazon DSP customers. You may choose to augment the default filters with pre-bid targeting products offered by third parties. These services are currently offered at no charge.",
        "properties": {
          "doubleVerify": {
            "$ref": "#/components/schemas/StandardDisplayDoubleVerify"
          },
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloudV3"
          },
          "integralAdScience": {
            "$ref": "#/components/schemas/StandardDisplayIntegralAdScience"
          }
        }
      },
      "StandardDisplayThirdPartyPreBidTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/StandardDisplayThirdPartyPreBidTargeting"
          }
        ],
        "properties": {
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloudV3_1"
          },
          "pixalate": {
            "$ref": "#/components/schemas/Pixalate"
          }
        }
      },
      "MobileAppThirdPartyPreBidTargeting": {
        "type": "object",
        "description": "Amazon DSP automatically filters fraudulent and invalid traffic as well as unsafe content using a combination of proprietary technology and solutions from comScore and Sizmek. This service is available by default and at no extra charge for Amazon DSP customers. You may choose to augment the default filters with pre-bid targeting products offered by third parties. These services are currently offered at no charge.",
        "properties": {
          "doubleVerify": {
            "$ref": "#/components/schemas/MobileAppDoubleVerify"
          },
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloudV3"
          },
          "integralAdScience": {
            "$ref": "#/components/schemas/MobileAppIntegralAdScience"
          }
        }
      },
      "MobileAppThirdPartyPreBidTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MobileAppThirdPartyPreBidTargeting"
          }
        ],
        "properties": {
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloudV3_1"
          },
          "pixalate": {
            "$ref": "#/components/schemas/Pixalate"
          }
        }
      },
      "VideoThirdPartyPreBidTargeting": {
        "type": "object",
        "description": "Amazon DSP automatically filters fraudulent and invalid traffic as well as unsafe content using a combination of proprietary technology and solutions from comScore and Sizmek. This service is available by default and at no extra charge for Amazon DSP customers. You may choose to augment the default filters with pre-bid targeting products offered by third parties. These services are currently offered at no charge.",
        "properties": {
          "doubleVerify": {
            "$ref": "#/components/schemas/VideoDoubleVerify"
          },
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloudV3"
          },
          "integralAdScience": {
            "$ref": "#/components/schemas/VideoIntegralAdScience"
          }
        }
      },
      "VideoThirdPartyPreBidTargetingV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/VideoThirdPartyPreBidTargeting"
          }
        ],
        "properties": {
          "oracleDataCloud": {
            "$ref": "#/components/schemas/OracleDataCloudV3_1"
          },
          "pixalate": {
            "$ref": "#/components/schemas/Pixalate"
          }
        }
      },
      "Pixalate": {
        "type": "object",
        "description": "Pixalate is a third party provider for digital ad verification. Pixalate offers technologies that drive high-quality advertising media.",
        "properties": {
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/PixalateFraudInvalidTraffic"
          }
        }
      },
      "PixalateFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "excludeIpAddressAndUserAgents": {
            "type": "boolean",
            "description": "Set to `true` to exclude traffic from IPV4 and IPV6 addresses and usger agents identified to to be fraudulent or invalid."
          },
          "excludeOttAndMobileDevices": {
            "type": "boolean",
            "description": "Set to `true` to exclude traffic from OTT and Mobile devices identified to be fraudulent or invalid."
          },
          "excludeAppsAndDomains": {
            "type": "boolean",
            "description": "Set to `true` to exclude traffic from Apps and Domains identified to be fraudulent or invalid."
          },
          "excludeRemovedAppsFromAppStores": {
            "type": "boolean",
            "description": "Set to `true` to exlude traffic from Apps that have been removed from the google play and apple app stores in the last 6 months."
          }
        }
      },
      "DoubleVerify": {
        "type": "object",
        "description": "Double Verify (DV) is a third party provider for digital ad verification. Double Verify offers technologies that drive high-quality advertising media.",
        "properties": {
          "brandSafety": {
            "$ref": "#/components/schemas/DoubleVerifyBrandSafety"
          },
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
          },
          "authenticBrandSafety": {
            "$ref": "#/components/schemas/DoubleVerifyAuthenticBrandSafety"
          },
          "viewability": {
            "$ref": "#/components/schemas/DoubleVerifyViewability"
          },
          "customContextualSegmentId": {
            "type": "string",
            "description": "The custom segment identifier."
          }
        }
      },
      "DoubleVerifyV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DoubleVerify"
          }
        ],
        "properties": {
          "viewability": {
            "$ref": "#/components/schemas/DoubleVerifyViewabilityV2_1"
          }
        }
      },
      "DvCustomContextualSegmentId": {
        "type": "string",
        "description": "The custom segment identifier."
      },
      "MobileDisplayDoubleVerify": {
        "type": "object",
        "description": "Double Verify (DV) is a third party provider for digital ad verification. Double Verify offers technologies that drive high-quality advertising media.",
        "properties": {
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
          }
        }
      },
      "StandardDisplayDoubleVerify": {
        "type": "object",
        "description": "Double Verify (DV) is a third party provider for digital ad verification. Double Verify offers technologies that drive high-quality advertising media.",
        "properties": {
          "brandSafety": {
            "$ref": "#/components/schemas/StandardDisplayDoubleVerifyBrandSafety"
          },
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
          },
          "authenticBrandSafety": {
            "$ref": "#/components/schemas/DoubleVerifyAuthenticBrandSafety"
          },
          "viewability": {
            "$ref": "#/components/schemas/DoubleVerifyViewabilityV2_1"
          },
          "customContextualSegmentId": {
            "$ref": "#/components/schemas/DvCustomContextualSegmentId"
          }
        }
      },
      "MobileAppDoubleVerify": {
        "type": "object",
        "description": "Double Verify (DV) is a third party provider for digital ad verification. Double Verify offers technologies that drive high-quality advertising media.",
        "properties": {
          "brandSafety": {
            "$ref": "#/components/schemas/MobileAppDoubleVerifyBrandSafety"
          },
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
          },
          "authenticBrandSafety": {
            "$ref": "#/components/schemas/DoubleVerifyAuthenticBrandSafety"
          },
          "viewability": {
            "$ref": "#/components/schemas/DoubleVerifyViewabilityV2_1"
          },
          "customContextualSegmentId": {
            "$ref": "#/components/schemas/DvCustomContextualSegmentId"
          }
        }
      },
      "VideoDoubleVerify": {
        "type": "object",
        "description": "Double Verify (DV) is a third party provider for digital ad verification. Double Verify offers technologies that drive high-quality advertising media.",
        "properties": {
          "brandSafety": {
            "$ref": "#/components/schemas/VideoDoubleVerifyBrandSafety"
          },
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/DoubleVerifyFraudInvalidTraffic"
          },
          "authenticBrandSafety": {
            "$ref": "#/components/schemas/DoubleVerifyAuthenticBrandSafety"
          },
          "viewability": {
            "$ref": "#/components/schemas/DoubleVerifyViewabilityV2_1"
          },
          "customContextualSegmentId": {
            "$ref": "#/components/schemas/DvCustomContextualSegmentId"
          }
        }
      },
      "DoubleVerifyAuthenticBrandSafety": {
        "type": "object",
        "properties": {
          "doubleVerifySegmentId": {
            "type": "string",
            "description": "The segment identifier."
          }
        }
      },
      "DoubleVerifyBrandSafety": {
        "type": "object",
        "description": "In an update from Double Verify (DV), support for `HATE_SPEECH_PROFANITY`, medium severity `ADULT_CONTENT`, and `SEX_EDUCATION` has been dropped. Additionally, DV has moved away from high severity content and medium severity content in favor of content categories and content categories with risk. Any value found below that is represented as a content category will continue to exclude the particular content category that the value represents. Any value found below that is represented as a content category with risk will now exclude the high and medium content category with risk that the value represents. Please consider adopting the latest version of the line item APIs for updated support of DV brand safety.",
        "properties": {
          "highSeverityContent": {
            "type": "array",
            "description": "A list of high severity content and corresponding status.",
            "items": {
              "type": "string",
              "enum": [
                "ADULT_CONTENT",
                "DRUGS_SUBSTANCES",
                "EXTREME_GRAPHICS_VIOLENCE_WEAPONS",
                "HATE_SPEECH_PROFANITY",
                "ILLEGAL_ACTIVITIES",
                "INCENTIVIZED_MALWARE_CLUTTER",
                "PIRACY_COPYRIGHT_INFRINGEMENT"
              ]
            }
          },
          "mediumSeverityContent": {
            "type": "array",
            "description": "A list of medium severity content and corresponding status.",
            "items": {
              "type": "string",
              "enum": [
                "AD_SERVER",
                "ADULT_CONTENT",
                "CULTS_SURVIVALISM",
                "CELEBRITY_GOSSIP",
                "GAMBLING",
                "DISASTER_AVIATION",
                "DISASTER_MAN_MADE",
                "DISASTER_NATURAL",
                "DISASTER_TERRORISTS_EVENTS",
                "DISASTER_VEHICLE",
                "DRUGS_ALCOHOL",
                "DRUGS_SMOKING",
                "INFLAMMATORY_POLITICS_NEWS",
                "NEGATIVE_NEWS_FINANCIAL",
                "NEGATIVE_NEWS_PHARMACEUTICAL",
                "NON_STANDARD_CONTENT_NON_ENGLISH",
                "NON_STANDARD_CONTENT_PARKING_PAGE",
                "OCCULT",
                "SEX_EDUCATION",
                "UNMODERATED_UGC_FORUMS_IMAGES_VIDEO"
              ]
            }
          },
          "unknownContent": {
            "type": "boolean",
            "description": "Set to `true` to exclude unknown content."
          },
          "appAgeRating": {
            "type": "array",
            "description": "A list of app age rating to be used for excluding apps.",
            "items": {
              "type": "string",
              "enum": [
                "EVERYONE",
                "TWEENS",
                "TEEN",
                "MATURE",
                "ADULTS_ONLY",
                "UNKNOWN"
              ]
            }
          },
          "appStarRating": {
            "type": "string",
            "description": "Exclude by app star rating (app inventory only)",
            "enum": [
              "ALLOW_ALL",
              "APP_STAR_RATING_LT_15",
              "APP_STAR_RATING_LT_20",
              "APP_STAR_RATING_LT_25",
              "APP_STAR_RATING_LT_30",
              "APP_STAR_RATING_LT_35",
              "APP_STAR_RATING_LT_40",
              "APP_STAR_RATING_LT_45"
            ]
          },
          "excludeAppsWithInsufficientRating": {
            "type": "boolean",
            "description": "Set to `true` to exclude unofficial apps or apps with insufficient user ratings (<100 lifetime)."
          }
        }
      },
      "BrandSuitabilityRiskLevel": {
        "type": "string",
        "description": "The Double Verify brand suitability risk level.",
        "enum": [
          "ALLOW_ALL",
          "HIGH",
          "HIGH_MEDIUM",
          "HIGH_MEDIUM_LOW"
        ]
      },
      "DvBrandSafetyAppAgeRating": {
        "type": "array",
        "description": "A list of app age ratings to be used for excluding apps. For example, `TEENS_12_PLUS` will only exclude apps with content rated for everyone ages 12 and over. `UNKNOWN` will exclude apps with content unrated or unknown to Double Verify.",
        "items": {
          "type": "string",
          "enum": [
            "EVERYONE_4_PLUS",
            "TWEENS_9_PLUS",
            "TEENS_12_PLUS",
            "MATURE_17_PLUS",
            "ADULTS_ONLY_18_PLUS",
            "UNKNOWN"
          ]
        }
      },
      "DvBrandSafetyAppStarRating": {
        "type": "string",
        "description": "App star rating to be used for excluding apps.",
        "enum": [
          "ALLOW_ALL",
          "APP_STAR_RATING_LT_1_POINT_5_STARS",
          "APP_STAR_RATING_LT_2_STARS",
          "APP_STAR_RATING_LT_2_POINT_5_STARS",
          "APP_STAR_RATING_LT_3_STARS",
          "APP_STAR_RATING_LT_3_POINT_5_STARS",
          "APP_STAR_RATING_LT_4_STARS",
          "APP_STAR_RATING_LT_4_POINT_5_STARS"
        ]
      },
      "DvBrandSafetyContentCategories": {
        "type": "array",
        "description": "A list of content categories to exclude from targeting.",
        "items": {
          "type": "string",
          "enum": [
            "AD_SERVER",
            "CELEBRITY_GOSSIP",
            "CULTS_SURVIVALISM",
            "GAMBLING",
            "INCENTIVIZED_MALWARE_CLUTTER",
            "INFLAMMATORY_POLITICS_NEWS",
            "NEGATIVE_NEWS_FINANCIAL",
            "NEGATIVE_NEWS_PHARMACEUTICAL",
            "NON_STANDARD_CONTENT_NON_ENGLISH",
            "NON_STANDARD_CONTENT_PARKING_PAGE",
            "OCCULT",
            "PIRACY_COPYRIGHT_INFRINGEMENT",
            "UNMODERATED_UGC_FORUMS_IMAGES_VIDEO"
          ]
        }
      },
      "DvBrandSafetyContentCategoriesWithRisk": {
        "type": "object",
        "description": "A map from content categories to risk level to exclude from targeting. Available keys are: [`ADULT_CONTENT`, `ALCOHOL`, `CRIME`, `DISASTER_AVIATION`, `DISASTER_MAN_MADE`, `DISASTER_NATURAL`, `DISASTER_TERRORIST_EVENTS`, `DISASTER_VEHICLE`, `HATE_SPEECH`, `PROFANITY`, `SUBSTANCE_ABUSE`, `TOBACCO_ECIGARETTES`, `VIOLENCE_EXTREME_GRAPHIC`]",
        "additionalProperties": {
          "$ref": "#/components/schemas/BrandSuitabilityRiskLevel"
        },
        "example": {
          "ADULT_CONTENT": "HIGH_MEDIUM"
        }
      },
      "DvBrandSafetyExcludeApps": {
        "type": "boolean",
        "description": "Set to `true` to exclude unofficial apps or apps with insufficient user ratings (<100 lifetime)."
      },
      "DvBrandSafetyUnknownContent": {
        "type": "boolean",
        "description": "Set to `true` to exclude unknown content."
      },
      "StandardDisplayDoubleVerifyBrandSafety": {
        "type": "object",
        "properties": {
          "contentCategories": {
            "$ref": "#/components/schemas/DvBrandSafetyContentCategories"
          },
          "contentCategoriesWithRisk": {
            "$ref": "#/components/schemas/DvBrandSafetyContentCategoriesWithRisk"
          },
          "unknownContent": {
            "$ref": "#/components/schemas/DvBrandSafetyUnknownContent"
          }
        }
      },
      "MobileAppDoubleVerifyBrandSafety": {
        "type": "object",
        "properties": {
          "contentCategories": {
            "$ref": "#/components/schemas/DvBrandSafetyContentCategories"
          },
          "contentCategoriesWithRisk": {
            "$ref": "#/components/schemas/DvBrandSafetyContentCategoriesWithRisk"
          },
          "unknownContent": {
            "$ref": "#/components/schemas/DvBrandSafetyUnknownContent"
          },
          "appAgeRating": {
            "$ref": "#/components/schemas/DvBrandSafetyAppAgeRating"
          },
          "appStarRating": {
            "$ref": "#/components/schemas/DvBrandSafetyAppStarRating"
          },
          "excludeAppsWithInsufficientRating": {
            "$ref": "#/components/schemas/DvBrandSafetyExcludeApps"
          }
        }
      },
      "VideoDoubleVerifyBrandSafety": {
        "type": "object",
        "properties": {
          "contentCategories": {
            "$ref": "#/components/schemas/DvBrandSafetyContentCategories"
          },
          "contentCategoriesWithRisk": {
            "$ref": "#/components/schemas/DvBrandSafetyContentCategoriesWithRisk"
          },
          "unknownContent": {
            "$ref": "#/components/schemas/DvBrandSafetyUnknownContent"
          },
          "appAgeRating": {
            "$ref": "#/components/schemas/DvBrandSafetyAppAgeRating"
          },
          "appStarRating": {
            "$ref": "#/components/schemas/DvBrandSafetyAppStarRating"
          },
          "excludeAppsWithInsufficientRating": {
            "$ref": "#/components/schemas/DvBrandSafetyExcludeApps"
          }
        }
      },
      "DoubleVerifyFraudInvalidTraffic": {
        "type": "object",
        "properties": {
          "excludeImpressions": {
            "type": "boolean",
            "description": "Set to `true` to exclude impressions delivered to devices identified to be fraudulent or invalid."
          },
          "excludeAppsAndSites": {
            "type": "string",
            "enum": [
              "ALLOW_ALL",
              "FRAUD_TRAFFIC_LEVEL_GTE_100",
              "FRAUD_TRAFFIC_LEVEL_GTE_50",
              "FRAUD_TRAFFIC_LEVEL_GTE_25",
              "FRAUD_TRAFFIC_LEVEL_GTE_10",
              "FRAUD_TRAFFIC_LEVEL_GTE_08",
              "FRAUD_TRAFFIC_LEVEL_GTE_06",
              "FRAUD_TRAFFIC_LEVEL_GTE_04",
              "FRAUD_TRAFFIC_LEVEL_GTE_02"
            ]
          },
          "blockAppAndSites": {
            "type": "boolean",
            "description": "Set to `true` to block applications and sites with insufficient historical fraud and invalid traffic statistics. This will not be applicable if ALLOW_ALL is chosen."
          }
        }
      },
      "DoubleVerifyViewability": {
        "type": "object",
        "properties": {
          "mrcViewabilityTargeting": {
            "type": "string",
            "description": "The type of MRC viewability targeting.",
            "enum": [
              "ALLOW_ALL",
              "MRC_VIEWABILITY_GTE_80",
              "MRC_VIEWABILITY_GTE_75",
              "MRC_VIEWABILITY_GTE_70",
              "MRC_VIEWABILITY_GTE_65",
              "MRC_VIEWABILITY_GTE_60",
              "MRC_VIEWABILITY_GTE_55",
              "MRC_VIEWABILITY_GTE_50",
              "MRC_VIEWABILITY_GTE_40",
              "MRC_VIEWABILITY_GTE_30"
            ]
          },
          "brandExposureViewabilityTargeting": {
            "type": "string",
            "description": "The type of brand exposure viewability targeting.",
            "enum": [
              "ALLOW_ALL",
              "BRAND_EXPOSURE_VIEWABILITY_GTE_15_SEC_AVG_DURATION",
              "BRAND_EXPOSURE_VIEWABILITY_GTE_10_SEC_AVG_DURATION",
              "BRAND_EXPOSURE_VIEWABILITY_GTE_5_SEC_AVG_DURATION"
            ]
          },
          "includeUnmeasurableImpressions": {
            "type": "boolean",
            "description": "Set to `true` to include impressions where impressions can't be measured."
          }
        }
      },
      "DoubleVerifyViewabilityV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DoubleVerifyViewability"
          }
        ],
        "properties": {
          "averageCompletionAndFullyViewableRateTargeting": {
            "type": "string",
            "description": "The type of average completion and fully viewable rate targeting.",
            "enum": [
              "ALLOW_ALL",
              "AVG_COMPLETION_FULLY_VIEWABLE_GTE_10",
              "AVG_COMPLETION_FULLY_VIEWABLE_GTE_20",
              "AVG_COMPLETION_FULLY_VIEWABLE_GTE_25",
              "AVG_COMPLETION_FULLY_VIEWABLE_GTE_30",
              "AVG_COMPLETION_FULLY_VIEWABLE_GTE_35",
              "AVG_COMPLETION_FULLY_VIEWABLE_GTE_40"
            ]
          }
        }
      },
      "OracleDataCloud": {
        "type": "object",
        "description": "Oracle Data Cloud is a third party provider in digital ad verification. Oracle Data Cloud offers technologies to drive high-quality advertising media.",
        "properties": {
          "brandSafety": {
            "$ref": "#/components/schemas/OracleDataCloudBrandSafety"
          },
          "fraudInvalidTraffic": {
            "type": "string",
            "description": "The fraud invalid traffic type.",
            "enum": [
              "ALLOW_ALL",
              "FRAUD_INVALID_TRAFFIC_ESSENTIAL_PROTECTION",
              "FRAUD_INVALID_TRAFFIC_MAXIMUM_PROTECTION"
            ]
          },
          "customSegmentId": {
            "type": "string",
            "description": "The custom segment identifier."
          },
          "contextualPredictsSegmentId": {
            "type": "string",
            "description": "The custom segment predict identifier."
          }
        }
      },
      "OracleDataCloudV3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OracleDataCloud"
          }
        ],
        "properties": {
          "viewability": {
            "$ref": "#/components/schemas/ODCViewability"
          }
        }
      },
      "OracleDataCloudV3_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/OracleDataCloudV3"
          }
        ],
        "properties": {
          "standardPredictsSegmentIds": {
            "type": "array",
            "description": "The standard predict segment identifiers.",
            "items": {
              "type": "string"
            },
            "minItems": 1,
            "maxItems": 320
          }
        }
      },
      "ODCViewability": {
        "type": "object",
        "description": "The ODC viewability standard.",
        "properties": {
          "standard": {
            "type": "string",
            "description": "The viewability standard.",
            "enum": [
              "NONE",
              "MRC"
            ],
            "example": "MRC"
          },
          "viewabilityTargeting": {
            "type": "string",
            "description": "The type of ODC MRC viewability tier.",
            "enum": [
              "VIEWABILITY_TIER_GT_80",
              "VIEWABILITY_TIER_GT_70",
              "VIEWABILITY_TIER_GT_60",
              "VIEWABILITY_TIER_GT_50",
              "VIEWABILITY_TIER_GT_40",
              "VIEWABILITY_TIER_GT_30",
              "VIEWABILITY_TIER_GT_20"
            ]
          }
        },
        "required": [
          "standard",
          "viewabilityTargeting"
        ]
      },
      "OracleDataCloudBrandSafety": {
        "type": "object",
        "description": "The oracle data cloud brand safety.",
        "properties": {
          "targetingOption": {
            "type": "string",
            "enum": [
              "NO_BRAND_SAFETY",
              "MAXIMUM_PROTECTION",
              "ESSENTIAL_PROTECTION"
            ]
          },
          "essentialProtection": {
            "type": "string",
            "enum": [
              "ADULT",
              "ARMS",
              "CRIME",
              "INJURY",
              "PIRACY",
              "DRUGS",
              "HATE_SPEECH",
              "MILITARY",
              "OBSCENITY",
              "TERRORISM",
              "TOBACCO"
            ]
          }
        }
      },
      "IntegralAdScience": {
        "type": "object",
        "description": "Integral Ad Science (IAS) is a third party provider in digital ad verification. IAS offers technologies to drive high-quality advertising media.",
        "properties": {
          "brandSafety": {
            "$ref": "#/components/schemas/IasBrandSafety"
          },
          "fraudInvalidTraffic": {
            "type": "string",
            "description": "The type of fraud invalid traffic.",
            "enum": [
              "ALLOW_ALL",
              "FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_RISK",
              "FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_MODERATE_RISK"
            ]
          },
          "viewability": {
            "$ref": "#/components/schemas/IasViewability"
          }
        }
      },
      "IasFraudInvalidTraffic": {
        "type": "string",
        "description": "The type of fraud invalid traffic.",
        "enum": [
          "ALLOW_ALL",
          "FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_RISK",
          "FRAUD_INVALID_TRAFFIC_EXCLUDE_HIGH_MODERATE_RISK"
        ]
      },
      "MobileDisplayIntegralAdScience": {
        "type": "object",
        "description": "Integral Ad Science (IAS) is a third party provider in digital ad verification. IAS offers technologies to drive high-quality advertising media.",
        "properties": {
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/IasFraudInvalidTraffic"
          }
        }
      },
      "MobileAppIntegralAdScience": {
        "type": "object",
        "description": "Integral Ad Science (IAS) is a third party provider in digital ad verification. IAS offers technologies to drive high-quality advertising media.",
        "properties": {
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/IasFraudInvalidTraffic"
          },
          "brandSafety": {
            "$ref": "#/components/schemas/IasBrandSafetyV3"
          }
        }
      },
      "StandardDisplayIntegralAdScience": {
        "type": "object",
        "description": "Integral Ad Science (IAS) is a third party provider in digital ad verification. IAS offers technologies to drive high-quality advertising media.",
        "properties": {
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/IasFraudInvalidTraffic"
          },
          "brandSafety": {
            "$ref": "#/components/schemas/IasBrandSafetyV3"
          },
          "viewability": {
            "$ref": "#/components/schemas/IasViewability"
          }
        }
      },
      "VideoIntegralAdScience": {
        "type": "object",
        "description": "Integral Ad Science (IAS) is a third party provider in digital ad verification. IAS offers technologies to drive high-quality advertising media.",
        "properties": {
          "fraudInvalidTraffic": {
            "$ref": "#/components/schemas/IasFraudInvalidTraffic"
          },
          "brandSafety": {
            "$ref": "#/components/schemas/IasBrandSafetyV3"
          },
          "viewability": {
            "$ref": "#/components/schemas/IasViewability"
          }
        }
      },
      "IasBrandSafetyLevel": {
        "type": "string",
        "description": "The IAS brand safety risk level.",
        "enum": [
          "ALLOW_ALL",
          "BRAND_SAFETY_EXCLUE_HIGH_RISK",
          "BRAND_SAFETY_EXCLUE_HIGH_AND_MODERATE_RISK"
        ]
      },
      "IasBrandSafetyLevelV3": {
        "type": "string",
        "description": "The IAS brand safety risk level.",
        "enum": [
          "ALLOW_ALL",
          "BRAND_SAFETY_EXCLUDE_HIGH_RISK",
          "BRAND_SAFETY_EXCLUDE_HIGH_AND_MODERATE_RISK"
        ]
      },
      "IasBrandSafety": {
        "type": "object",
        "properties": {
          "iasBrandSafetyAdult": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyAlcohol": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyGambling": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyHateSpeech": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyIllegalDownloads": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyIllegalDrugs": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyOffensiveLanguage": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "iasBrandSafetyViolence": {
            "$ref": "#/components/schemas/IasBrandSafetyLevel"
          },
          "excludeContent": {
            "type": "boolean",
            "description": "Set to `true` to exclude content that Integral Ad Science is not able to rate."
          }
        },
        "required": [
          "iasBrandSafetyAdult",
          "iasBrandSafetyAlcohol",
          "iasBrandSafetyGambling",
          "iasBrandSafetyHateSpeech",
          "iasBrandSafetyIllegalDownloads",
          "iasBrandSafetyIllegalDrugs",
          "iasBrandSafetyOffensiveLanguage",
          "iasBrandSafetyViolence",
          "excludeContent"
        ]
      },
      "IasBrandSafetyV3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/IasBrandSafety"
          }
        ],
        "properties": {
          "iasBrandSafetyAdult": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyAlcohol": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyGambling": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyHateSpeech": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyIllegalDownloads": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyIllegalDrugs": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyOffensiveLanguage": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          },
          "iasBrandSafetyViolence": {
            "$ref": "#/components/schemas/IasBrandSafetyLevelV3"
          }
        }
      },
      "IasViewability": {
        "type": "object",
        "description": "The IAS viewability standard.",
        "properties": {
          "standard": {
            "type": "string",
            "description": "The viewability standard",
            "enum": [
              "NONE",
              "MRC",
              "GROUPM",
              "PUBLICIS"
            ]
          },
          "viewabilityTargeting": {
            "$ref": "#/components/schemas/ViewabilityTier"
          }
        },
        "required": [
          "standard",
          "viewabilityTargeting"
        ]
      },
      "MergedDomainList": {
        "type": "object",
        "properties": {
          "domainListMergedTargetingType": {
            "type": "string",
            "description": "The list type of the domain. Either include or exclude",
            "enum": [
              "EXCLUDE",
              "INCLUDE"
            ]
          },
          "domainListMergedFile": {
            "type": "string",
            "description": "The URL address of the domain list file after merging all domains into single file\""
          }
        }
      },
      "DomainList": {
        "type": "object",
        "properties": {
          "mergedDomainList": {
            "$ref": "#/components/schemas/MergedDomainList"
          },
          "inheritFromAdvertiser": {
            "type": "boolean",
            "description": "Inherit domains from advertiser settings."
          }
        }
      },
      "DayPartTargeting": {
        "type": "object",
        "description": "Specifies time zone and parts of the day to target delivery of the line item.",
        "properties": {
          "timeZonePreference": {
            "type": "string",
            "description": "The time zone associated with line item delivery.",
            "enum": [
              "USER_TIMEZONE",
              "AD_SERVER_TIMEZONE"
            ]
          },
          "dayParts": {
            "type": "array",
            "description": "The list of parts of the day.",
            "items": {
              "$ref": "#/components/schemas/DayPart"
            }
          }
        },
        "required": [
          "timeZonePreference",
          "dayParts"
        ]
      },
      "DayPart": {
        "type": "object",
        "description": "The parts of a day.",
        "properties": {
          "hourSlots": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "description": "The hour slot.",
              "minimum": 0,
              "maximum": 23
            }
          },
          "dayOfWeek": {
            "type": "string",
            "description": "The day of the week.",
            "enum": [
              "SUNDAY",
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY"
            ]
          }
        },
        "required": [
          "hourSlots",
          "dayOfWeek"
        ]
      },
      "MobileOsTargeting": {
        "type": "string",
        "description": "The mobile operating system targeting type.",
        "enum": [
          "ANY",
          "IOS",
          "ANDROID"
        ]
      },
      "MobileAppTargeting": {
        "type": "object",
        "properties": {
          "appTargetingOption": {
            "type": "string",
            "description": "The mobile application targeting inclusion type.",
            "enum": [
              "INCLUDE_APPS",
              "EXCLUDE_APPS"
            ]
          },
          "appIds": {
            "type": "array",
            "description": "The list of application identifiers.",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "appTargetingOption",
          "appIds"
        ]
      },
      "OttTargeting": {
        "type": "object",
        "description": "This targeting only applies to Amazon O&O and Amazon Publisher Services (APS) inventory. It can only be provided when CONNECTED_TV is selected in deviceTypeTargeting. Currently API does not support excluding delivery to audience according to content ratings. This feature will be added in later versions. If a user creates or updates a line item with this field on UI, they will not see the data for this field in API and updates via API will not update this field.",
        "properties": {
          "ottContentGenres": {
            "type": "array",
            "description": "Select genres to exclude delivery to that audience.",
            "items": {
              "$ref": "#/components/schemas/OttContentGenres"
            }
          },
          "ottAppBlocking": {
            "type": "array",
            "description": "Select the apps that should be excluded.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "OttContentGenres": {
        "type": "string",
        "enum": [
          "ACTION",
          "ADVENTURE",
          "ANIMATION",
          "BIOGRAPHY",
          "COMEDY",
          "CRIME",
          "DOCUMENTARY",
          "DRAMA",
          "FAMILY",
          "FANTASY",
          "FILM_NOIR",
          "GAME_SHOW",
          "HISTORY",
          "HORROR",
          "MUSICAL",
          "MYSTERY",
          "NEWS",
          "REALITY_TV",
          "ROMANCE",
          "SCIENCE_FICTION",
          "SHORT",
          "SPORT",
          "SUPER_HERO",
          "TALK_SHOW",
          "THRILLER",
          "WAR",
          "WESTERN",
          "GENRE_NOT_AVAILABLE"
        ]
      },
      "LineItemBudget": {
        "type": "object",
        "properties": {
          "totalBudgetAmount": {
            "type": "number",
            "format": "double",
            "description": "The total budget amount."
          },
          "budgetCaps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetCap"
            }
          },
          "pacing": {
            "$ref": "#/components/schemas/Pacing"
          }
        }
      },
      "LineItemOptimization": {
        "type": "object",
        "properties": {
          "budgetOptimization": {
            "type": "boolean",
            "description": "Set to `true` to enable budget optimization for the line item."
          }
        },
        "required": [
          "budgetOptimization"
        ]
      },
      "Pacing": {
        "type": "object",
        "properties": {
          "deliveryProfile": {
            "type": "string",
            "description": "The type of line item delivery profile. FRONT_LOADED: Initially front-load 20% of the budget. Remaining delivery is spread evenly across the remaining duration of the line item. Note that catchup boosts do not apply to this delivery profile. EVENLY: Distributes the delivery evenly across the duration of the line items. Catchup boosts are enabled for this delivery profile.",
            "enum": [
              "FRONT_LOADED",
              "EVENLY"
            ]
          },
          "catchUpBoost": {
            "type": "string",
            "description": "The catch up boost value associated with the line item. Represents the percentage of additional delivery that can be targeted when the line item is under-pacing. A catchup boost only applies to the EVENLY deliver profile. CatchUpBoost_2X: 200. CatchUpBoost_3X: 300. CatchUpBoost_4X: 400.",
            "enum": [
              "CATCH_UP_BOOST_2X",
              "CATCH_UP_BOOST_3X",
              "CATCH_UP_BOOST_4X",
              "NONE"
            ]
          }
        },
        "required": [
          "deliveryProfile"
        ]
      },
      "AppliedFees": {
        "type": "object",
        "properties": {
          "thirdPartyFees": {
            "type": "array",
            "description": "The list of third party fees associated with the line item.",
            "items": {
              "$ref": "#/components/schemas/ThirdPartyFee"
            }
          },
          "audienceFees": {
            "type": "array",
            "description": "The list of audience fees associated with the line item.",
            "items": {
              "$ref": "#/components/schemas/AudienceFee"
            },
            "readOnly": true
          },
          "amazonDspConsoleFee": {
            "$ref": "#/components/schemas/AmazonConsoleFee"
          }
        }
      },
      "ThirdPartyFee": {
        "type": "object",
        "description": "Third-party fees enable the platform to apply an additional fee. For example, a third-party vendor fee for ad verification, an agency markup fee, and the like.",
        "properties": {
          "providerName": {
            "type": "string",
            "description": "The provider name.",
            "enum": [
              "INTEGRAL_AD_SCIENCE",
              "DOUBLE_VERIFY",
              "DOUBLE_CLICK_CAMPAIGN_MANAGER",
              "COM_SCORE",
              "CPM_1",
              "CPM_2",
              "CPM_3"
            ]
          },
          "feeAmount": {
            "type": "number",
            "format": "double",
            "description": "The fee amount associated a third-party provider."
          },
          "feeAllocation": {
            "type": "string",
            "description": "The type of fee allocation.",
            "enum": [
              "ABSORB_WITH_AGENCY_FEE",
              "PASS_TO_ADVERTISER"
            ]
          }
        },
        "required": [
          "providerName",
          "feeAmount",
          "feeAllocation"
        ]
      },
      "AudienceFee": {
        "type": "object",
        "description": "The audience fee applied to Amazon (in-market and lifestyle) third-party (automotive).",
        "properties": {
          "feeName": {
            "type": "string",
            "description": "The category of the audience fee.",
            "enum": [
              "IN_MARKET_LIFESTYLE",
              "AUTOMOTIVE"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The amount of the audience fee."
          }
        },
        "required": [
          "feeName",
          "amount"
        ]
      },
      "AmazonConsoleFee": {
        "type": "object",
        "description": "A service fee for using the Amazon Ad Platform. Fees are applied as a percentage of supply costs.",
        "properties": {
          "feePercentage": {
            "type": "number",
            "format": "double",
            "description": "The service fee expressed as a percentage."
          }
        },
        "required": [
          "feePercentage"
        ],
        "readOnly": true
      },
      "Bidding": {
        "type": "object",
        "description": "The bid values associated with a line item.",
        "properties": {
          "baseSupplyBid": {
            "type": "number",
            "format": "double",
            "description": "The base bid per thousand impressions for ad inventory. Expressed in dollars."
          },
          "maxSupplyBid": {
            "type": "number",
            "format": "double",
            "description": "The maximum cost-per-thousand impressions bid for media supply. Expressed in dollars."
          }
        },
        "required": [
          "baseSupplyBid"
        ]
      },
      "LineItemDeliveryStatus": {
        "type": "string",
        "description": "The lineitem delivery status. DELIVERING: The line item is delivering. OUT_OF_BUDGET: The line item is out of budget. ENDED: The line item has ended. CREATIVES_NOT_RUNNING: The line item doesn't have any active creatives to deliver. INACTIVE: The line item is paused by the user. READY_TO_DELIVER: The line item has not yet started.",
        "enum": [
          "DELIVERING",
          "ENDED",
          "OUT_OF_BUDGET",
          "INACTIVE",
          "READY_TO_DELIVER",
          "CREATIVES_NOT_RUNNING"
        ],
        "readOnly": true
      },
      "BudgetCap": {
        "type": "object",
        "description": "The per day or per month spending limit.",
        "properties": {
          "recurrenceTimePeriod": {
            "type": "string",
            "description": "The type of recurrence for the spending limit.",
            "enum": [
              "UNCAPPED",
              "DAILY",
              "MONTHLY"
            ]
          },
          "amount": {
            "type": "number",
            "format": "double",
            "description": "The spending limit amount."
          }
        },
        "required": [
          "recurrenceTimePeriod",
          "amount"
        ]
      },
      "CurrencyCode": {
        "type": "string",
        "description": "The currency code.",
        "enum": [
          "USD",
          "CAD",
          "MXN"
        ],
        "readOnly": true
      },
      "CurrencyCodeV3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CurrencyCode"
          }
        ],
        "enum": [
          "BRL"
        ],
        "readOnly": true
      },
      "FrequencyCap": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "The type of advertising frequency cap. If `UNCAPPED`, no other fields are used.",
            "enum": [
              "UNCAPPED",
              "CUSTOM"
            ]
          },
          "maxImpressions": {
            "type": "integer",
            "description": "The maximum number of times an ad is displayed.",
            "format": "int32"
          },
          "timeUnitCount": {
            "type": "integer",
            "description": "The count of time units.",
            "format": "int32"
          },
          "timeUnit": {
            "type": "string",
            "description": "The time unit.",
            "enum": [
              "DAYS",
              "HOURS"
            ]
          }
        },
        "required": [
          "type"
        ]
      },
      "Identifier": {
        "type": "string",
        "description": "The unique identifier of the DSP resource/object."
      },
      "CreativeOptions": {
        "type": "object",
        "properties": {
          "creativeRotationType": {
            "type": "string",
            "description": "The creative rotation type.",
            "enum": [
              "WEIGHTED",
              "RANDOM"
            ]
          }
        }
      },
      "Creatives": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creative"
            },
            "minItems": 1,
            "maxItems": 100
          }
        }
      },
      "Creative": {
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "The identifier of the advertiser.",
            "readOnly": true
          },
          "creativeId": {
            "type": "string",
            "description": "The identifier of the creative.",
            "readOnly": true
          },
          "type": {
            "type": "string",
            "description": "The creative type.",
            "readOnly": true
          },
          "name": {
            "type": "string",
            "description": "The creative name.",
            "readOnly": true
          },
          "externalId": {
            "type": "string",
            "description": "The external identifier of the creative.",
            "readOnly": true
          },
          "size": {
            "type": "string",
            "description": "The creative size.",
            "readOnly": true
          },
          "supportedLineItemTypes": {
            "type": "array",
            "description": "Supported lineItemTypes where creatives can be associated. VIDEO line item type is supported since version `application/vnd.dspcreatives.v2.1+json`",
            "items": {
              "$ref": "#/components/schemas/SupportedLineItemTypes"
            }
          }
        }
      },
      "SupplySourceResponse": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "supplySources": {
            "type": "array",
            "description": "Array of supply source items sorted by deal start time (if available) then ID, ascending.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SupplySource"
                }
              ],
              "properties": {
                "dealInfo": {
                  "$ref": "#/components/schemas/DealInfo"
                }
              }
            }
          }
        }
      },
      "SupplySourceResponseV1_1": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "supplySources": {
            "type": "array",
            "description": "Array of supply source items sorted by deal start time (if available) then ID, ascending.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SupplySource"
                }
              ],
              "properties": {
                "dealInfo": {
                  "$ref": "#/components/schemas/DealInfoV1_1"
                }
              }
            }
          }
        }
      },
      "SupplySourceResponseV1_2": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "supplySources": {
            "type": "array",
            "description": "Array of supply source items sorted by deal start time (if available) then ID, ascending.",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/SupplySource"
                }
              ],
              "properties": {
                "dealInfo": {
                  "$ref": "#/components/schemas/DealInfoV1_2"
                }
              }
            }
          }
        }
      },
      "DealFee": {
        "type": "object",
        "description": "The fee associated with the deal. This will be the same value as deal price, but includes more information such as currency code.",
        "properties": {
          "amount": {
            "type": "integer",
            "example": 500,
            "description": "The price agreed upon with the publisher. Given in base currency units multiplied by scaling factor ('scale')."
          },
          "currency": {
            "type": "string",
            "example": "USD",
            "description": "Base currency, such as US Dollar, given in ISO 4217."
          },
          "scale": {
            "type": "integer",
            "example": 1000,
            "description": "Scale of the amount relative to the base currency unit. For instance, if the scale is 100000, the currency is USD, and the amount is 50000, the human-readable fee is $0.50."
          },
          "feeCalculationType": {
            "type": "string",
            "enum": [
              "FIXED_CPM",
              "FLOOR_RATE"
            ],
            "description": "How the fee is applied."
          }
        }
      },
      "DspCreateImageCreativesRequestV1": {
        "type": "array",
        "description": "Create image creatives request.",
        "items": {
          "$ref": "#/components/schemas/DspCreateImageCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspCreateImageCreativeRequestV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseCreateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteImageCreativeAttributesV1"
          },
          {
            "type": "object",
            "description": "Create image creative request.",
            "properties": {
              "supply": {
                "$ref": "#/components/schemas/DspImageCreativeSupplyV1"
              }
            },
            "required": [
              "supply"
            ]
          }
        ]
      },
      "DspUpdateImageCreativesRequestV1": {
        "type": "array",
        "description": "Update image creatives request.",
        "items": {
          "$ref": "#/components/schemas/DspUpdateImageCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspUpdateImageCreativeRequestV1": {
        "description": "Update image creative request",
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseUpdateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteImageCreativeAttributesV1"
          }
        ]
      },
      "DspReadWriteImageCreativeAttributesV1": {
        "type": "object",
        "description": "This holds common properties that can we written and updated for image creative.",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The creative external Id."
          },
          "size": {
            "$ref": "#/components/schemas/DspSizeV1"
          },
          "asset": {
            "$ref": "#/components/schemas/DspAssetV1"
          },
          "clickThroughAction": {
            "$ref": "#/components/schemas/DspImageClickThroughActionV1"
          },
          "thirdPartyClickTrackers": {
            "type": "array",
            "description": "This URL is pinged when the creative is clicked. The URL can contain macros.",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "type": "string",
              "maxLength": 2000
            }
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          },
          "additionalHtml": {
            "type": "string",
            "description": "Add HTML to the creative for surveys or other arbitrary HTML.",
            "maxLength": 5000
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/DspAdChoicesPositionV1"
          }
        },
        "required": [
          "size",
          "asset",
          "clickThroughAction"
        ]
      },
      "DspReadImageCreativesResponseV1": {
        "type": "object",
        "description": "Read image creatives response.",
        "properties": {
          "creatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspImageCreativeV1"
            },
            "minItems": 1,
            "maxItems": 1
          }
        }
      },
      "DspImageCreativeV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspCreateImageCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspUpdateImageCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspBaseReadCreativeV1"
          }
        ]
      },
      "DspImageCreativesResponseV1": {
        "type": "array",
        "description": "Create/Update operation's image creatives response.",
        "items": {
          "$ref": "#/components/schemas/DspCreativeResponseV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspImageCreativePreviewRequestV1": {
        "description": "Image creative preview request. Either `creativeId` or `creativeModel` must be provided, but not both.",
        "type": "object",
        "properties": {
          "creativeId": {
            "type": "string",
            "description": "The creative Id."
          },
          "creativeModel": {
            "$ref": "#/components/schemas/DspImageCreativePreviewModelV1"
          },
          "previewConfiguration": {
            "$ref": "#/components/schemas/DspPreviewConfigurationV1"
          }
        }
      },
      "DspImageCreativePreviewModelV1": {
        "description": "Image creative preview model. Populate this to preview a new creative.",
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/DspCreativeMarketplaceV1"
          },
          "supply": {
            "$ref": "#/components/schemas/DspImageCreativeSupplyV1"
          },
          "size": {
            "$ref": "#/components/schemas/DspSizeV1"
          },
          "asset": {
            "$ref": "#/components/schemas/DspAssetV1"
          },
          "clickThroughAction": {
            "$ref": "#/components/schemas/DspImageClickThroughActionV1"
          },
          "additionalHtml": {
            "type": "string",
            "description": "Add HTML to the creative for surveys or other arbitrary HTML.",
            "maxLength": 5000
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/DspAdChoicesPositionV1"
          },
          "thirdPartyClickTrackers": {
            "type": "array",
            "description": "This URL is pinged when the creative is clicked. The URL can contain macros.",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "type": "string",
              "maxLength": 2000
            }
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          }
        },
        "required": [
          "marketplace",
          "supply",
          "size",
          "asset",
          "adChoicesPosition"
        ]
      },
      "DspImageCreativeSupplyV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspCreativeSupplyV1"
          }
        ]
      },
      "DspImageClickThroughActionV1": {
        "type": "object",
        "description": "Image's click through action which can have any one of the following properties. One action and one action alone must be provided.",
        "properties": {
          "customUrl": {
            "$ref": "#/components/schemas/DspCustomUrlActionV1"
          },
          "detailPage": {
            "$ref": "#/components/schemas/DspClickThroughDetailPageActionV1"
          },
          "searchAsin": {
            "$ref": "#/components/schemas/DspClickThroughSearchAsinActionV1"
          },
          "searchKeyword": {
            "$ref": "#/components/schemas/DspClickThroughSearchKeywordActionV1"
          },
          "androidAppDownload": {
            "$ref": "#/components/schemas/DspClickThroughAndroidAppDownloadActionV1"
          },
          "iosAppDownload": {
            "$ref": "#/components/schemas/DspClickThroughIosAppDownloadActionV1"
          },
          "kindleAppDownload": {
            "$ref": "#/components/schemas/DspClickThroughKindleAppDownloadActionV1"
          }
        }
      },
      "DspCreateVideoCreativesRequestV1": {
        "description": "Create video creatives request.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspCreateVideoCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspCreateVideoCreativeRequestV1": {
        "description": "Create video creative request",
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseCreateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteVideoCreativeAttributesV1"
          }
        ]
      },
      "DspUpdateVideoCreativesRequestV1": {
        "description": "Update video creatives request",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspUpdateVideoCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspUpdateVideoCreativeRequestV1": {
        "description": "Update video creative request",
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseUpdateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteVideoCreativeAttributesV1"
          }
        ]
      },
      "DspReadWriteVideoCreativeAttributesV1": {
        "type": "object",
        "description": "This holds common properties that can we written and updated for video creative",
        "properties": {
          "externalId": {
            "description": "The creative external identifier.",
            "type": "string"
          },
          "asset": {
            "$ref": "#/components/schemas/DspAssetV1"
          },
          "clickThroughAction": {
            "$ref": "#/components/schemas/DspVideoClickThroughActionV1"
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          }
        },
        "required": [
          "asset",
          "clickThroughAction"
        ]
      },
      "DspReadVideoCreativesResponseV1": {
        "type": "object",
        "description": "Read video creatives response.",
        "properties": {
          "creatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspVideoCreativeV1"
            },
            "minItems": 1,
            "maxItems": 1
          }
        }
      },
      "DspVideoCreativeV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspCreateVideoCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspUpdateVideoCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspBaseReadCreativeV1"
          }
        ]
      },
      "DspVideoCreativesResponseV1": {
        "description": "Create/Update operation's video creatives response.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspCreativeResponseV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspVideoCreativePreviewRequestV1": {
        "description": "Video creative preview request. Either `creativeId` or `creativeModel` must be provided, but not both.",
        "type": "object",
        "properties": {
          "creativeId": {
            "description": "The creative Id.",
            "type": "string"
          },
          "creativeModel": {
            "$ref": "#/components/schemas/DspVideoCreativePreviewModelV1"
          }
        }
      },
      "DspVideoCreativePreviewModelV1": {
        "description": "Video creative preview model. Populate this to preview a new creative.",
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/DspCreativeMarketplaceV1"
          },
          "asset": {
            "$ref": "#/components/schemas/DspAssetV1"
          },
          "clickThroughAction": {
            "$ref": "#/components/schemas/DspVideoClickThroughActionV1"
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          }
        },
        "required": [
          "marketplace",
          "asset"
        ]
      },
      "DspVideoClickThroughActionV1": {
        "description": "Click through action for video creatives",
        "type": "object",
        "properties": {
          "customUrl": {
            "$ref": "#/components/schemas/DspCustomUrlActionV1"
          }
        }
      },
      "DspCreateRecCreativesRequestV1": {
        "description": "Create Responsive eCommerce creatives (REC) request.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspCreateRecCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspCreateRecCreativeRequestV1": {
        "description": "Create Responsive eCommerce creative (REC) request.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseCreateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteRecCreativeAttributesV1"
          }
        ]
      },
      "DspUpdateRecCreativesRequestV1": {
        "type": "array",
        "description": "Update Responsive eCommerce creatives (REC) request.",
        "items": {
          "$ref": "#/components/schemas/DspUpdateRecCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspUpdateRecCreativeRequestV1": {
        "description": "Update Responsive eCommerce creative (REC) request.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseUpdateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteRecCreativeAttributesV1"
          }
        ]
      },
      "DspReadWriteRecCreativeAttributesV1": {
        "type": "object",
        "description": "This holds common properties that can we written and updated for REC creative.",
        "properties": {
          "additionalHtml": {
            "description": "Add HTML to the creative for surveys or other arbitrary HTML.",
            "type": "string",
            "maxLength": 5000
          },
          "allowThirdPartySellers": {
            "description": "If it's true, orders can be fulfilled by third party sellers.",
            "type": "boolean"
          },
          "content": {
            "$ref": "#/components/schemas/DspRecContentV1"
          },
          "allowedFormats": {
            "description": "A list of formats configured to display for the creative.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspRecFormatV1"
            },
            "minItems": 0,
            "maxItems": 3
          },
          "optimizationGoal": {
            "$ref": "#/components/schemas/DspRecOptimizationGoalV1"
          },
          "allowedSizes": {
            "description": "A list of sizes configured to display for the creative. This overrides the default REC supported sizes.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspSizeV1"
            },
            "minItems": 0,
            "maxItems": 11
          },
          "associatedProducts": {
            "type": "array",
            "description": "Product objects associated with the creative.",
            "items": {
              "$ref": "#/components/schemas/DspRecProductV1"
            },
            "minItems": 1,
            "maxItems": 20
          },
          "thirdPartyClickTrackers": {
            "type": "array",
            "description": "This URL is pinged when the creative is clicked. The URL can contain macros.",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "type": "string",
              "maxLength": 2000
            }
          },
          "thirdPartyTrackers": {
            "type": "array",
            "description": "URL used for tracking interactions with third party",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          }
        },
        "required": [
          "associatedProducts"
        ]
      },
      "DspReadRecCreativesResponseV1": {
        "type": "object",
        "description": "Read Responsive eCommerce creative (REC) creatives response.",
        "properties": {
          "creatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspRecCreativeV1"
            },
            "minItems": 1,
            "maxItems": 1
          }
        }
      },
      "DspRecCreativeV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspCreateRecCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspUpdateRecCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspBaseReadCreativeV1"
          }
        ]
      },
      "DspRecCreativesResponseV1": {
        "description": "Create/Update operation's rec creatives response.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspCreativeResponseV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspRecCreativePreviewRequestV1": {
        "description": "Responsive eCommerce creative preview request. Either `creativeId` or `creativeModel` must be provided, but not both.",
        "type": "object",
        "properties": {
          "creativeId": {
            "description": "The identifier of the creative.",
            "type": "string"
          },
          "creativeModel": {
            "$ref": "#/components/schemas/DspRecCreativePreviewModelV1"
          },
          "previewConfiguration": {
            "$ref": "#/components/schemas/DspRecPreviewConfigurationV1"
          }
        },
        "required": [
          "previewConfiguration"
        ]
      },
      "DspRecCreativePreviewModelV1": {
        "description": "Responsive eCommerce Creative preview model. Populate this to preview a new creative.",
        "type": "object",
        "properties": {
          "content": {
            "$ref": "#/components/schemas/DspRecContentV1"
          },
          "marketplace": {
            "$ref": "#/components/schemas/DspCreativeMarketplaceV1"
          },
          "thirdPartyClickTrackers": {
            "type": "array",
            "description": "This URL is pinged when the creative is clicked. The URL can contain macros.",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "type": "string",
              "maxLength": 2000
            }
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          }
        },
        "required": [
          "marketplace"
        ]
      },
      "DspRecPreviewConfigurationV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspPreviewConfigurationV1"
          },
          {
            "type": "object",
            "description": "REC Creative Preview Configuration",
            "properties": {
              "allowedSize": {
                "$ref": "#/components/schemas/DspSizeV1"
              },
              "allowedFormat": {
                "$ref": "#/components/schemas/DspRecFormatV1"
              },
              "associatedProduct": {
                "$ref": "#/components/schemas/DspRecProductV1"
              }
            },
            "required": [
              "allowedSize",
              "allowedFormat",
              "associatedProduct"
            ]
          }
        ]
      },
      "DspRecContentV1": {
        "description": "Responsive eCommerce creative field for displaying customized content. Provide either Background or LogoHeadline but not both.",
        "type": "object",
        "properties": {
          "background": {
            "description": "Creative customization field for displaying custom images.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspAssetV1"
            }
          },
          "logoHeadline": {
            "description": "Creative customization field for displaying brandlogo and headline.",
            "type": "object",
            "properties": {
              "brandLogo": {
                "$ref": "#/components/schemas/DspAssetV1"
              },
              "headline": {
                "description": "Creative customization field for displaying headline.",
                "type": "string",
                "maxLength": 50
              }
            },
            "required": [
              "brandLogo"
            ]
          }
        }
      },
      "DspRecProductV1": {
        "description": "The object representation of a product.",
        "type": "object",
        "properties": {
          "asin": {
            "description": "Amazon standard identification number.",
            "type": "string"
          },
          "productTitle": {
            "description": "Retail product title.",
            "type": "string"
          }
        },
        "required": [
          "asin"
        ]
      },
      "DspRecFormatV1": {
        "description": "Formats configured to display for the creative.\n* `SHOP_NOW`: Clicking on the ad will take customer to the relevant product detail page.\n* `ADD_TO_CART`: Clicking on the ad will add the product to the customer’s Cart.\n* `COUPON`: Clicking on the ad will clip the coupon and take the customer to the product detail page for that item, if signed in; otherwise take them to the coupon landing page where the customer is instructed to sign in.\n",
        "type": "string",
        "enum": [
          "SHOP_NOW",
          "ADD_TO_CART",
          "COUPON"
        ]
      },
      "DspRecOptimizationGoalV1": {
        "description": "Metric which creative optimization should attempt to improve.",
        "type": "string",
        "enum": [
          "PURCHASE_RATE",
          "CLICK_THROUGH_RATE",
          "DETAIL_PAGE_VIEW_RATE"
        ]
      },
      "DspCreativeModerationV1": {
        "type": "object",
        "description": "The creative moderation summary.",
        "properties": {
          "creativeId": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/DspCreativeApprovalStatusV1"
          },
          "reasons": {
            "type": "array",
            "description": "The reasons why creative is not approved.",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          },
          "additionalNotes": {
            "type": "array",
            "description": "The additional notes.",
            "items": {
              "type": "string"
            },
            "maxItems": 50
          }
        }
      },
      "DspCreateThirdPartyCreativesRequestV1": {
        "description": "Create Third Party creatives request.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspCreateThirdPartyCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspCreateThirdPartyCreativeRequestV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseCreateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteThirdPartyCreativeAttributesV1"
          },
          {
            "type": "object",
            "description": "Create Third Party creative request.",
            "properties": {
              "supply": {
                "$ref": "#/components/schemas/DspCreativeSupplyV1"
              }
            },
            "required": [
              "supply"
            ]
          }
        ]
      },
      "DspUpdateThirdPartyCreativesRequestV1": {
        "type": "array",
        "description": "Update Third Party creatives request.",
        "items": {
          "$ref": "#/components/schemas/DspUpdateThirdPartyCreativeRequestV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspUpdateThirdPartyCreativeRequestV1": {
        "description": "Update Third Party creative request.",
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseUpdateCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspReadWriteThirdPartyCreativeAttributesV1"
          }
        ]
      },
      "DspReadWriteThirdPartyCreativeAttributesV1": {
        "type": "object",
        "description": "This holds common properties that can we written and updated for Third Party creative.",
        "properties": {
          "externalId": {
            "type": "string",
            "description": "The creative external Id."
          },
          "size": {
            "$ref": "#/components/schemas/DspSizeV1"
          },
          "tagSource": {
            "type": "string",
            "description": "The third party tag associated with creative."
          },
          "destination": {
            "description": "Choose `AMAZON` if the `tag` links to an Amazon site like Amazon.com or IMDb. Otherwise choose `OTHER`.",
            "allOf": [
              {
                "$ref": "#/components/schemas/DspClickThroughDestinationV1"
              }
            ]
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          },
          "additionalHtml": {
            "type": "string",
            "description": "Add HTML to the creative for surveys or other arbitrary HTML.",
            "maxLength": 5000
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/DspAdChoicesPositionV1"
          }
        },
        "required": [
          "tagSource"
        ]
      },
      "DspReadThirdPartyCreativesResponseV1": {
        "type": "object",
        "description": "Read Third Party creative creatives response.",
        "properties": {
          "creatives": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyCreativeV1"
            },
            "minItems": 1,
            "maxItems": 1
          }
        }
      },
      "DspThirdPartyCreativeV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspCreateThirdPartyCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspUpdateThirdPartyCreativeRequestV1"
          },
          {
            "$ref": "#/components/schemas/DspBaseReadCreativeV1"
          }
        ]
      },
      "DspThirdPartyCreativesResponseV1": {
        "description": "Create/Update third party creatives response.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/DspCreativeResponseV1"
        },
        "minItems": 1,
        "maxItems": 1
      },
      "DspThirdPartyCreativePreviewRequestV1": {
        "description": "Third Party creative preview request. Either `creativeId` or `creativeModel` must be provided, but not both.",
        "type": "object",
        "properties": {
          "creativeId": {
            "description": "The identifier of the creative.",
            "type": "string"
          },
          "creativeModel": {
            "$ref": "#/components/schemas/DspThirdPartyCreativePreviewModelV1"
          },
          "previewConfiguration": {
            "$ref": "#/components/schemas/DspPreviewConfigurationV1"
          }
        },
        "required": [
          "previewConfiguration"
        ]
      },
      "DspThirdPartyCreativePreviewModelV1": {
        "description": "Third Party Creative preview model. Populate this to preview a new creative.",
        "type": "object",
        "properties": {
          "marketplace": {
            "$ref": "#/components/schemas/DspCreativeMarketplaceV1"
          },
          "supply": {
            "$ref": "#/components/schemas/DspCreativeSupplyV1"
          },
          "size": {
            "$ref": "#/components/schemas/DspSizeV1"
          },
          "tagSource": {
            "type": "string",
            "description": "The third party tag associated with creative."
          },
          "additionalHtml": {
            "type": "string",
            "description": "Add HTML to the creative for surveys or other arbitrary HTML.",
            "maxLength": 5000
          },
          "adChoicesPosition": {
            "$ref": "#/components/schemas/DspAdChoicesPositionV1"
          },
          "thirdPartyTrackers": {
            "type": "array",
            "minItems": 0,
            "maxItems": 5,
            "items": {
              "$ref": "#/components/schemas/DspThirdPartyTrackerV1"
            }
          }
        },
        "required": [
          "marketplace",
          "supply",
          "size",
          "tagSource",
          "adChoicesPosition"
        ]
      },
      "DspClickThroughDetailPageActionV1": {
        "type": "object",
        "description": "Click through Action - Detail Page. This is applicable only to `MOBILE_OO` and `MOBILE_AAP` supply.",
        "properties": {
          "productAsin": {
            "type": "string",
            "description": "Define which product's detail page the customer should be taken to when tapping on the creative."
          },
          "enableDeepLinking": {
            "type": "boolean",
            "description": "Allow to open URL in Amazon App, if available on device. By default it is false. This will be considered only for `MOBILE_AAP` supply."
          }
        },
        "required": [
          "productAsin"
        ]
      },
      "DspClickThroughKindleAppDownloadActionV1": {
        "type": "object",
        "description": "Click through Action - Kindle App Download. This is applicable only to `MOBILE_AAP` supply.",
        "properties": {
          "productAsin": {
            "type": "string",
            "description": "Amazon product Asin, used to build the download URL."
          },
          "downloadUrl": {
            "type": "string",
            "description": "URL to direct users to download app. By default, this will be built automatically using `productAsin` information provided. It can be overridden."
          }
        },
        "required": [
          "productAsin"
        ]
      },
      "DspCustomUrlActionV1": {
        "type": "object",
        "description": "Click through Action - Custom Url.",
        "properties": {
          "url": {
            "type": "string",
            "description": "Define where the creative links to on click."
          }
        },
        "required": [
          "url"
        ]
      },
      "DspClickThroughSearchKeywordActionV1": {
        "type": "object",
        "description": "Click through action - Search Keywords. This is applicable only to `MOBILE_AAP` and `MOBILE_OO` supply.",
        "properties": {
          "keywords": {
            "type": "array",
            "description": "Define the keywords to query for in the search results that will be displayed on click-through.",
            "minItems": 1,
            "maxItems": 1000,
            "items": {
              "type": "string"
            }
          },
          "enableDeepLinking": {
            "type": "boolean",
            "description": "Allow to open URL in Amazon App, if available on device. This will be considered only for `MOBILE_AAP` supply. By default it is `false`."
          }
        },
        "required": [
          "keywords"
        ]
      },
      "DspClickThroughIosAppDownloadActionV1": {
        "type": "object",
        "description": "Click through action - IOS App Download. This is applicable only to `MOBILE_AAP` supply.",
        "properties": {
          "storeLink": {
            "type": "string",
            "description": "Apple app store link for app, used to build the download URL."
          },
          "downloadUrl": {
            "type": "string",
            "description": "URL to direct users to download app. By default, This will be built automatically using `storeLink` information provided. It can be overridden."
          }
        },
        "required": [
          "storeLink"
        ]
      },
      "DspClickThroughAndroidAppDownloadActionV1": {
        "type": "object",
        "description": "To target Android app download as click through action, at least `storeId`, `productAsin` or `downloadUrl` must be provided. If both `storeId` and `productAsin` is provided, `storePriority` must be provided as well. This is applicable only to `MOBILE_AAP` and `MOBILE_OO` supply.",
        "properties": {
          "isRtb": {
            "type": "boolean",
            "description": "Indicates whether it's for real time bidding or not. Default value is `false`. This is applicable only to `MOBILE_AAP` supply."
          },
          "storeId": {
            "type": "string",
            "description": "Android play store Id for app, used to build the download URL."
          },
          "productAsin": {
            "type": "string",
            "description": "Amazon product Asin, used to build the download URL. This is applicable only to `MOBILE_AAP` supply."
          },
          "storePriority": {
            "type": "string",
            "description": "The higher priority store will be tried first, then if it does not exist on device the second store will be tried. Default value is `PLAY_STORE_THEN_AMAZON_APP_STORE`. This is applicable only to `MOBILE_AAP` supply.",
            "enum": [
              "PLAY_STORE_THEN_AMAZON_APP_STORE",
              "AMAZON_APP_STORE_THEN_PLAY_STORE"
            ]
          },
          "downloadUrl": {
            "type": "string",
            "description": "URL to direct users to download app. By default, This will be built automatically using `playStoreId` and `productAsin` information provided. It can be overriden."
          }
        }
      },
      "DspClickThroughSearchAsinActionV1": {
        "type": "object",
        "description": "Click through Action - Search Asins. This is applicable only to `MOBILE_AAP` and `MOBILE_OO` supply.",
        "properties": {
          "productAsins": {
            "type": "array",
            "description": "Define the Asins to query for in the search results that will be displayed on click-through.",
            "minItems": 1,
            "maxItems": 25,
            "items": {
              "type": "string"
            }
          },
          "enableDeepLinking": {
            "type": "boolean",
            "description": "Allow to open URL in Amazon App, if available on device. This will be considered only for `MOBILE_AAP` supply. Default value is `false`."
          }
        },
        "required": [
          "productAsins"
        ]
      },
      "DspCreativeMarketplaceV1": {
        "type": "string",
        "description": "Marketplace where this creative is applicable.",
        "enum": [
          "US",
          "CA",
          "BR",
          "MX"
        ]
      },
      "DspAssetV1": {
        "type": "object",
        "description": "Asset to be associated with creative.",
        "properties": {
          "assetId": {
            "type": "string",
            "description": "The uploaded asset Id. This Id is provided by Creative Assets API when user registers an asset with assetType after upload."
          },
          "version": {
            "type": "string",
            "description": "The uploaded asset version. This version is provided by Creative Assets API when user registers an asset with assetType after upload."
          },
          "url": {
            "type": "string",
            "description": "The asset's URL. This will be provided if asset linked with the creative being read is not registered in Creative Assets API."
          }
        },
        "required": [
          "assetId",
          "version"
        ]
      },
      "DspSizeV1": {
        "type": "object",
        "description": "Size of the creative.",
        "properties": {
          "width": {
            "type": "number",
            "format": "integer",
            "description": "The creative width in pixels."
          },
          "height": {
            "type": "number",
            "format": "integer",
            "description": "The creative height in pixels."
          }
        },
        "required": [
          "width",
          "height"
        ]
      },
      "DspCreativeSupplyV1": {
        "description": "Different supported supply of creative.",
        "type": "string",
        "enum": [
          "DESKTOP",
          "MOBILE_OO",
          "MOBILE_AAP"
        ]
      },
      "DspAdChoicesPositionV1": {
        "type": "string",
        "description": "Default value is TOP_RIGHT.",
        "enum": [
          "TOP_RIGHT",
          "TOP_LEFT",
          "BOTTOM_RIGHT",
          "BOTTOM_LEFT"
        ]
      },
      "DspThirdPartyTrackerV1": {
        "type": "object",
        "description": "Trackers used for tracking interactions with third party",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/DspThirdPartyTrackerTypeV1"
          },
          "trackerUrl": {
            "type": "string",
            "description": "URL used for tracking interactions with third party",
            "maxLength": 2000
          }
        },
        "required": [
          "type",
          "trackerUrl"
        ]
      },
      "DspThirdPartyTrackerTypeV1": {
        "type": "string",
        "description": "Third party creative tracker type.",
        "enum": [
          "IMPRESSION"
        ]
      },
      "DspCreativeApprovalStatusV1": {
        "type": "string",
        "description": "The creative approval status.",
        "enum": [
          "PENDING",
          "APPROVED",
          "NOT_APPROVED",
          "WAITING_FOR_LINEITEM",
          "APPROVED_WITH_EXCEPTIONS"
        ]
      },
      "DspCreativePreviewResponseV1": {
        "description": "Creative preview response.",
        "type": "object",
        "properties": {
          "previewContent": {
            "description": "The HTML content",
            "type": "string"
          }
        }
      },
      "DspPreviewConfigurationV1": {
        "description": "Configuration settings for preview",
        "type": "object",
        "properties": {
          "isOnAmazon": {
            "type": "boolean",
            "description": "If it's true, shows preview in amazon websites, else shows in other websites",
            "default": true
          }
        }
      },
      "DspClickThroughDestinationV1": {
        "type": "string",
        "description": "Choose `AMAZON` if the `click through` links to an Amazon site like Amazon.com or IMDb. Otherwise choose `OTHER`.",
        "enum": [
          "AMAZON",
          "OTHER"
        ],
        "default": "OTHER"
      },
      "DspBaseReadCreativeV1": {
        "type": "object",
        "description": "This holds common read-only properties of all creative types.",
        "properties": {
          "approvalStatus": {
            "$ref": "#/components/schemas/DspCreativeApprovalStatusV1"
          },
          "createdDate": {
            "type": "string",
            "description": "The creative created date."
          },
          "lastUpdatedDate": {
            "type": "string",
            "description": "The creative last updated date."
          }
        }
      },
      "DspBaseWriteCreativeV1": {
        "type": "object",
        "description": "This holds common mutable properties of all creative types update request.",
        "properties": {
          "name": {
            "type": "string",
            "description": "The creative name.",
            "maxLength": 254
          }
        },
        "required": [
          "name"
        ]
      },
      "DspBaseCreateCreativeRequestV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseWriteCreativeV1"
          },
          {
            "type": "object",
            "description": "This holds common immutable properties of all creative types create request.",
            "properties": {
              "advertiserId": {
                "type": "string",
                "description": "The advertiser Id. It's an immutable field."
              },
              "marketplace": {
                "$ref": "#/components/schemas/DspCreativeMarketplaceV1"
              }
            },
            "required": [
              "advertiserId",
              "marketplace"
            ]
          }
        ]
      },
      "DspBaseUpdateCreativeRequestV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DspBaseWriteCreativeV1"
          },
          {
            "type": "object",
            "description": "This holds common server-assigned mutable properties of all creative types update request.",
            "properties": {
              "creativeId": {
                "type": "string",
                "description": "The creative Id. It will be used to perform update operation. It's an immutable field."
              }
            },
            "required": [
              "creativeId"
            ]
          }
        ]
      },
      "DspCreativeResponseV1": {
        "type": "object",
        "description": "Response for the creative create/update operations. If operation is successful, it contains only creativeId. If it is a failure, it contains only errorDetails.",
        "properties": {
          "creativeId": {
            "type": "string",
            "description": "The creative Id."
          },
          "errorDetails": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "DeliveryActivationStatus": {
        "type": "string",
        "description": "This will be used to control the delivery activation status of order and lineitem  resource. Active - Activate order or lineitem. INACTIVE - Pause the order or lineitem.\n",
        "enum": [
          "ACTIVE",
          "INACTIVE"
        ],
        "readOnly": true
      },
      "ProductTrackingDomain": {
        "type": "string",
        "description": "The ASIN domain type. Applicable to ASIN line item type only.",
        "enum": [
          "AMAZON_US",
          "AMAZON_CA",
          "AMAZON_MX",
          "PRIME_NOW_US",
          "PRIME_NOW_CA",
          "WHOLE_FOODS_MARKET_US"
        ]
      },
      "ProductTrackingDomainV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTrackingDomain"
          }
        ],
        "type": "string",
        "description": "The ASIN domain type. Applicable to ASIN line item type only. FRESH_STORES_US is available since application/vnd.dsporders.v2.1+json.",
        "enum": [
          "FRESH_STORES_US"
        ]
      },
      "ProductTrackingItem": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product identifier."
          },
          "productAssociation": {
            "type": "string",
            "description": "The product feature type.",
            "enum": [
              "FEATURED",
              "NOT_FEATURED"
            ]
          },
          "domain": {
            "$ref": "#/components/schemas/ProductTrackingDomain"
          }
        },
        "required": [
          "productId",
          "productAssociation",
          "domain"
        ]
      },
      "ProductTrackingItemV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTrackingItem"
          }
        ],
        "type": "object",
        "properties": {
          "domain": {
            "$ref": "#/components/schemas/ProductTrackingDomainV2_1"
          }
        },
        "required": [
          "domain"
        ]
      },
      "ProductTracking": {
        "type": "object",
        "properties": {
          "productList": {
            "type": "array",
            "description": "The tracking product list.",
            "items": {
              "$ref": "#/components/schemas/ProductTrackingItem"
            }
          },
          "productFile": {
            "type": "string",
            "description": "The URL of the product tracking file.",
            "readOnly": true
          }
        }
      },
      "ProductTrackingV2_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/ProductTracking"
          }
        ],
        "type": "object",
        "properties": {
          "productList": {
            "items": {
              "$ref": "#/components/schemas/ProductTrackingItemV2_1"
            }
          }
        }
      },
      "PixelTracking": {
        "type": "array",
        "description": "A list of pixels associated with the campaign.",
        "items": {
          "type": "string",
          "description": "The pixel identifier."
        }
      },
      "ProductTrackingList": {
        "type": "array",
        "description": "The tracking product list.",
        "items": {
          "$ref": "#/components/schemas/ProductTrackingItemV2_1"
        }
      },
      "ProductTrackingFile": {
        "type": "string",
        "description": "The URL of the product tracking file."
      },
      "ConversionTracking": {
        "type": "object",
        "properties": {
          "products": {
            "$ref": "#/components/schemas/ProductTracking"
          },
          "pixels": {
            "$ref": "#/components/schemas/PixelTracking"
          }
        }
      },
      "ConversionTrackingV2_1": {
        "type": "object",
        "properties": {
          "products": {
            "$ref": "#/components/schemas/ProductTrackingV2_1"
          },
          "pixels": {
            "$ref": "#/components/schemas/PixelTracking"
          }
        }
      },
      "FileUploadPolicy": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "The AWS S3 url for file upload. It will be used as POST request URL."
          },
          "fields": {
            "type": "object",
            "description": "Fields used in Post request. See more details at https://docs.aws.amazon.com/AWSJavaScriptSDK/v3/latest/modules/_aws_sdk_s3_presigned_post.html#post-file-using-formdata-in-nodejs",
            "additionalProperties": {
              "type": "string"
            },
            "example": {
              "key": "product/2021/product.csv",
              "x-amz-algorithm": "AWS4-HMAC-SHA256",
              "x-amz-credential": "ASIA4HUVSEUT23WHSXYQ/20210517/us-east-1/s3/aws4_request",
              "x-amz-date": "20210517T183410Z",
              "x-amz-security-token": "IQoJb3JpZ2luX2VjELP",
              "policy": "eyJleHBpcacEF53",
              "x-amz-signature": "10864c"
            }
          }
        }
      },
      "SupportedPolicyType": {
        "type": "string",
        "enum": [
          "PRODUCT",
          "DOMAIN"
        ]
      },
      "LineItemCreativeAssociationsResponse": {
        "description": "Response for the update operation. This object will have either success or failure property for the corresponding requests on the index.",
        "type": "object",
        "properties": {
          "success": {
            "$ref": "#/components/schemas/LineItemCreativeAssociation"
          },
          "errorDetails": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "LineItemCreativeAssociationOperation": {
        "type": "string",
        "description": "A lineItemCreativeAssociation operation.",
        "enum": [
          "CREATE",
          "DELETE"
        ]
      },
      "LineItemCreativeAssociationsRequest": {
        "required": [
          "advertiserId",
          "operation",
          "associations"
        ],
        "type": "object",
        "properties": {
          "advertiserId": {
            "type": "string",
            "description": "The advertiser identifier."
          },
          "operation": {
            "$ref": "#/components/schemas/LineItemCreativeAssociationOperation"
          },
          "associations": {
            "type": "array",
            "description": "A list of the associations to operate on. This object requires only lineItemId and creativeId and other fields are not required.",
            "items": {
              "$ref": "#/components/schemas/LineItemCreativeAssociation"
            },
            "maxItems": 1,
            "minItems": 1
          }
        }
      },
      "LineItemCreativeAssociations": {
        "type": "object",
        "properties": {
          "totalResults": {
            "type": "integer",
            "description": "Total number of results which satisfy the filtering criteria. This will help to support pagination."
          },
          "response": {
            "maxItems": 20,
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LineItemCreativeAssociation"
            }
          }
        }
      },
      "LineItemCreativeAssociation": {
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The lineitem to operate on."
          },
          "creativeId": {
            "type": "string",
            "description": "The creative to operate on."
          },
          "startDate": {
            "type": "string",
            "description": "The creative start date in ISO format (YYYY-MM-DD hh:mm:ss z). Timezone is UTC. For example, 2020-10-21 03:59:00 UTC."
          },
          "endDate": {
            "type": "string",
            "description": "The creative end date in in ISO format (YYYY-MM-DD hh:mm:ss z). Timezone is UTC. For example, 2020-10-21 03:59:00 UTC."
          },
          "weight": {
            "type": "integer",
            "description": "The weight of the creative. This field will be available only if the creative rotation type is `WEIGHTED`."
          }
        },
        "required": [
          "lineItemId",
          "creativeId"
        ]
      },
      "Pixel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "12345678-abcd-abcd-abcd-012345679ef"
          },
          "name": {
            "type": "string",
            "example": "PIXEL_AMZ_ENGAGE"
          },
          "purpose": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ENGAGEMENT",
                "REMARKETING",
                "CONVERSION"
              ],
              "example": "ENGAGEMENT"
            }
          },
          "event": {
            "type": "string",
            "enum": [
              "MARKETING_LANDING_PAGE"
            ],
            "example": "MARKETING_LANDING_PAGE"
          },
          "domain": {
            "type": "string",
            "example": "www.amazon.com"
          },
          "description": {
            "type": "string",
            "example": "Pixel for Amazon engagement"
          },
          "advertiserId": {
            "type": "string",
            "example": 123456789
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ProductCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The category identifier."
          },
          "name": {
            "type": "string",
            "description": "The category name."
          },
          "parentId": {
            "type": "string",
            "description": "The identifier of the parent category. This is blank if the category is a parent category."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "SupplySource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "ID of the supply source item. For OPEN_EXCHANGE type, it is ID of the consolidated supply source item."
          },
          "name": {
            "type": "string",
            "description": "The name of the supply source item. For OPEN_EXCHANGE type, it is the name of the consolidated supply source item."
          },
          "supplySourceType": {
            "type": "string",
            "description": "Type of this item",
            "enum": [
              "AMAZON_EXCLUSIVE",
              "OPEN_EXCHANGE",
              "DEAL"
            ]
          },
          "dealInfo": {
            "$ref": "#/components/schemas/DealInfo"
          }
        }
      },
      "DealInfo": {
        "type": "object",
        "description": "Deal metadata present only for the DEAL type.",
        "properties": {
          "dealType": {
            "type": "string",
            "enum": [
              "PREFERRED_DEAL",
              "PRIVATE_AUCTION"
            ]
          },
          "dealGroup": {
            "type": "string"
          },
          "publisherName": {
            "type": "string"
          },
          "dealPrice": {
            "type": "number",
            "format": "integer",
            "description": "Price of the deal"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "exchangeName": {
            "type": "string",
            "description": "The name of the supply source item to which the deal belongs. If deal belongs to OPEN_EXCHANGE, it is the name of the consolidated supply source item."
          }
        }
      },
      "DealInfoV1_1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DealInfo"
          }
        ],
        "properties": {
          "dealFee": {
            "$ref": "#/components/schemas/DealFee"
          }
        }
      },
      "DealInfoV1_2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DealInfoV1_1"
          },
          {
            "properties": {
              "dealId": {
                "type": "string",
                "description": "ID provided by the user while creating the deal."
              }
            }
          }
        ]
      },
      "DomainListMetadata": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "size": {
            "type": "integer",
            "description": "Number of URLs specified in this list"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "updated": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "GeoLocation": {
        "type": "object",
        "description": "Single geo location information.",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string",
            "description": "Name of geo location."
          },
          "category": {
            "type": "string",
            "description": "Category of the geo location.",
            "enum": [
              "COUNTRY",
              "STATE",
              "CITY",
              "POSTAL_CODE",
              "DMA"
            ]
          }
        }
      },
      "IABContentCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The category identifier."
          },
          "name": {
            "type": "string",
            "description": "The category name."
          },
          "parentId": {
            "type": "string",
            "description": "The identifier of the parent category. This is blank if the category is a parent category."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "DiscoveryLineItemTypes": {
        "type": "string",
        "enum": [
          "STANDARD_DISPLAY",
          "AMAZON_MOBILE_DISPLAY",
          "AAP_MOBILE_APP",
          "VIDEO"
        ]
      },
      "OdcCustomPredicts": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "customPredicts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OdcPredict"
            }
          }
        }
      },
      "OdcStandardPredicts": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "standardPredicts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OdcPredict"
            },
            "minItems": 1,
            "maxItems": 320
          }
        }
      },
      "OdcPredict": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The segment identifier."
          },
          "name": {
            "type": "string",
            "description": "The segment name."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "DvCustomContextualSegments": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "customContextualSegments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DvCustomContextualSegment"
            }
          }
        }
      },
      "DvCustomContextualSegment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The segment identifier."
          },
          "name": {
            "type": "string",
            "description": "The segment name."
          }
        },
        "required": [
          "id",
          "name"
        ]
      },
      "Goal": {
        "type": "string",
        "description": "The primary goal that a campaign using this configuration is trying to achieve.",
        "enum": [
          "AWARENESS",
          "ENGAGEMENT_WITH_MY_AD",
          "CONSIDERATIONS_ON_AMAZON",
          "CONVERSIONS_OFF_AMAZON",
          "PURCHASES_ON_AMAZON",
          "MOBILE_APP_INSTALLS"
        ]
      },
      "GoalKpi": {
        "type": "string",
        "description": "Performance metrics that may be chosen to measure how effectively an order is achieving the desired goal. Although some goals may have multiple possible KPIs, exactly one KPI must be chosen during order creation.",
        "enum": [
          "CLICK_THROUGH_RATE",
          "COST_PER_ACQUISITION",
          "COST_PER_CLICK",
          "COST_PER_DETAIL_PAGE_VIEW",
          "COST_PER_DOWNLOAD",
          "COST_PER_VIDEO_COMPLETION",
          "DETAIL_PAGE_VIEW_RATE",
          "NONE",
          "OTHER",
          "REACH",
          "RETURN_ON_AD_SPEND",
          "TOTAL_RETURN_AD_SPEND",
          "VIDEO_COMPLETION_RATE"
        ]
      },
      "AutoOptimization": {
        "type": "string",
        "enum": [
          "BUDGET",
          "BID"
        ]
      },
      "GoalConfiguration": {
        "type": "object",
        "properties": {
          "goalName": {
            "$ref": "#/components/schemas/Goal"
          },
          "availableKpis": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "kpiName": {
                  "$ref": "#/components/schemas/GoalKpi"
                },
                "autoOptimizations": {
                  "type": "array",
                  "description": "Which optimizations can be applied for this KPI",
                  "items": {
                    "$ref": "#/components/schemas/AutoOptimization"
                  }
                }
              }
            }
          }
        }
      },
      "Apps": {
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "apps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/App"
            }
          }
        }
      },
      "App": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The app identifier."
          },
          "name": {
            "type": "string",
            "description": "The app name."
          }
        }
      },
      "SupportedLineItemTypes": {
        "type": "string",
        "enum": [
          "STANDARD_DISPLAY",
          "AMAZON_MOBILE_DISPLAY",
          "AAP_MOBILE_APP",
          "VIDEO"
        ]
      },
      "SupportedProductAssociationV1": {
        "type": "string",
        "description": "The product feature type.",
        "enum": [
          "FEATURED",
          "NOT_FEATURED",
          "FEATURED_WITH_VARIATION"
        ]
      },
      "SupportedProductTrackingDomainV1": {
        "type": "string",
        "description": "The ASIN domain type.",
        "enum": [
          "AMAZON_US",
          "AMAZON_CA",
          "AMAZON_MX",
          "PRIME_NOW_US",
          "PRIME_NOW_CA",
          "WHOLE_FOODS_MARKET_US",
          "FRESH_STORES_US",
          "PRIME_VIDEO_ROW_NA"
        ]
      },
      "ProductTrackingItemV1": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "description": "The product identifier."
          },
          "productAssociation": {
            "$ref": "#/components/schemas/SupportedProductAssociationV1"
          },
          "domain": {
            "$ref": "#/components/schemas/SupportedProductTrackingDomainV1"
          }
        },
        "required": [
          "productId",
          "productAssociation",
          "domain"
        ]
      },
      "ProductTrackingListV1": {
        "type": "array",
        "description": "The tracking product list.",
        "items": {
          "$ref": "#/components/schemas/ProductTrackingItemV1"
        }
      },
      "ProductTrackingV1": {
        "type": "object",
        "properties": {
          "productList": {
            "$ref": "#/components/schemas/ProductTrackingListV1"
          },
          "productFile": {
            "type": "string",
            "description": "The URL of the product tracking file.",
            "readOnly": true
          }
        }
      },
      "ReadDomainTargetingResponses": {
        "type": "object",
        "properties": {
          "response": {
            "minItems": 1,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ReadDomainTargetingResponse"
            }
          }
        }
      },
      "ReadDomainTargetingResponse": {
        "description": "The read operation response.",
        "type": "object",
        "readOnly": true,
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item identifier."
          },
          "inheritFromAdvertiser": {
            "type": "boolean",
            "description": "Set to `true` to enable domain inheritance from advertiser."
          },
          "targetingType": {
            "$ref": "#/components/schemas/TargetingType"
          },
          "domainListMergedFile": {
            "type": "string",
            "description": "The URL address of the domain file after merging all domains into single file, including inheritence from advertiser, domain lists, domain files, domains entered, if any."
          }
        }
      },
      "TargetingType": {
        "type": "string",
        "description": "The list type of the domain. Either INCLUDE (ALLOW_LIST) or EXCLUDE (BLOCK_LIST).",
        "enum": [
          "INCLUDE",
          "EXCLUDE"
        ]
      },
      "UpdateDomainTargetingRequest": {
        "description": "The update operation request.",
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item identifier."
          },
          "inheritFromAdvertiser": {
            "type": "boolean",
            "description": "Set to `true` to enable domain inheritance from advertiser."
          },
          "targetingType": {
            "$ref": "#/components/schemas/TargetingType"
          },
          "domainFiles": {
            "type": "array",
            "description": "The list of URL addresses of the domain list files.",
            "items": {
              "$ref": "#/components/schemas/DomainFileMetaData"
            },
            "maxItems": 10
          },
          "domainLists": {
            "type": "array",
            "description": "The list of domain lists Ids get from discovery API.",
            "items": {
              "type": "string",
              "maxLength": 36,
              "description": "The list identifier."
            },
            "maxItems": 10
          },
          "domainNames": {
            "type": "array",
            "description": "The list of raw domain names.",
            "items": {
              "type": "string",
              "maxLength": 255,
              "description": "The domain name."
            },
            "maxItems": 1000
          }
        },
        "required": [
          "lineItemId",
          "inheritFromAdvertiser",
          "targetingType"
        ]
      },
      "DomainFileMetaData": {
        "type": "object",
        "properties": {
          "fileKey": {
            "type": "string",
            "description": "The S3 key of domain list file."
          },
          "fileName": {
            "type": "string",
            "description": "The domain list file name."
          }
        },
        "required": [
          "fileKey",
          "fileName"
        ]
      },
      "UpdateDomainTargetingResponse": {
        "description": "The update operation response. If operation is successful, it contains lineItemId (and domainFilesUploaded). If it is a failure, it contains only errorDetails. Success and failure will be corresponding to that requested index in that batch (array of items).",
        "type": "object",
        "properties": {
          "lineItemId": {
            "type": "string",
            "description": "The line item identifier."
          },
          "domainFilesUploaded": {
            "type": "array",
            "description": "The list of domain file validation results.",
            "items": {
              "$ref": "#/components/schemas/DomainFileValidationResponse"
            }
          },
          "errorDetails": {
            "$ref": "#/components/schemas/Error"
          }
        }
      },
      "DomainFileValidationResponse": {
        "type": "object",
        "properties": {
          "fileName": {
            "type": "string",
            "description": "The uploaded file name."
          },
          "addedDomainSize": {
            "type": "integer",
            "description": "Number of domains in the file that have been added to the line item."
          },
          "invalidDomainSize": {
            "type": "integer",
            "description": "Number of invalid domains in the file. They are not added to the line item."
          },
          "duplicateDomainSize": {
            "type": "integer",
            "description": "Number of duplicate domains in the file. The unique ones of them are added to the line item."
          },
          "invalidDomainsFileUrl": {
            "type": "string",
            "description": "The URL of invalid domains file. It expires in 1 hour."
          },
          "duplicateDomainsFileUrl": {
            "type": "string",
            "description": "The URL of duplicate domains file. It expires in 1 hour."
          }
        }
      },
      "Error": {
        "description": "The error response object.",
        "properties": {
          "requestId": {
            "type": "string",
            "description": "Request Id that uniquely identifies your request."
          },
          "message": {
            "type": "string",
            "description": "A human-readable description of the response."
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubError"
            }
          }
        }
      },
      "SubError": {
        "type": "object",
        "description": "The sub error object.",
        "properties": {
          "errorType": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "fieldName": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ]
      }
    },
    "parameters": {
      "clientHeader": {
        "name": "Amazon-Advertising-API-ClientId",
        "in": "header",
        "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "profileHeader": {
        "name": "Amazon-Advertising-API-Scope",
        "in": "header",
        "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input. For DSP profiles, the `type` field of the `accountInfo` object must be set to `agency` and the `subType` field must not be `AMAZON_ATTRIBUTION`.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "creativeIdFilter": {
        "name": "creativeIdFilter",
        "in": "query",
        "description": "The returned array is filtered to include only creatives with Ids matching those specified in the comma-delimited string.",
        "schema": {
          "type": "string"
        },
        "required": true
      }
    }
  }
}