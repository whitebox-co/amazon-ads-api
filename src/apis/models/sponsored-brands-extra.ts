/* tslint:disable */
/* eslint-disable */
/**
 * Sponsored Brands
 * Use the Amazon Advertising API for Sponsored Brands for campaign, ad group, keyword, negative keyword, drafts, Stores, landing pages, and Brands management operations.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';
import { createRequestFunction } from "../../helpers";

/**
 * 
 * @export
 * @enum {string}
 */

export enum AccessDeniedErrorCode {
    AccessDenied = 'ACCESS_DENIED'
}

/**
 * 
 * @export
 * @interface AccessDeniedExceptionResponseContent
 */
export interface AccessDeniedExceptionResponseContent {
    /**
     * 
     * @type {AccessDeniedErrorCode}
     * @memberof AccessDeniedExceptionResponseContent
     */
    code: AccessDeniedErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof AccessDeniedExceptionResponseContent
     */
    message: string;
}
/**
 * The ad group settings.
 * @export
 * @interface AdGroup
 */
export interface AdGroup {
    /**
     * 
     * @type {Array<NegativeKeyword>}
     * @memberof AdGroup
     */
    negativeKeywords?: Array<NegativeKeyword>;
    /**
     * 
     * @type {Array<BidAdjustment>}
     * @memberof AdGroup
     */
    bidAdjustments?: Array<BidAdjustment>;
    /**
     * 
     * @type {Array<Keyword>}
     * @memberof AdGroup
     */
    keywords?: Array<Keyword>;
    /**
     * 
     * @type {CreativeType}
     * @memberof AdGroup
     */
    creativeType?: CreativeType;
    /**
     * 
     * @type {Array<NegativeProductTarget>}
     * @memberof AdGroup
     */
    negativeTargets?: Array<NegativeProductTarget>;
    /**
     * 
     * @type {BidOptimizationStrategy}
     * @memberof AdGroup
     */
    bidOptimizationStrategy?: BidOptimizationStrategy;
    /**
     * 
     * @type {Array<ProductTarget>}
     * @memberof AdGroup
     */
    targets?: Array<ProductTarget>;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof AdGroup
     */
    adGroupId?: string;
}
/**
 * Asin component which needs to be pre moderated.
 * @export
 * @interface AsinComponent
 */
export interface AsinComponent {
    /**
     * Type of the asin component.
     * @type {string}
     * @memberof AsinComponent
     */
    componentType: AsinComponentComponentTypeEnum;
    /**
     * Asin id to be pre moderated.
     * @type {string}
     * @memberof AsinComponent
     */
    asin: string;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof AsinComponent
     */
    id: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinComponentComponentTypeEnum {
    LandingAsin = 'LANDING_ASIN',
    ProductAsin = 'PRODUCT_ASIN'
}

/**
 * Pre-moderation result for an Asin component
 * @export
 * @interface AsinComponentResponse
 */
export interface AsinComponentResponse {
    /**
     * The pre-moderation status of the component.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    preModerationStatus?: AsinComponentResponsePreModerationStatusEnum;
    /**
     * Type of Asin component.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    componentType?: AsinComponentResponseComponentTypeEnum;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<AsinPolicyViolation>}
     * @memberof AsinComponentResponse
     */
    policyViolations?: Array<AsinPolicyViolation>;
    /**
     * Pre-moderated Asin Id.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    asin?: string;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    id?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum AsinComponentResponseComponentTypeEnum {
    LandingAsin = 'LANDING_ASIN',
    ProductAsin = 'PRODUCT_ASIN'
}

/**
 * 
 * @export
 * @interface AsinPolicyViolation
 */
export interface AsinPolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    policyDescription?: string;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    type?: AsinPolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    policyLinkUrl?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinPolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * 
 * @export
 * @interface AssociatedBudgetRuleResponse
 */
export interface AssociatedBudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    details?: string;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    ruleId?: string;
}
/**
 * 
 * @export
 * @interface AssociatedCampaign
 */
export interface AssociatedCampaign {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignId: string;
    /**
     * The budget rule evaluation status for this campaign. Read-only.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    ruleStatus: string;
    /**
     * The campaign name.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignName: string;
}
/**
 * Bid adjustment settings for desired placement or shopper segment.
 * @export
 * @interface BidAdjustment
 */
export interface BidAdjustment {
    /**
     * Bid adjustment for placement groups and shopper segments. Value is a percentage to two decimal places. For bid adjustments in placement groups, min is -99.00 and max is 900.00. For bid adjustments in shopper segments, min is 0.00 and max is 900.00. For example: If -40.00 is set for a $5.00 bid, the resulting bid is $3.00.
     * @type {number}
     * @memberof BidAdjustment
     */
    bidAdjustmentPercent?: number;
    /**
     * 
     * @type {BidAdjustmentPredicate}
     * @memberof BidAdjustment
     */
    bidAdjustmentPredicate?: BidAdjustmentPredicate;
}
/**
 * Desired placement or shopper segment where bid adjustment will be applied.
 * @export
 * @enum {string}
 */

export enum BidAdjustmentPredicate {
    PlacementGroupTop = 'PLACEMENT_GROUP_TOP',
    PlacementGroupOther = 'PLACEMENT_GROUP_OTHER',
    PlacementGroupDetailPage = 'PLACEMENT_GROUP_DETAIL_PAGE',
    PlacementGroupHome = 'PLACEMENT_GROUP_HOME',
    ShopperSegmentNewToBrandPurchase = 'SHOPPER_SEGMENT_NEW_TO_BRAND_PURCHASE'
}

/**
 * Automated bid optimization strategy.
 * @export
 * @enum {string}
 */

export enum BidOptimizationStrategy {
    MaximizeImmediateSales = 'maximizeImmediateSales',
    MaximizeNewToBrandCustomers = 'maximizeNewToBrandCustomers'
}

/**
 * The value by which to update the budget of the budget rule.
 * @export
 * @enum {string}
 */

export enum BudgetChangeType {
    Percent = 'PERCENT'
}

/**
 * 
 * @export
 * @interface BudgetIncreaseBy
 */
export interface BudgetIncreaseBy {
    /**
     * 
     * @type {BudgetChangeType}
     * @memberof BudgetIncreaseBy
     */
    type: BudgetChangeType;
    /**
     * The budget value.
     * @type {number}
     * @memberof BudgetIncreaseBy
     */
    value: number;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetRuleError
 */
export interface BudgetRuleError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetRuleError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetRuleError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetRuleResponse
 */
export interface BudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    details?: string;
    /**
     * The rule identifier.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    ruleId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BudgetRuleResponse
     */
    associatedCampaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum BudgetType {
    Daily = 'daily',
    Lifetime = 'lifetime'
}

/**
 * The comparison operator.
 * @export
 * @enum {string}
 */

export enum ComparisonOperator {
    GreaterThan = 'GREATER_THAN',
    LessThan = 'LESS_THAN',
    LessThanOrEqualTo = 'LESS_THAN_OR_EQUAL_TO',
    GreaterThanOrEqualTo = 'GREATER_THAN_OR_EQUAL_TO'
}

/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesRequest
 */
export interface CreateAssociatedBudgetRulesRequest {
    /**
     * A list of budget rule identifiers.
     * @type {Array<string>}
     * @memberof CreateAssociatedBudgetRulesRequest
     */
    budgetRuleIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesResponse
 */
export interface CreateAssociatedBudgetRulesResponse {
    /**
     * 
     * @type {Array<AssociatedBudgetRuleResponse>}
     * @memberof CreateAssociatedBudgetRulesResponse
     */
    responses?: Array<AssociatedBudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateBudgetRulesResponse
 */
export interface CreateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof CreateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateSBBudgetRulesRequest
 */
export interface CreateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRuleDetails>}
     * @memberof CreateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSDBudgetRulesRequest
 */
export interface CreateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRuleDetails>}
     * @memberof CreateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSPBudgetRulesRequest
 */
export interface CreateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRuleDetails>}
     * @memberof CreateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRuleDetails>;
}
/**
 * Type of creative. Only `productCollection` and `video` are supported for forecasting.
 * @export
 * @enum {string}
 */

export enum CreativeType {
    ProductCollection = 'productCollection',
    Video = 'video'
}

/**
 * Date component which needs to be pre moderated. Either startDate or endDate must be populated, or both can be populated.
 * @export
 * @interface DateComponent
 */
export interface DateComponent {
    /**
     * Type of the date component.
     * @type {string}
     * @memberof DateComponent
     */
    componentType: DateComponentComponentTypeEnum;
    /**
     * End date of the component in yyyy-MM-dd HH:mm:ss format
     * @type {string}
     * @memberof DateComponent
     */
    endDate?: string;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof DateComponent
     */
    id: string;
    /**
     * Start date of the component in yyyy-MM-dd HH:mm:ss format
     * @type {string}
     * @memberof DateComponent
     */
    startDate?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum DateComponentComponentTypeEnum {
    CampaignDate = 'CAMPAIGN_DATE'
}

/**
 * Pre-moderation result for a date component
 * @export
 * @interface DateComponentResponse
 */
export interface DateComponentResponse {
    /**
     * The pre-moderation status of the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    preModerationStatus?: DateComponentResponsePreModerationStatusEnum;
    /**
     * Type of the date component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    componentType?: DateComponentResponseComponentTypeEnum;
    /**
     * End date of the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    endDate?: string;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<DatePolicyViolation>}
     * @memberof DateComponentResponse
     */
    policyViolations?: Array<DatePolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    id?: string;
    /**
     * Start date of the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    startDate?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum DateComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum DateComponentResponseComponentTypeEnum {
    CampaignDates = 'CAMPAIGN_DATES'
}

/**
 * 
 * @export
 * @interface DatePolicyViolation
 */
export interface DatePolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    policyDescription?: string;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    type?: DatePolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    policyLinkUrl?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum DatePolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * Object representing date range type rule duration.
 * @export
 * @interface DateRangeTypeRuleDuration
 */
export interface DateRangeTypeRuleDuration {
    /**
     * The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    endDate?: string;
    /**
     * The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    startDate: string;
}
/**
 * The day of the week.
 * @export
 * @enum {string}
 */

export enum DayOfWeek {
    Monday = 'MONDAY',
    Tuesday = 'TUESDAY',
    Wednesday = 'WEDNESDAY',
    Thursday = 'THURSDAY',
    Friday = 'FRIDAY',
    Saturday = 'SATURDAY',
    Sunday = 'SUNDAY'
}

/**
 * Object representing event type rule duration.
 * @export
 * @interface EventTypeRuleDuration
 */
export interface EventTypeRuleDuration {
    /**
     * The event identifier. This value is available from the budget rules recommendation API.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventId: string;
    /**
     * The event end date in YYYYMMDD format. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    endDate?: string;
    /**
     * The event name. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventName?: string;
    /**
     * The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    startDate?: string;
}
/**
 * The lower and upper bound forecast values.
 * @export
 * @interface Forecast
 */
export interface Forecast {
    /**
     * The forecasted number of shoppers who will newly join the associated shopper segment.
     * @type {number}
     * @memberof Forecast
     */
    upperBound?: number;
    /**
     * The forecasted number of shoppers who will newly join the associated shopper segment.
     * @type {number}
     * @memberof Forecast
     */
    lowerBound?: number;
}
/**
 * The campaign performance forecast for each confidence interval. Currently only `large` interval is provided.
 * @export
 * @interface Forecasts
 */
export interface Forecasts {
    /**
     * 
     * @type {Forecast}
     * @memberof Forecasts
     */
    large?: Forecast;
}
/**
 * Request structure for shopper segment bidding campaign performance forecasts. If campaignId is provided, all other parameters are optional and will be applied on top of existing campaign attributes. If campaignId is not provided, all other parameters, except adGroupId, bidAdjustments, startDate, and endDate, must be provided.
 * @export
 * @interface GetCampaignShopperSegmentForecastRequestContent
 */
export interface GetCampaignShopperSegmentForecastRequestContent {
    /**
     * 
     * @type {BudgetType}
     * @memberof GetCampaignShopperSegmentForecastRequestContent
     */
    budgetType?: BudgetType;
    /**
     * 
     * @type {Array<AdGroup>}
     * @memberof GetCampaignShopperSegmentForecastRequestContent
     */
    adGroups?: Array<AdGroup>;
    /**
     * The YYYY-MM-DD end date for the campaign. Must be greater than the value for `startDate`. If not specified, the campaign has no end date and runs continuously.
     * @type {string}
     * @memberof GetCampaignShopperSegmentForecastRequestContent
     */
    endDate?: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof GetCampaignShopperSegmentForecastRequestContent
     */
    campaignId?: string;
    /**
     * The YYYY-MM-DD start date for the campaign. If this field is not set to a value, the current date is used.
     * @type {string}
     * @memberof GetCampaignShopperSegmentForecastRequestContent
     */
    startDate?: string;
    /**
     * The budget amount associated with the campaign.
     * @type {number}
     * @memberof GetCampaignShopperSegmentForecastRequestContent
     */
    budget?: number;
}
/**
 * Response structure for shopper segment bidding campaign performance forecasts.
 * @export
 * @interface GetCampaignShopperSegmentForecastResponseContent
 */
export interface GetCampaignShopperSegmentForecastResponseContent {
    /**
     * An array of forecasts for each shopper segment. Currently only `shopperSegmentNewToBrandPurchase` segment is provided.
     * @type {Array<ResponseOutput>}
     * @memberof GetCampaignShopperSegmentForecastResponseContent
     */
    output?: Array<ResponseOutput>;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRuleResponse
 */
export interface GetSBBudgetRuleResponse {
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof GetSBBudgetRuleResponse
     */
    budgetRule?: SBBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRulesForAdvertiserResponse
 */
export interface GetSBBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SBBudgetRule>}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SBBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRuleResponse
 */
export interface GetSDBudgetRuleResponse {
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof GetSDBudgetRuleResponse
     */
    budgetRule?: SDBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRulesForAdvertiserResponse
 */
export interface GetSDBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SDBudgetRule>}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SDBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRuleResponse
 */
export interface GetSPBudgetRuleResponse {
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof GetSPBudgetRuleResponse
     */
    budgetRule?: SPBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRulesForAdvertiserResponse
 */
export interface GetSPBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SPBudgetRule>}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SPBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * Request structure of headline suggestion API.
 * @export
 * @interface HeadlineSuggestionRequest
 */
export interface HeadlineSuggestionRequest {
    /**
     * An array of ASINs associated with the creative. Note do not pass an empty array, this results in an error. 
     * @type {Array<string>}
     * @memberof HeadlineSuggestionRequest
     */
    asins?: Array<string>;
    /**
     * Maximum number of suggestions that API should return. Response will [0, maxNumSuggestions] suggestions (suggestions are not guaranteed).
     * @type {number}
     * @memberof HeadlineSuggestionRequest
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {string}
     * @memberof HeadlineSuggestionRequest
     */
    adFormat?: HeadlineSuggestionRequestAdFormatEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum HeadlineSuggestionRequestAdFormatEnum {
    Brands = 'SPONSORED_BRANDS',
    BrandsSpotlight = 'SPONSORED_BRANDS_SPOTLIGHT'
}

/**
 * Response structure of headline suggestion API.
 * @export
 * @interface HeadlineSuggestionResponse
 */
export interface HeadlineSuggestionResponse {
    /**
     * An identifier for request made which is generated by server.
     * @type {string}
     * @memberof HeadlineSuggestionResponse
     */
    requestId?: string;
    /**
     * Suggestions are sorted, i.e., more suitable headline has lesser array index value
     * @type {Array<SuggestedHeadline>}
     * @memberof HeadlineSuggestionResponse
     */
    suggestions?: Array<SuggestedHeadline>;
}
/**
 * Image component which needs to be pre moderated. A publicly accessible imageUrl must be sent.
 * @export
 * @interface ImageComponent
 */
export interface ImageComponent {
    /**
     * Type of the image component.
     * @type {string}
     * @memberof ImageComponent
     */
    componentType: ImageComponentComponentTypeEnum;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof ImageComponent
     */
    id: string;
    /**
     * Url of the image to be pre moderated. The url must be publicly accessible.
     * @type {string}
     * @memberof ImageComponent
     */
    url: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ImageComponentComponentTypeEnum {
    BrandLogo = 'BRAND_LOGO',
    CustomImage = 'CUSTOM_IMAGE',
    OtherImage = 'OTHER_IMAGE'
}

/**
 * Pre moderation result for a image component
 * @export
 * @interface ImageComponentResponse
 */
export interface ImageComponentResponse {
    /**
     * The pre moderation status of the component.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    preModerationStatus?: ImageComponentResponsePreModerationStatusEnum;
    /**
     * Type of the image component.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    componentType?: ImageComponentResponseComponentTypeEnum;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<ImagePolicyViolation>}
     * @memberof ImageComponentResponse
     */
    policyViolations?: Array<ImagePolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    id?: string;
    /**
     * Publicly accessible url of the image that got pre moderated.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    url?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ImageComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum ImageComponentResponseComponentTypeEnum {
    BrandLogo = 'BRAND_LOGO',
    CustomImage = 'CUSTOM_IMAGE',
    OtherImage = 'OTHER_IMAGE'
}

/**
 * Structure of a image evidence
 * @export
 * @interface ImageEvidence
 */
export interface ImageEvidence {
    /**
     * The top left Y-coordinate of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    topLeftY?: number;
    /**
     * The top left X-coordinate of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    topLeftX?: number;
    /**
     * The width of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    width?: number;
    /**
     * The height of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    height?: number;
}
/**
 * Structure of policy violation for a image component
 * @export
 * @interface ImagePolicyViolation
 */
export interface ImagePolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    policyDescription?: string;
    /**
     * List of evidences for the policy violations detected on the image component.
     * @type {Array<ImageEvidence>}
     * @memberof ImagePolicyViolation
     */
    imageEvidences?: Array<ImageEvidence>;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    type?: ImagePolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    policyLinkUrl?: string;
    /**
     * Policy violation on an image can be detected on the ocr detected text on the image as well. This list of text evidences will have the policy violations detected on the text on top of the image.
     * @type {Array<TextEvidence>}
     * @memberof ImagePolicyViolation
     */
    textEvidences?: Array<TextEvidence>;
}

/**
    * @export
    * @enum {string}
    */
export enum ImagePolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum InternalErrorErrorCode {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @interface InternalServerExceptionResponseContent
 */
export interface InternalServerExceptionResponseContent {
    /**
     * 
     * @type {InternalErrorErrorCode}
     * @memberof InternalServerExceptionResponseContent
     */
    code: InternalErrorErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof InternalServerExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum InvalidArgumentErrorCode {
    InvalidArgument = 'INVALID_ARGUMENT'
}

/**
 * Keyword associated with the campaign.
 * @export
 * @interface Keyword
 */
export interface Keyword {
    /**
     * 
     * @type {MatchType}
     * @memberof Keyword
     */
    matchType?: MatchType;
    /**
     * The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).
     * @type {number}
     * @memberof Keyword
     */
    bid?: number;
    /**
     * The keyword text. Maximum of 10 words.
     * @type {string}
     * @memberof Keyword
     */
    keywordText?: string;
}
/**
 * The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.
 * @export
 * @enum {string}
 */

export enum MatchType {
    Exact = 'exact',
    Phrase = 'phrase',
    Broad = 'broad'
}

/**
 * The Error Response Object.
 * @export
 * @interface ModerationError
 */
export interface ModerationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof ModerationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof ModerationError
     */
    details?: string;
}
/**
 * Negative keyword associated with the campaign.
 * @export
 * @interface NegativeKeyword
 */
export interface NegativeKeyword {
    /**
     * 
     * @type {NegativeMatchType}
     * @memberof NegativeKeyword
     */
    matchType?: NegativeMatchType;
    /**
     * The keyword text. Maximum of 10 words.
     * @type {string}
     * @memberof NegativeKeyword
     */
    keywordText?: string;
}
/**
 * The negative match type. For more information, see [negative keyword match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.
 * @export
 * @enum {string}
 */

export enum NegativeMatchType {
    NegativeExact = 'negativeExact',
    NegativePhrase = 'negativePhrase'
}

/**
 * Negative expression settings for the target.
 * @export
 * @interface NegativeProductExpression
 */
export interface NegativeProductExpression {
    /**
     * 
     * @type {NegativeProductExpressionType}
     * @memberof NegativeProductExpression
     */
    type?: NegativeProductExpressionType;
    /**
     * The expression value associated with targets.
     * @type {string}
     * @memberof NegativeProductExpression
     */
    value?: string;
}
/**
 * The negative expression type associated with the target.
 * @export
 * @enum {string}
 */

export enum NegativeProductExpressionType {
    AsinBrandSameAs = 'asinBrandSameAs',
    AsinSameAs = 'asinSameAs'
}

/**
 * The negative target associated with the ad group.
 * @export
 * @interface NegativeProductTarget
 */
export interface NegativeProductTarget {
    /**
     * 
     * @type {Array<NegativeProductExpression>}
     * @memberof NegativeProductTarget
     */
    expressions?: Array<NegativeProductExpression>;
}
/**
 * 
 * @export
 * @interface PerformanceMeasureCondition
 */
export interface PerformanceMeasureCondition {
    /**
     * 
     * @type {PerformanceMetric}
     * @memberof PerformanceMeasureCondition
     */
    metricName: PerformanceMetric;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof PerformanceMeasureCondition
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof PerformanceMeasureCondition
     */
    threshold: number;
}
/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export enum PerformanceMetric {
    Acos = 'ACOS',
    Ctr = 'CTR',
    Cvr = 'CVR',
    Roas = 'ROAS'
}

/**
 * An object giving the name of the performance metric and its value when the rule was evaluated
 * @export
 * @interface PerformanceMetricValue
 */
export interface PerformanceMetricValue {
    /**
     * Name of the performance metric
     * @type {string}
     * @memberof PerformanceMetricValue
     */
    name?: string;
    /**
     * Value of the performance metric
     * @type {number}
     * @memberof PerformanceMetricValue
     */
    value?: number;
}
/**
 * Components details that needs to be sent for pre moderation.
 * @export
 * @interface PreModerationRequest
 */
export interface PreModerationRequest {
    /**
     * Id of the brand/advertiser.
     * @type {string}
     * @memberof PreModerationRequest
     */
    recordId?: string;
    /**
     * Asin components which needs to be pre moderated.
     * @type {Array<AsinComponent>}
     * @memberof PreModerationRequest
     */
    asinComponents?: Array<AsinComponent>;
    /**
     * Type of Ad program to which this pre moderation components belong to.
     * @type {string}
     * @memberof PreModerationRequest
     */
    adProgram: PreModerationRequestAdProgramEnum;
    /**
     * Specifying locale will translate the premoderation message into that locale\'s associated language.     | Locale | Language (ISO 639) | Country (ISO 3166) |   |-----|-----|-------|   | ar-AE | Arabic (ar) | United Arab Emirates (AE) |   | zh-CN | Chinese (zh) | China (CN) |   | nl-NL | Dutch (nl) | Netherlands (NL) |   | en-AU | English (en) | Australia (AU) |   | en-CA | English (en) | Canada (CA) |   | en-IN | English (en) | India (IN) |   | en-GB | English (en) | United Kingdom (GB) |   | en-US | English (en) | United States (US) |   | fr-CA | French (fr) | Canada (CA) |   | fr-FR | French (fr) | France (FR) |   | de-DE | German (de) | Germany (DE) |   | it-IT | Italian (it) | Italy (IT) |   | ja-JP | Japanese (ja) | Japan (JP) |   | ko-KR | Korean (ko) | South Korea (KR) |   | pt-BR | Portuguese (pt) | Brazil (BR) |   | es-ES | Spanish (es) | Spain (ES) |   | es-US | Spanish (es) | United States (US) |   | es-MX | Spanish (es) | Mexico (MX) |   | tr-TR | Turkish (tr) | Turkey (TR) |   
     * @type {string}
     * @memberof PreModerationRequest
     */
    locale: PreModerationRequestLocaleEnum;
    /**
     * Image components which needs to be pre moderated.
     * @type {Array<ImageComponent>}
     * @memberof PreModerationRequest
     */
    imageComponents?: Array<ImageComponent>;
    /**
     * Date components which needs to be pre moderated.
     * @type {Array<DateComponent>}
     * @memberof PreModerationRequest
     */
    dateComponents?: Array<DateComponent>;
    /**
     * Text components which needs to be pre moderated.
     * @type {Array<TextComponent>}
     * @memberof PreModerationRequest
     */
    textComponents?: Array<TextComponent>;
    /**
     * Video components which needs to be pre moderated.
     * @type {Array<VideoComponent>}
     * @memberof PreModerationRequest
     */
    videoComponents?: Array<VideoComponent>;
}

/**
    * @export
    * @enum {string}
    */
export enum PreModerationRequestAdProgramEnum {
    SponsoredBrands = 'SPONSORED_BRANDS',
    SponsoredBrandsSpotlight = 'SPONSORED_BRANDS_SPOTLIGHT',
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    Stores = 'STORES',
    SponsoredDisplay = 'SPONSORED_DISPLAY',
    Dsp = 'DSP'
}
/**
    * @export
    * @enum {string}
    */
export enum PreModerationRequestLocaleEnum {
    ArAe = 'ar-AE',
    ZhCn = 'zh-CN',
    NlNl = 'nl-NL',
    EnAu = 'en-AU',
    EnCa = 'en-CA',
    EnIn = 'en-IN',
    EnGb = 'en-GB',
    EnUs = 'en-US',
    FrCa = 'fr-CA',
    FrFr = 'fr-FR',
    DeDe = 'de-DE',
    ItIt = 'it-IT',
    JaJp = 'ja-JP',
    KoKr = 'ko-KR',
    PtBr = 'pt-BR',
    EsEs = 'es-ES',
    EsUs = 'es-US',
    EsMx = 'es-MX',
    TrTr = 'tr-TR'
}

/**
 * Information regarding the policy violations if present for the components, sent for pre moderation.
 * @export
 * @interface PreModerationResponse
 */
export interface PreModerationResponse {
    /**
     * Id of the brand/advertiser.
     * @type {string}
     * @memberof PreModerationResponse
     */
    recordId?: string;
    /**
     * Pre moderation result of the asin components. It will have information regarding the policy violations present if any.
     * @type {Array<AsinComponentResponse>}
     * @memberof PreModerationResponse
     */
    asinComponents?: Array<AsinComponentResponse>;
    /**
     * Unique Id for the moderation Request.
     * @type {string}
     * @memberof PreModerationResponse
     */
    preModerationId?: string;
    /**
     * Type of Ad program to which the pre moderation components belong to.
     * @type {string}
     * @memberof PreModerationResponse
     */
    adProgram?: PreModerationResponseAdProgramEnum;
    /**
     * Locale value that was passed in request.
     * @type {string}
     * @memberof PreModerationResponse
     */
    locale?: PreModerationResponseLocaleEnum;
    /**
     * Pre moderation result of the image components. It will have information regarding the policy violations present if any.
     * @type {Array<ImageComponentResponse>}
     * @memberof PreModerationResponse
     */
    imageComponents?: Array<ImageComponentResponse>;
    /**
     * Pre moderation result of the date components. It will have information regarding the policy violations present if any.
     * @type {Array<DateComponentResponse>}
     * @memberof PreModerationResponse
     */
    dateComponents?: Array<DateComponentResponse>;
    /**
     * Pre moderation result of the text components. It will have information regarding the policy violations present if any.
     * @type {Array<TextComponentResponse>}
     * @memberof PreModerationResponse
     */
    textComponents?: Array<TextComponentResponse>;
    /**
     * Pre moderation result of the video components. It will have information regarding the policy violations present if any.
     * @type {Array<VideoComponentResponse>}
     * @memberof PreModerationResponse
     */
    videoComponents?: Array<VideoComponentResponse>;
}

/**
    * @export
    * @enum {string}
    */
export enum PreModerationResponseAdProgramEnum {
    SponsoredBrands = 'SPONSORED_BRANDS',
    SponsoredBrandsSpotlight = 'SPONSORED_BRANDS_SPOTLIGHT',
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    Stores = 'STORES',
    SponsoredDisplay = 'SPONSORED_DISPLAY',
    Dsp = 'DSP'
}
/**
    * @export
    * @enum {string}
    */
export enum PreModerationResponseLocaleEnum {
    ArAe = 'ar-AE',
    ZhCn = 'zh-CN',
    NlNl = 'nl-NL',
    EnAu = 'en-AU',
    EnCa = 'en-CA',
    EnIn = 'en-IN',
    EnGb = 'en-GB',
    EnUs = 'en-US',
    FrCa = 'fr-CA',
    FrFr = 'fr-FR',
    DeDe = 'de-DE',
    ItIt = 'it-IT',
    JaJp = 'ja-JP',
    KoKr = 'ko-KR',
    PtBr = 'pt-BR',
    EsEs = 'es-ES',
    EsUs = 'es-US',
    EsMx = 'es-MX',
    TrTr = 'tr-TR'
}

/**
 * Expression settings for the target.
 * @export
 * @interface ProductExpression
 */
export interface ProductExpression {
    /**
     * 
     * @type {ProductExpressionType}
     * @memberof ProductExpression
     */
    type?: ProductExpressionType;
    /**
     * The expression value associated with targets.
     * @type {string}
     * @memberof ProductExpression
     */
    value?: string;
}
/**
 * The expression type associated with the target.
 * @export
 * @enum {string}
 */

export enum ProductExpressionType {
    AsinCategorySameAs = 'asinCategorySameAs',
    AsinBrandSameAs = 'asinBrandSameAs',
    AsinPriceLessThan = 'asinPriceLessThan',
    AsinPriceBetween = 'asinPriceBetween',
    AsinPriceGreaterThan = 'asinPriceGreaterThan',
    AsinReviewRatingLessThan = 'asinReviewRatingLessThan',
    AsinReviewRatingBetween = 'asinReviewRatingBetween',
    AsinReviewRatingGreaterThan = 'asinReviewRatingGreaterThan',
    AsinSameAs = 'asinSameAs'
}

/**
 * The target associated with the ad group. `expressions` must contain at least one of `ASIN_CATEGORY_SAME_AS`, `ASIN_BRAND_SAME_AS`, or `ASIN_SAME_AS`. Only `ASIN_CATEGORY_SAME_AS` expression may be grouped with other options.
 * @export
 * @interface ProductTarget
 */
export interface ProductTarget {
    /**
     * The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).
     * @type {number}
     * @memberof ProductTarget
     */
    bid?: number;
    /**
     * 
     * @type {Array<ProductExpression>}
     * @memberof ProductTarget
     */
    expressions?: Array<ProductExpression>;
}
/**
 * 
 * @export
 * @interface Recurrence
 */
export interface Recurrence {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof Recurrence
     */
    type?: RecurrenceType;
    /**
     * Object representing days of the week for weekly type rule. It is not required for daily recurrence type
     * @type {Array<DayOfWeek>}
     * @memberof Recurrence
     */
    daysOfWeek?: Array<DayOfWeek>;
}
/**
 * depicts the type of recurrence
 * @export
 * @enum {string}
 */

export enum RecurrenceType {
    Daily = 'DAILY',
    Weekly = 'WEEKLY'
}

/**
 * The campaign performance forecasts for the specified shopper segment.
 * @export
 * @interface ResponseOutput
 */
export interface ResponseOutput {
    /**
     * 
     * @type {ShopperSegmentType}
     * @memberof ResponseOutput
     */
    shopperSegment?: ShopperSegmentType;
    /**
     * 
     * @type {Forecasts}
     * @memberof ResponseOutput
     */
    forecasts?: Forecasts;
}
/**
 * 
 * @export
 * @interface RuleDuration
 */
export interface RuleDuration {
    /**
     * 
     * @type {EventTypeRuleDuration}
     * @memberof RuleDuration
     */
    eventTypeRuleDuration?: EventTypeRuleDuration;
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof RuleDuration
     */
    dateRangeTypeRuleDuration?: DateRangeTypeRuleDuration;
}
/**
 * 
 * @export
 * @interface SBBudgetHistory
 */
export interface SBBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SBRuleBasedBudget>}
     * @memberof SBBudgetHistory
     */
    history?: Array<SBRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SBBudgetRule
 */
export interface SBBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRuleDetails
 */
export interface SBBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SBBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SBBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SBRuleType}
     * @memberof SBBudgetRuleDetails
     */
    ruleType?: SBRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SBBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SBBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SBBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * The Error Response Object.
 * @export
 * @interface SBBudgetRulesRecommendationError
 */
export interface SBBudgetRulesRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRulesRecommendationEvent
 */
export interface SBBudgetRulesRecommendationEvent {
    /**
     * The event identifier.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    eventId?: string;
    /**
     * The end date in YYYYMMDD format.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    endDate?: string;
    /**
     * The suggested budget increase expressed as a percent.
     * @type {number}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    suggestedBudgetIncreasePercent?: number;
    /**
     * The event name.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    eventName?: string;
    /**
     * The start date in YYYYMMDD format.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRulesRecommendationEventRequest
 */
export interface SBBudgetRulesRecommendationEventRequest {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEventRequest
     */
    campaignId: string;
}
/**
 * Special events with date range and suggested budget increase.
 * @export
 * @interface SBBudgetRulesRecommendationEventResponse
 */
export interface SBBudgetRulesRecommendationEventResponse {
    /**
     * A list of recommended special events with date range and suggested budget increase.
     * @type {Array<SBBudgetRulesRecommendationEvent>}
     * @memberof SBBudgetRulesRecommendationEventResponse
     */
    recommendedBudgetRuleEvents?: Array<SBBudgetRulesRecommendationEvent>;
}
/**
 * 
 * @export
 * @interface SBCampaignBudgetRule
 */
export interface SBCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBCampaignBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBGetAssociatedCampaignsResponse
 */
export interface SBGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * The Error Response Object.
 * @export
 * @interface SBKeywordRecommendationError
 */
export interface SBKeywordRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBKeywordRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBKeywordRecommendationError
     */
    details?: string;
}
/**
 * The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.
 * @export
 * @enum {string}
 */

export enum SBKeywordRecommendationMatchType {
    Broad = 'broad',
    Exact = 'exact',
    Phrase = 'phrase'
}

/**
 * 
 * @export
 * @interface SBKeywordRecommendationRequestAsin
 */
export interface SBKeywordRecommendationRequestAsin {
    /**
     * 
     * @type {Array<string>}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    asins: Array<string>;
    /**
     * Maximum number of suggestions to return. Max value is 1000. If not provided, default to 100.
     * @type {number}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    creativeAsins?: Array<string>;
    /**
     * Optional locale to request keyword suggestion translations. For example, to request Simplified Chinese translations in US, provide locale “zh_CN”. Response will include both keyword suggestions and their translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale: “en_GB”) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    locale?: string;
}
/**
 * 
 * @export
 * @interface SBKeywordRecommendationRequestUrl
 */
export interface SBKeywordRecommendationRequestUrl {
    /**
     * Maximum number of suggestions to return. Max value is 1000. If not provided, default to 100.
     * @type {number}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    creativeAsins?: Array<string>;
    /**
     * Optional locale to request keyword suggestion translations. For example, to request Simplified Chinese translations in US, provide locale “zh_CN”. Response will include both keyword suggestions and their translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale: “en_GB”) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    locale?: string;
    /**
     * The URL of the Stores page, or, Vendors may also specify the URL of a custom landing page.
     * @type {string}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    url: string;
}
/**
 * A recommendation identifier that describes the suggested action for the recommendation. |Identifier|Description| |----------|-----------| |addKeyword|The suggested action is to add the keyword.| <br/>
 * @export
 * @enum {string}
 */

export enum SBKeywordRecommendationType {
    AddKeyword = 'addKeyword'
}

/**
 * 
 * @export
 * @interface SBKeywordSuggestion
 */
export interface SBKeywordSuggestion {
    /**
     * 
     * @type {SBKeywordRecommendationMatchType}
     * @memberof SBKeywordSuggestion
     */
    matchType?: SBKeywordRecommendationMatchType;
    /**
     * Localized keyword value if locale was specified.
     * @type {string}
     * @memberof SBKeywordSuggestion
     */
    translation?: string;
    /**
     * Unique ID for each recommendation.
     * @type {string}
     * @memberof SBKeywordSuggestion
     */
    recommendationId?: string;
    /**
     * 
     * @type {SBKeywordRecommendationType}
     * @memberof SBKeywordSuggestion
     */
    type?: SBKeywordRecommendationType;
    /**
     * Recommended keyword value.
     * @type {string}
     * @memberof SBKeywordSuggestion
     */
    value?: string;
}
/**
 * 
 * @export
 * @interface SBListAssociatedBudgetRulesResponse
 */
export interface SBListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SBCampaignBudgetRule>}
     * @memberof SBListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SBCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SBRuleBasedBudget
 */
export interface SBRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof SBRuleBasedBudget
     */
    appliedRule?: SBBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SBRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * 
 * @export
 * @interface SBRuleDuration
 */
export interface SBRuleDuration {
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof SBRuleDuration
     */
    dateRangeTypeRuleDuration: DateRangeTypeRuleDuration;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date.
 * @export
 * @enum {string}
 */

export enum SBRuleType {
    Schedule = 'SCHEDULE'
}

/**
 * 
 * @export
 * @interface SDBudgetHistory
 */
export interface SDBudgetHistory {
    /**
     * 
     * @type {Array<SDRuleBasedBudget>}
     * @memberof SDBudgetHistory
     */
    history?: Array<SDRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SDBudgetRule
 */
export interface SDBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SDBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SDBudgetRuleDetails}
     * @memberof SDBudgetRule
     */
    ruleDetails?: SDBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SD campaign
 * @export
 * @interface SDBudgetRuleDetails
 */
export interface SDBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SDBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SDBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SDRuleType}
     * @memberof SDBudgetRuleDetails
     */
    ruleType?: SDRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SDBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SDBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SDBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SDGetAssociatedCampaignsResponse
 */
export interface SDGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SDListAssociatedBudgetRulesResponse
 */
export interface SDListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SDBudgetRule>}
     * @memberof SDListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SDBudgetRule>;
}
/**
 * 
 * @export
 * @interface SDRuleBasedBudget
 */
export interface SDRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof SDRuleBasedBudget
     */
    appliedRule?: SDBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SDRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SDRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SPBudgetHistory
 */
export interface SPBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SPRuleBasedBudget>}
     * @memberof SPBudgetHistory
     */
    history?: Array<SPRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SPBudgetRule
 */
export interface SPBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SP campaign
 * @export
 * @interface SPBudgetRuleDetails
 */
export interface SPBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SPBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SPBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SPRuleType}
     * @memberof SPBudgetRuleDetails
     */
    ruleType?: SPRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SPBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SPBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SPBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SPCampaignBudgetRule
 */
export interface SPCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPCampaignBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SPGetAssociatedCampaignsResponse
 */
export interface SPGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SPListAssociatedBudgetRulesResponse
 */
export interface SPListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SPCampaignBudgetRule>}
     * @memberof SPListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SPCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SPRuleBasedBudget
 */
export interface SPRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof SPRuleBasedBudget
     */
    appliedRule?: SPBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SPRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SPRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * The shopper segment type.
 * @export
 * @enum {string}
 */

export enum ShopperSegmentType {
    ShopperSegmentNewToBrandPurchase = 'shopperSegmentNewToBrandPurchase'
}

/**
 * The budget rule state.
 * @export
 * @enum {string}
 */

export enum State {
    Active = 'ACTIVE',
    Paused = 'PAUSED'
}

/**
 * Suggested Headline in response object.
 * @export
 * @interface SuggestedHeadline
 */
export interface SuggestedHeadline {
    /**
     * Unique Id of suggested headline.
     * @type {string}
     * @memberof SuggestedHeadline
     */
    headlineId?: string;
    /**
     * String that contains suggested headline.
     * @type {string}
     * @memberof SuggestedHeadline
     */
    headline?: string;
}
/**
 * Text component which needs to be pre moderated
 * @export
 * @interface TextComponent
 */
export interface TextComponent {
    /**
     * Type of text component.
     * @type {string}
     * @memberof TextComponent
     */
    componentType: TextComponentComponentTypeEnum;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof TextComponent
     */
    id: string;
    /**
     * Text which needs to be moderated.
     * @type {string}
     * @memberof TextComponent
     */
    text: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TextComponentComponentTypeEnum {
    Headline = 'HEADLINE',
    BrandName = 'BRAND_NAME',
    OtherText = 'OTHER_TEXT'
}

/**
 * Pre moderation result for a text component
 * @export
 * @interface TextComponentResponse
 */
export interface TextComponentResponse {
    /**
     * The pre moderation status of the component.
     * @type {string}
     * @memberof TextComponentResponse
     */
    preModerationStatus?: TextComponentResponsePreModerationStatusEnum;
    /**
     * Type of the text component.
     * @type {string}
     * @memberof TextComponentResponse
     */
    componentType?: TextComponentResponseComponentTypeEnum;
    /**
     * A list of corrected text without any policy violation. You could consider replacing the component with one of the corrected texts
     * @type {Array<string>}
     * @memberof TextComponentResponse
     */
    corrections?: Array<string>;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<TextPolicyViolation>}
     * @memberof TextComponentResponse
     */
    policyViolations?: Array<TextPolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof TextComponentResponse
     */
    id?: string;
    /**
     * Text which got pre moderated.
     * @type {string}
     * @memberof TextComponentResponse
     */
    text?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TextComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum TextComponentResponseComponentTypeEnum {
    Headline = 'HEADLINE',
    BrandName = 'BRAND_NAME',
    OtherText = 'OTHER_TEXT'
}

/**
 * Structure of a text evidence
 * @export
 * @interface TextEvidence
 */
export interface TextEvidence {
    /**
     * The specific text determined to violate the specified policy in reviewedText.
     * @type {string}
     * @memberof TextEvidence
     */
    violatingText?: string;
    /**
     * 
     * @type {TextEvidencePosition}
     * @memberof TextEvidence
     */
    position?: TextEvidencePosition;
}
/**
 * Position in the textComponent where the policy violation is detected.
 * @export
 * @interface TextEvidencePosition
 */
export interface TextEvidencePosition {
    /**
     * Zero-based index into the text in textComponent where the text specified in violatingText starts.
     * @type {number}
     * @memberof TextEvidencePosition
     */
    start?: number;
    /**
     * Zero-based index into the text in textComponent where the text specified in violatingText ends.
     * @type {number}
     * @memberof TextEvidencePosition
     */
    end?: number;
}
/**
 * Structure of policy violation for a text component
 * @export
 * @interface TextPolicyViolation
 */
export interface TextPolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    policyDescription?: string;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    type?: TextPolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    policyLinkUrl?: string;
    /**
     * List of text evidences
     * @type {Array<TextEvidence>}
     * @memberof TextPolicyViolation
     */
    textEvidences?: Array<TextEvidence>;
}

/**
    * @export
    * @enum {string}
    */
export enum TextPolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum ThrottledErrorCode {
    Throttled = 'THROTTLED'
}

/**
 * 
 * @export
 * @interface ThrottlingExceptionResponseContent
 */
export interface ThrottlingExceptionResponseContent {
    /**
     * 
     * @type {ThrottledErrorCode}
     * @memberof ThrottlingExceptionResponseContent
     */
    code: ThrottledErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof ThrottlingExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum UnauthorizedErrorCode {
    Unauthorized = 'UNAUTHORIZED'
}

/**
 * 
 * @export
 * @interface UnauthorizedExceptionResponseContent
 */
export interface UnauthorizedExceptionResponseContent {
    /**
     * 
     * @type {UnauthorizedErrorCode}
     * @memberof UnauthorizedExceptionResponseContent
     */
    code: UnauthorizedErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof UnauthorizedExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface UpdateBudgetRulesResponse
 */
export interface UpdateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof UpdateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface UpdateSBBudgetRulesRequest
 */
export interface UpdateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRule>}
     * @memberof UpdateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRule>;
}
/**
 * Request object for updating budget rule for SD campaign
 * @export
 * @interface UpdateSDBudgetRulesRequest
 */
export interface UpdateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRule>}
     * @memberof UpdateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRule>;
}
/**
 * Request object for updating budget rule for SP campaign
 * @export
 * @interface UpdateSPBudgetRulesRequest
 */
export interface UpdateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRule>}
     * @memberof UpdateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRule>;
}
/**
 * 
 * @export
 * @interface ValidationExceptionResponseContent
 */
export interface ValidationExceptionResponseContent {
    /**
     * 
     * @type {InvalidArgumentErrorCode}
     * @memberof ValidationExceptionResponseContent
     */
    code: InvalidArgumentErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof ValidationExceptionResponseContent
     */
    message: string;
}
/**
 * Video component which needs to be pre moderated. A publicly accessible videoUrl must be sent.
 * @export
 * @interface VideoComponent
 */
export interface VideoComponent {
    /**
     * Type of the video component.
     * @type {string}
     * @memberof VideoComponent
     */
    componentType: VideoComponentComponentTypeEnum;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof VideoComponent
     */
    id: string;
    /**
     * Url of the video to be pre moderated. The url must be publicly accessible.
     * @type {string}
     * @memberof VideoComponent
     */
    url: string;
}

/**
    * @export
    * @enum {string}
    */
export enum VideoComponentComponentTypeEnum {
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    OtherVideo = 'OTHER_VIDEO'
}

/**
 * Pre moderation result for a video component
 * @export
 * @interface VideoComponentResponse
 */
export interface VideoComponentResponse {
    /**
     * The pre moderation status of the component.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    preModerationStatus?: VideoComponentResponsePreModerationStatusEnum;
    /**
     * Type of the video component.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    componentType?: VideoComponentResponseComponentTypeEnum;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<VideoPolicyViolation>}
     * @memberof VideoComponentResponse
     */
    policyViolations?: Array<VideoPolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    id?: string;
    /**
     * Publicly accessible url of the video that got pre moderated.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    url?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum VideoComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum VideoComponentResponseComponentTypeEnum {
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    OtherVideo = 'OTHER_VIDEO'
}

/**
 * Structure of a video evidence
 * @export
 * @interface VideoEvidence
 */
export interface VideoEvidence {
    /**
     * The start position (in seconds) of the content that violates the specified policy within the video.
     * @type {number}
     * @memberof VideoEvidence
     */
    start?: number;
    /**
     * The end position (in seconds) of the content that violates the specified policy within the video.
     * @type {number}
     * @memberof VideoEvidence
     */
    end?: number;
}
/**
 * Structure of policy violation for a video component
 * @export
 * @interface VideoPolicyViolation
 */
export interface VideoPolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    policyDescription?: string;
    /**
     * List of evidences for the policy violations detected on the video component.
     * @type {Array<VideoEvidence>}
     * @memberof VideoPolicyViolation
     */
    videoEvidences?: Array<VideoEvidence>;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    type?: VideoPolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    policyLinkUrl?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum VideoPolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}


/**
 * BudgetRulesApi - axios parameter creator
 * @export
 */
export const BudgetRulesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'campaignId', campaignId)
            // verify required parameter 'createAssociatedBudgetRulesRequest' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'createAssociatedBudgetRulesRequest', createAssociatedBudgetRulesRequest)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createAssociatedBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSBBudgetRulesRequest} createSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSBBudgetRulesRequest: CreateSBBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSBBudgetRulesRequest' is not null or undefined
            assertParamExists('createBudgetRulesForSBCampaigns', 'createSBBudgetRulesRequest', createSBBudgetRulesRequest)
            const localVarPath = `/sb/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSBBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'campaignId', campaignId)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules/{budgetRuleId}`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)))
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSBCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sb/budgetRules/{budgetRuleId}`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSBBudgetRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'budgetRuleId', budgetRuleId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'pageSize', pageSize)
            const localVarPath = `/sb/budgetRules/{budgetRuleId}/campaigns`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'campaignId', campaignId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'pageSize', pageSize)
            // verify required parameter 'startDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'startDate', startDate)
            // verify required parameter 'endDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'endDate', endDate)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules/budgetHistory`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (startDate !== undefined) {
                localVarQueryParameter['startDate'] = startDate;
            }

            if (endDate !== undefined) {
                localVarQueryParameter['endDate'] = endDate;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSBBudgetRulesForAdvertiser: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getSBBudgetRulesForAdvertiser', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getSBBudgetRulesForAdvertiser', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getSBBudgetRulesForAdvertiser', 'pageSize', pageSize)
            const localVarPath = `/sb/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSBCampaigns', 'campaignId', campaignId)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Update one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSBBudgetRulesRequest} updateSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSBBudgetRulesRequest' is not null or undefined
            assertParamExists('updateBudgetRulesForSBCampaigns', 'updateSBBudgetRulesRequest', updateSBBudgetRulesRequest)
            const localVarPath = `/sb/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSBBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesApi - functional programming interface
 * @export
 */
export const BudgetRulesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesApiAxiosParamCreator(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSBBudgetRulesRequest} createSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSBBudgetRulesRequest: CreateSBBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSBBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSBBudgetRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBGetAssociatedCampaignsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBBudgetHistory>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSBBudgetRulesForAdvertiserResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBListAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Update one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSBBudgetRulesRequest} updateSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSBBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesApi - factory interface
 * @export
 */
export const BudgetRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesApiFp(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): AxiosPromise<CreateAssociatedBudgetRulesResponse> {
            return localVarFp.createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSBBudgetRulesRequest} createSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSBBudgetRulesRequest: CreateSBBudgetRulesRequest, options?: any): AxiosPromise<CreateBudgetRulesResponse> {
            return localVarFp.createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSBBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): AxiosPromise<object> {
            return localVarFp.disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): AxiosPromise<GetSBBudgetRuleResponse> {
            return localVarFp.getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<SBGetAssociatedCampaignsResponse> {
            return localVarFp.getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): AxiosPromise<SBBudgetHistory> {
            return localVarFp.getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<GetSBBudgetRulesForAdvertiserResponse> {
            return localVarFp.getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): AxiosPromise<SBListAssociatedBudgetRulesResponse> {
            return localVarFp.listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Update one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSBBudgetRulesRequest} updateSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest, options?: any): AxiosPromise<UpdateBudgetRulesResponse> {
            return localVarFp.updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSBBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createAssociatedBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly campaignId: number

    /**
     * 
     * @type {CreateAssociatedBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest
}

/**
 * Request parameters for createBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSBBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateBudgetRulesForSBCampaigns
     */
    readonly createSBBudgetRulesRequest: CreateSBBudgetRulesRequest
}

/**
 * Request parameters for disassociateAssociatedBudgetRuleForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest
 */
export interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly campaignId: number

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getBudgetRuleByRuleIdForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest
 */
export interface BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getCampaignsAssociatedWithSBBudgetRule operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest
 */
export interface BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly budgetRuleId: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getRuleBasedBudgetHistoryForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest
 */
export interface BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly campaignId: number

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly pageSize: number

    /**
     * The start date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly startDate: string

    /**
     * The end date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly endDate: string

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getSBBudgetRulesForAdvertiser operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest
 */
export interface BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly nextToken?: string
}

/**
 * Request parameters for listAssociatedBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSBCampaigns
     */
    readonly campaignId: number
}

/**
 * Request parameters for updateBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSBBudgetRulesRequest}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSBCampaigns
     */
    readonly updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest
}

/**
 * BudgetRulesApi - object-oriented interface
 * @export
 * @class BudgetRulesApi
 * @extends {BaseAPI}
 */
export class BudgetRulesApi extends BaseAPI {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createAssociatedBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createAssociatedBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.createAssociatedBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSBBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public disassociateAssociatedBudgetRuleForSBCampaigns(requestParameters: BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).disassociateAssociatedBudgetRuleForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getBudgetRuleByRuleIdForSBCampaigns(requestParameters: BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getBudgetRuleByRuleIdForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets all the campaigns associated with a budget rule
     * @param {BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getCampaignsAssociatedWithSBBudgetRule(requestParameters: BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getCampaignsAssociatedWithSBBudgetRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets the budget history for a campaign specified by identifier.
     * @param {BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getRuleBasedBudgetHistoryForSBCampaigns(requestParameters: BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getRuleBasedBudgetHistoryForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.pageSize, requestParameters.startDate, requestParameters.endDate, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Get all budget rules created by an advertiser
     * @param {BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getSBBudgetRulesForAdvertiser(requestParameters: BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getSBBudgetRulesForAdvertiser(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public listAssociatedBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).listAssociatedBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Update one or more budget rules.
     * @param {BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public updateBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).updateBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSBBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesRecommendationApi - axios parameter creator
 * @export
 */
export const BudgetRulesRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBGetBudgetRulesRecommendation: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBGetBudgetRulesRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBGetBudgetRulesRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/campaigns/budgetRules/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbbudgetrulesrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(uNKNOWNBASETYPE, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesRecommendationApi - functional programming interface
 * @export
 */
export const BudgetRulesRecommendationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesRecommendationApiAxiosParamCreator(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBBudgetRulesRecommendationEventResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesRecommendationApi - factory interface
 * @export
 */
export const BudgetRulesRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesRecommendationApiFp(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): AxiosPromise<SBBudgetRulesRecommendationEventResponse> {
            return localVarFp.sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sBGetBudgetRulesRecommendation operation in BudgetRulesRecommendationApi.
 * @export
 * @interface BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest
 */
export interface BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSBGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSBGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {any}
     * @memberof BudgetRulesRecommendationApiSBGetBudgetRulesRecommendation
     */
    readonly uNKNOWNBASETYPE?: any
}

/**
 * BudgetRulesRecommendationApi - object-oriented interface
 * @export
 * @class BudgetRulesRecommendationApi
 * @extends {BaseAPI}
 */
export class BudgetRulesRecommendationApi extends BaseAPI {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesRecommendationApi
     */
    public sBGetBudgetRulesRecommendation(requestParameters: BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest, options?: any) {
        return BudgetRulesRecommendationApiFp(this.configuration).sBGetBudgetRulesRecommendation(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.uNKNOWNBASETYPE, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * DefaultApi - axios parameter creator
 * @export
 */
export const DefaultApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Gets shopper segment bidding campaign performance forecasts.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
         * @param {GetCampaignShopperSegmentForecastRequestContent} [getCampaignShopperSegmentForecastRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignShopperSegmentForecast: async (getCampaignShopperSegmentForecastRequestContent?: GetCampaignShopperSegmentForecastRequestContent, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/sb/campaign/shopperSegments/forecast`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.SBForecastingAPILambda.SponsoredBrandsCampaignShopperSegmentForecastResource.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getCampaignShopperSegmentForecastRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * DefaultApi - functional programming interface
 * @export
 */
export const DefaultApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = DefaultApiAxiosParamCreator(configuration)
    return {
        /**
         * Gets shopper segment bidding campaign performance forecasts.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
         * @param {GetCampaignShopperSegmentForecastRequestContent} [getCampaignShopperSegmentForecastRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignShopperSegmentForecast(getCampaignShopperSegmentForecastRequestContent?: GetCampaignShopperSegmentForecastRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCampaignShopperSegmentForecastResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignShopperSegmentForecast(getCampaignShopperSegmentForecastRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * DefaultApi - factory interface
 * @export
 */
export const DefaultApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = DefaultApiFp(configuration)
    return {
        /**
         * Gets shopper segment bidding campaign performance forecasts.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
         * @param {GetCampaignShopperSegmentForecastRequestContent} [getCampaignShopperSegmentForecastRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignShopperSegmentForecast(getCampaignShopperSegmentForecastRequestContent?: GetCampaignShopperSegmentForecastRequestContent, options?: any): AxiosPromise<GetCampaignShopperSegmentForecastResponseContent> {
            return localVarFp.getCampaignShopperSegmentForecast(getCampaignShopperSegmentForecastRequestContent, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getCampaignShopperSegmentForecast operation in DefaultApi.
 * @export
 * @interface DefaultApiGetCampaignShopperSegmentForecastRequest
 */
export interface DefaultApiGetCampaignShopperSegmentForecastRequest {
    /**
     * 
     * @type {GetCampaignShopperSegmentForecastRequestContent}
     * @memberof DefaultApiGetCampaignShopperSegmentForecast
     */
    readonly getCampaignShopperSegmentForecastRequestContent?: GetCampaignShopperSegmentForecastRequestContent
}

/**
 * DefaultApi - object-oriented interface
 * @export
 * @class DefaultApi
 * @extends {BaseAPI}
 */
export class DefaultApi extends BaseAPI {
    /**
     * Gets shopper segment bidding campaign performance forecasts.  **Requires one of these permissions**: [\"advertiser_campaign_view\"]
     * @param {DefaultApiGetCampaignShopperSegmentForecastRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof DefaultApi
     */
    public getCampaignShopperSegmentForecast(requestParameters: DefaultApiGetCampaignShopperSegmentForecastRequest = {}, options?: any) {
        return DefaultApiFp(this.configuration).getCampaignShopperSegmentForecast(requestParameters.getCampaignShopperSegmentForecastRequestContent, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * KeywordRecommendationsApi - axios parameter creator
 * @export
 */
export const KeywordRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl} [sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl] **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getKeywordRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getKeywordRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getKeywordRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/recommendations/keyword`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbkeywordrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * KeywordRecommendationsApi - functional programming interface
 * @export
 */
export const KeywordRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = KeywordRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl} [sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl] **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getKeywordRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SBKeywordSuggestion>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getKeywordRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * KeywordRecommendationsApi - factory interface
 * @export
 */
export const KeywordRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = KeywordRecommendationsApiFp(configuration)
    return {
        /**
         * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl} [sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl] **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getKeywordRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl, options?: any): AxiosPromise<Array<SBKeywordSuggestion>> {
            return localVarFp.getKeywordRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getKeywordRecommendations operation in KeywordRecommendationsApi.
 * @export
 * @interface KeywordRecommendationsApiGetKeywordRecommendationsRequest
 */
export interface KeywordRecommendationsApiGetKeywordRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetKeywordRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetKeywordRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
     * @type {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl}
     * @memberof KeywordRecommendationsApiGetKeywordRecommendations
     */
    readonly sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl
}

/**
 * KeywordRecommendationsApi - object-oriented interface
 * @export
 * @class KeywordRecommendationsApi
 * @extends {BaseAPI}
 */
export class KeywordRecommendationsApi extends BaseAPI {
    /**
     * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets keyword recommendations
     * @param {KeywordRecommendationsApiGetKeywordRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordRecommendationsApi
     */
    public getKeywordRecommendations(requestParameters: KeywordRecommendationsApiGetKeywordRecommendationsRequest, options?: any) {
        return KeywordRecommendationsApiFp(this.configuration).getKeywordRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * RecommendationsApi - axios parameter creator
 * @export
 */
export const RecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'headlineSuggestionRequest' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'headlineSuggestionRequest', headlineSuggestionRequest)
            const localVarPath = `/sb/recommendations/creative/headline`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(headlineSuggestionRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * RecommendationsApi - functional programming interface
 * @export
 */
export const RecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = RecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HeadlineSuggestionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * RecommendationsApi - factory interface
 * @export
 */
export const RecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = RecommendationsApiFp(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): AxiosPromise<HeadlineSuggestionResponse> {
            return localVarFp.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getHeadlineRecommendations operation in RecommendationsApi.
 * @export
 * @interface RecommendationsApiGetHeadlineRecommendationsRequest
 */
export interface RecommendationsApiGetHeadlineRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof RecommendationsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof RecommendationsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {HeadlineSuggestionRequest}
     * @memberof RecommendationsApiGetHeadlineRecommendations
     */
    readonly headlineSuggestionRequest: HeadlineSuggestionRequest
}

/**
 * RecommendationsApi - object-oriented interface
 * @export
 * @class RecommendationsApi
 * @extends {BaseAPI}
 */
export class RecommendationsApi extends BaseAPI {
    /**
     * API to receive creative headline suggestions.
     * @param {RecommendationsApiGetHeadlineRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecommendationsApi
     */
    public getHeadlineRecommendations(requestParameters: RecommendationsApiGetHeadlineRecommendationsRequest, options?: any) {
        return RecommendationsApiFp(this.configuration).getHeadlineRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.headlineSuggestionRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * SuggestionsApi - axios parameter creator
 * @export
 */
export const SuggestionsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'headlineSuggestionRequest' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'headlineSuggestionRequest', headlineSuggestionRequest)
            const localVarPath = `/sb/recommendations/creative/headline`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(headlineSuggestionRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * SuggestionsApi - functional programming interface
 * @export
 */
export const SuggestionsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = SuggestionsApiAxiosParamCreator(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HeadlineSuggestionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * SuggestionsApi - factory interface
 * @export
 */
export const SuggestionsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = SuggestionsApiFp(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): AxiosPromise<HeadlineSuggestionResponse> {
            return localVarFp.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getHeadlineRecommendations operation in SuggestionsApi.
 * @export
 * @interface SuggestionsApiGetHeadlineRecommendationsRequest
 */
export interface SuggestionsApiGetHeadlineRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof SuggestionsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof SuggestionsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {HeadlineSuggestionRequest}
     * @memberof SuggestionsApiGetHeadlineRecommendations
     */
    readonly headlineSuggestionRequest: HeadlineSuggestionRequest
}

/**
 * SuggestionsApi - object-oriented interface
 * @export
 * @class SuggestionsApi
 * @extends {BaseAPI}
 */
export class SuggestionsApi extends BaseAPI {
    /**
     * API to receive creative headline suggestions.
     * @param {SuggestionsApiGetHeadlineRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionsApi
     */
    public getHeadlineRecommendations(requestParameters: SuggestionsApiGetHeadlineRecommendationsRequest, options?: any) {
        return SuggestionsApiFp(this.configuration).getHeadlineRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.headlineSuggestionRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


