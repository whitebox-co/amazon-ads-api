/* tslint:disable */
/* eslint-disable */
/**
 * Sponsored Products
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';
import { createRequestFunction } from "../../helpers";

/**
 * Returns information about an AccessDeniedException.
 * @export
 * @interface AccessDeniedException
 */
export interface AccessDeniedException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof AccessDeniedException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof AccessDeniedException
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface AdGroup
 */
export interface AdGroup {
    /**
     * The list of targeting expressions. Maximum of 100 per request.
     * @type {Array<TargetingExpression>}
     * @memberof AdGroup
     */
    targetingExpressions: Array<TargetingExpression>;
    /**
     * The list of ad ASINs in the ad group.
     * @type {Array<string>}
     * @memberof AdGroup
     */
    asins: Array<string>;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof AdGroup
     */
    adGroupId?: string;
}
/**
 * This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORD_FOR_ADGROUP to use this request type.
 * @export
 * @interface AdGroupKeywordTargetRankRecommendationRequest
 */
export interface AdGroupKeywordTargetRankRecommendationRequest {
    /**
     * The identifier of the campaign
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    campaignId: string;
    /**
     * The recommendationType to retrieve recommended keyword targets for an existing ad group.
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    recommendationType: AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum;
    /**
     * The identifier of the ad group
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    adGroupId: string;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    sortDimension?: AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    locale?: AdGroupKeywordTargetRankRecommendationRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum {
    KeywordsForAdgroup = 'KEYWORDS_FOR_ADGROUP'
}
/**
    * @export
    * @enum {string}
    */
export enum AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum AdGroupKeywordTargetRankRecommendationRequestLocaleEnum {
    ArEg = 'ar_EG',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSa = 'en_SA',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrFr = 'fr_FR',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    ZhCn = 'zh_CN'
}

/**
 * 
 * @export
 * @interface AdGroupThemeBasedBidRecommendationRequest
 */
export interface AdGroupThemeBasedBidRecommendationRequest {
    /**
     * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
     * @type {Array<TargetingExpression>}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    targetingExpressions: Array<TargetingExpression>;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    campaignId: string;
    /**
     * The bid recommendation type.
     * @type {string}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    recommendationType: AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    adGroupId: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum {
    BidsForExistingAdGroup = 'BIDS_FOR_EXISTING_AD_GROUP'
}

/**
 * 
 * @export
 * @interface Adjustment
 */
export interface Adjustment {
    /**
     * 
     * @type {PlacementAdjustment}
     * @memberof Adjustment
     */
    placementAdjustment?: PlacementAdjustment;
}
/**
 * 
 * @export
 * @interface AgeRange
 */
export interface AgeRange {
    /**
     * Name of Age Range. This field is OPTIONAL if the Age Range object is being used as an input.
     * @type {string}
     * @memberof AgeRange
     */
    name?: string;
    /**
     * Id of Age Range. This field is REQUIRED if the Age Range object is being used as an input. Use the GetRefinementsForCategory to retrieve Age Range Node IDs.
     * @type {string}
     * @memberof AgeRange
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface AgeRangeLoP
 */
export interface AgeRangeLoP {
    /**
     * Name of Age Range.
     * @type {string}
     * @memberof AgeRangeLoP
     */
    name?: string;
    /**
     * Id of Age Range. Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Age Range Node IDs.
     * @type {string}
     * @memberof AgeRangeLoP
     */
    id?: string;
    /**
     * Translated name of Age Range based off locale sent in request.
     * @type {string}
     * @memberof AgeRangeLoP
     */
    translatedName?: string;
}
/**
 * This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORD_FOR_ASINS to use this request type.
 * @export
 * @interface AsinsKeywordTargetRankRecommendationRequest
 */
export interface AsinsKeywordTargetRankRecommendationRequest {
    /**
     * An array list of Asins
     * @type {Array<string>}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    asins: Array<string>;
    /**
     * The recommendationType to retrieve recommended keyword targets for a list of ASINs.
     * @type {string}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    recommendationType: AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    sortDimension?: AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
     * @type {string}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    locale?: AsinsKeywordTargetRankRecommendationRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum {
    KeywordsForAsins = 'KEYWORDS_FOR_ASINS'
}
/**
    * @export
    * @enum {string}
    */
export enum AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum AsinsKeywordTargetRankRecommendationRequestLocaleEnum {
    ArEg = 'ar_EG',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSa = 'en_SA',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrFr = 'fr_FR',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    ZhCn = 'zh_CN'
}

/**
 * 
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequest
 */
export interface AsinsThemeBasedBidRecommendationRequest {
    /**
     * The list of ad ASINs in the ad group.
     * @type {Array<string>}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    asins: Array<string>;
    /**
     * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
     * @type {Array<TargetingExpression>}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    targetingExpressions: Array<TargetingExpression>;
    /**
     * 
     * @type {AsinsThemeBasedBidRecommendationRequestBidding}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    bidding: AsinsThemeBasedBidRecommendationRequestBidding;
    /**
     * The bid recommendation type.
     * @type {string}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    recommendationType: AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum {
    BidsForNewAdGroup = 'BIDS_FOR_NEW_AD_GROUP'
}

/**
 * Bidding control configuration for the campaign.
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequestBidding
 */
export interface AsinsThemeBasedBidRecommendationRequestBidding {
    /**
     * Placement adjustment configuration for the campaign.
     * @type {Array<PlacementAdjustment>}
     * @memberof AsinsThemeBasedBidRecommendationRequestBidding
     */
    adjustments?: Array<PlacementAdjustment>;
    /**
     * 
     * @type {BiddingStrategy}
     * @memberof AsinsThemeBasedBidRecommendationRequestBidding
     */
    strategy: BiddingStrategy;
}
/**
 * 
 * @export
 * @interface AssociatedBudgetRuleResponse
 */
export interface AssociatedBudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    details?: string;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    ruleId?: string;
}
/**
 * 
 * @export
 * @interface AssociatedCampaign
 */
export interface AssociatedCampaign {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignId: string;
    /**
     * The budget rule evaluation status for this campaign. Read-only.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    ruleStatus: string;
    /**
     * The campaign name.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignName: string;
}
/**
 * Returns information about a BadRequestException.
 * @export
 * @interface BadRequestException
 */
export interface BadRequestException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof BadRequestException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BadRequestException
     */
    details?: string;
}
/**
 * Forecasted impact metrics for next 7 days or during special days.
 * @export
 * @interface Benchmark
 */
export interface Benchmark {
    /**
     * Specifies the processing status of the benchmark. Success - If all fields in values property (impressions, clicks, conversions) have all non-null values. Failed - If all fields in values property have all null values. Partial - If some of the fields (impressions, clicks, or conversions) in values property have null values.
     * @type {string}
     * @memberof Benchmark
     */
    benchmarkStatus?: BenchmarkBenchmarkStatusEnum;
    /**
     * 
     * @type {Values}
     * @memberof Benchmark
     */
    values?: Values;
}

/**
    * @export
    * @enum {string}
    */
export enum BenchmarkBenchmarkStatusEnum {
    Success = 'success',
    Failed = 'failed',
    Partial = 'partial'
}

/**
 * 
 * @export
 * @interface BidRecommendationError
 */
export interface BidRecommendationError {
    /**
     * A machine-readable error code.
     * @type {string}
     * @memberof BidRecommendationError
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BidRecommendationError
     */
    details: string;
}
/**
 * 
 * @export
 * @interface BidRecommendationPerTargetingExpression
 */
export interface BidRecommendationPerTargetingExpression {
    /**
     * 
     * @type {Array<BidValue>}
     * @memberof BidRecommendationPerTargetingExpression
     */
    bidValues: Array<BidValue>;
    /**
     * 
     * @type {TargetingExpression}
     * @memberof BidRecommendationPerTargetingExpression
     */
    targetingExpression: TargetingExpression;
}
/**
 * Suggested bid range
 * @export
 * @interface BidSuggestion
 */
export interface BidSuggestion {
    /**
     * The suggested bid
     * @type {number}
     * @memberof BidSuggestion
     */
    suggested?: number;
    /**
     * The bid range start
     * @type {number}
     * @memberof BidSuggestion
     */
    rangeStart?: number;
    /**
     * The bid recommendation id
     * @type {string}
     * @memberof BidSuggestion
     */
    bidRecId?: string;
    /**
     * The bid range end
     * @type {number}
     * @memberof BidSuggestion
     */
    rangeEnd?: number;
}
/**
 * Bid value of the bid recommendations
 * @export
 * @interface BidValue
 */
export interface BidValue {
    /**
     * The suggested bid.
     * @type {number}
     * @memberof BidValue
     */
    suggestedBid: number;
}
/**
 * Suggested bid range
 * @export
 * @interface BidValues
 */
export interface BidValues {
    /**
     * The suggested bid
     * @type {number}
     * @memberof BidValues
     */
    suggested?: number;
    /**
     * The bid range start
     * @type {number}
     * @memberof BidValues
     */
    rangeStart?: number;
    /**
     * The bid range end
     * @type {number}
     * @memberof BidValues
     */
    rangeEnd?: number;
}
/**
 * The bidding control configuration for the new campaign.
 * @export
 * @interface Bidding
 */
export interface Bidding {
    /**
     * Placement adjustment configuration for the campaign.
     * @type {Array<Adjustment>}
     * @memberof Bidding
     */
    adjustments?: Array<Adjustment>;
    /**
     * The bidding strategy selected for the campaign. Use LEGACY_FOR_SALES to lower your bid in real time when your ad may be less likely to convert to a sale. Use AUTO_FOR_SALES to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use MANUAL to use your exact bid along with any manual adjustments.
     * @type {string}
     * @memberof Bidding
     */
    strategy: BiddingStrategyEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum BiddingStrategyEnum {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL',
    RuleBased = 'RULE_BASED'
}

/**
 * The bidding strategy selected for the campaign. Use `LEGACY_FOR_SALES` to lower your bid in real time when your ad may be less likely to convert to a sale. Use `AUTO_FOR_SALES` to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use `MANUAL` to use your exact bid along with any manual adjustments.
 * @export
 * @enum {string}
 */

export enum BiddingStrategy {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL',
    RuleBased = 'RULE_BASED'
}

/**
 * Contains suggested recommendation for the campaign bidding strategy.
 * @export
 * @interface BiddingStrategyRecommendation
 */
export interface BiddingStrategyRecommendation {
    /**
     * The suggested bidding strategy value for the campaign. | Value | Strategy name | Description | |----------------|---------------|-------------| | `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. | | `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. | | `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. |
     * @type {string}
     * @memberof BiddingStrategyRecommendation
     */
    suggestedBiddingStrategy?: BiddingStrategyRecommendationSuggestedBiddingStrategyEnum;
    /**
     * Type of suggested action.
     * @type {string}
     * @memberof BiddingStrategyRecommendation
     */
    action?: BiddingStrategyRecommendationActionEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum BiddingStrategyRecommendationSuggestedBiddingStrategyEnum {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL'
}
/**
    * @export
    * @enum {string}
    */
export enum BiddingStrategyRecommendationActionEnum {
    Update = 'UPDATE'
}

/**
 * 
 * @export
 * @interface Brand
 */
export interface Brand {
    /**
     * Name of brand. This field is OPTIONAL if the Brand object is being used as an input.
     * @type {string}
     * @memberof Brand
     */
    name?: string;
    /**
     * Id of brand. This field is REQUIRED if the Brand object is being used as an input. Use the GetRefinementsForCategory to retrieve Brand Node IDs.
     * @type {string}
     * @memberof Brand
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface BrandLoP
 */
export interface BrandLoP {
    /**
     * Name of brand.
     * @type {string}
     * @memberof BrandLoP
     */
    name?: string;
    /**
     * Id of brand.
     * @type {string}
     * @memberof BrandLoP
     */
    id?: string;
}
/**
 * The value by which to update the budget of the budget rule.
 * @export
 * @enum {string}
 */

export enum BudgetChangeType {
    Percent = 'PERCENT'
}

/**
 * 
 * @export
 * @interface BudgetIncreaseBy
 */
export interface BudgetIncreaseBy {
    /**
     * 
     * @type {BudgetChangeType}
     * @memberof BudgetIncreaseBy
     */
    type: BudgetChangeType;
    /**
     * The budget value.
     * @type {number}
     * @memberof BudgetIncreaseBy
     */
    value: number;
}
/**
 * Contains suggested recommendation for the campaign budget.
 * @export
 * @interface BudgetRecommendation
 */
export interface BudgetRecommendation {
    /**
     * The suggested budget value for the campaign.
     * @type {number}
     * @memberof BudgetRecommendation
     */
    suggestedBudget?: number;
    /**
     * Type of suggested action.
     * @type {string}
     * @memberof BudgetRecommendation
     */
    action?: BudgetRecommendationActionEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum BudgetRecommendationActionEnum {
    Increase = 'INCREASE',
    Decrease = 'DECREASE'
}

/**
 * 
 * @export
 * @interface BudgetRecommendationError
 */
export interface BudgetRecommendationError {
    /**
     * encrypted campaignId
     * @type {string}
     * @memberof BudgetRecommendationError
     */
    campaignId: string;
    /**
     * Correlate the recommendation to the campaign index in the request. Zero-based
     * @type {number}
     * @memberof BudgetRecommendationError
     */
    index: number;
    /**
     * 
     * @type {SPTORBudgetRecommendationError}
     * @memberof BudgetRecommendationError
     */
    Error: SPTORBudgetRecommendationError;
}
/**
 * 
 * @export
 * @interface BudgetRecommendationNewCampaignsException
 */
export interface BudgetRecommendationNewCampaignsException {
    /**
     * 
     * @type {string}
     * @memberof BudgetRecommendationNewCampaignsException
     */
    message?: string;
}
/**
 * 
 * @export
 * @interface BudgetRecommendationRequest
 */
export interface BudgetRecommendationRequest {
    /**
     * List of campaigns.
     * @type {Array<string>}
     * @memberof BudgetRecommendationRequest
     */
    campaignIds: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetRecommendationResponse
 */
export interface BudgetRecommendationResponse {
    /**
     * List of successful budget recomendation for campagins.
     * @type {Array<BudgetRecommendation>}
     * @memberof BudgetRecommendationResponse
     */
    budgetRecommendationsSuccessResults: Array<BudgetRecommendation>;
    /**
     * List of errors that occured when generating bduget recommendation.
     * @type {Array<BudgetRecommendationError>}
     * @memberof BudgetRecommendationResponse
     */
    budgetRecommendationsErrorResults: Array<BudgetRecommendationError>;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetRuleError
 */
export interface BudgetRuleError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetRuleError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetRuleError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetRuleRecommendation
 */
export interface BudgetRuleRecommendation {
    /**
     * suggested increase percent
     * @type {number}
     * @memberof BudgetRuleRecommendation
     */
    suggestedBudgetIncreasePercent?: number;
    /**
     * rule name for the recomemendation
     * @type {string}
     * @memberof BudgetRuleRecommendation
     */
    ruleName?: string;
    /**
     * rule id for the recomemendation
     * @type {string}
     * @memberof BudgetRuleRecommendation
     */
    ruleId?: string;
}
/**
 * 
 * @export
 * @interface BudgetRuleResponse
 */
export interface BudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    details?: string;
    /**
     * The rule identifier.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    ruleId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BudgetRuleResponse
     */
    associatedCampaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaign
 */
export interface BudgetUsageCampaign {
    /**
     * Budget usage percentage (spend / available budget) for the given budget policy.
     * @type {number}
     * @memberof BudgetUsageCampaign
     */
    budgetUsagePercent?: number;
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsageCampaign
     */
    campaignId?: string;
    /**
     * Last evaluation time for budget usage
     * @type {string}
     * @memberof BudgetUsageCampaign
     */
    usageUpdatedTimestamp?: string;
    /**
     * An index to maintain order of the campaignIds
     * @type {number}
     * @memberof BudgetUsageCampaign
     */
    index?: number;
    /**
     * Budget amount of resource requested
     * @type {number}
     * @memberof BudgetUsageCampaign
     */
    budget?: number;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaignBatchError
 */
export interface BudgetUsageCampaignBatchError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetUsageCampaignBatchError
     */
    code?: string;
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsageCampaignBatchError
     */
    campaignId?: string;
    /**
     * An index to maintain order of the campaignIds
     * @type {number}
     * @memberof BudgetUsageCampaignBatchError
     */
    index?: number;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetUsageCampaignBatchError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaignRequest
 */
export interface BudgetUsageCampaignRequest {
    /**
     * A list of campaign IDs
     * @type {Array<string>}
     * @memberof BudgetUsageCampaignRequest
     */
    campaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaignResponse
 */
export interface BudgetUsageCampaignResponse {
    /**
     * List of budget usage percentages that were successfully pulled
     * @type {Array<BudgetUsageCampaign>}
     * @memberof BudgetUsageCampaignResponse
     */
    success?: Array<BudgetUsageCampaign>;
    /**
     * List of budget usage percentages that failed to pull
     * @type {Array<BudgetUsageCampaignBatchError>}
     * @memberof BudgetUsageCampaignResponse
     */
    error?: Array<BudgetUsageCampaignBatchError>;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetUsageError
 */
export interface BudgetUsageError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetUsageError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetUsageError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolio
 */
export interface BudgetUsagePortfolio {
    /**
     * Budget usage percentage (spend / available budget) for the given budget policy.
     * @type {number}
     * @memberof BudgetUsagePortfolio
     */
    budgetUsagePercent?: number;
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsagePortfolio
     */
    portfolioId?: string;
    /**
     * Last evaluation time for budget usage
     * @type {string}
     * @memberof BudgetUsagePortfolio
     */
    usageUpdatedTimestamp?: string;
    /**
     * An index to maintain order of the portfolioIds
     * @type {number}
     * @memberof BudgetUsagePortfolio
     */
    index?: number;
    /**
     * Budget amount of resource requested
     * @type {number}
     * @memberof BudgetUsagePortfolio
     */
    budget?: number;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolioBatchError
 */
export interface BudgetUsagePortfolioBatchError {
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsagePortfolioBatchError
     */
    portfolioId?: string;
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetUsagePortfolioBatchError
     */
    code?: string;
    /**
     * An index to maintain order of the portfolioIds
     * @type {number}
     * @memberof BudgetUsagePortfolioBatchError
     */
    index?: number;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetUsagePortfolioBatchError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolioRequest
 */
export interface BudgetUsagePortfolioRequest {
    /**
     * A list of portfolio IDs.
     * @type {Array<string>}
     * @memberof BudgetUsagePortfolioRequest
     */
    portfolioIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolioResponse
 */
export interface BudgetUsagePortfolioResponse {
    /**
     * List of budget usage percentages that were successfully pulled
     * @type {Array<BudgetUsagePortfolio>}
     * @memberof BudgetUsagePortfolioResponse
     */
    success?: Array<BudgetUsagePortfolio>;
    /**
     * List of budget usage percentages that failed to pull
     * @type {Array<BudgetUsagePortfolioBatchError>}
     * @memberof BudgetUsagePortfolioResponse
     */
    error?: Array<BudgetUsagePortfolioBatchError>;
}
/**
 * 
 * @export
 * @interface CampaignOptimizationRule
 */
export interface CampaignOptimizationRule {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof CampaignOptimizationRule
     */
    recurrence?: RecurrenceType;
    /**
     * 
     * @type {RuleAction}
     * @memberof CampaignOptimizationRule
     */
    ruleAction?: RuleAction;
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof CampaignOptimizationRule
     */
    campaignOptimizationId: string;
    /**
     * Time of campaign optimization rule creation in ISO 8061. Read-only.
     * @type {string}
     * @memberof CampaignOptimizationRule
     */
    createdDate?: string;
    /**
     * 
     * @type {Array<RuleCondition>}
     * @memberof CampaignOptimizationRule
     */
    ruleCondition?: Array<RuleCondition>;
    /**
     * 
     * @type {RuleType}
     * @memberof CampaignOptimizationRule
     */
    ruleType?: RuleType;
    /**
     * The campaign optimization rule name.
     * @type {string}
     * @memberof CampaignOptimizationRule
     */
    ruleName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CampaignOptimizationRule
     */
    campaignIds?: Array<string>;
    /**
     * 
     * @type {RuleStatus}
     * @memberof CampaignOptimizationRule
     */
    ruleStatus?: RuleStatus;
}
/**
 * The Error Response Object.
 * @export
 * @interface CampaignOptimizationRuleError
 */
export interface CampaignOptimizationRuleError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof CampaignOptimizationRuleError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof CampaignOptimizationRuleError
     */
    details?: string;
}
/**
 * This object contains a set of recommendations for a campaign across bid, budget, targeting.
 * @export
 * @interface CampaignRecommendation
 */
export interface CampaignRecommendation {
    /**
     * 
     * @type {SevenDaysEstimatedOpportunities}
     * @memberof CampaignRecommendation
     */
    sevenDaysEstimatedOpportunities?: SevenDaysEstimatedOpportunities;
    /**
     * 
     * @type {BiddingStrategyRecommendation}
     * @memberof CampaignRecommendation
     */
    biddingStrategyRecommendation?: BiddingStrategyRecommendation;
    /**
     * The identifier of the campaign.
     * @type {string}
     * @memberof CampaignRecommendation
     */
    campaignId?: string;
    /**
     * 
     * @type {Array<KeywordTargetingRecommendation>}
     * @memberof CampaignRecommendation
     */
    keywordTargetingRecommendations?: Array<KeywordTargetingRecommendation>;
    /**
     * 
     * @type {BudgetRecommendation}
     * @memberof CampaignRecommendation
     */
    budgetRecommendation?: BudgetRecommendation;
    /**
     * 
     * @type {Array<TargetingGroupBidRecommendation>}
     * @memberof CampaignRecommendation
     */
    targetingGroupBidRecommendations?: Array<TargetingGroupBidRecommendation>;
}
/**
 * 
 * @export
 * @interface CategoryItem
 */
export interface CategoryItem {
    /**
     * The category id of the parent node
     * @type {string}
     * @memberof CategoryItem
     */
    parent?: string;
    /**
     * The path of the category, which contains the current category and all parent categories
     * @type {string}
     * @memberof CategoryItem
     */
    path?: string;
    /**
     * A flag which indicates if the current node may be targeted
     * @type {boolean}
     * @memberof CategoryItem
     */
    canBeTargeted?: boolean;
    /**
     * The name of the category
     * @type {string}
     * @memberof CategoryItem
     */
    name?: string;
    /**
     * The category id of the current node
     * @type {string}
     * @memberof CategoryItem
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface CategoryItemWithAsinCounts
 */
export interface CategoryItemWithAsinCounts {
    /**
     * The path of the category, which contains the current category and all parent categories
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    categoryPath?: string;
    /**
     * The name of the category
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    name?: string;
    /**
     * 
     * @type {IntegerRange}
     * @memberof CategoryItemWithAsinCounts
     */
    asinCounts?: IntegerRange;
    /**
     * The category id of the parent node
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    parentCategoryId?: string;
    /**
     * The category id of the current node
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface CategoryItemWithAsinCountsLoP
 */
export interface CategoryItemWithAsinCountsLoP {
    /**
     * The path of the category, which contains the current category and all parent categories
     * @type {string}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    categoryPath?: string;
    /**
     * The name of the category
     * @type {string}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    name?: string;
    /**
     * The translated path of the category, which contains the current category and all parent categories.
     * @type {string}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    translatedCategoryPath?: string;
    /**
     * 
     * @type {IntegerRange}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    asinCounts?: IntegerRange;
    /**
     * The category id of the parent node
     * @type {string}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    parentCategoryId?: string;
    /**
     * The category id of the current node
     * @type {string}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    id?: string;
    /**
     * The translated name of the category.
     * @type {string}
     * @memberof CategoryItemWithAsinCountsLoP
     */
    translatedName?: string;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendations
 */
export interface CategoryRecommendations {
    /**
     * List of category recommendations
     * @type {Array<CategoryItem>}
     * @memberof CategoryRecommendations
     */
    categories?: Array<CategoryItem>;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendationsWithAsinCounts
 */
export interface CategoryRecommendationsWithAsinCounts {
    /**
     * List of category recommendations
     * @type {Array<CategoryItemWithAsinCounts>}
     * @memberof CategoryRecommendationsWithAsinCounts
     */
    categories?: Array<CategoryItemWithAsinCounts>;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendationsWithAsinCountsLoP
 */
export interface CategoryRecommendationsWithAsinCountsLoP {
    /**
     * List of category recommendations
     * @type {Array<CategoryItemWithAsinCountsLoP>}
     * @memberof CategoryRecommendationsWithAsinCountsLoP
     */
    categories?: Array<CategoryItemWithAsinCountsLoP>;
}
/**
 * Clicks benchmark.
 * @export
 * @interface Clicks
 */
export interface Clicks {
    /**
     * lower bound.
     * @type {number}
     * @memberof Clicks
     */
    lower?: number;
    /**
     * upper bound.
     * @type {number}
     * @memberof Clicks
     */
    upper?: number;
}
/**
 * The comparison operator.
 * @export
 * @enum {string}
 */

export enum ComparisonOperator {
    GreaterThan = 'GREATER_THAN',
    LessThan = 'LESS_THAN',
    EqualTo = 'EQUAL_TO',
    LessThanOrEqualTo = 'LESS_THAN_OR_EQUAL_TO',
    GreaterThanOrEqualTo = 'GREATER_THAN_OR_EQUAL_TO'
}

/**
 * Conversions benchmark.
 * @export
 * @interface Conversions
 */
export interface Conversions {
    /**
     * lower bound.
     * @type {number}
     * @memberof Conversions
     */
    lower?: number;
    /**
     * upper bound.
     * @type {number}
     * @memberof Conversions
     */
    upper?: number;
}
/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesRequest
 */
export interface CreateAssociatedBudgetRulesRequest {
    /**
     * A list of budget rule identifiers.
     * @type {Array<string>}
     * @memberof CreateAssociatedBudgetRulesRequest
     */
    budgetRuleIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesResponse
 */
export interface CreateAssociatedBudgetRulesResponse {
    /**
     * 
     * @type {Array<AssociatedBudgetRuleResponse>}
     * @memberof CreateAssociatedBudgetRulesResponse
     */
    responses?: Array<AssociatedBudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateBudgetRulesResponse
 */
export interface CreateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof CreateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateSBBudgetRulesRequest
 */
export interface CreateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRuleDetails>}
     * @memberof CreateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSDBudgetRulesRequest
 */
export interface CreateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRuleDetails>}
     * @memberof CreateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSPBudgetRulesRequest
 */
export interface CreateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRuleDetails>}
     * @memberof CreateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSPCampaignOptimizationRulesRequest
 */
export interface CreateSPCampaignOptimizationRulesRequest {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    recurrence: RecurrenceType;
    /**
     * 
     * @type {RuleAction}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleAction: RuleAction;
    /**
     * 
     * @type {Array<RuleCondition>}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleCondition: Array<RuleCondition>;
    /**
     * 
     * @type {RuleType}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleType: RuleType;
    /**
     * The campaign optimization rule name.
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleName?: string;
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    campaignIds: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateSPCampaignOptimizationRulesResponse
 */
export interface CreateSPCampaignOptimizationRulesResponse {
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesResponse
     */
    campaignOptimizationId?: string;
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesResponse
     */
    details?: string;
}
/**
 * Object representing date range type rule duration.
 * @export
 * @interface DateRangeTypeRuleDuration
 */
export interface DateRangeTypeRuleDuration {
    /**
     * The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    endDate?: string;
    /**
     * The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    startDate: string;
}
/**
 * The day of the week.
 * @export
 * @enum {string}
 */

export enum DayOfWeek {
    Monday = 'MONDAY',
    Tuesday = 'TUESDAY',
    Wednesday = 'WEDNESDAY',
    Thursday = 'THURSDAY',
    Friday = 'FRIDAY',
    Saturday = 'SATURDAY',
    Sunday = 'SUNDAY'
}

/**
 * 
 * @export
 * @interface DeleteSPCampaignOptimizationRuleResponse
 */
export interface DeleteSPCampaignOptimizationRuleResponse {
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof DeleteSPCampaignOptimizationRuleResponse
     */
    campaignOptimizationId?: string;
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof DeleteSPCampaignOptimizationRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof DeleteSPCampaignOptimizationRuleResponse
     */
    details?: string;
}
/**
 * Object representing event type rule duration.
 * @export
 * @interface EventTypeRuleDuration
 */
export interface EventTypeRuleDuration {
    /**
     * The event identifier. This value is available from the budget rules recommendation API.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventId: string;
    /**
     * The event end date in YYYYMMDD format. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    endDate?: string;
    /**
     * The event name. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventName?: string;
    /**
     * The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface Genre
 */
export interface Genre {
    /**
     * Name of Genre. This field is OPTIONAL if the Genre object is being used as an input.
     * @type {string}
     * @memberof Genre
     */
    name?: string;
    /**
     * Id of Genre. This field is REQUIRED if the Genre object is being used as an input. Use the GetRefinementsForCategory to retrieve Genre Node IDs.
     * @type {string}
     * @memberof Genre
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface GenreLoP
 */
export interface GenreLoP {
    /**
     * Name of Genre.
     * @type {string}
     * @memberof GenreLoP
     */
    name?: string;
    /**
     * Id of Genre. Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Genre Node IDs.
     * @type {string}
     * @memberof GenreLoP
     */
    id?: string;
    /**
     * Translated name of the Genre based off locale send in the query parameter.
     * @type {string}
     * @memberof GenreLoP
     */
    translatedName?: string;
}
/**
 * 
 * @export
 * @interface GetCampaignRecommendationsResponse
 */
export interface GetCampaignRecommendationsResponse {
    /**
     * An identifier to fetch next set of campaign recommendations records in the result set if available. This will be null when at the end of result set.
     * @type {string}
     * @memberof GetCampaignRecommendationsResponse
     */
    nextToken?: string;
    /**
     * List of campaign recommendations.
     * @type {Array<CampaignRecommendation>}
     * @memberof GetCampaignRecommendationsResponse
     */
    recommendations: Array<CampaignRecommendation>;
}
/**
 * Request object to retrieve Category Recommendations based on the input ASINs.
 * @export
 * @interface GetCategoryRecommendationsForAsinsRequest
 */
export interface GetCategoryRecommendationsForAsinsRequest {
    /**
     * List of input ASINs. This API does not check if the ASINs are valid ASINs.
     * @type {Array<string>}
     * @memberof GetCategoryRecommendationsForAsinsRequest
     */
    asins?: Array<string>;
    /**
     * Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
     * @type {boolean}
     * @memberof GetCategoryRecommendationsForAsinsRequest
     */
    includeAncestor?: boolean;
}
/**
 * Request structure to get ASIN recommendations for a set of input ASINs.
 * @export
 * @interface GetProductRecommendationsRequest
 */
export interface GetProductRecommendationsRequest {
    /**
     * A optional cursor value that can be used to fetch next or previous set of records.
     * @type {string}
     * @memberof GetProductRecommendationsRequest
     */
    cursor?: string;
    /**
     * List of input ASINs.
     * @type {Array<string>}
     * @memberof GetProductRecommendationsRequest
     */
    adAsins: Array<string>;
    /**
     * Count of objects requested in the response. The count will be applied on the objects returned under `recommendations` array in response body.  <ul> <li>Requesting `application/vnd.spproductrecommendationresponse.themes.v3+json` mediatype applies the count on `ThemeRecommendation` objects.If no count value is passed a default of `5` is assumed. The API will return a maximum of `10` themes irrespective of how large the count is set. </li> <li>Requesting `application/vnd.spproductrecommendationresponse.asins.v3+json` mediatype applies count on the `ProductRecommendation` objects in response body.If no count value is passed a default of `100` is assumed. The API will return a maximum of `1000` recommendations irrespective of how large the count is set. </li> </ul> Please refer the response Schemas for more info.
     * @type {number}
     * @memberof GetProductRecommendationsRequest
     */
    count?: number;
    /**
     * Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).
     * @type {string}
     * @memberof GetProductRecommendationsRequest
     */
    locale?: string;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRuleResponse
 */
export interface GetSBBudgetRuleResponse {
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof GetSBBudgetRuleResponse
     */
    budgetRule?: SBBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRulesForAdvertiserResponse
 */
export interface GetSBBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SBBudgetRule>}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SBBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRuleResponse
 */
export interface GetSDBudgetRuleResponse {
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof GetSDBudgetRuleResponse
     */
    budgetRule?: SDBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRulesForAdvertiserResponse
 */
export interface GetSDBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SDBudgetRule>}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SDBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRuleResponse
 */
export interface GetSPBudgetRuleResponse {
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof GetSPBudgetRuleResponse
     */
    budgetRule?: SPBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRulesForAdvertiserResponse
 */
export interface GetSPBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SPBudgetRule>}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SPBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSPCampaignOptimizationRuleResponse
 */
export interface GetSPCampaignOptimizationRuleResponse {
    /**
     * 
     * @type {CampaignOptimizationRule}
     * @memberof GetSPCampaignOptimizationRuleResponse
     */
    CampaignOptimizationRule?: CampaignOptimizationRule;
}
/**
 * 
 * @export
 * @interface GetTargetableAsinCountsRequest
 */
export interface GetTargetableAsinCountsRequest {
    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
     * @type {Array<AgeRange>}
     * @memberof GetTargetableAsinCountsRequest
     */
    ageRanges?: Array<AgeRange>;
    /**
     * List of Brands.
     * @type {Array<Brand>}
     * @memberof GetTargetableAsinCountsRequest
     */
    brands?: Array<Brand>;
    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     * @type {Array<Genre>}
     * @memberof GetTargetableAsinCountsRequest
     */
    genres?: Array<Genre>;
    /**
     * Indicates if products have prime shipping
     * @type {boolean}
     * @memberof GetTargetableAsinCountsRequest
     */
    isPrimeShipping?: boolean;
    /**
     * 
     * @type {RatingRange}
     * @memberof GetTargetableAsinCountsRequest
     */
    ratingRange?: RatingRange;
    /**
     * The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
     * @type {string}
     * @memberof GetTargetableAsinCountsRequest
     */
    category: string;
    /**
     * 
     * @type {PriceRange}
     * @memberof GetTargetableAsinCountsRequest
     */
    priceRange?: PriceRange;
}
/**
 * The impact metrics are given in the same order of suggested bids.  Note: This object is nullable
 * @export
 * @interface ImpactMetric
 */
export interface ImpactMetric {
    /**
     * 
     * @type {Array<RangeMetricValue>}
     * @memberof ImpactMetric
     */
    values?: Array<RangeMetricValue>;
}
/**
 * For the CONVERSION_OPPORTUNITIES theme, the impact metrics are weekly clicks and orders received for similar products. For other event-based themes, the impact metrics are clicks and orders received for similar products during the event days  Note: This object is nullable
 * @export
 * @interface ImpactMetrics
 */
export interface ImpactMetrics {
    /**
     * 
     * @type {ImpactMetric}
     * @memberof ImpactMetrics
     */
    clicks?: ImpactMetric | null;
    /**
     * 
     * @type {ImpactMetric}
     * @memberof ImpactMetrics
     */
    orders?: ImpactMetric | null;
}
/**
 * Impressions benchmark.
 * @export
 * @interface Impressions
 */
export interface Impressions {
    /**
     * lower bound.
     * @type {number}
     * @memberof Impressions
     */
    lower?: number;
    /**
     * upper bound.
     * @type {number}
     * @memberof Impressions
     */
    upper?: number;
}
/**
 * 
 * @export
 * @interface InitialBudgetRecommendationRequest
 */
export interface InitialBudgetRecommendationRequest {
    /**
     * 
     * @type {Bidding}
     * @memberof InitialBudgetRecommendationRequest
     */
    bidding: Bidding;
    /**
     * The ad group information for this new campaign.
     * @type {Array<AdGroup>}
     * @memberof InitialBudgetRecommendationRequest
     */
    adGroups: Array<AdGroup>;
    /**
     * The end date of the campaign in YYYYMMDD format.
     * @type {string}
     * @memberof InitialBudgetRecommendationRequest
     */
    endDate?: string;
    /**
     * Specifies the targeting type.
     * @type {string}
     * @memberof InitialBudgetRecommendationRequest
     */
    targetingType: InitialBudgetRecommendationRequestTargetingTypeEnum;
    /**
     * The start date of the campaign in YYYYMMDD format.
     * @type {string}
     * @memberof InitialBudgetRecommendationRequest
     */
    startDate?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum InitialBudgetRecommendationRequestTargetingTypeEnum {
    Manual = 'manual',
    Auto = 'auto'
}

/**
 * 
 * @export
 * @interface InitialBudgetRecommendationResponse
 */
export interface InitialBudgetRecommendationResponse {
    /**
     * A list of special events around the start and end date of the campaign.
     * @type {Array<SpecialEvent>}
     * @memberof InitialBudgetRecommendationResponse
     */
    specialEvents: Array<SpecialEvent>;
    /**
     * Recommended daily budget for the new campaign. Note: value -1 means we don’t have enough information to provide a recommendation.
     * @type {number}
     * @memberof InitialBudgetRecommendationResponse
     */
    dailyBudget: number;
    /**
     * Unique identifier for each recommendation.
     * @type {string}
     * @memberof InitialBudgetRecommendationResponse
     */
    recommendationId?: string;
    /**
     * 
     * @type {Benchmark}
     * @memberof InitialBudgetRecommendationResponse
     */
    benchmark: Benchmark;
}
/**
 * 
 * @export
 * @interface IntegerRange
 */
export interface IntegerRange {
    /**
     * 
     * @type {number}
     * @memberof IntegerRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof IntegerRange
     */
    max?: number;
}
/**
 * Returns information about an InternalServerException.
 * @export
 * @interface InternalServerException
 */
export interface InternalServerException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof InternalServerException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof InternalServerException
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface KeywordBidInfo
 */
export interface KeywordBidInfo {
    /**
     * 
     * @type {BidSuggestion}
     * @memberof KeywordBidInfo
     */
    suggestedBid?: BidSuggestion;
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof KeywordBidInfo
     */
    matchType?: KeywordBidInfoMatchTypeEnum;
    /**
     * The keyword target rank
     * @type {number}
     * @memberof KeywordBidInfo
     */
    rank?: number;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof KeywordBidInfo
     */
    bid?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordBidInfoMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * 
 * @export
 * @interface KeywordRankedTargetsResponse
 */
export interface KeywordRankedTargetsResponse {
    /**
     * A list of ranked keyword targets
     * @type {Array<KeywordTargetResponse>}
     * @memberof KeywordRankedTargetsResponse
     */
    targets?: Array<KeywordTargetResponse>;
}
/**
 * 
 * @export
 * @interface KeywordTarget
 */
export interface KeywordTarget {
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof KeywordTarget
     */
    matchType?: KeywordTargetMatchTypeEnum;
    /**
     * The keyword value
     * @type {string}
     * @memberof KeywordTarget
     */
    keyword?: string;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof KeywordTarget
     */
    bid?: number;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof KeywordTarget
     */
    userSelectedKeyword?: boolean;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * 
 * @export
 * @interface KeywordTargetRankRecommendationRequest
 */
export interface KeywordTargetRankRecommendationRequest {
    /**
     * A list of targets that need to be ranked
     * @type {Array<KeywordTarget>}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    targets?: Array<KeywordTarget>;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    sortDimension?: KeywordTargetRankRecommendationRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
     * @type {string}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    locale?: KeywordTargetRankRecommendationRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetRankRecommendationRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetRankRecommendationRequestLocaleEnum {
    ArEg = 'ar_EG',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSa = 'en_SA',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrFr = 'fr_FR',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    ZhCn = 'zh_CN'
}

/**
 * 
 * @export
 * @interface KeywordTargetResponse
 */
export interface KeywordTargetResponse {
    /**
     * 
     * @type {BidSuggestion}
     * @memberof KeywordTargetResponse
     */
    suggestedBid?: BidSuggestion;
    /**
     * The translation of keyword if a locale is passed in
     * @type {string}
     * @memberof KeywordTargetResponse
     */
    translation?: string;
    /**
     * The keyword target rank
     * @type {number}
     * @memberof KeywordTargetResponse
     */
    rank?: number;
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof KeywordTargetResponse
     */
    matchType?: KeywordTargetResponseMatchTypeEnum;
    /**
     * The keyword value
     * @type {string}
     * @memberof KeywordTargetResponse
     */
    keyword?: string;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof KeywordTargetResponse
     */
    bid?: number;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof KeywordTargetResponse
     */
    userSelectedKeyword?: boolean;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetResponseMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * Contains suggested recommendation for the keyword targeting.
 * @export
 * @interface KeywordTargetingRecommendation
 */
export interface KeywordTargetingRecommendation {
    /**
     * The identifier of the keyword targeting.
     * @type {string}
     * @memberof KeywordTargetingRecommendation
     */
    keywordId?: string;
    /**
     * The suggested bid value associated with this keyword targeting clause.
     * @type {number}
     * @memberof KeywordTargetingRecommendation
     */
    suggestedBid?: number;
    /**
     * Keyword match type. | Value | Description | | --- | --- | | `BROAD` | Use BROAD to broadly match your keyword targeting ads with search queries.| | `EXACT` | Use EXACT to exactly match your keyword targeting ads with search queries.| | `PHRASE` | Use PHRASE to match your keyword targeting ads with search phrases.|
     * @type {string}
     * @memberof KeywordTargetingRecommendation
     */
    matchType?: KeywordTargetingRecommendationMatchTypeEnum;
    /**
     * Type of action for the keyword targeting.
     * @type {string}
     * @memberof KeywordTargetingRecommendation
     */
    action?: KeywordTargetingRecommendationActionEnum;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof KeywordTargetingRecommendation
     */
    adGroupId?: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof KeywordTargetingRecommendation
     */
    keywordText?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetingRecommendationMatchTypeEnum {
    Exact = 'EXACT',
    Phrase = 'PHRASE',
    Broad = 'BROAD'
}
/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetingRecommendationActionEnum {
    Add = 'ADD',
    Remove = 'REMOVE',
    Increase = 'INCREASE',
    Decrease = 'DECREASE',
    Update = 'UPDATE'
}

/**
 * 
 * @export
 * @interface PerformanceMeasureCondition
 */
export interface PerformanceMeasureCondition {
    /**
     * 
     * @type {PerformanceMetric}
     * @memberof PerformanceMeasureCondition
     */
    metricName: PerformanceMetric;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof PerformanceMeasureCondition
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof PerformanceMeasureCondition
     */
    threshold: number;
}
/**
 * 
 * @export
 * @interface PerformanceMeasureConditionForSB
 */
export interface PerformanceMeasureConditionForSB {
    /**
     * 
     * @type {PerformanceMetricForSB}
     * @memberof PerformanceMeasureConditionForSB
     */
    metricName: PerformanceMetricForSB;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof PerformanceMeasureConditionForSB
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof PerformanceMeasureConditionForSB
     */
    threshold: number;
}
/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export enum PerformanceMetric {
    Acos = 'ACOS',
    Ctr = 'CTR',
    Cvr = 'CVR',
    Roas = 'ROAS'
}

/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export enum PerformanceMetricForSB {
    Is = 'IS',
    Ntb = 'NTB',
    Roas = 'ROAS'
}

/**
 * An object giving the name of the performance metric and its value when the rule was evaluated
 * @export
 * @interface PerformanceMetricValue
 */
export interface PerformanceMetricValue {
    /**
     * Name of the performance metric
     * @type {string}
     * @memberof PerformanceMetricValue
     */
    name?: string;
    /**
     * Value of the performance metric
     * @type {number}
     * @memberof PerformanceMetricValue
     */
    value?: number;
}
/**
 * Specifies bid adjustments based on the placement location. Use `PLACEMENT_TOP` for the top of the search page. Use `PLACEMENT_PRODUCT_PAGE` for a product page.
 * @export
 * @interface PlacementAdjustment
 */
export interface PlacementAdjustment {
    /**
     * 
     * @type {string}
     * @memberof PlacementAdjustment
     */
    predicate?: PlacementAdjustmentPredicateEnum;
    /**
     * 
     * @type {number}
     * @memberof PlacementAdjustment
     */
    percentage?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum PlacementAdjustmentPredicateEnum {
    Top = 'PLACEMENT_TOP',
    ProductPage = 'PLACEMENT_PRODUCT_PAGE'
}

/**
 * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
 * @export
 * @interface PriceRange
 */
export interface PriceRange {
    /**
     * 
     * @type {number}
     * @memberof PriceRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof PriceRange
     */
    max?: number;
}
/**
 * Recommended asin and related information.
 * @export
 * @interface ProductRecommendation
 */
export interface ProductRecommendation {
    /**
     * List of themes associated with this recommended ASIN.
     * @type {Array<string>}
     * @memberof ProductRecommendation
     */
    themes?: Array<string>;
    /**
     * Recommended ASIN
     * @type {string}
     * @memberof ProductRecommendation
     */
    recommendedAsin?: string;
}
/**
 * Product recommendations supplemented with relevant information.
 * @export
 * @interface ProductRecommendationsByASIN
 */
export interface ProductRecommendationsByASIN {
    /**
     * An identifier to fetch next set of `ProductRecommendation` records in the result set if available. This will be null when at the end of result set.
     * @type {string}
     * @memberof ProductRecommendationsByASIN
     */
    nextCursor?: string;
    /**
     * Optional parameter that links to the previous result set served. This parameter will be null on the first request.
     * @type {string}
     * @memberof ProductRecommendationsByASIN
     */
    previousCursor?: string;
    /**
     * An array of `ProductRecommendation` objects.
     * @type {Array<ProductRecommendation>}
     * @memberof ProductRecommendationsByASIN
     */
    recommendations?: Array<ProductRecommendation>;
}
/**
 * Product recommendations grouped by theme attribute.
 * @export
 * @interface ProductRecommendationsByTheme
 */
export interface ProductRecommendationsByTheme {
    /**
     * An identifier to fetch next set of `ThemeRecommendation` records in the result set if available. This will be null when at the end of result set.
     * @type {string}
     * @memberof ProductRecommendationsByTheme
     */
    nextCursor?: string;
    /**
     * Optional parameter that links to the previous result set served to the requester.
     * @type {string}
     * @memberof ProductRecommendationsByTheme
     */
    previousCursor?: string;
    /**
     * An array of `ThemeRecommendation` objects
     * @type {Array<ThemeRecommendation>}
     * @memberof ProductRecommendationsByTheme
     */
    recommendations?: Array<ThemeRecommendation>;
}
/**
 * 
 * @export
 * @interface Range
 */
export interface Range {
    /**
     * 
     * @type {number}
     * @memberof Range
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof Range
     */
    max?: number;
}
/**
 * Describes lower and upper bounds of the range.  Note: This object is nullable
 * @export
 * @interface RangeMetricValue
 */
export interface RangeMetricValue {
    /**
     * 
     * @type {number}
     * @memberof RangeMetricValue
     */
    lower?: number;
    /**
     * 
     * @type {number}
     * @memberof RangeMetricValue
     */
    upper?: number;
}
/**
 * This request type is used to retrieve recommended keyword targets for an existing ad group. Set the recommendationType to KEYWORD_FOR_ADGROUP to use this request type.
 * @export
 * @interface RankedKeywordTargetsForAdGroupRequest
 */
export interface RankedKeywordTargetsForAdGroupRequest {
    /**
     * The identifier of the campaign
     * @type {string}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    campaignId: string;
    /**
     * The recommendationType to retrieve recommended keyword targets for an existing ad group.
     * @type {string}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    recommendationType: RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum;
    /**
     * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
     * @type {boolean}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    bidsEnabled?: boolean;
    /**
     * The identifier of the ad group
     * @type {string}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    adGroupId: string;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    sortDimension?: RankedKeywordTargetsForAdGroupRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
     * @type {string}
     * @memberof RankedKeywordTargetsForAdGroupRequest
     */
    locale?: RankedKeywordTargetsForAdGroupRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAdGroupRequestRecommendationTypeEnum {
    KeywordsForAdgroup = 'KEYWORDS_FOR_ADGROUP'
}
/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAdGroupRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAdGroupRequestLocaleEnum {
    ArEg = 'ar_EG',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSa = 'en_SA',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrFr = 'fr_FR',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    ZhCn = 'zh_CN'
}

/**
 * This request type is used to retrieve recommended keyword targets for ASINs. Set the recommendationType to KEYWORD_FOR_ASINS to use this request type.
 * @export
 * @interface RankedKeywordTargetsForAsinsRequest
 */
export interface RankedKeywordTargetsForAsinsRequest {
    /**
     * An array list of Asins
     * @type {Array<string>}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    asins: Array<string>;
    /**
     * The bid recommendations returned will depend on the bidding strategy. <br> LEGACY_FOR_SALES - Dynamic Bids (Down only) <br> AUTO_FOR_SALES - Dynamic Bids (Up or down) <br> MANUAL - Fixed Bids
     * @type {string}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    biddingStrategy?: RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum;
    /**
     * The recommendationType to retrieve recommended keyword targets for a list of ASINs.
     * @type {string}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    recommendationType: RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum;
    /**
     * Set this parameter to false if you do not want to retrieve bid suggestions for your keyword targets. Defaults to true.
     * @type {boolean}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    bidsEnabled?: boolean;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    sortDimension?: RankedKeywordTargetsForAsinsRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
     * @type {string}
     * @memberof RankedKeywordTargetsForAsinsRequest
     */
    locale?: RankedKeywordTargetsForAsinsRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAsinsRequestBiddingStrategyEnum {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL',
    RuleBased = 'RULE_BASED'
}
/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAsinsRequestRecommendationTypeEnum {
    KeywordsForAsins = 'KEYWORDS_FOR_ASINS'
}
/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAsinsRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum RankedKeywordTargetsForAsinsRequestLocaleEnum {
    ArEg = 'ar_EG',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSa = 'en_SA',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrFr = 'fr_FR',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    ZhCn = 'zh_CN'
}

/**
 * 
 * @export
 * @interface RankedTargetResponse
 */
export interface RankedTargetResponse {
    /**
     * A list of ranked keyword targets
     * @type {Array<RecKeywordTarget>}
     * @memberof RankedTargetResponse
     */
    keywordTargetList?: Array<RecKeywordTarget>;
}
/**
 * 
 * @export
 * @interface RankedTargetWithThemedBids
 */
export interface RankedTargetWithThemedBids {
    /**
     * The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.
     * @type {number}
     * @memberof RankedTargetWithThemedBids
     */
    searchTermImpressionShare?: number;
    /**
     * The translation of keyword if a locale is passed in
     * @type {string}
     * @memberof RankedTargetWithThemedBids
     */
    translation?: string;
    /**
     * A list of keyword bid info
     * @type {Array<ThemedBid>}
     * @memberof RankedTargetWithThemedBids
     */
    bidInfo?: Array<ThemedBid>;
    /**
     * The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.
     * @type {number}
     * @memberof RankedTargetWithThemedBids
     */
    searchTermImpressionRank?: number;
    /**
     * The keyword value
     * @type {string}
     * @memberof RankedTargetWithThemedBids
     */
    keyword?: string;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof RankedTargetWithThemedBids
     */
    userSelectedKeyword?: boolean;
    /**
     * The recommended keyword target id
     * @type {string}
     * @memberof RankedTargetWithThemedBids
     */
    recId?: string;
}
/**
 * 
 * @export
 * @interface RankedTargetWithThemedBidsResponse
 */
export interface RankedTargetWithThemedBidsResponse {
    /**
     * 
     * @type {Array<RankedTargetWithThemedBids>}
     * @memberof RankedTargetWithThemedBidsResponse
     */
    keywordTargetList?: Array<RankedTargetWithThemedBids>;
    /**
     * A list of impact metrics which anticipates the number of clicks and orders you will receive if you target all targeting expressions using the low, medium, and high suggested bid.
     * @type {Array<ImpactMetrics>}
     * @memberof RankedTargetWithThemedBidsResponse
     */
    impactMetrics?: Array<ImpactMetrics>;
}
/**
 * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
 * @export
 * @interface RatingRange
 */
export interface RatingRange {
    /**
     * 
     * @type {number}
     * @memberof RatingRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof RatingRange
     */
    max?: number;
}
/**
 * 
 * @export
 * @interface RecKeywordTarget
 */
export interface RecKeywordTarget {
    /**
     * The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.
     * @type {number}
     * @memberof RecKeywordTarget
     */
    searchTermImpressionShare?: number;
    /**
     * The translation of keyword if a locale is passed in
     * @type {string}
     * @memberof RecKeywordTarget
     */
    translation?: string;
    /**
     * A list of keyword bid info
     * @type {Array<KeywordBidInfo>}
     * @memberof RecKeywordTarget
     */
    bidInfo?: Array<KeywordBidInfo>;
    /**
     * The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.
     * @type {number}
     * @memberof RecKeywordTarget
     */
    searchTermImpressionRank?: number;
    /**
     * The keyword value
     * @type {string}
     * @memberof RecKeywordTarget
     */
    keyword?: string;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof RecKeywordTarget
     */
    userSelectedKeyword?: boolean;
    /**
     * The recommended keyword target id
     * @type {string}
     * @memberof RecKeywordTarget
     */
    recId?: string;
}
/**
 * 
 * @export
 * @interface RecommendationOptions
 */
export interface RecommendationOptions {
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof RecommendationOptions
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof RecommendationOptions
     */
    sortDimension?: RecommendationOptionsSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. Note: Translations will be null if locale is unsupported.
     * @type {string}
     * @memberof RecommendationOptions
     */
    locale?: RecommendationOptionsLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum RecommendationOptionsSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum RecommendationOptionsLocaleEnum {
    ArEg = 'ar_EG',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSa = 'en_SA',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrFr = 'fr_FR',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    ZhCn = 'zh_CN'
}

/**
 * 
 * @export
 * @interface Recurrence
 */
export interface Recurrence {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof Recurrence
     */
    type?: RecurrenceType;
    /**
     * Object representing days of the week for weekly type rule. It is not required for daily recurrence type
     * @type {Array<DayOfWeek>}
     * @memberof Recurrence
     */
    daysOfWeek?: Array<DayOfWeek>;
}
/**
 * The frequency of the rule application.
 * @export
 * @enum {string}
 */

export enum RecurrenceType {
    Daily = 'DAILY'
}

/**
 * Response object for the GetRefinementsForCategory API, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.
 * @export
 * @interface Refinements
 */
export interface Refinements {
    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
     * @type {Array<AgeRange>}
     * @memberof Refinements
     */
    ageRanges?: Array<AgeRange>;
    /**
     * List of Brands.
     * @type {Array<Brand>}
     * @memberof Refinements
     */
    brands?: Array<Brand>;
    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     * @type {Array<Genre>}
     * @memberof Refinements
     */
    genres?: Array<Genre>;
}
/**
 * Response object for the POST /sp/targets/category/{categoryId}/refinements endpoint, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.
 * @export
 * @interface RefinementsLoP
 */
export interface RefinementsLoP {
    /**
     * List of Age Ranges in a language of preference (LoP). Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
     * @type {Array<AgeRangeLoP>}
     * @memberof RefinementsLoP
     */
    ageRanges?: Array<AgeRangeLoP>;
    /**
     * List of Brands.
     * @type {Array<BrandLoP>}
     * @memberof RefinementsLoP
     */
    brands?: Array<BrandLoP>;
    /**
     * List of Genres in a language of preference (LoP). Use the POST /sp/targets/category/{categoryId}/refinements endpoint to retrieve Genre Node IDs. Genres are only available for categories related to books.
     * @type {Array<GenreLoP>}
     * @memberof RefinementsLoP
     */
    genres?: Array<GenreLoP>;
}
/**
 * The action taken when the campaign optimization rule is enabled. Defaults to adopt
 * @export
 * @enum {string}
 */

export enum RuleAction {
    Adopt = 'ADOPT'
}

/**
 * 
 * @export
 * @interface RuleCondition
 */
export interface RuleCondition {
    /**
     * 
     * @type {RuleConditionMetric}
     * @memberof RuleCondition
     */
    metricName: RuleConditionMetric;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof RuleCondition
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof RuleCondition
     */
    threshold: number;
}
/**
 * The advertising performance metric. ROAS is the only supported metric.
 * @export
 * @enum {string}
 */

export enum RuleConditionMetric {
    Roas = 'ROAS',
    AverageBid = 'AVERAGE_BID'
}

/**
 * 
 * @export
 * @interface RuleDuration
 */
export interface RuleDuration {
    /**
     * 
     * @type {EventTypeRuleDuration}
     * @memberof RuleDuration
     */
    eventTypeRuleDuration?: EventTypeRuleDuration;
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof RuleDuration
     */
    dateRangeTypeRuleDuration?: DateRangeTypeRuleDuration;
}
/**
 * 
 * @export
 * @interface RuleNotification
 */
export interface RuleNotification {
    /**
     * 
     * @type {RuleState}
     * @memberof RuleNotification
     */
    ruleState?: RuleState;
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof RuleNotification
     */
    campaignOptimizationId?: string;
    /**
     * campaignId
     * @type {string}
     * @memberof RuleNotification
     */
    campaignId?: string;
    /**
     * Explains why the rule state is disabled
     * @type {string}
     * @memberof RuleNotification
     */
    notificationString?: string;
}
/**
 * 
 * @export
 * @interface RuleNotificationError
 */
export interface RuleNotificationError {
    /**
     * campaignId
     * @type {string}
     * @memberof RuleNotificationError
     */
    campaignId?: string;
    /**
     * 
     * @type {CampaignOptimizationRuleError}
     * @memberof RuleNotificationError
     */
    Error?: CampaignOptimizationRuleError;
}
/**
 * 
 * @export
 * @interface RuleRecommendation
 */
export interface RuleRecommendation {
    /**
     * campaignId
     * @type {string}
     * @memberof RuleRecommendation
     */
    campaignId?: string;
    /**
     * 
     * @type {RuleRecommendationMetrics}
     * @memberof RuleRecommendation
     */
    performanceMetrics?: RuleRecommendationMetrics;
}
/**
 * 
 * @export
 * @interface RuleRecommendationError
 */
export interface RuleRecommendationError {
    /**
     * campaignId
     * @type {string}
     * @memberof RuleRecommendationError
     */
    campaignId?: string;
    /**
     * 
     * @type {CampaignOptimizationRuleError}
     * @memberof RuleRecommendationError
     */
    Error?: CampaignOptimizationRuleError;
}
/**
 * Performance Metrics supported by the rule recommendation
 * @export
 * @interface RuleRecommendationMetrics
 */
export interface RuleRecommendationMetrics {
    /**
     * return on ad spend value
     * @type {number}
     * @memberof RuleRecommendationMetrics
     */
    roas?: number;
}
/**
 * The campaign optimization rule state.
 * @export
 * @enum {string}
 */

export enum RuleState {
    Enabled = 'ENABLED',
    Disabled = 'DISABLED'
}

/**
 * The campaign optimization rule status. Read-Only
 * @export
 * @enum {string}
 */

export enum RuleStatus {
    Active = 'ACTIVE',
    Archived = 'ARCHIVED'
}

/**
 * The type of the campaign optimization rule. Only Support BID as of now
 * @export
 * @enum {string}
 */

export enum RuleType {
    Bid = 'BID',
    Keyword = 'KEYWORD',
    Product = 'PRODUCT'
}

/**
 * 
 * @export
 * @interface SBBudgetHistory
 */
export interface SBBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SBRuleBasedBudget>}
     * @memberof SBBudgetHistory
     */
    history?: Array<SBRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SBBudgetRule
 */
export interface SBBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRuleDetails
 */
export interface SBBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SBBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SBBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SBRuleType}
     * @memberof SBBudgetRuleDetails
     */
    ruleType?: SBRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SBBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SBBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureConditionForSB}
     * @memberof SBBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureConditionForSB;
}
/**
 * 
 * @export
 * @interface SBCampaignBudgetRule
 */
export interface SBCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBCampaignBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBGetAssociatedCampaignsResponse
 */
export interface SBGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SBListAssociatedBudgetRulesResponse
 */
export interface SBListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SBCampaignBudgetRule>}
     * @memberof SBListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SBCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SBRuleBasedBudget
 */
export interface SBRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof SBRuleBasedBudget
     */
    appliedRule?: SBBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SBRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * 
 * @export
 * @interface SBRuleDuration
 */
export interface SBRuleDuration {
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof SBRuleDuration
     */
    dateRangeTypeRuleDuration: DateRangeTypeRuleDuration;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SBRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SDBudgetHistory
 */
export interface SDBudgetHistory {
    /**
     * 
     * @type {Array<SDRuleBasedBudget>}
     * @memberof SDBudgetHistory
     */
    history?: Array<SDRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SDBudgetRule
 */
export interface SDBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SDBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SDBudgetRuleDetails}
     * @memberof SDBudgetRule
     */
    ruleDetails?: SDBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SD campaign
 * @export
 * @interface SDBudgetRuleDetails
 */
export interface SDBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SDBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SDBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SDRuleType}
     * @memberof SDBudgetRuleDetails
     */
    ruleType?: SDRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SDBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SDBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SDBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SDGetAssociatedCampaignsResponse
 */
export interface SDGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SDListAssociatedBudgetRulesResponse
 */
export interface SDListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SDBudgetRule>}
     * @memberof SDListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SDBudgetRule>;
}
/**
 * 
 * @export
 * @interface SDRuleBasedBudget
 */
export interface SDRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof SDRuleBasedBudget
     */
    appliedRule?: SDBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SDRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SDRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SPBudgetHistory
 */
export interface SPBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SPRuleBasedBudget>}
     * @memberof SPBudgetHistory
     */
    history?: Array<SPRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SPBudgetRule
 */
export interface SPBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SP campaign
 * @export
 * @interface SPBudgetRuleDetails
 */
export interface SPBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SPBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SPBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SPRuleType}
     * @memberof SPBudgetRuleDetails
     */
    ruleType?: SPRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SPBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SPBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SPBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * The Error Response Object.
 * @export
 * @interface SPBudgetRulesRecommendationError
 */
export interface SPBudgetRulesRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SPBudgetRulesRecommendationEvent
 */
export interface SPBudgetRulesRecommendationEvent {
    /**
     * The event identifier.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    eventId?: string;
    /**
     * The end date in YYYYMMDD format.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    endDate?: string;
    /**
     * The suggested budget increase expressed as a percent.
     * @type {number}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    suggestedBudgetIncreasePercent?: number;
    /**
     * The event name.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    eventName?: string;
    /**
     * The start date in YYYYMMDD format.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface SPBudgetRulesRecommendationEventRequest
 */
export interface SPBudgetRulesRecommendationEventRequest {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEventRequest
     */
    campaignId: string;
}
/**
 * Special events with date range and suggested budget increase.
 * @export
 * @interface SPBudgetRulesRecommendationEventResponse
 */
export interface SPBudgetRulesRecommendationEventResponse {
    /**
     * A list of recommended special events with date range and suggested budget increase.
     * @type {Array<SPBudgetRulesRecommendationEvent>}
     * @memberof SPBudgetRulesRecommendationEventResponse
     */
    recommendedBudgetRuleEvents?: Array<SPBudgetRulesRecommendationEvent>;
}
/**
 * 
 * @export
 * @interface SPCampaignBudgetRule
 */
export interface SPCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPCampaignBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationNotificationAPIRequest
 */
export interface SPCampaignOptimizationNotificationAPIRequest {
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof SPCampaignOptimizationNotificationAPIRequest
     */
    campaignIds: Array<string>;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationNotificationAPIResponse
 */
export interface SPCampaignOptimizationNotificationAPIResponse {
    /**
     * List of errors that occured when generating campaign optimization notifications.
     * @type {Array<RuleNotificationError>}
     * @memberof SPCampaignOptimizationNotificationAPIResponse
     */
    CampaignOptimizationRecommendationsError?: Array<RuleNotificationError>;
    /**
     * List of successful campaign optimization notifications for campaigns.
     * @type {Array<RuleNotification>}
     * @memberof SPCampaignOptimizationNotificationAPIResponse
     */
    CampaignOptimizationNotifications?: Array<RuleNotification>;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationRecommendationAPIResponse
 */
export interface SPCampaignOptimizationRecommendationAPIResponse {
    /**
     * List of successful campaign optimization recomendation for campaigns.
     * @type {Array<RuleRecommendation>}
     * @memberof SPCampaignOptimizationRecommendationAPIResponse
     */
    CampaignOptimizationRecommendations?: Array<RuleRecommendation>;
    /**
     * List of errors that occured when generating campaign optimization recommendation.
     * @type {Array<RuleRecommendationError>}
     * @memberof SPCampaignOptimizationRecommendationAPIResponse
     */
    CampaignOptimizationRecommendationsError?: Array<RuleRecommendationError>;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationRecommendationsAPIRequest
 */
export interface SPCampaignOptimizationRecommendationsAPIRequest {
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof SPCampaignOptimizationRecommendationsAPIRequest
     */
    campaignIds: Array<string>;
}
/**
 * 
 * @export
 * @interface SPGetAssociatedCampaignsResponse
 */
export interface SPGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SPListAssociatedBudgetRulesResponse
 */
export interface SPListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SPCampaignBudgetRule>}
     * @memberof SPListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SPCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SPRuleBasedBudget
 */
export interface SPRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof SPRuleBasedBudget
     */
    appliedRule?: SPBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SPRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SPRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SPTORBudgetRecommendationError
 */
export interface SPTORBudgetRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SPTORBudgetRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SPTORBudgetRecommendationError
     */
    details?: string;
}
/**
 * The Error Response Object.
 * @export
 * @interface SPTargetingError
 */
export interface SPTargetingError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SPTargetingError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SPTargetingError
     */
    details?: string;
}
/**
 * Request object for SearchBrands API.
 * @export
 * @interface SearchBrandsRequest
 */
export interface SearchBrandsRequest {
    /**
     * 
     * @type {string}
     * @memberof SearchBrandsRequest
     */
    keyword: string;
}
/**
 * 
 * @export
 * @interface SevenDaysEstimatedOpportunities
 */
export interface SevenDaysEstimatedOpportunities {
    /**
     * Lower bound of the estimated incremental clicks that could be gained if all optimizations are made.
     * @type {number}
     * @memberof SevenDaysEstimatedOpportunities
     */
    estimatedIncrementalClicksLower?: number;
    /**
     * Upper bound of the estimated incremental clicks that could be gained if all optimizations are made.
     * @type {number}
     * @memberof SevenDaysEstimatedOpportunities
     */
    estimatedIncrementalClicksUpper?: number;
    /**
     * End date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.
     * @type {string}
     * @memberof SevenDaysEstimatedOpportunities
     */
    endDate?: string;
    /**
     * Start date of the opportunities date range in YYYY-MM-DDTHH:mm:ssZ format.
     * @type {string}
     * @memberof SevenDaysEstimatedOpportunities
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface SevenDaysMissedOpportunities
 */
export interface SevenDaysMissedOpportunities {
    /**
     * Lower bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedSalesLower?: number;
    /**
     * Upper bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedSalesUpper?: number;
    /**
     * End date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time
     * @type {string}
     * @memberof SevenDaysMissedOpportunities
     */
    endDate?: string;
    /**
     * Lower bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedImpressionsLower?: number;
    /**
     * Lower bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedClicksLower?: number;
    /**
     * Upper bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedClicksUpper?: number;
    /**
     * Upper bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedImpressionsUpper?: number;
    /**
     * Starting date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time
     * @type {string}
     * @memberof SevenDaysMissedOpportunities
     */
    startDate?: string;
    /**
     * percentage of time the campaign is active with a budget. Provided as a decimal ranging from 0 to 1 (e.g. 0.76 means the campaign was in budget for 76% of the time between the startDate and endDate period)
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    percentTimeInBudget?: number;
}
/**
 * 
 * @export
 * @interface SpecialEvent
 */
export interface SpecialEvent {
    /**
     * Deprecated. The factor used to boost the recommended budget.
     * @type {number}
     * @memberof SpecialEvent
     */
    budgetModifier?: number;
    /**
     * The end date of the special event in YYYYMMDD format.
     * @type {string}
     * @memberof SpecialEvent
     */
    endDate?: string;
    /**
     * Recommended daily budget for the new campaign during the special event period.
     * @type {number}
     * @memberof SpecialEvent
     */
    dailyBudget?: number;
    /**
     * The key of the special event.
     * @type {string}
     * @memberof SpecialEvent
     */
    eventKey?: string;
    /**
     * The name of the special event.
     * @type {string}
     * @memberof SpecialEvent
     */
    eventName?: string;
    /**
     * The start date of the special event in YYYYMMDD format.
     * @type {string}
     * @memberof SpecialEvent
     */
    startDate?: string;
    /**
     * 
     * @type {Benchmark}
     * @memberof SpecialEvent
     */
    benchmark?: Benchmark;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAccessDeniedErrorCode {
    AccessDenied = 'ACCESS_DENIED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsAccessDeniedExceptionResponseContent
 */
export interface SponsoredProductsAccessDeniedExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsAccessDeniedErrorCode}
     * @memberof SponsoredProductsAccessDeniedExceptionResponseContent
     */
    code: SponsoredProductsAccessDeniedErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsAccessDeniedExceptionResponseContent
     */
    message: string;
}
/**
 * Errors related to ad eligibility
 * @export
 * @interface SponsoredProductsAdEligibilityError
 */
export interface SponsoredProductsAdEligibilityError {
    /**
     * 
     * @type {SponsoredProductsAdEligibilityErrorReason}
     * @memberof SponsoredProductsAdEligibilityError
     */
    reason: SponsoredProductsAdEligibilityErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsAdEligibilityError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsAdEligibilityError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsAdEligibilityError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAdEligibilityErrorReason {
    AdIneligible = 'AD_INELIGIBLE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsAdGroup
 */
export interface SponsoredProductsAdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsAdGroup
     */
    campaignId: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsAdGroup
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsAdGroup
     */
    state: SponsoredProductsEntityState;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsAdGroup
     */
    adGroupId: string;
    /**
     * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsAdGroup
     */
    defaultBid: number;
    /**
     * 
     * @type {SponsoredProductsAdGroupExtendedData}
     * @memberof SponsoredProductsAdGroup
     */
    extendedData?: SponsoredProductsAdGroupExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupAccessError
 */
export interface SponsoredProductsAdGroupAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsAdGroupAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsAdGroupAccessErrorSelector}
     * @memberof SponsoredProductsAdGroupAccessError
     */
    errorValue: SponsoredProductsAdGroupAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupAccessErrorSelector
 */
export interface SponsoredProductsAdGroupAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsAdGroupAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsAdGroupAccessExceptionResponseContent
 */
export interface SponsoredProductsAdGroupAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsAdGroupAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsAdGroupAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsAdGroupAccessError>}
     * @memberof SponsoredProductsAdGroupAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsAdGroupAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupExtendedData
 */
export interface SponsoredProductsAdGroupExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsAdGroupExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsAdGroupServingStatus}
     * @memberof SponsoredProductsAdGroupExtendedData
     */
    servingStatus?: SponsoredProductsAdGroupServingStatus;
    /**
     * The serving status reasons of the AdGroup
     * @type {Array<SponsoredProductsAdGroupServingStatusDetail>}
     * @memberof SponsoredProductsAdGroupExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsAdGroupServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsAdGroupExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupFailureResponseItem
 */
export interface SponsoredProductsAdGroupFailureResponseItem {
    /**
     * the index of the adGroup in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsAdGroupFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsAdGroupMutationError>}
     * @memberof SponsoredProductsAdGroupFailureResponseItem
     */
    errors?: Array<SponsoredProductsAdGroupMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupMutationError
 */
export interface SponsoredProductsAdGroupMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsAdGroupMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsAdGroupMutationErrorSelector}
     * @memberof SponsoredProductsAdGroupMutationError
     */
    errorValue: SponsoredProductsAdGroupMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupMutationErrorSelector
 */
export interface SponsoredProductsAdGroupMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsApplicableMarketplacesError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    applicableMarketplacesError?: SponsoredProductsApplicableMarketplacesError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsAdGroupMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsAdGroupMutationExceptionResponseContent
 */
export interface SponsoredProductsAdGroupMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsAdGroupMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsAdGroupMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsAdGroupMutationError>}
     * @memberof SponsoredProductsAdGroupMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsAdGroupMutationError>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAdGroupServingStatus {
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserOutOfBudget = 'ADVERTISER_OUT_OF_BUDGET',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupServingStatusDetail
 */
export interface SponsoredProductsAdGroupServingStatusDetail {
    /**
     * 
     * @type {SponsoredProductsAdGroupServingStatusReason}
     * @memberof SponsoredProductsAdGroupServingStatusDetail
     */
    name?: SponsoredProductsAdGroupServingStatusReason;
    /**
     * A URL with additional information about the status identifier.
     * @type {string}
     * @memberof SponsoredProductsAdGroupServingStatusDetail
     */
    helpUrl?: string;
    /**
     * A human-readable description of the status identifier specified in the name field.
     * @type {string}
     * @memberof SponsoredProductsAdGroupServingStatusDetail
     */
    message?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAdGroupServingStatusReason {
    AdGroupStatusEnabledDetail = 'AD_GROUP_STATUS_ENABLED_DETAIL',
    AdGroupPausedDetail = 'AD_GROUP_PAUSED_DETAIL',
    AdGroupArchivedDetail = 'AD_GROUP_ARCHIVED_DETAIL',
    AdGroupIncompleteDetail = 'AD_GROUP_INCOMPLETE_DETAIL',
    AdGroupPolicingPendingReviewDetail = 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
    AdGroupPolicingCreativeRejectedDetail = 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
    AdGroupLowBidDetail = 'AD_GROUP_LOW_BID_DETAIL',
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    PortfolioStatusEnabledDetail = 'PORTFOLIO_STATUS_ENABLED_DETAIL',
    PortfolioPausedDetail = 'PORTFOLIO_PAUSED_DETAIL',
    PortfolioArchivedDetail = 'PORTFOLIO_ARCHIVED_DETAIL',
    PortfolioOutOfBudgetDetail = 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
    PortfolioPendingStartDateDetail = 'PORTFOLIO_PENDING_START_DATE_DETAIL',
    PortfolioEndedDetail = 'PORTFOLIO_ENDED_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsAdGroupSuccessResponseItem
 */
export interface SponsoredProductsAdGroupSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsAdGroup}
     * @memberof SponsoredProductsAdGroupSuccessResponseItem
     */
    adGroup?: SponsoredProductsAdGroup;
    /**
     * the index of the adGroup in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsAdGroupSuccessResponseItem
     */
    index: number;
    /**
     * the adGroup ID
     * @type {string}
     * @memberof SponsoredProductsAdGroupSuccessResponseItem
     */
    adGroupId?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAdServingStatus {
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserOutOfBudget = 'ADVERTISER_OUT_OF_BUDGET',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AdStatusLive = 'AD_STATUS_LIVE',
    AdPolicingPendingReview = 'AD_POLICING_PENDING_REVIEW',
    AdPolicingSuspended = 'AD_POLICING_SUSPENDED',
    AdPaused = 'AD_PAUSED',
    AdArchived = 'AD_ARCHIVED',
    AccountOutOfBudget = 'ACCOUNT_OUT_OF_BUDGET',
    AdvertiserAccountOutOfBudget = 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET',
    AdvertiserExceedSpendsLimit = 'ADVERTISER_EXCEED_SPENDS_LIMIT',
    AdvertiserStatusEnabled = 'ADVERTISER_STATUS_ENABLED',
    AdCreationOfflineFailed = 'AD_CREATION_OFFLINE_FAILED',
    AdCreationOfflineInProgress = 'AD_CREATION_OFFLINE_IN_PROGRESS',
    AdCreationOfflinePending = 'AD_CREATION_OFFLINE_PENDING',
    CampaignAdsNotDelivering = 'CAMPAIGN_ADS_NOT_DELIVERING',
    LandingPageNotAvailable = 'LANDING_PAGE_NOT_AVAILABLE',
    MissingDecoration = 'MISSING_DECORATION',
    MissingImage = 'MISSING_IMAGE',
    NotBuyable = 'NOT_BUYABLE',
    NotInBuybox = 'NOT_IN_BUYBOX',
    OutOfStock = 'OUT_OF_STOCK',
    SecurityScanPendingReview = 'SECURITY_SCAN_PENDING_REVIEW',
    SecurityScanRejected = 'SECURITY_SCAN_REJECTED',
    StatusUnavailable = 'STATUS_UNAVAILABLE',
    TargetingClauseArchived = 'TARGETING_CLAUSE_ARCHIVED',
    TargetingClauseBlocked = 'TARGETING_CLAUSE_BLOCKED',
    TargetingClausePaused = 'TARGETING_CLAUSE_PAUSED',
    TargetingClausePolicingSuspended = 'TARGETING_CLAUSE_POLICING_SUSPENDED',
    TargetingClauseStatusLive = 'TARGETING_CLAUSE_STATUS_LIVE',
    Eligible = 'ELIGIBLE',
    Ineligible = 'INELIGIBLE',
    NoInventory = 'NO_INVENTORY',
    NoPurchasableOffer = 'NO_PURCHASABLE_OFFER',
    PirRuleExcluded = 'PIR_RULE_EXCLUDED',
    CampaignPendingStartDate = 'CAMPAIGN_PENDING_START_DATE',
    CampaignEnded = 'CAMPAIGN_ENDED',
    AdMissingImage = 'AD_MISSING_IMAGE',
    AdMissingDecoration = 'AD_MISSING_DECORATION',
    AdNotBuyable = 'AD_NOT_BUYABLE',
    AdNotInBuybox = 'AD_NOT_IN_BUYBOX',
    AdOutOfStock = 'AD_OUT_OF_STOCK',
    AdLandingPageNotAvailable = 'AD_LANDING_PAGE_NOT_AVAILABLE',
    AdNoPurchasableOffer = 'AD_NO_PURCHASABLE_OFFER',
    AdIneligible = 'AD_INELIGIBLE',
    AdEligible = 'AD_ELIGIBLE',
    AdCreationFailed = 'AD_CREATION_FAILED',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsAdServingStatusDetail
 */
export interface SponsoredProductsAdServingStatusDetail {
    /**
     * 
     * @type {SponsoredProductsAdServingStatusReason}
     * @memberof SponsoredProductsAdServingStatusDetail
     */
    name?: SponsoredProductsAdServingStatusReason;
    /**
     * A URL with additional information about the status identifier.
     * @type {string}
     * @memberof SponsoredProductsAdServingStatusDetail
     */
    helpUrl?: string;
    /**
     * A human-readable description of the status identifier specified in the name field.
     * @type {string}
     * @memberof SponsoredProductsAdServingStatusDetail
     */
    message?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAdServingStatusReason {
    AdGroupStatusEnabledDetail = 'AD_GROUP_STATUS_ENABLED_DETAIL',
    AdGroupPausedDetail = 'AD_GROUP_PAUSED_DETAIL',
    AdGroupArchivedDetail = 'AD_GROUP_ARCHIVED_DETAIL',
    AdGroupIncompleteDetail = 'AD_GROUP_INCOMPLETE_DETAIL',
    AdGroupPolicingPendingReviewDetail = 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
    AdGroupPolicingCreativeRejectedDetail = 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
    AdGroupLowBidDetail = 'AD_GROUP_LOW_BID_DETAIL',
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    PortfolioStatusEnabledDetail = 'PORTFOLIO_STATUS_ENABLED_DETAIL',
    PortfolioPausedDetail = 'PORTFOLIO_PAUSED_DETAIL',
    PortfolioArchivedDetail = 'PORTFOLIO_ARCHIVED_DETAIL',
    PortfolioOutOfBudgetDetail = 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
    PortfolioPendingStartDateDetail = 'PORTFOLIO_PENDING_START_DATE_DETAIL',
    PortfolioEndedDetail = 'PORTFOLIO_ENDED_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
    AdStatusLiveDetail = 'AD_STATUS_LIVE_DETAIL',
    AdPolicingPendingReview = 'AD_POLICING_PENDING_REVIEW',
    AdPolicingSuspendedDetail = 'AD_POLICING_SUSPENDED_DETAIL',
    AdPausedDetail = 'AD_PAUSED_DETAIL',
    AdArchivedDetail = 'AD_ARCHIVED_DETAIL',
    MissingImageDetail = 'MISSING_IMAGE_DETAIL',
    ModerationAdultProductPvDetail = 'MODERATION_ADULT_PRODUCT_PV_DETAIL',
    ModerationAdultNoveltyPvDetail = 'MODERATION_ADULT_NOVELTY_PV_DETAIL',
    ModerationAdultSoftlinesPvDetail = 'MODERATION_ADULT_SOFTLINES_PV_DETAIL',
    ModerationContentNudityPvDetail = 'MODERATION_CONTENT_NUDITY_PV_DETAIL',
    ModerationContentProvocativePvDetail = 'MODERATION_CONTENT_PROVOCATIVE_PV_DETAIL',
    ModerationClaimWeightlossPvDetail = 'MODERATION_CLAIM_WEIGHTLOSS_PV_DETAIL',
    ModerationError404PvDetail = 'MODERATION_ERROR_404_PV_DETAIL',
    ModerationGraphicalSexualImagesPvDetail = 'MODERATION_GRAPHICAL_SEXUAL_IMAGES_PV_DETAIL',
    ModerationLanguageOffensivePvDetail = 'MODERATION_LANGUAGE_OFFENSIVE_PV_DETAIL',
    ModerationHfssProductPvDetail = 'MODERATION_HFSS_PRODUCT_PV_DETAIL',
    ModerationContentSmokingPvDetail = 'MODERATION_CONTENT_SMOKING_PV_DETAIL',
    ModerationSmokingRelatedPvDetail = 'MODERATION_SMOKING_RELATED_PV_DETAIL',
    ModerationNotCompliantToAdPolicyPvDetail = 'MODERATION_NOT_COMPLIANT_TO_AD_POLICY_PV_DETAIL',
    ModerationCriticalEventsPvDetail = 'MODERATION_CRITICAL_EVENTS_PV_DETAIL',
    AccountOutOfBudgetDetail = 'ACCOUNT_OUT_OF_BUDGET_DETAIL',
    AdvertiserAccountOutOfBudgetDetail = 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET_DETAIL',
    AdvertiserExceedSpendsLimitDetail = 'ADVERTISER_EXCEED_SPENDS_LIMIT_DETAIL',
    AdvertiserStatusEnabledDetail = 'ADVERTISER_STATUS_ENABLED_DETAIL',
    AdCreationOfflineFailed = 'AD_CREATION_OFFLINE_FAILED',
    AdCreationOfflineInProgress = 'AD_CREATION_OFFLINE_IN_PROGRESS',
    AdCreationOfflinePending = 'AD_CREATION_OFFLINE_PENDING',
    CampaignAdsNotDeliveringDetail = 'CAMPAIGN_ADS_NOT_DELIVERING_DETAIL',
    LandingPageNotAvailableDetail = 'LANDING_PAGE_NOT_AVAILABLE_DETAIL',
    MissingDecorationDetail = 'MISSING_DECORATION_DETAIL',
    NotBuyableDetail = 'NOT_BUYABLE_DETAIL',
    NotInBuyboxDetail = 'NOT_IN_BUYBOX_DETAIL',
    OutOfStockDetail = 'OUT_OF_STOCK_DETAIL',
    SecurityScanPendingReview = 'SECURITY_SCAN_PENDING_REVIEW',
    SecurityScanRejected = 'SECURITY_SCAN_REJECTED',
    StatusUnavailable = 'STATUS_UNAVAILABLE',
    TargetingClauseArchivedDetail = 'TARGETING_CLAUSE_ARCHIVED_DETAIL',
    TargetingClauseBlockedDetail = 'TARGETING_CLAUSE_BLOCKED_DETAIL',
    TargetingClausePausedDetail = 'TARGETING_CLAUSE_PAUSED_DETAIL',
    TargetingClausePolicingSuspendedDetail = 'TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL',
    TargetingClauseStatusLiveDetail = 'TARGETING_CLAUSE_STATUS_LIVE_DETAIL',
    AdultProduct = 'ADULT_PRODUCT',
    AsinQuarantined = 'ASIN_QUARANTINED',
    BrandRemoved = 'BRAND_REMOVED',
    CbaNotSupported = 'CBA_NOT_SUPPORTED',
    ClosedGl = 'CLOSED_GL',
    CpIneligible = 'CP_INELIGIBLE',
    CpIneligibleAsin = 'CP_INELIGIBLE_ASIN',
    CpIneligibleUnknown = 'CP_INELIGIBLE_UNKNOWN',
    CpIneligibleVendor = 'CP_INELIGIBLE_VENDOR',
    EligibleDetail = 'ELIGIBLE_DETAIL',
    IneligibleCondition = 'INELIGIBLE_CONDITION',
    InventoryIncomplete = 'INVENTORY_INCOMPLETE',
    ItemMissing = 'ITEM_MISSING',
    LandingPageIneligible = 'LANDING_PAGE_INELIGIBLE',
    NoInventoryDetail = 'NO_INVENTORY_DETAIL',
    NoPurchasableOfferDetail = 'NO_PURCHASABLE_OFFER_DETAIL',
    OfferMissingDetail = 'OFFER_MISSING_DETAIL',
    PirRuleExcluded = 'PIR_RULE_EXCLUDED',
    RestrictedGl = 'RESTRICTED_GL',
    SkuDefective = 'SKU_DEFECTIVE',
    VariationParent = 'VARIATION_PARENT',
    AdPolicingPendingReviewDetail = 'AD_POLICING_PENDING_REVIEW_DETAIL',
    Other = 'OTHER'
}

/**
 * Errors related to ad eligibility
 * @export
 * @interface SponsoredProductsApplicableMarketplacesError
 */
export interface SponsoredProductsApplicableMarketplacesError {
    /**
     * 
     * @type {SponsoredProductsApplicableMarketplacesErrorReason}
     * @memberof SponsoredProductsApplicableMarketplacesError
     */
    reason: SponsoredProductsApplicableMarketplacesErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsApplicableMarketplacesError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsApplicableMarketplacesError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsApplicableMarketplacesErrorReason {
    ApplicableMarketplacesMismatchError = 'APPLICABLE_MARKETPLACES_MISMATCH_ERROR'
}

/**
 * 
 * @export
 * @interface SponsoredProductsAsinFilter
 */
export interface SponsoredProductsAsinFilter {
    /**
     * 
     * @type {SponsoredProductsQueryTermMatchType}
     * @memberof SponsoredProductsAsinFilter
     */
    queryTermMatchType?: SponsoredProductsQueryTermMatchType;
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsAsinFilter
     */
    include?: Array<string>;
}
/**
 * Errors related to author asin ownership
 * @export
 * @interface SponsoredProductsAsinOwnershipError
 */
export interface SponsoredProductsAsinOwnershipError {
    /**
     * 
     * @type {SponsoredProductsAsinOwnershipErrorReason}
     * @memberof SponsoredProductsAsinOwnershipError
     */
    reason: SponsoredProductsAsinOwnershipErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsAsinOwnershipError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsAsinOwnershipError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAsinOwnershipErrorReason {
    AsinNotOwnedByAuthor = 'ASIN_NOT_OWNED_BY_AUTHOR'
}

/**
 * Entity state for async status
 * @export
 * @enum {string}
 */

export enum SponsoredProductsAsyncStatus {
    Waiting = 'WAITING',
    Paused = 'PAUSED',
    Failed = 'FAILED',
    Succeed = 'SUCCEED'
}

/**
 * Errors related to bids
 * @export
 * @interface SponsoredProductsBiddingError
 */
export interface SponsoredProductsBiddingError {
    /**
     * 
     * @type {SponsoredProductsBiddingErrorReason}
     * @memberof SponsoredProductsBiddingError
     */
    reason: SponsoredProductsBiddingErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsBiddingError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsBiddingError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsBiddingError
     */
    upperLimit?: string;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsBiddingError
     */
    lowerLimit?: string;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsBiddingError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsBiddingErrorReason {
    GtBudget = 'BID_GT_BUDGET',
    OutOfMarketPlaceRange = 'BID_OUT_OF_MARKET_PLACE_RANGE',
    InvalidPlacement = 'BID_INVALID_PLACEMENT'
}

/**
 * The bidding strategy. | Value | Strategy name | Description | |----------------|---------------|-------------| | `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. | | `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. | | `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. | | `RULE_BASED` | Rule based bidding | See Rule based bidding documentation https://advertising.amazon.com/API/docs/en-us/sponsored-products/rule-based-bidding/overview |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsBiddingStrategy {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL',
    RuleBased = 'RULE_BASED',
    Other = 'OTHER'
}

/**
 * Errors related to bids
 * @export
 * @interface SponsoredProductsBillingError
 */
export interface SponsoredProductsBillingError {
    /**
     * 
     * @type {SponsoredProductsBillingErrorReason}
     * @memberof SponsoredProductsBillingError
     */
    reason: SponsoredProductsBillingErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsBillingError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsBillingError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsBillingErrorReason {
    AdvertiserSuspended = 'ADVERTISER_SUSPENDED',
    BillingAccountNotFound = 'BILLING_ACCOUNT_NOT_FOUND',
    PaymentProfileNotFound = 'PAYMENT_PROFILE_NOT_FOUND',
    ExpiredPaymentMethod = 'EXPIRED_PAYMENT_METHOD',
    VettingFailure = 'VETTING_FAILURE',
    AdvertiserBillingSetupIncomplete = 'ADVERTISER_BILLING_SETUP_INCOMPLETE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsBudget
 */
export interface SponsoredProductsBudget {
    /**
     * 
     * @type {SponsoredProductsBudgetType}
     * @memberof SponsoredProductsBudget
     */
    budgetType: SponsoredProductsBudgetType;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsBudget
     */
    budget: number;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsBudget
     */
    effectiveBudget?: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBudgetError
 */
export interface SponsoredProductsBudgetError {
    /**
     * 
     * @type {SponsoredProductsBudgetErrorReason}
     * @memberof SponsoredProductsBudgetError
     */
    reason: SponsoredProductsBudgetErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsBudgetError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsBudgetError
     */
    upperLimit?: string;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsBudgetError
     */
    lowerLimit?: string;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsBudgetError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsBudgetErrorReason {
    BudgetTooLow = 'BUDGET_TOO_LOW',
    BudgetTooHigh = 'BUDGET_TOO_HIGH',
    BudgetLtDefaultBids = 'BUDGET_LT_DEFAULT_BIDS',
    BudgetLtKeywordBids = 'BUDGET_LT_KEYWORD_BIDS',
    BudgetLtPredefinedTargetBids = 'BUDGET_LT_PREDEFINED_TARGET_BIDS',
    BudgetOutOfMarketPlaceRange = 'BUDGET_OUT_OF_MARKET_PLACE_RANGE',
    BudgetCurrencyDoesNotMatchMarketplaceSettings = 'BUDGET_CURRENCY_DOES_NOT_MATCH_MARKETPLACE_SETTINGS',
    BudgetingPolicyInvalid = 'BUDGETING_POLICY_INVALID',
    MissingBudgetingPolicy = 'MISSING_BUDGETING_POLICY',
    MissingInBudgetFlag = 'MISSING_IN_BUDGET_FLAG'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsBudgetType {
    Daily = 'DAILY',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsBulkAdGroupOperationResponse
 */
export interface SponsoredProductsBulkAdGroupOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsAdGroupSuccessResponseItem>}
     * @memberof SponsoredProductsBulkAdGroupOperationResponse
     */
    success?: Array<SponsoredProductsAdGroupSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsAdGroupFailureResponseItem>}
     * @memberof SponsoredProductsBulkAdGroupOperationResponse
     */
    error?: Array<SponsoredProductsAdGroupFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkCampaignNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkCampaignNegativeKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkCampaignNegativeKeywordOperationResponse
     */
    success?: Array<SponsoredProductsCampaignNegativeKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkCampaignNegativeKeywordOperationResponse
     */
    error?: Array<SponsoredProductsCampaignNegativeKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkCampaignOperationResponse
 */
export interface SponsoredProductsBulkCampaignOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsCampaignMutationSuccessResponseItem>}
     * @memberof SponsoredProductsBulkCampaignOperationResponse
     */
    success?: Array<SponsoredProductsCampaignMutationSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignMutationFailureResponseItem>}
     * @memberof SponsoredProductsBulkCampaignOperationResponse
     */
    error?: Array<SponsoredProductsCampaignMutationFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftAdGroupOperationResponse
 */
export interface SponsoredProductsBulkDraftAdGroupOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftAdGroupSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftAdGroupOperationResponse
     */
    success?: Array<SponsoredProductsDraftAdGroupSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftAdGroupFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftAdGroupOperationResponse
     */
    error?: Array<SponsoredProductsDraftAdGroupFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse
     */
    success?: Array<SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse
     */
    error?: Array<SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftCampaignOperationResponse
 */
export interface SponsoredProductsBulkDraftCampaignOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignMutationSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftCampaignOperationResponse
     */
    success?: Array<SponsoredProductsDraftCampaignMutationSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignMutationFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftCampaignOperationResponse
     */
    error?: Array<SponsoredProductsDraftCampaignMutationFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftKeywordOperationResponse
 */
export interface SponsoredProductsBulkDraftKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftKeywordOperationResponse
     */
    success?: Array<SponsoredProductsDraftKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftKeywordOperationResponse
     */
    error?: Array<SponsoredProductsDraftKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkDraftNegativeKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftNegativeKeywordOperationResponse
     */
    success?: Array<SponsoredProductsDraftNegativeKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftNegativeKeywordOperationResponse
     */
    error?: Array<SponsoredProductsDraftNegativeKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftProductAdOperationResponse
 */
export interface SponsoredProductsBulkDraftProductAdOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftProductAdSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftProductAdOperationResponse
     */
    success?: Array<SponsoredProductsDraftProductAdSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftProductAdFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftProductAdOperationResponse
     */
    error?: Array<SponsoredProductsDraftProductAdFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkDraftTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkDraftTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsDraftTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkDraftTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsDraftTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsDraftTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkDraftTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsDraftTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalAdGroupOperationResponse
 */
export interface SponsoredProductsBulkGlobalAdGroupOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalAdGroupSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalAdGroupOperationResponse
     */
    success?: Array<SponsoredProductsGlobalAdGroupSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalAdGroupFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalAdGroupOperationResponse
     */
    error?: Array<SponsoredProductsGlobalAdGroupFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse
     */
    success?: Array<SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse
     */
    error?: Array<SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalCampaignOperationResponse
 */
export interface SponsoredProductsBulkGlobalCampaignOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaignMutationSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalCampaignOperationResponse
     */
    success?: Array<SponsoredProductsGlobalCampaignMutationSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaignMutationFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalCampaignOperationResponse
     */
    error?: Array<SponsoredProductsGlobalCampaignMutationFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalKeywordOperationResponse
 */
export interface SponsoredProductsBulkGlobalKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalKeywordOperationResponse
     */
    success?: Array<SponsoredProductsGlobalKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalKeywordOperationResponse
     */
    error?: Array<SponsoredProductsGlobalKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkGlobalNegativeKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalNegativeKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalNegativeKeywordOperationResponse
     */
    success?: Array<SponsoredProductsGlobalNegativeKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalNegativeKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalNegativeKeywordOperationResponse
     */
    error?: Array<SponsoredProductsGlobalNegativeKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalProductAdOperationResponse
 */
export interface SponsoredProductsBulkGlobalProductAdOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalProductAdSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalProductAdOperationResponse
     */
    success?: Array<SponsoredProductsGlobalProductAdSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalProductAdFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalProductAdOperationResponse
     */
    error?: Array<SponsoredProductsGlobalProductAdFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkGlobalTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkGlobalTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkGlobalTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsGlobalTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkGlobalTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsGlobalTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkKeywordOperationResponse
 */
export interface SponsoredProductsBulkKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkKeywordOperationResponse
     */
    success?: Array<SponsoredProductsKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkKeywordOperationResponse
     */
    error?: Array<SponsoredProductsKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkNegativeKeywordOperationResponse
 */
export interface SponsoredProductsBulkNegativeKeywordOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsNegativeKeywordSuccessResponseItem>}
     * @memberof SponsoredProductsBulkNegativeKeywordOperationResponse
     */
    success?: Array<SponsoredProductsNegativeKeywordSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeKeywordFailureResponseItem>}
     * @memberof SponsoredProductsBulkNegativeKeywordOperationResponse
     */
    error?: Array<SponsoredProductsNegativeKeywordFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkNegativeTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkNegativeTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsNegativeTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkNegativeTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsNegativeTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkNegativeTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsNegativeTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkProductAdOperationResponse
 */
export interface SponsoredProductsBulkProductAdOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsProductAdSuccessResponseItem>}
     * @memberof SponsoredProductsBulkProductAdOperationResponse
     */
    success?: Array<SponsoredProductsProductAdSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsProductAdFailureResponseItem>}
     * @memberof SponsoredProductsBulkProductAdOperationResponse
     */
    error?: Array<SponsoredProductsProductAdFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsBulkTargetingClauseOperationResponse
 */
export interface SponsoredProductsBulkTargetingClauseOperationResponse {
    /**
     * 
     * @type {Array<SponsoredProductsTargetingClauseSuccessResponseItem>}
     * @memberof SponsoredProductsBulkTargetingClauseOperationResponse
     */
    success?: Array<SponsoredProductsTargetingClauseSuccessResponseItem>;
    /**
     * 
     * @type {Array<SponsoredProductsTargetingClauseFailureResponseItem>}
     * @memberof SponsoredProductsBulkTargetingClauseOperationResponse
     */
    error?: Array<SponsoredProductsTargetingClauseFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaign
 */
export interface SponsoredProductsCampaign {
    /**
     * The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof SponsoredProductsCampaign
     */
    portfolioId?: string;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCampaign
     */
    endDate?: string | null;
    /**
     * The identifier of the campaign.
     * @type {string}
     * @memberof SponsoredProductsCampaign
     */
    campaignId: string;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof SponsoredProductsCampaign
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsCampaign
     */
    targetingType: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsCampaign
     */
    state: SponsoredProductsEntityState;
    /**
     * 
     * @type {SponsoredProductsDynamicBidding}
     * @memberof SponsoredProductsCampaign
     */
    dynamicBidding?: SponsoredProductsDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCampaign
     */
    startDate: string;
    /**
     * 
     * @type {SponsoredProductsBudget}
     * @memberof SponsoredProductsCampaign
     */
    budget: SponsoredProductsBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsCampaign
     */
    tags?: { [key: string]: string; };
    /**
     * 
     * @type {SponsoredProductsCampaignExtendedData}
     * @memberof SponsoredProductsCampaign
     */
    extendedData?: SponsoredProductsCampaignExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignAccessError
 */
export interface SponsoredProductsCampaignAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsCampaignAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsCampaignAccessErrorSelector}
     * @memberof SponsoredProductsCampaignAccessError
     */
    errorValue: SponsoredProductsCampaignAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignAccessErrorSelector
 */
export interface SponsoredProductsCampaignAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDateError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    dateError?: SponsoredProductsDateError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsCampaignAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsCampaignAccessExceptionResponseContent
 */
export interface SponsoredProductsCampaignAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsCampaignAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCampaignAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignAccessError>}
     * @memberof SponsoredProductsCampaignAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsCampaignAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignExtendedData
 */
export interface SponsoredProductsCampaignExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsCampaignExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsCampaignServingStatus}
     * @memberof SponsoredProductsCampaignExtendedData
     */
    servingStatus?: SponsoredProductsCampaignServingStatus;
    /**
     * The serving status reasons of the Campaign
     * @type {Array<SponsoredProductsCampaignServingStatusDetail>}
     * @memberof SponsoredProductsCampaignExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsCampaignServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsCampaignExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignMutationError
 */
export interface SponsoredProductsCampaignMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsCampaignMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsCampaignMutationErrorSelector}
     * @memberof SponsoredProductsCampaignMutationError
     */
    errorValue: SponsoredProductsCampaignMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignMutationErrorSelector
 */
export interface SponsoredProductsCampaignMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDateError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    dateError?: SponsoredProductsDateError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBudgetError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    budgetError?: SponsoredProductsBudgetError;
    /**
     * 
     * @type {SponsoredProductsCurrencyError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    currencyError?: SponsoredProductsCurrencyError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsCampaignMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsCampaignMutationExceptionResponseContent
 */
export interface SponsoredProductsCampaignMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsCampaignMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCampaignMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignMutationError>}
     * @memberof SponsoredProductsCampaignMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsCampaignMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignMutationFailureResponseItem
 */
export interface SponsoredProductsCampaignMutationFailureResponseItem {
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsCampaignMutationFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsCampaignMutationError>}
     * @memberof SponsoredProductsCampaignMutationFailureResponseItem
     */
    errors?: Array<SponsoredProductsCampaignMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignMutationSuccessResponseItem
 */
export interface SponsoredProductsCampaignMutationSuccessResponseItem {
    /**
     * the campaign ID
     * @type {string}
     * @memberof SponsoredProductsCampaignMutationSuccessResponseItem
     */
    campaignId?: string;
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsCampaignMutationSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsCampaign}
     * @memberof SponsoredProductsCampaignMutationSuccessResponseItem
     */
    campaign?: SponsoredProductsCampaign;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeyword
 */
export interface SponsoredProductsCampaignNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeyword
     */
    keywordId: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsCampaignNegativeKeyword
     */
    matchType: SponsoredProductsNegativeMatchType;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsCampaignNegativeKeyword
     */
    state: SponsoredProductsEntityState;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeyword
     */
    keywordText: string;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeKeywordExtendedData}
     * @memberof SponsoredProductsCampaignNegativeKeyword
     */
    extendedData?: SponsoredProductsCampaignNegativeKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordAccessError
 */
export interface SponsoredProductsCampaignNegativeKeywordAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeKeywordAccessErrorSelector}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessError
     */
    errorValue: SponsoredProductsCampaignNegativeKeywordAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsCampaignNegativeKeywordAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeKeywordAccessError>}
     * @memberof SponsoredProductsCampaignNegativeKeywordAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsCampaignNegativeKeywordAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordExtendedData
 */
export interface SponsoredProductsCampaignNegativeKeywordExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * The serving status reasons of the Keyword
     * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
     * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsCampaignNegativeKeywordFailureResponseItem {
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsCampaignNegativeKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsCampaignNegativeKeywordMutationError>}
     * @memberof SponsoredProductsCampaignNegativeKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsCampaignNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordMutationError
 */
export interface SponsoredProductsCampaignNegativeKeywordMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeKeywordMutationErrorSelector}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationError
     */
    errorValue: SponsoredProductsCampaignNegativeKeywordMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsCampaignNegativeKeywordMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeKeywordMutationError>}
     * @memberof SponsoredProductsCampaignNegativeKeywordMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsCampaignNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsCampaignNegativeKeywordSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeKeyword}
     * @memberof SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
     */
    campaignNegativeKeyword?: SponsoredProductsCampaignNegativeKeyword;
    /**
     * the campaignNegativeKeyword ID
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
     */
    campaignNegativeKeywordId?: string;
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsCampaignNegativeKeywordSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClause
 */
export interface SponsoredProductsCampaignNegativeTargetingClause {
    /**
     * The CampaignNegativeTargetingClause expression.
     * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCampaignNegativeTargetingClause
     */
    expression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetingClause
     */
    targetId: string;
    /**
     * The resolved CampaignNegativeTargetingClause expression.
     * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCampaignNegativeTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsCampaignNegativeTargetingClause
     */
    state: SponsoredProductsEntityState;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeTargetingClauseExtendedData}
     * @memberof SponsoredProductsCampaignNegativeTargetingClause
     */
    extendedData?: SponsoredProductsCampaignNegativeTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsCampaignNegativeTargetingClauseExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * The serving status reasons of the CampaignNegativeTargetingClause
     * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem {
    /**
     * the index of the CampaignNegativeTargets in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsCampaignNegativeTargetsMutationError>}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsCampaignNegativeTargetsMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem {
    /**
     * the CampaignNegativeTargets ID
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
     */
    campaignNegativeTargetingClauseId?: string;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeTargetingClause}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
     */
    campaignNegativeTargetingClauses?: SponsoredProductsCampaignNegativeTargetingClause;
    /**
     * the index of the CampaignNegativeTargets in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsCampaignNegativeTargetingClauseSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsAccessError
 */
export interface SponsoredProductsCampaignNegativeTargetsAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeTargetsAccessErrorSelector}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessError
     */
    errorValue: SponsoredProductsCampaignNegativeTargetsAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
 */
export interface SponsoredProductsCampaignNegativeTargetsAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeTargetsAccessError>}
     * @memberof SponsoredProductsCampaignNegativeTargetsAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsCampaignNegativeTargetsAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsMutationError
 */
export interface SponsoredProductsCampaignNegativeTargetsMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsCampaignNegativeTargetsMutationErrorSelector}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationError
     */
    errorValue: SponsoredProductsCampaignNegativeTargetsMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
 */
export interface SponsoredProductsCampaignNegativeTargetsMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsTargetingClauseSetupError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
 */
export interface SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeTargetsMutationError>}
     * @memberof SponsoredProductsCampaignNegativeTargetsMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsCampaignNegativeTargetsMutationError>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCampaignServingStatus {
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserOutOfBudget = 'ADVERTISER_OUT_OF_BUDGET',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AccountOutOfBudget = 'ACCOUNT_OUT_OF_BUDGET',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCampaignServingStatusDetail
 */
export interface SponsoredProductsCampaignServingStatusDetail {
    /**
     * 
     * @type {SponsoredProductsCampaignServingStatusReason}
     * @memberof SponsoredProductsCampaignServingStatusDetail
     */
    name?: SponsoredProductsCampaignServingStatusReason;
    /**
     * A URL with additional information about the status identifier.
     * @type {string}
     * @memberof SponsoredProductsCampaignServingStatusDetail
     */
    helpUrl?: string;
    /**
     * A human-readable description of the status identifier specified in the name field.
     * @type {string}
     * @memberof SponsoredProductsCampaignServingStatusDetail
     */
    message?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCampaignServingStatusReason {
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    PortfolioStatusEnabledDetail = 'PORTFOLIO_STATUS_ENABLED_DETAIL',
    PortfolioPausedDetail = 'PORTFOLIO_PAUSED_DETAIL',
    PortfolioArchivedDetail = 'PORTFOLIO_ARCHIVED_DETAIL',
    PortfolioOutOfBudgetDetail = 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
    PortfolioPendingStartDateDetail = 'PORTFOLIO_PENDING_START_DATE_DETAIL',
    PortfolioEndedDetail = 'PORTFOLIO_ENDED_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
    AccountOutOfBudgetDetail = 'ACCOUNT_OUT_OF_BUDGET_DETAIL',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCopyCampaign
 */
export interface SponsoredProductsCopyCampaign {
    /**
     * 
     * @type {SponsoredProductsTargetCampaignAttributes}
     * @memberof SponsoredProductsCopyCampaign
     */
    targetCampaignAttributes: SponsoredProductsTargetCampaignAttributes;
    /**
     * entity object identifier
     * @type {string}
     * @memberof SponsoredProductsCopyCampaign
     */
    sourceCampaignId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCopyCampaignErrorDetail
 */
export interface SponsoredProductsCopyCampaignErrorDetail {
    /**
     * An enumerated success or error code for machine use
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignErrorDetail
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignErrorDetail
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCopyCampaignResponse
 */
export interface SponsoredProductsCopyCampaignResponse {
    /**
     * Id of the request to be passed in GET /copy/{requestId}.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignResponse
     */
    requestId?: string;
    /**
     * 
     * @type {SponsoredProductsCopyCampaignErrorDetail}
     * @memberof SponsoredProductsCopyCampaignResponse
     */
    errorDetail?: SponsoredProductsCopyCampaignErrorDetail;
    /**
     * 
     * @type {SponsoredProductsCopyCampaign}
     * @memberof SponsoredProductsCopyCampaignResponse
     */
    copyCampaignItem?: SponsoredProductsCopyCampaign;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCopyCampaignTaskDetails
 */
export interface SponsoredProductsCopyCampaignTaskDetails {
    /**
     * The target marketplace in obfuscated format.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    targetMarketplaceId?: string;
    /**
     * The identifier of the campaign in the target marketplace.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    targetCampaignId?: string;
    /**
     * Percent of copy operation that is complete
     * @type {number}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    percentageCompleted?: number;
    /**
     * The source marketplace in obfuscated format.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    sourceMarketplaceId?: string;
    /**
     * The identifier of the campaign in the source marketplace.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    sourceCampaignId?: string;
    /**
     * The identifier of the advertiser in source marketplace.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    sourceAdvertiserId?: string;
    /**
     * The identifier of the advertiser in the target marketplace.
     * @type {string}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    targetAdvertiserId?: string;
    /**
     * 
     * @type {SponsoredProductsAsyncStatus}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    status?: SponsoredProductsAsyncStatus;
    /**
     * Errors that could occur during async process (up to 10)
     * @type {Array<SponsoredProductsCopyCampaignErrorDetail>}
     * @memberof SponsoredProductsCopyCampaignTaskDetails
     */
    errorDetails?: Array<SponsoredProductsCopyCampaignErrorDetail>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCopySponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsCopySponsoredProductsCampaignsRequestContent {
    /**
     * An array of campaigns.
     * @type {Array<SponsoredProductsCopyCampaign>}
     * @memberof SponsoredProductsCopySponsoredProductsCampaignsRequestContent
     */
    copyCampaignsItems: Array<SponsoredProductsCopyCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCopySponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsCopySponsoredProductsCampaignsResponseContent {
    /**
     * 
     * @type {Array<SponsoredProductsCopyCampaignResponse>}
     * @memberof SponsoredProductsCopySponsoredProductsCampaignsResponseContent
     */
    copyCampaignResponses: Array<SponsoredProductsCopyCampaignResponse>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent
 */
export interface SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent {
    /**
     * 
     * @type {SponsoredProductsCopyCampaignTaskDetails}
     * @memberof SponsoredProductsCopySponsoredProductsCampaignsStatusResponseContent
     */
    asyncTaskDetail: SponsoredProductsCopyCampaignTaskDetails;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateAdGroup
 */
export interface SponsoredProductsCreateAdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateAdGroup
     */
    campaignId: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsCreateAdGroup
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateAdGroup
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsCreateAdGroup
     */
    defaultBid: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateCampaign
 */
export interface SponsoredProductsCreateCampaign {
    /**
     * The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaign
     */
    portfolioId?: string;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaign
     */
    endDate?: string | null;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaign
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsCreateCampaign
     */
    targetingType: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateCampaign
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
     * @memberof SponsoredProductsCreateCampaign
     */
    dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
    /**
     * Default: today\'s date. The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateBudget}
     * @memberof SponsoredProductsCreateCampaign
     */
    budget: SponsoredProductsCreateOrUpdateBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsCreateCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateCampaignNegativeKeyword
 */
export interface SponsoredProductsCreateCampaignNegativeKeyword {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaignNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
     * @memberof SponsoredProductsCreateCampaignNegativeKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateCampaignNegativeKeyword
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaignNegativeKeyword
     */
    keywordText: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateCampaignNegativeTargetingClause
 */
export interface SponsoredProductsCreateCampaignNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCreateCampaignNegativeTargetingClause
     */
    expression: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateCampaignNegativeTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateCampaignNegativeTargetingClause
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftAdGroup
 */
export interface SponsoredProductsCreateDraftAdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftAdGroup
     */
    campaignId: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftAdGroup
     */
    name?: string;
    /**
     * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsCreateDraftAdGroup
     */
    defaultBid: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftCampaign
 */
export interface SponsoredProductsCreateDraftCampaign {
    /**
     * The identifier of an existing portfolio to which the draft is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    portfolioId?: string;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    endDate?: string | null;
    /**
     * The name of the DraftCampaign.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    targetingType: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    dynamicBidding?: SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDraftCampaignBudget}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    budget?: SponsoredProductsCreateOrUpdateDraftCampaignBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsCreateDraftCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftKeyword
 */
export interface SponsoredProductsCreateDraftKeyword {
    /**
     * The unlocalized draft keyword text in the preferred locale of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifer of the campaign to which the draft keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateMatchType}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    matchType?: SponsoredProductsCreateOrUpdateMatchType;
    /**
     * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    bid?: number;
    /**
     * The identifier of the ad group to which this draft keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    adGroupId: string;
    /**
     * The draft keyword text.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftKeyword
     */
    keywordText: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftNegativeKeyword
 */
export interface SponsoredProductsCreateDraftNegativeKeyword {
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifer of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
     * @memberof SponsoredProductsCreateDraftNegativeKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeKeyword
     */
    adGroupId: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeKeyword
     */
    keywordText: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftNegativeTargetingClause
 */
export interface SponsoredProductsCreateDraftNegativeTargetingClause {
    /**
     * The DraftNegativeTargeting expression.
     * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCreateDraftNegativeTargetingClause
     */
    expression: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeTargetingClause
     */
    campaignId: string;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftNegativeTargetingClause
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftProductAd
 */
export interface SponsoredProductsCreateDraftProductAd {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftProductAd
     */
    campaignId: string;
    /**
     * The custom text to use for creating a custom text ad for the associated ASIN. Defined only for KDP Authors and Book Vendors in US marketplace.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftProductAd
     */
    customText?: string;
    /**
     * The ASIN associated with the product. Defined for vendors only.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftProductAd
     */
    asin?: string;
    /**
     * The SKU associated with the product. Defined for seller accounts only.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftProductAd
     */
    sku?: string;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftProductAd
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateDraftTargetingClause
 */
export interface SponsoredProductsCreateDraftTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>}
     * @memberof SponsoredProductsCreateDraftTargetingClause
     */
    expression: Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeWithoutOther}
     * @memberof SponsoredProductsCreateDraftTargetingClause
     */
    expressionType: SponsoredProductsExpressionTypeWithoutOther;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsCreateDraftTargetingClause
     */
    state?: SponsoredProductsEntityState;
    /**
     * The bid for ads sourced using the target. Targets that do not have bid values in listDraftTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsCreateDraftTargetingClause
     */
    bid?: number;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateDraftTargetingClause
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateExpressionType {
    Manual = 'MANUAL'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalAdGroup
 */
export interface SponsoredProductsCreateGlobalAdGroup {
    /**
     * The identifier of the campaign to which the AdGroup is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalAdGroup
     */
    campaignId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsCreateGlobalAdGroup
     */
    applicableMarketplaces?: Array<string>;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalAdGroup
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalAdGroup
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsCreateGlobalAdGroup
     */
    defaultBid: SponsoredProductsGlobalBid;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalCampaign
 */
export interface SponsoredProductsCreateGlobalCampaign {
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    endDate?: string;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    targetingType: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalBudget}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    budget: SponsoredProductsGlobalBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsCreateGlobalCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalCampaignNegativeKeyword
 */
export interface SponsoredProductsCreateGlobalCampaignNegativeKeyword {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
     * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
    /**
     * Name for the keyword
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordText}
     * @memberof SponsoredProductsCreateGlobalCampaignNegativeKeyword
     */
    keywordText: SponsoredProductsGlobalNegativeKeywordText;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalKeyword
 */
export interface SponsoredProductsCreateGlobalKeyword {
    /**
     * The identifer of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateMatchType}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateMatchType;
    /**
     * Name for the Keyword
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    bid?: SponsoredProductsGlobalBid;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordText}
     * @memberof SponsoredProductsCreateGlobalKeyword
     */
    keywordText: SponsoredProductsGlobalKeywordText;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalNegativeKeyword
 */
export interface SponsoredProductsCreateGlobalNegativeKeyword {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
     * @memberof SponsoredProductsCreateGlobalNegativeKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
    /**
     * Name for the keyword
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalNegativeKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalNegativeKeyword
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalNegativeKeyword
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordText}
     * @memberof SponsoredProductsCreateGlobalNegativeKeyword
     */
    keywordText: SponsoredProductsGlobalNegativeKeywordText;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalNegativeTargetingClause
 */
export interface SponsoredProductsCreateGlobalNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
     */
    expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
     */
    campaignId: string;
    /**
     * Name for the negative targeting clause
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalNegativeTargetingClause
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalProductAd
 */
export interface SponsoredProductsCreateGlobalProductAd {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    campaignId: string;
    /**
     * The custom text to use for creating a custom text ad for the associated ASIN. Defined for only KDP Authors and Book Vendors
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    customText?: string;
    /**
     * Name for the product Ad
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalProductIdentifiers}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    asin?: SponsoredProductsGlobalProductIdentifiers;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalProductIdentifiers}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    sku?: SponsoredProductsGlobalProductIdentifiers;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalProductAd
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateGlobalTargetingClause
 */
export interface SponsoredProductsCreateGlobalTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    campaignId: string;
    /**
     * Name for the targeting clause
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateExpressionType}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    expressionType: SponsoredProductsCreateExpressionType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    state: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    bid?: SponsoredProductsGlobalBid;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateGlobalTargetingClause
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateKeyword
 */
export interface SponsoredProductsCreateKeyword {
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsCreateKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SponsoredProductsCreateKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifer of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateMatchType}
     * @memberof SponsoredProductsCreateKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateMatchType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateKeyword
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsCreateKeyword
     */
    bid?: number | null;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateKeyword
     */
    adGroupId: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsCreateKeyword
     */
    keywordText: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateNegativeKeyword
 */
export interface SponsoredProductsCreateNegativeKeyword {
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifer of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateNegativeMatchType}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    matchType: SponsoredProductsCreateOrUpdateNegativeMatchType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    adGroupId: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeKeyword
     */
    keywordText: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateNegativeTargetingClause
 */
export interface SponsoredProductsCreateNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCreateNegativeTargetingClause
     */
    expression: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateNegativeTargetingClause
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateNegativeTargetingClause
     */
    adGroupId: string;
}
/**
 * The bidding strategy. `strategy` is required for create requests if dynamicBidding is provided, but is optional for update requests. | Value | Strategy name | Description | |----------------|---------------|-------------| | `LEGACY_FOR_SALES` | Dynamic bids - down only | Lowers your bids in real time when your ad may be less likely to convert to a sale. Campaigns created before the release of the bidding controls feature used this setting by default. | | `AUTO_FOR_SALES` | Dynamic bids - up and down | Increases or decreases your bids in real time by a maximum of 100%. With this setting bids increase when your ad is more likely to convert to a sale, and bids decrease when less likely to convert to a sale. | | `MANUAL` | Fixed bid | Uses your exact bid and any placement adjustments you set, and is not subject to dynamic bidding. | | `RULE_BASED` | Rule based bidding | See Rule based bidding documentation https://advertising.amazon.com/API/docs/en-us/sponsored-products/rule-based-bidding/overview |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateBiddingStrategy {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL',
    RuleBased = 'RULE_BASED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateOrUpdateBudget
 */
export interface SponsoredProductsCreateOrUpdateBudget {
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateBudgetType}
     * @memberof SponsoredProductsCreateOrUpdateBudget
     */
    budgetType: SponsoredProductsCreateOrUpdateBudgetType;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsCreateOrUpdateBudget
     */
    budget: number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateBudgetType {
    Daily = 'DAILY'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateOrUpdateDraftCampaignBudget
 */
export interface SponsoredProductsCreateOrUpdateDraftCampaignBudget {
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDraftCampaignBudgetType}
     * @memberof SponsoredProductsCreateOrUpdateDraftCampaignBudget
     */
    budgetType: SponsoredProductsCreateOrUpdateDraftCampaignBudgetType;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsCreateOrUpdateDraftCampaignBudget
     */
    budget: number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateDraftCampaignBudgetType {
    Daily = 'DAILY'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
 */
export interface SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding {
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignPlacementBidding>}
     * @memberof SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
     */
    placementBidding?: Array<SponsoredProductsDraftCampaignPlacementBidding>;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateBiddingStrategy}
     * @memberof SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding
     */
    strategy: SponsoredProductsCreateOrUpdateBiddingStrategy;
}
/**
 * Specifies bidding controls. DynamicBidding is optional for both Create and Update requests. For Create Campaign requests, if you don\'t specify dynamicBidding, default strategy of `LEGACY_FOR_SALES` will be applied.
 * @export
 * @interface SponsoredProductsCreateOrUpdateDynamicBidding
 */
export interface SponsoredProductsCreateOrUpdateDynamicBidding {
    /**
     * 
     * @type {Array<SponsoredProductsPlacementBidding>}
     * @memberof SponsoredProductsCreateOrUpdateDynamicBidding
     */
    placementBidding?: Array<SponsoredProductsPlacementBidding>;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateBiddingStrategy}
     * @memberof SponsoredProductsCreateOrUpdateDynamicBidding
     */
    strategy?: SponsoredProductsCreateOrUpdateBiddingStrategy;
}
/**
 * Entity state for create or update operation
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateEntityState {
    Enabled = 'ENABLED',
    Paused = 'PAUSED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateOrUpdateGlobalEntityState
 */
export interface SponsoredProductsCreateOrUpdateGlobalEntityState {
    /**
     * 
     * @type {Array<SponsoredProductsCreateOrUpdateMarketplaceState>}
     * @memberof SponsoredProductsCreateOrUpdateGlobalEntityState
     */
    marketplaceSettings?: Array<SponsoredProductsCreateOrUpdateMarketplaceState>;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateOrUpdateGlobalEntityState
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateOrUpdateMarketplaceState
 */
export interface SponsoredProductsCreateOrUpdateMarketplaceState {
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsCreateOrUpdateMarketplaceState
     */
    marketplace: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateOrUpdateMarketplaceState
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateMatchType {
    Exact = 'EXACT',
    Phrase = 'PHRASE',
    Broad = 'BROAD'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateNegativeMatchType {
    Exact = 'NEGATIVE_EXACT',
    Phrase = 'NEGATIVE_PHRASE',
    Broad = 'NEGATIVE_BROAD'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate
 */
export interface SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate {
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType}
     * @memberof SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate
     */
    type: SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType;
    /**
     * The expression value
     * @type {string}
     * @memberof SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate
     */
    value?: string;
}
/**
 * The type of nagative targeting expression. You can only specify values for the following predicates: | Predicate | Description | | --- | --- | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicateType {
    BrandSameAs = 'ASIN_BRAND_SAME_AS',
    SameAs = 'ASIN_SAME_AS'
}

/**
 * 
 * @export
 * @interface SponsoredProductsCreateProductAd
 */
export interface SponsoredProductsCreateProductAd {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SponsoredProductsCreateProductAd
     */
    campaignId: string;
    /**
     * The custom text to use for creating a custom text ad for the associated ASIN. Defined only for KDP Authors and Book Vendors in US marketplace.
     * @type {string}
     * @memberof SponsoredProductsCreateProductAd
     */
    customText?: string;
    /**
     * The ASIN associated with the product. Defined for vendors only.
     * @type {string}
     * @memberof SponsoredProductsCreateProductAd
     */
    asin?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateProductAd
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The SKU associated with the product. Defined for seller accounts only.
     * @type {string}
     * @memberof SponsoredProductsCreateProductAd
     */
    sku?: string;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof SponsoredProductsCreateProductAd
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent {
    /**
     * An array of adGroups.
     * @type {Array<SponsoredProductsCreateAdGroup>}
     * @memberof SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent
     */
    adGroups: Array<SponsoredProductsCreateAdGroup>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkAdGroupOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent {
    /**
     * An array of campaignNegativeKeywords.
     * @type {Array<SponsoredProductsCreateCampaignNegativeKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywords: Array<SponsoredProductsCreateCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
    /**
     * An array of Campaign Negative TargetingClauses.
     * @type {Array<SponsoredProductsCreateCampaignNegativeTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    campaignNegativeTargetingClauses: Array<SponsoredProductsCreateCampaignNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
     */
    campaignNegativeTargetingClauses: SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignsRequestContent {
    /**
     * An array of campaigns.
     * @type {Array<SponsoredProductsCreateCampaign>}
     * @memberof SponsoredProductsCreateSponsoredProductsCampaignsRequestContent
     */
    campaigns: Array<SponsoredProductsCreateCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent {
    /**
     * An array of draftAdGroups.
     * @type {Array<SponsoredProductsCreateDraftAdGroup>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftAdGroupsRequestContent
     */
    adGroups: Array<SponsoredProductsCreateDraftAdGroup>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftAdGroupOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkDraftAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent {
    /**
     * An array of drafts.
     * @type {Array<SponsoredProductsCreateDraftCampaign>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftCampaignsRequestContent
     */
    campaigns: Array<SponsoredProductsCreateDraftCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent {
    /**
     * An array of draft keywords.
     * @type {Array<SponsoredProductsCreateDraftKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftKeywordsRequestContent
     */
    keywords: Array<SponsoredProductsCreateDraftKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkDraftKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent {
    /**
     * An array of negativeKeywords.
     * @type {Array<SponsoredProductsCreateDraftNegativeKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    negativeKeywords: Array<SponsoredProductsCreateDraftNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkDraftNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent {
    /**
     * An array of negativeTargetingClauses.
     * @type {Array<SponsoredProductsCreateDraftNegativeTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    negativeTargetingClauses: Array<SponsoredProductsCreateDraftNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent {
    /**
     * An array of ads.
     * @type {Array<SponsoredProductsCreateDraftProductAd>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftProductAdsRequestContent
     */
    productAds?: Array<SponsoredProductsCreateDraftProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftProductAdOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftProductAdsResponseContent
     */
    draftProductAds: SponsoredProductsBulkDraftProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent {
    /**
     * An array of draftTargetingClauses.
     * @type {Array<SponsoredProductsCreateDraftTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftTargetingClausesRequestContent
     */
    targetingClauses: Array<SponsoredProductsCreateDraftTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsDraftTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkDraftTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent {
    /**
     * An array of adGroups.
     * @type {Array<SponsoredProductsCreateGlobalAdGroup>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalAdGroupsRequestContent
     */
    adGroups: Array<SponsoredProductsCreateGlobalAdGroup>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalAdGroupOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkGlobalAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
    /**
     * An array of campaignNegativeKeywords.
     * @type {Array<SponsoredProductsCreateGlobalCampaignNegativeKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywords?: Array<SponsoredProductsCreateGlobalCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent {
    /**
     * An array of campaigns.
     * @type {Array<SponsoredProductsCreateGlobalCampaign>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignsRequestContent
     */
    campaigns: Array<SponsoredProductsCreateGlobalCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalCampaignOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkGlobalCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent {
    /**
     * An array of keywords.
     * @type {Array<SponsoredProductsCreateGlobalKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalKeywordsRequestContent
     */
    keywords: Array<SponsoredProductsCreateGlobalKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkGlobalKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent {
    /**
     * An array of negativeKeywords.
     * @type {Array<SponsoredProductsCreateGlobalNegativeKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    negativeKeywords?: Array<SponsoredProductsCreateGlobalNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkGlobalNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
    /**
     * An array of negativeTargeting.
     * @type {Array<SponsoredProductsCreateGlobalNegativeTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    negativeTargetingClauses?: Array<SponsoredProductsCreateGlobalNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent {
    /**
     * An array of ads.
     * @type {Array<SponsoredProductsCreateGlobalProductAd>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalProductAdsRequestContent
     */
    productAds?: Array<SponsoredProductsCreateGlobalProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalProductAdOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkGlobalProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent {
    /**
     * An array of targetingClauses.
     * @type {Array<SponsoredProductsCreateGlobalTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesRequestContent
     */
    targetingClauses?: Array<SponsoredProductsCreateGlobalTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsGlobalTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkGlobalTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsKeywordsRequestContent {
    /**
     * An array of keywords.
     * @type {Array<SponsoredProductsCreateKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsKeywordsRequestContent
     */
    keywords: Array<SponsoredProductsCreateKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent {
    /**
     * An array of negativeKeywords.
     * @type {Array<SponsoredProductsCreateNegativeKeyword>}
     * @memberof SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent
     */
    negativeKeywords: Array<SponsoredProductsCreateNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent {
    /**
     * An array of negativeTargeting.
     * @type {Array<SponsoredProductsCreateNegativeTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent
     */
    negativeTargetingClauses: Array<SponsoredProductsCreateNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsProductAdsRequestContent {
    /**
     * An array of ads.
     * @type {Array<SponsoredProductsCreateProductAd>}
     * @memberof SponsoredProductsCreateSponsoredProductsProductAdsRequestContent
     */
    productAds: Array<SponsoredProductsCreateProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkProductAdOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent {
    /**
     * An array of targetingClauses.
     * @type {Array<SponsoredProductsCreateTargetingClause>}
     * @memberof SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent
     */
    targetingClauses: Array<SponsoredProductsCreateTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkTargetingClauseOperationResponse}
     * @memberof SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateTargetingClause
 */
export interface SponsoredProductsCreateTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsCreateTargetingExpressionPredicate>}
     * @memberof SponsoredProductsCreateTargetingClause
     */
    expression: Array<SponsoredProductsCreateTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsCreateExpressionType}
     * @memberof SponsoredProductsCreateTargetingClause
     */
    expressionType: SponsoredProductsCreateExpressionType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsCreateTargetingClause
     */
    state: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsCreateTargetingClause
     */
    bid?: number | null;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsCreateTargetingClause
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsCreateTargetingExpressionPredicate
 */
export interface SponsoredProductsCreateTargetingExpressionPredicate {
    /**
     * 
     * @type {SponsoredProductsCreateTargetingExpressionPredicateType}
     * @memberof SponsoredProductsCreateTargetingExpressionPredicate
     */
    type: SponsoredProductsCreateTargetingExpressionPredicateType;
    /**
     * The expression value
     * @type {string}
     * @memberof SponsoredProductsCreateTargetingExpressionPredicate
     */
    value?: string;
}
/**
 * The type of targeting expression. You can specify values for the following predicates: | Predicate | Description | | --- | --- | | `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed. | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. | | `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. | | `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. | | `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. | | `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. | | `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | | `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. | | `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   | | `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCreateTargetingExpressionPredicateType {
    CategorySameAs = 'ASIN_CATEGORY_SAME_AS',
    BrandSameAs = 'ASIN_BRAND_SAME_AS',
    PriceLessThan = 'ASIN_PRICE_LESS_THAN',
    PriceBetween = 'ASIN_PRICE_BETWEEN',
    PriceGreaterThan = 'ASIN_PRICE_GREATER_THAN',
    ReviewRatingLessThan = 'ASIN_REVIEW_RATING_LESS_THAN',
    ReviewRatingBetween = 'ASIN_REVIEW_RATING_BETWEEN',
    ReviewRatingGreaterThan = 'ASIN_REVIEW_RATING_GREATER_THAN',
    SameAs = 'ASIN_SAME_AS',
    AgeRangeSameAs = 'ASIN_AGE_RANGE_SAME_AS',
    GenreSameAs = 'ASIN_GENRE_SAME_AS',
    IsPrimeShippingEligible = 'ASIN_IS_PRIME_SHIPPING_ELIGIBLE',
    ExpandedFrom = 'ASIN_EXPANDED_FROM'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCurrency {
    Usd = 'USD',
    Eur = 'EUR',
    Gbp = 'GBP',
    Mxn = 'MXN',
    Jpy = 'JPY',
    Inr = 'INR',
    Pln = 'PLN',
    Sgd = 'SGD',
    Aud = 'AUD',
    Cad = 'CAD',
    Brl = 'BRL',
    Sek = 'SEK',
    Try = 'TRY',
    Aed = 'AED',
    Sar = 'SAR',
    Egp = 'EGP'
}

/**
 * Errors related to currency
 * @export
 * @interface SponsoredProductsCurrencyError
 */
export interface SponsoredProductsCurrencyError {
    /**
     * 
     * @type {SponsoredProductsCurrencyErrorReason}
     * @memberof SponsoredProductsCurrencyError
     */
    reason: SponsoredProductsCurrencyErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsCurrencyError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsCurrencyError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsCurrencyErrorReason {
    PreferredCurrencyNotSet = 'PREFERRED_CURRENCY_NOT_SET',
    CurrencyNotSupported = 'CURRENCY_NOT_SUPPORTED',
    CannotUpdateCurrency = 'CANNOT_UPDATE_CURRENCY',
    CurrencyNotMatchingPreferredCurrency = 'CURRENCY_NOT_MATCHING_PREFERRED_CURRENCY'
}

/**
 * 
 * @export
 * @interface SponsoredProductsDateError
 */
export interface SponsoredProductsDateError {
    /**
     * 
     * @type {SponsoredProductsDateErrorReason}
     * @memberof SponsoredProductsDateError
     */
    reason: SponsoredProductsDateErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsDateError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDateError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsDateErrorReason {
    InvalidDate = 'INVALID_DATE',
    StartDateEarlierThanToday = 'START_DATE_EARLIER_THAN_TODAY',
    EndDateEarlierThanToday = 'END_DATE_EARLIER_THAN_TODAY',
    StartDateLaterThanMaximum = 'START_DATE_LATER_THAN_MAXIMUM',
    EndDateLaterThanMaximum = 'END_DATE_LATER_THAN_MAXIMUM',
    StartDateAfterEndDate = 'START_DATE_AFTER_END_DATE',
    UpdatingReadOnlyStartDate = 'UPDATING_READ_ONLY_START_DATE',
    UpdatingReadOnlyEndDate = 'UPDATING_READ_ONLY_END_DATE',
    UpdatingEndedCampaignWithoutExtension = 'UPDATING_ENDED_CAMPAIGN_WITHOUT_EXTENSION'
}

/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
     */
    adGroupIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkAdGroupOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    campaignNegativeTargetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent
     */
    campaignNegativeTargetingClauses: SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
     */
    campaignIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftAdGroupsRequestContent
     */
    adGroupIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftAdGroupOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftAdGroupsResponseContent
     */
    draftAdGroups: SponsoredProductsBulkDraftAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkDraftCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignsRequestContent
     */
    campaignIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftKeywordsRequestContent
     */
    keywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkDraftKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    negativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkDraftNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    negativeTargetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkDraftNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftProductAdsRequestContent
     */
    adIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftProductAdOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkDraftProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesRequestContent
     */
    targetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsDraftTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkDraftTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalAdGroupOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkGlobalAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignsRequestContent
     */
    campaignIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalCampaignOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkGlobalCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalKeywordsRequestContent
     */
    keywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkGlobalKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkGlobalNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalProductAdsRequestContent
     */
    adIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalProductAdOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkGlobalProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesRequestContent
     */
    targetIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsGlobalTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkGlobalTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
     */
    keywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
     */
    negativeKeywordIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
     */
    negativeTargetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
     */
    adIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkProductAdOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
     */
    targetIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkTargetingClauseOperationResponse}
     * @memberof SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroup
 */
export interface SponsoredProductsDraftAdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroup
     */
    campaignId: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroup
     */
    name: string;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroup
     */
    adGroupId: string;
    /**
     * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsDraftAdGroup
     */
    defaultBid: number;
    /**
     * 
     * @type {SponsoredProductsDraftAdGroupExtendedData}
     * @memberof SponsoredProductsDraftAdGroup
     */
    extendedData?: SponsoredProductsDraftAdGroupExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupAccessError
 */
export interface SponsoredProductsDraftAdGroupAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftAdGroupAccessErrorSelector}
     * @memberof SponsoredProductsDraftAdGroupAccessError
     */
    errorValue: SponsoredProductsDraftAdGroupAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupAccessErrorSelector
 */
export interface SponsoredProductsDraftAdGroupAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftAdGroupAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftAdGroupAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftAdGroupAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftAdGroupAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftAdGroupAccessError>}
     * @memberof SponsoredProductsDraftAdGroupAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftAdGroupAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupExtendedData
 */
export interface SponsoredProductsDraftAdGroupExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsAdGroupServingStatus}
     * @memberof SponsoredProductsDraftAdGroupExtendedData
     */
    servingStatus?: SponsoredProductsAdGroupServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupFailureResponseItem
 */
export interface SponsoredProductsDraftAdGroupFailureResponseItem {
    /**
     * the index of the adGroup in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftAdGroupFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftAdGroupMutationError>}
     * @memberof SponsoredProductsDraftAdGroupFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftAdGroupMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupMutationError
 */
export interface SponsoredProductsDraftAdGroupMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftAdGroupMutationErrorSelector}
     * @memberof SponsoredProductsDraftAdGroupMutationError
     */
    errorValue: SponsoredProductsDraftAdGroupMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupMutationErrorSelector
 */
export interface SponsoredProductsDraftAdGroupMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftAdGroupMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftAdGroupMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftAdGroupMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftAdGroupMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftAdGroupMutationError>}
     * @memberof SponsoredProductsDraftAdGroupMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftAdGroupMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftAdGroupSuccessResponseItem
 */
export interface SponsoredProductsDraftAdGroupSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsDraftAdGroup}
     * @memberof SponsoredProductsDraftAdGroupSuccessResponseItem
     */
    adGroup?: SponsoredProductsDraftAdGroup;
    /**
     * the index of the draftAdGroup in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftAdGroupSuccessResponseItem
     */
    index: number;
    /**
     * the adGroup ID
     * @type {string}
     * @memberof SponsoredProductsDraftAdGroupSuccessResponseItem
     */
    adGroupId?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaign
 */
export interface SponsoredProductsDraftCampaign {
    /**
     * The identifier of an existing portfolio to which the draft is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaign
     */
    portfolioId?: string;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaign
     */
    endDate?: string | null;
    /**
     * The identifier of the draft.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaign
     */
    campaignId: string;
    /**
     * The name of the draft.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaign
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsDraftCampaign
     */
    targetingType: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignDynamicBidding}
     * @memberof SponsoredProductsDraftCampaign
     */
    dynamicBidding?: SponsoredProductsDraftCampaignDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignBudget}
     * @memberof SponsoredProductsDraftCampaign
     */
    budget: SponsoredProductsDraftCampaignBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsDraftCampaign
     */
    tags?: { [key: string]: string; };
    /**
     * 
     * @type {SponsoredProductsDraftCampaignExtendedData}
     * @memberof SponsoredProductsDraftCampaign
     */
    extendedData?: SponsoredProductsDraftCampaignExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignAccessError
 */
export interface SponsoredProductsDraftCampaignAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignAccessErrorSelector}
     * @memberof SponsoredProductsDraftCampaignAccessError
     */
    errorValue: SponsoredProductsDraftCampaignAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignAccessErrorSelector
 */
export interface SponsoredProductsDraftCampaignAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDateError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    dateError?: SponsoredProductsDateError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftCampaignAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftCampaignAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignAccessError>}
     * @memberof SponsoredProductsDraftCampaignAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftCampaignAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignBudget
 */
export interface SponsoredProductsDraftCampaignBudget {
    /**
     * 
     * @type {SponsoredProductsDraftCampaignBudgetType}
     * @memberof SponsoredProductsDraftCampaignBudget
     */
    budgetType: SponsoredProductsDraftCampaignBudgetType;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsDraftCampaignBudget
     */
    budget: number;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsDraftCampaignBudgetType {
    Daily = 'DAILY',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignDynamicBidding
 */
export interface SponsoredProductsDraftCampaignDynamicBidding {
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignPlacementBidding>}
     * @memberof SponsoredProductsDraftCampaignDynamicBidding
     */
    placementBidding?: Array<SponsoredProductsDraftCampaignPlacementBidding>;
    /**
     * 
     * @type {SponsoredProductsBiddingStrategy}
     * @memberof SponsoredProductsDraftCampaignDynamicBidding
     */
    strategy: SponsoredProductsBiddingStrategy;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignExtendedData
 */
export interface SponsoredProductsDraftCampaignExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsCampaignServingStatus}
     * @memberof SponsoredProductsDraftCampaignExtendedData
     */
    servingStatus?: SponsoredProductsCampaignServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignMutationError
 */
export interface SponsoredProductsDraftCampaignMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignMutationErrorSelector}
     * @memberof SponsoredProductsDraftCampaignMutationError
     */
    errorValue: SponsoredProductsDraftCampaignMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignMutationErrorSelector
 */
export interface SponsoredProductsDraftCampaignMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDateError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    dateError?: SponsoredProductsDateError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBudgetError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    budgetError?: SponsoredProductsBudgetError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftCampaignMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftCampaignMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignMutationError>}
     * @memberof SponsoredProductsDraftCampaignMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftCampaignMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignMutationFailureResponseItem
 */
export interface SponsoredProductsDraftCampaignMutationFailureResponseItem {
    /**
     * the index of the draft in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftCampaignMutationFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftCampaignMutationError>}
     * @memberof SponsoredProductsDraftCampaignMutationFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftCampaignMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignMutationSuccessResponseItem
 */
export interface SponsoredProductsDraftCampaignMutationSuccessResponseItem {
    /**
     * the draft ID
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignMutationSuccessResponseItem
     */
    campaignId?: string;
    /**
     * the index of the draft in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftCampaignMutationSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsDraftCampaign}
     * @memberof SponsoredProductsDraftCampaignMutationSuccessResponseItem
     */
    campaign?: SponsoredProductsDraftCampaign;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeyword
 */
export interface SponsoredProductsDraftCampaignNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeyword
     */
    keywordId: string;
    /**
     * The identifier of the draft to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsDraftCampaignNegativeKeyword
     */
    matchType: SponsoredProductsNegativeMatchType;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeyword
     */
    keywordText: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignNegativeKeywordExtendedData}
     * @memberof SponsoredProductsDraftCampaignNegativeKeyword
     */
    extendedData?: SponsoredProductsDraftCampaignNegativeKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordAccessError
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessError
     */
    errorValue: SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordAccessError>}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftCampaignNegativeKeywordAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordExtendedData
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem {
    /**
     * the index of the draft in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordMutationError
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationError
     */
    errorValue: SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating draft management entities
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftCampaignNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsDraftCampaignNegativeKeyword}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
     */
    campaignNegativeKeyword?: SponsoredProductsDraftCampaignNegativeKeyword;
    /**
     * the negativeKeyword ID
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
     */
    campaignNegativeKeywordId?: string;
    /**
     * the index of the draft in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftCampaignNegativeKeywordSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignPlacementBidding
 */
export interface SponsoredProductsDraftCampaignPlacementBidding {
    /**
     * 
     * @type {number}
     * @memberof SponsoredProductsDraftCampaignPlacementBidding
     */
    percentage?: number;
    /**
     * 
     * @type {SponsoredProductsPlacement}
     * @memberof SponsoredProductsDraftCampaignPlacementBidding
     */
    placement?: SponsoredProductsPlacement;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignPromotionError
 */
export interface SponsoredProductsDraftCampaignPromotionError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignPromotionError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftCampaignPromotionErrorSelector}
     * @memberof SponsoredProductsDraftCampaignPromotionError
     */
    errorValue: SponsoredProductsDraftCampaignPromotionErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignPromotionErrorSelector
 */
export interface SponsoredProductsDraftCampaignPromotionErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDateError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    dateError?: SponsoredProductsDateError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBudgetError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    budgetError?: SponsoredProductsBudgetError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftCampaignPromotionErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsDraftCampaignPromotionState {
    InProgress = 'IN_PROGRESS',
    Failed = 'FAILED',
    Succeeded = 'SUCCEEDED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsDraftCampaignPromotionStatus
 */
export interface SponsoredProductsDraftCampaignPromotionStatus {
    /**
     * 
     * @type {SponsoredProductsDraftCampaignPromotionState}
     * @memberof SponsoredProductsDraftCampaignPromotionStatus
     */
    promotionState: SponsoredProductsDraftCampaignPromotionState;
    /**
     * entity object identifier
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignPromotionStatus
     */
    campaignId: string;
    /**
     * entity object identifier
     * @type {string}
     * @memberof SponsoredProductsDraftCampaignPromotionStatus
     */
    destinationId: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignPromotionError>}
     * @memberof SponsoredProductsDraftCampaignPromotionStatus
     */
    errors?: Array<SponsoredProductsDraftCampaignPromotionError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeyword
 */
export interface SponsoredProductsDraftKeyword {
    /**
     * The identifier of the draft keyword.
     * @type {string}
     * @memberof SponsoredProductsDraftKeyword
     */
    keywordId: string;
    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SponsoredProductsDraftKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifier of the campaign to which the draft keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsMatchType}
     * @memberof SponsoredProductsDraftKeyword
     */
    matchType: SponsoredProductsMatchType;
    /**
     * The unlocalized draft keyword text in the preferred locale of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsDraftKeyword
     */
    nativeLanguageDraftKeyword?: string;
    /**
     * Bid associated with this draft keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsDraftKeyword
     */
    bid?: number | null;
    /**
     * The identifier of the ad group to which this draft keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftKeyword
     */
    adGroupId: string;
    /**
     * The draft keyword text.
     * @type {string}
     * @memberof SponsoredProductsDraftKeyword
     */
    keywordText: string;
    /**
     * 
     * @type {SponsoredProductsDraftKeywordExtendedData}
     * @memberof SponsoredProductsDraftKeyword
     */
    extendedData?: SponsoredProductsDraftKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordAccessError
 */
export interface SponsoredProductsDraftKeywordAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftKeywordAccessErrorSelector}
     * @memberof SponsoredProductsDraftKeywordAccessError
     */
    errorValue: SponsoredProductsDraftKeywordAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordAccessErrorSelector
 */
export interface SponsoredProductsDraftKeywordAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsLocaleError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    localeError?: SponsoredProductsLocaleError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftKeywordAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftKeywordAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftKeywordAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftKeywordAccessError>}
     * @memberof SponsoredProductsDraftKeywordAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftKeywordAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordExtendedData
 */
export interface SponsoredProductsDraftKeywordExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsDraftKeywordExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordFailureResponseItem
 */
export interface SponsoredProductsDraftKeywordFailureResponseItem {
    /**
     * the index of the draft keyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftKeywordMutationError>}
     * @memberof SponsoredProductsDraftKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordMutationError
 */
export interface SponsoredProductsDraftKeywordMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftKeywordMutationErrorSelector}
     * @memberof SponsoredProductsDraftKeywordMutationError
     */
    errorValue: SponsoredProductsDraftKeywordMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordMutationErrorSelector
 */
export interface SponsoredProductsDraftKeywordMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsLocaleError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    localeError?: SponsoredProductsLocaleError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftKeywordMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftKeywordMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftKeywordMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftKeywordMutationError>}
     * @memberof SponsoredProductsDraftKeywordMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftKeywordSuccessResponseItem
 */
export interface SponsoredProductsDraftKeywordSuccessResponseItem {
    /**
     * the draft keyword ID
     * @type {string}
     * @memberof SponsoredProductsDraftKeywordSuccessResponseItem
     */
    keywordId?: string;
    /**
     * the index of the draft keyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftKeywordSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsDraftKeyword}
     * @memberof SponsoredProductsDraftKeywordSuccessResponseItem
     */
    keyword?: SponsoredProductsDraftKeyword;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeyword
 */
export interface SponsoredProductsDraftNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    keywordId: string;
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    matchType: SponsoredProductsNegativeMatchType;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    adGroupId: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    keywordText: string;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeKeywordExtendedData}
     * @memberof SponsoredProductsDraftNegativeKeyword
     */
    extendedData?: SponsoredProductsDraftNegativeKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordAccessError
 */
export interface SponsoredProductsDraftNegativeKeywordAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeKeywordAccessErrorSelector}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessError
     */
    errorValue: SponsoredProductsDraftNegativeKeywordAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsDraftNegativeKeywordAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeKeywordAccessError>}
     * @memberof SponsoredProductsDraftNegativeKeywordAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftNegativeKeywordAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordExtendedData
 */
export interface SponsoredProductsDraftNegativeKeywordExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsDraftNegativeKeywordExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsDraftNegativeKeywordFailureResponseItem {
    /**
     * the index of the draftNegativeKeyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftNegativeKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftNegativeKeywordMutationError>}
     * @memberof SponsoredProductsDraftNegativeKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordMutationError
 */
export interface SponsoredProductsDraftNegativeKeywordMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeKeywordMutationErrorSelector}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationError
     */
    errorValue: SponsoredProductsDraftNegativeKeywordMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsDraftNegativeKeywordMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeKeywordMutationError>}
     * @memberof SponsoredProductsDraftNegativeKeywordMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsDraftNegativeKeywordSuccessResponseItem {
    /**
     * the index of the negativeKeyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftNegativeKeywordSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeKeyword}
     * @memberof SponsoredProductsDraftNegativeKeywordSuccessResponseItem
     */
    negativeKeyword?: SponsoredProductsDraftNegativeKeyword;
    /**
     * the negativeKeyword ID
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeKeywordSuccessResponseItem
     */
    negativeKeywordId?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetAccessError
 */
export interface SponsoredProductsDraftNegativeTargetAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeTargetAccessErrorSelector}
     * @memberof SponsoredProductsDraftNegativeTargetAccessError
     */
    errorValue: SponsoredProductsDraftNegativeTargetAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetAccessErrorSelector
 */
export interface SponsoredProductsDraftNegativeTargetAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftNegativeTargetAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeTargetAccessError>}
     * @memberof SponsoredProductsDraftNegativeTargetAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftNegativeTargetAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetMutationError
 */
export interface SponsoredProductsDraftNegativeTargetMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeTargetMutationErrorSelector}
     * @memberof SponsoredProductsDraftNegativeTargetMutationError
     */
    errorValue: SponsoredProductsDraftNegativeTargetMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetMutationErrorSelector
 */
export interface SponsoredProductsDraftNegativeTargetMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftNegativeTargetMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeTargetMutationError>}
     * @memberof SponsoredProductsDraftNegativeTargetMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftNegativeTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClause
 */
export interface SponsoredProductsDraftNegativeTargetingClause {
    /**
     * The DraftNegativeTargeting expression.
     * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsDraftNegativeTargetingClause
     */
    expression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetingClause
     */
    targetId: string;
    /**
     * The resolved DraftNegativeTargeting expression.
     * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsDraftNegativeTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetingClause
     */
    campaignId: string;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetingClause
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeTargetingClauseExtendedData}
     * @memberof SponsoredProductsDraftNegativeTargetingClause
     */
    extendedData?: SponsoredProductsDraftNegativeTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsDraftNegativeTargetingClauseExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem {
    /**
     * the index of the DraftNegativeTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftNegativeTargetMutationError>}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftNegativeTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem {
    /**
     * the DraftNegativeTargetingClause ID
     * @type {string}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
     */
    targetId?: string;
    /**
     * the index of the DraftNegativeTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsDraftNegativeTargetingClause}
     * @memberof SponsoredProductsDraftNegativeTargetingClauseSuccessResponseItem
     */
    negativeTargetingClause?: SponsoredProductsDraftNegativeTargetingClause;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAd
 */
export interface SponsoredProductsDraftProductAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAd
     */
    adId: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAd
     */
    campaignId: string;
    /**
     * The custom text that is associated with this ad. Defined for custom text ads only.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAd
     */
    customText?: string;
    /**
     * The ASIN associated with the product. Defined for vendors only.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAd
     */
    asin?: string;
    /**
     * The SKU associated with the product. Defined for seller accounts only.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAd
     */
    sku?: string;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAd
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsDraftProductAdExtendedData}
     * @memberof SponsoredProductsDraftProductAd
     */
    extendedData?: SponsoredProductsDraftProductAdExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdAccessError
 */
export interface SponsoredProductsDraftProductAdAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftProductAdAccessErrorSelector}
     * @memberof SponsoredProductsDraftProductAdAccessError
     */
    errorValue: SponsoredProductsDraftProductAdAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdAccessErrorSelector
 */
export interface SponsoredProductsDraftProductAdAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftProductAdAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsDraftProductAdAccessExceptionResponseContent
 */
export interface SponsoredProductsDraftProductAdAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftProductAdAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftProductAdAccessError>}
     * @memberof SponsoredProductsDraftProductAdAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftProductAdAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdExtendedData
 */
export interface SponsoredProductsDraftProductAdExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsAdServingStatus}
     * @memberof SponsoredProductsDraftProductAdExtendedData
     */
    servingStatus?: SponsoredProductsAdServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdFailureResponseItem
 */
export interface SponsoredProductsDraftProductAdFailureResponseItem {
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftProductAdFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftProductAdMutationError>}
     * @memberof SponsoredProductsDraftProductAdFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftProductAdMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdMutationError
 */
export interface SponsoredProductsDraftProductAdMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftProductAdMutationErrorSelector}
     * @memberof SponsoredProductsDraftProductAdMutationError
     */
    errorValue: SponsoredProductsDraftProductAdMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdMutationErrorSelector
 */
export interface SponsoredProductsDraftProductAdMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsAsinOwnershipError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    asinOwnershipError?: SponsoredProductsAsinOwnershipError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsAdEligibilityError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    adEligibilityError?: SponsoredProductsAdEligibilityError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftProductAdMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsDraftProductAdMutationExceptionResponseContent
 */
export interface SponsoredProductsDraftProductAdMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsDraftProductAdMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftProductAdMutationError>}
     * @memberof SponsoredProductsDraftProductAdMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsDraftProductAdMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftProductAdSuccessResponseItem
 */
export interface SponsoredProductsDraftProductAdSuccessResponseItem {
    /**
     * the DraftProductAd ID
     * @type {string}
     * @memberof SponsoredProductsDraftProductAdSuccessResponseItem
     */
    adId?: string;
    /**
     * The index in the original list from the request.
     * @type {number}
     * @memberof SponsoredProductsDraftProductAdSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsDraftProductAd}
     * @memberof SponsoredProductsDraftProductAdSuccessResponseItem
     */
    productAd?: SponsoredProductsDraftProductAd;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftTargetMutationError
 */
export interface SponsoredProductsDraftTargetMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsDraftTargetMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsDraftTargetMutationErrorSelector}
     * @memberof SponsoredProductsDraftTargetMutationError
     */
    errorValue: SponsoredProductsDraftTargetMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftTargetMutationErrorSelector
 */
export interface SponsoredProductsDraftTargetMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsDraftTargetMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftTargetingClause
 */
export interface SponsoredProductsDraftTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    expression: Array<SponsoredProductsTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    targetId: string;
    /**
     * The resolved targeting expression.
     * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsExpressionType}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    expressionType: SponsoredProductsExpressionType;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    state?: SponsoredProductsEntityState;
    /**
     * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    bid?: number | null;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsDraftTargetingClauseExtendedData}
     * @memberof SponsoredProductsDraftTargetingClause
     */
    extendedData?: SponsoredProductsDraftTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftTargetingClauseExtendedData
 */
export interface SponsoredProductsDraftTargetingClauseExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftTargetingClauseExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsDraftTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsDraftTargetingClauseExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsDraftTargetingClauseFailureResponseItem {
    /**
     * the index of the draftTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsDraftTargetMutationError>}
     * @memberof SponsoredProductsDraftTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsDraftTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDraftTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsDraftTargetingClauseSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsDraftTargetingClause}
     * @memberof SponsoredProductsDraftTargetingClauseSuccessResponseItem
     */
    targetingClause?: SponsoredProductsDraftTargetingClause;
    /**
     * the draftTargetingClause ID
     * @type {string}
     * @memberof SponsoredProductsDraftTargetingClauseSuccessResponseItem
     */
    targetId?: string;
    /**
     * the index of the draftTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsDraftTargetingClauseSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsDuplicateValueError
 */
export interface SponsoredProductsDuplicateValueError {
    /**
     * 
     * @type {SponsoredProductsDuplicateValueErrorReason}
     * @memberof SponsoredProductsDuplicateValueError
     */
    reason: SponsoredProductsDuplicateValueErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsDuplicateValueError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsDuplicateValueError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsDuplicateValueError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsDuplicateValueErrorReason {
    DuplicateValue = 'DUPLICATE_VALUE',
    NameNotUnique = 'NAME_NOT_UNIQUE',
    MarketplaceAttributesRepeated = 'MARKETPLACE_ATTRIBUTES_REPEATED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsDynamicBidding
 */
export interface SponsoredProductsDynamicBidding {
    /**
     * 
     * @type {Array<SponsoredProductsPlacementBidding>}
     * @memberof SponsoredProductsDynamicBidding
     */
    placementBidding?: Array<SponsoredProductsPlacementBidding>;
    /**
     * 
     * @type {SponsoredProductsBiddingStrategy}
     * @memberof SponsoredProductsDynamicBidding
     */
    strategy: SponsoredProductsBiddingStrategy;
}
/**
 * 
 * @export
 * @interface SponsoredProductsEntityNotFoundError
 */
export interface SponsoredProductsEntityNotFoundError {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundErrorReason}
     * @memberof SponsoredProductsEntityNotFoundError
     */
    reason: SponsoredProductsEntityNotFoundErrorReason;
    /**
     * 
     * @type {SponsoredProductsEntityType}
     * @memberof SponsoredProductsEntityNotFoundError
     */
    entityType: SponsoredProductsEntityType;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsEntityNotFoundError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * The entity id in the request
     * @type {string}
     * @memberof SponsoredProductsEntityNotFoundError
     */
    entityId: string;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsEntityNotFoundError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsEntityNotFoundErrorReason {
    EntityNotFound = 'ENTITY_NOT_FOUND'
}

/**
 * Errors related to exceeding quota in campaign management service
 * @export
 * @interface SponsoredProductsEntityQuotaError
 */
export interface SponsoredProductsEntityQuotaError {
    /**
     * 
     * @type {SponsoredProductsQuotaErrorReason}
     * @memberof SponsoredProductsEntityQuotaError
     */
    reason: SponsoredProductsQuotaErrorReason;
    /**
     * 
     * @type {SponsoredProductsQuotaScope}
     * @memberof SponsoredProductsEntityQuotaError
     */
    quotaScope?: SponsoredProductsQuotaScope;
    /**
     * 
     * @type {SponsoredProductsEntityType}
     * @memberof SponsoredProductsEntityQuotaError
     */
    entityType: SponsoredProductsEntityType;
    /**
     * optional current quota
     * @type {string}
     * @memberof SponsoredProductsEntityQuotaError
     */
    quota?: string;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsEntityQuotaError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsEntityQuotaError
     */
    message: string;
}
/**
 * The current resource state. | State | Description | | --- | --- | | `ENABLED` | Enabled State | | `PAUSED` | Paused State | | `ARCHIVED` | ARCHIVED State | | `ENABLING` | State for Draft Entity Only | | `USER_DELETED` | State for Draft Entity Only | | `OTHER` | Read Only |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsEntityState {
    Enabled = 'ENABLED',
    Paused = 'PAUSED',
    Archived = 'ARCHIVED',
    Enabling = 'ENABLING',
    UserDeleted = 'USER_DELETED',
    Other = 'OTHER'
}

/**
 * entity state update errors
 * @export
 * @interface SponsoredProductsEntityStateError
 */
export interface SponsoredProductsEntityStateError {
    /**
     * 
     * @type {SponsoredProductsEntityStateErrorReason}
     * @memberof SponsoredProductsEntityStateError
     */
    reason: SponsoredProductsEntityStateErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsEntityStateError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsEntityType}
     * @memberof SponsoredProductsEntityStateError
     */
    entityType: SponsoredProductsEntityType;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsEntityStateError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsEntityStateError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsEntityStateErrorReason {
    InvalidTargetState = 'INVALID_TARGET_STATE',
    ParentEntityForbidsCreation = 'PARENT_ENTITY_FORBIDS_CREATION',
    MarketplaceStateCannotBeArchived = 'MARKETPLACE_STATE_CANNOT_BE_ARCHIVED',
    AutoTargetingClauseCannotBeArchivedManually = 'AUTO_TARGETING_CLAUSE_CANNOT_BE_ARCHIVED_MANUALLY',
    ArchivedEntityCannotBeModified = 'ARCHIVED_ENTITY_CANNOT_BE_MODIFIED',
    ParentArchivedForbidsUpdates = 'PARENT_ARCHIVED_FORBIDS_UPDATES',
    ParentStatusForbidsUpdatesAndCreates = 'PARENT_STATUS_FORBIDS_UPDATES_AND_CREATES'
}

/**
 * Filter entities by state
 * @export
 * @interface SponsoredProductsEntityStateFilter
 */
export interface SponsoredProductsEntityStateFilter {
    /**
     * 
     * @type {Array<SponsoredProductsEntityState>}
     * @memberof SponsoredProductsEntityStateFilter
     */
    include: Array<SponsoredProductsEntityState>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsEntityType {
    Campaign = 'CAMPAIGN',
    AdGroup = 'AD_GROUP',
    Keyword = 'KEYWORD',
    ProductAd = 'PRODUCT_AD',
    CampaignNegativeKeyword = 'CAMPAIGN_NEGATIVE_KEYWORD',
    NegativeKeyword = 'NEGATIVE_KEYWORD',
    TargetingClause = 'TARGETING_CLAUSE',
    NegativeTargetingClause = 'NEGATIVE_TARGETING_CLAUSE',
    CampaignNegativeTargetingClause = 'CAMPAIGN_NEGATIVE_TARGETING_CLAUSE'
}

/**
 * Structure describing error cause - location in the payload and data causing error
 * @export
 * @interface SponsoredProductsErrorCause
 */
export interface SponsoredProductsErrorCause {
    /**
     * Error location, JSON Path expression specifying element of API payload causing error
     * @type {string}
     * @memberof SponsoredProductsErrorCause
     */
    location: string;
    /**
     * optional value causing error
     * @type {string}
     * @memberof SponsoredProductsErrorCause
     */
    trigger?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsExpressionType {
    Auto = 'AUTO',
    Manual = 'MANUAL',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsExpressionTypeError
 */
export interface SponsoredProductsExpressionTypeError {
    /**
     * 
     * @type {SponsoredProductsExpressionTypeErrorReason}
     * @memberof SponsoredProductsExpressionTypeError
     */
    reason: SponsoredProductsExpressionTypeErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsExpressionTypeError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsExpressionTypeError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsExpressionTypeErrorReason {
    UnsupportedExpressionType = 'UNSUPPORTED_EXPRESSION_TYPE'
}

/**
 * Filter entities by ExpressionType
 * @export
 * @interface SponsoredProductsExpressionTypeFilter
 */
export interface SponsoredProductsExpressionTypeFilter {
    /**
     * 
     * @type {Array<SponsoredProductsExpressionType>}
     * @memberof SponsoredProductsExpressionTypeFilter
     */
    include: Array<SponsoredProductsExpressionType>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsExpressionTypeWithoutOther {
    Auto = 'AUTO',
    Manual = 'MANUAL'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalAdGroup
 */
export interface SponsoredProductsGlobalAdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    campaignId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    applicableMarketplaces?: Array<string>;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    defaultBid: SponsoredProductsGlobalBid;
    /**
     * 
     * @type {SponsoredProductsGlobalAdGroupExtendedData}
     * @memberof SponsoredProductsGlobalAdGroup
     */
    extendedData?: SponsoredProductsGlobalAdGroupExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalAdGroupExtendedData
 */
export interface SponsoredProductsGlobalAdGroupExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalAdGroupServingStatus}
     * @memberof SponsoredProductsGlobalAdGroupExtendedData
     */
    servingStatus?: SponsoredProductsGlobalAdGroupServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalAdGroupFailureResponseItem
 */
export interface SponsoredProductsGlobalAdGroupFailureResponseItem {
    /**
     * the index of the adGroup in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalAdGroupFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsAdGroupMutationError>}
     * @memberof SponsoredProductsGlobalAdGroupFailureResponseItem
     */
    errors?: Array<SponsoredProductsAdGroupMutationError>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalAdGroupMarketplaceServingReason {
    AdGroupStatusEnabledDetail = 'AD_GROUP_STATUS_ENABLED_DETAIL',
    AdGroupPausedDetail = 'AD_GROUP_PAUSED_DETAIL',
    AdGroupArchivedDetail = 'AD_GROUP_ARCHIVED_DETAIL',
    AdGroupIncompleteDetail = 'AD_GROUP_INCOMPLETE_DETAIL',
    AdGroupPolicingPendingReviewDetail = 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
    AdGroupPolicingCreativeRejectedDetail = 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
    AdGroupLowBidDetail = 'AD_GROUP_LOW_BID_DETAIL',
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
    AdvertiserStatusEnabledDetail = 'ADVERTISER_STATUS_ENABLED_DETAIL'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalAdGroupMarketplaceServingStatus {
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AdvertiserStatusEnabled = 'ADVERTISER_STATUS_ENABLED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalAdGroupServingStatus
 */
export interface SponsoredProductsGlobalAdGroupServingStatus {
    /**
     * Serving status details of adgroup
     * @type {Array<SponsoredProductsGlobalAdGroupServingStatusReason>}
     * @memberof SponsoredProductsGlobalAdGroupServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalAdGroupServingStatusReason>;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityServingStatus}
     * @memberof SponsoredProductsGlobalAdGroupServingStatus
     */
    adGroupServingStatus?: SponsoredProductsGlobalEntityServingStatus;
    /**
     * The marketplace serving statuses.
     * @type {Array<SponsoredProductsMarketplaceAdGroupServingStatus>}
     * @memberof SponsoredProductsGlobalAdGroupServingStatus
     */
    marketplaceAdGroupServingStatus?: Array<SponsoredProductsMarketplaceAdGroupServingStatus>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalAdGroupServingStatusReason {
    AdGroupDeliveringInAllMarketplaces = 'AD_GROUP_DELIVERING_IN_ALL_MARKETPLACES',
    AdGroupPausedInAtLeastOneMarketplace = 'AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupIncompleteInAtLeastOneMarketplace = 'AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupPolicingPendingReviewInAtLeastOneMarketplace = 'AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupPolicingCreativeRejectedInAtLeastOneMarketplace = 'AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupLowBidInAtLeastOneMarketplace = 'AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignPausedInAtLeastOneMarketplace = 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignIncompleteInAtLeastOneMarketplace = 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPendingStart = 'CAMPAIGN_PENDING_START',
    CampaignEnded = 'CAMPAIGN_ENDED',
    CampaignOutOfBudgetInAtLeastOneMarketplace = 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
    PaymentFailedInAtleastOneMarketplace = 'PAYMENT_FAILED_IN_ATLEAST_ONE_MARKETPLACE',
    AdvertiserPolicingPendingReviewInAtleastOneMarketplaces = 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPolicingSuspendedInAtleastOneMarketplaces = 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPausedInAtleastOneMarketplaces = 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserArchivedInAtleastOneMarketplaces = 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalAdGroupSuccessResponseItem
 */
export interface SponsoredProductsGlobalAdGroupSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsGlobalAdGroup}
     * @memberof SponsoredProductsGlobalAdGroupSuccessResponseItem
     */
    adGroup?: SponsoredProductsGlobalAdGroup;
    /**
     * the index of the adGroup in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalAdGroupSuccessResponseItem
     */
    index: number;
    /**
     * the adGroup ID
     * @type {string}
     * @memberof SponsoredProductsGlobalAdGroupSuccessResponseItem
     */
    adGroupId?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalBid
 */
export interface SponsoredProductsGlobalBid {
    /**
     * marketplace bid settings.
     * @type {Array<SponsoredProductsMarketplaceBid>}
     * @memberof SponsoredProductsGlobalBid
     */
    marketplaceSettings?: Array<SponsoredProductsMarketplaceBid>;
    /**
     * 
     * @type {SponsoredProductsCurrency}
     * @memberof SponsoredProductsGlobalBid
     */
    currency?: SponsoredProductsCurrency;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalBudget
 */
export interface SponsoredProductsGlobalBudget {
    /**
     * 
     * @type {SponsoredProductsBudgetType}
     * @memberof SponsoredProductsGlobalBudget
     */
    budgetType: SponsoredProductsBudgetType;
    /**
     * marketplace budget settings.
     * @type {Array<SponsoredProductsMarketplaceBudget>}
     * @memberof SponsoredProductsGlobalBudget
     */
    marketplaceSettings?: Array<SponsoredProductsMarketplaceBudget>;
    /**
     * 
     * @type {SponsoredProductsCurrency}
     * @memberof SponsoredProductsGlobalBudget
     */
    currency: SponsoredProductsCurrency;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaign
 */
export interface SponsoredProductsGlobalCampaign {
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaign
     */
    endDate?: string;
    /**
     * The identifier of the campaign.
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaign
     */
    campaignId: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsGlobalCampaign
     */
    applicableMarketplaces?: Array<string>;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaign
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsGlobalCampaign
     */
    targetingType: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalCampaign
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsDynamicBidding}
     * @memberof SponsoredProductsGlobalCampaign
     */
    dynamicBidding?: SponsoredProductsDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalBudget}
     * @memberof SponsoredProductsGlobalCampaign
     */
    budget: SponsoredProductsGlobalBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsGlobalCampaign
     */
    tags?: { [key: string]: string; };
    /**
     * 
     * @type {SponsoredProductsGlobalCampaignExtendedData}
     * @memberof SponsoredProductsGlobalCampaign
     */
    extendedData?: SponsoredProductsGlobalCampaignExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignExtendedData
 */
export interface SponsoredProductsGlobalCampaignExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalCampaignServingStatus}
     * @memberof SponsoredProductsGlobalCampaignExtendedData
     */
    servingStatus?: SponsoredProductsGlobalCampaignServingStatus;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalCampaignMarketplaceServingReason {
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalCampaignMarketplaceServingStatus {
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignMutationFailureResponseItem
 */
export interface SponsoredProductsGlobalCampaignMutationFailureResponseItem {
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalCampaignMutationFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsCampaignMutationError>}
     * @memberof SponsoredProductsGlobalCampaignMutationFailureResponseItem
     */
    errors?: Array<SponsoredProductsCampaignMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignMutationSuccessResponseItem
 */
export interface SponsoredProductsGlobalCampaignMutationSuccessResponseItem {
    /**
     * the campaign ID
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaignMutationSuccessResponseItem
     */
    campaignId?: string;
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalCampaignMutationSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsGlobalCampaign}
     * @memberof SponsoredProductsGlobalCampaignMutationSuccessResponseItem
     */
    campaign?: SponsoredProductsGlobalCampaign;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeyword
 */
export interface SponsoredProductsGlobalCampaignNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    keywordId: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    matchType: SponsoredProductsNegativeMatchType;
    /**
     * Name for the keyword
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordText}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    keywordText: SponsoredProductsGlobalNegativeKeywordText;
    /**
     * 
     * @type {SponsoredProductsGlobalCampaignNegativeKeywordExtendedData}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeyword
     */
    extendedData?: SponsoredProductsGlobalCampaignNegativeKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeywordExtendedData
 */
export interface SponsoredProductsGlobalCampaignNegativeKeywordExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordServingStatus}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeywordExtendedData
     */
    servingStatus?: SponsoredProductsGlobalKeywordServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem {
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsCampaignNegativeKeywordMutationError>}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsCampaignNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsGlobalCampaignNegativeKeyword}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
     */
    campaignNegativeKeyword?: SponsoredProductsGlobalCampaignNegativeKeyword;
    /**
     * the campaignNegativeKeyword ID
     * @type {string}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
     */
    campaignNegativeKeywordId?: string;
    /**
     * the index of the campaign in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalCampaignNegativeKeywordSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalCampaignServingStatus
 */
export interface SponsoredProductsGlobalCampaignServingStatus {
    /**
     * Serving status details of campaign
     * @type {Array<SponsoredProductsGlobalCampaignServingStatusReason>}
     * @memberof SponsoredProductsGlobalCampaignServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalCampaignServingStatusReason>;
    /**
     * The marketplace serving statuses.
     * @type {Array<SponsoredProductsMarketplaceCampaignServingStatus>}
     * @memberof SponsoredProductsGlobalCampaignServingStatus
     */
    marketplaceCampaignServingStatus?: Array<SponsoredProductsMarketplaceCampaignServingStatus>;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityServingStatus}
     * @memberof SponsoredProductsGlobalCampaignServingStatus
     */
    campaignServingStatus?: SponsoredProductsGlobalEntityServingStatus;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalCampaignServingStatusReason {
    CampaignDeliveringInAllMarketplaces = 'CAMPAIGN_DELIVERING_IN_ALL_MARKETPLACES',
    AdvertiserPaymentFailureInAtLeastOneMarketplace = 'ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdvertiserPolicingPendingReviewInAtleastOneMarketplaces = 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPolicingSuspendedInAtleastOneMarketplaces = 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPausedInAtleastOneMarketplaces = 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserArchivedInAtleastOneMarketplaces = 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
    CampaignOutOfBudgetInAtLeastOneMarketplace = 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPausedInAtLeastOneMarketplace = 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignIncompleteInAtLeastOneMarketplace = 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPendingStartDate = 'CAMPAIGN_PENDING_START_DATE',
    CampaignEnded = 'CAMPAIGN_ENDED'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalEntityServingStatus {
    Active = 'ACTIVE',
    Inactive = 'INACTIVE',
    ActiveWithExceptions = 'ACTIVE_WITH_EXCEPTIONS',
    Archived = 'ARCHIVED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalEntityState
 */
export interface SponsoredProductsGlobalEntityState {
    /**
     * 
     * @type {Array<SponsoredProductsMarketplaceState>}
     * @memberof SponsoredProductsGlobalEntityState
     */
    marketplaceSettings?: Array<SponsoredProductsMarketplaceState>;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsGlobalEntityState
     */
    state: SponsoredProductsEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalKeyword
 */
export interface SponsoredProductsGlobalKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsGlobalKeyword
     */
    keywordId: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsMatchType}
     * @memberof SponsoredProductsGlobalKeyword
     */
    matchType: SponsoredProductsMatchType;
    /**
     * Name for the Keyword
     * @type {string}
     * @memberof SponsoredProductsGlobalKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalKeyword
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsGlobalKeyword
     */
    bid: SponsoredProductsGlobalBid;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalKeyword
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordText}
     * @memberof SponsoredProductsGlobalKeyword
     */
    keywordText: SponsoredProductsGlobalKeywordText;
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordExtendedData}
     * @memberof SponsoredProductsGlobalKeyword
     */
    extendedData?: SponsoredProductsGlobalKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalKeywordExtendedData
 */
export interface SponsoredProductsGlobalKeywordExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordServingStatus}
     * @memberof SponsoredProductsGlobalKeywordExtendedData
     */
    servingStatus?: SponsoredProductsGlobalKeywordServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalKeywordFailureResponseItem
 */
export interface SponsoredProductsGlobalKeywordFailureResponseItem {
    /**
     * the index of the keyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsKeywordMutationError>}
     * @memberof SponsoredProductsGlobalKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsKeywordMutationError>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalKeywordMarketplaceServingStatus {
    TargetingClauseStatusLive = 'TARGETING_CLAUSE_STATUS_LIVE',
    TargetingClausePolicingSuspended = 'TARGETING_CLAUSE_POLICING_SUSPENDED',
    TargetingClausePaused = 'TARGETING_CLAUSE_PAUSED',
    TargetingClauseArchived = 'TARGETING_CLAUSE_ARCHIVED',
    TargetingClauseBlocked = 'TARGETING_CLAUSE_BLOCKED',
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserOutOfBudget = 'ADVERTISER_OUT_OF_BUDGET',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalKeywordMarketplaceServingStatusReason {
    TargetingClauseStatusLiveDetail = 'TARGETING_CLAUSE_STATUS_LIVE_DETAIL',
    TargetingClausePolicingSuspendedDetail = 'TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL',
    TargetingClausePausedDetail = 'TARGETING_CLAUSE_PAUSED_DETAIL',
    TargetingClauseArchivedDetail = 'TARGETING_CLAUSE_ARCHIVED_DETAIL',
    TargetingClauseBlockedDetail = 'TARGETING_CLAUSE_BLOCKED_DETAIL',
    AdGroupStatusEnabledDetail = 'AD_GROUP_STATUS_ENABLED_DETAIL',
    AdGroupPausedDetail = 'AD_GROUP_PAUSED_DETAIL',
    AdGroupArchivedDetail = 'AD_GROUP_ARCHIVED_DETAIL',
    AdGroupIncompleteDetail = 'AD_GROUP_INCOMPLETE_DETAIL',
    AdGroupPolicingPendingReviewDetail = 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
    AdGroupPolicingCreativeRejectedDetail = 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
    AdGroupLowBidDetail = 'AD_GROUP_LOW_BID_DETAIL',
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalKeywordServingStatus
 */
export interface SponsoredProductsGlobalKeywordServingStatus {
    /**
     * Serving status details of Keyword
     * @type {Array<SponsoredProductsGlobalKeywordServingStatusReason>}
     * @memberof SponsoredProductsGlobalKeywordServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalKeywordServingStatusReason>;
    /**
     * The marketplace serving statuses.
     * @type {Array<SponsoredProductsMarketplaceLevelKeywordServingStatus>}
     * @memberof SponsoredProductsGlobalKeywordServingStatus
     */
    marketplaceKeywordServingStatus?: Array<SponsoredProductsMarketplaceLevelKeywordServingStatus>;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityServingStatus}
     * @memberof SponsoredProductsGlobalKeywordServingStatus
     */
    keywordServingStatus?: SponsoredProductsGlobalEntityServingStatus;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalKeywordServingStatusReason {
    TargetingClauseDeliveringInAllMarketplaces = 'TARGETING_CLAUSE_DELIVERING_IN_ALL_MARKETPLACES',
    AdvertiserPaymentFailureInAtLeastOneMarketplace = 'ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE',
    AccountOutOfBudgetInAtLeastOneMarketplace = 'ACCOUNT_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
    AdvertiserPolicingPendingReviewInAtleastOneMarketplaces = 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPolicingSuspendedInAtleastOneMarketplaces = 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPausedInAtleastOneMarketplaces = 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserArchivedInAtleastOneMarketplaces = 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
    CampaignOutOfBudgetInAtLeastOneMarketplace = 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPausedInAtLeastOneMarketplace = 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignIncompleteInAtLeastOneMarketplace = 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignCreationFailedInAtLeastOneMarketplace = 'CAMPAIGN_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPendingStartDate = 'CAMPAIGN_PENDING_START_DATE',
    CampaignEnded = 'CAMPAIGN_ENDED',
    AdGroupPausedInAtLeastOneMarketplace = 'AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncompleteInAtLeastOneMarketplace = 'AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupCreationInProgressInAtLeastOneMarketplace = 'AD_GROUP_CREATION_IN_PROGRESS_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupCreationFailedInAtLeastOneMarketplace = 'AD_GROUP_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupPolicingPendingReviewInAtLeastOneMarketplace = 'AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupPolicingCreativeRejectedInAtLeastOneMarketplace = 'AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupLowBidInAtLeastOneMarketplace = 'AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE',
    TargetingClausePausedInAtLeastOneMarketplace = 'TARGETING_CLAUSE_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    TargetingClauseArchived = 'TARGETING_CLAUSE_ARCHIVED',
    TargetingClausePolicingSuspendedInAtLeastOneMarketplace = 'TARGETING_CLAUSE_POLICING_SUSPENDED_IN_AT_LEAST_ONE_MARKETPLACE',
    TargetingClauseCreationFailedInAtLeastOneMarketplace = 'TARGETING_CLAUSE_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
    TargetingClauseBlockedInAtLeastOneMarketplace = 'TARGETING_CLAUSE_BLOCKED_IN_AT_LEAST_ONE_MARKETPLACE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalKeywordSuccessResponseItem
 */
export interface SponsoredProductsGlobalKeywordSuccessResponseItem {
    /**
     * the keyword ID
     * @type {string}
     * @memberof SponsoredProductsGlobalKeywordSuccessResponseItem
     */
    keywordId?: string;
    /**
     * the index of the keyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalKeywordSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsGlobalKeyword}
     * @memberof SponsoredProductsGlobalKeywordSuccessResponseItem
     */
    keyword?: SponsoredProductsGlobalKeyword;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalKeywordText
 */
export interface SponsoredProductsGlobalKeywordText {
    /**
     * The marketplace settings for keyword text to be overridden for marketplace.
     * @type {Array<SponsoredProductsKeywordTextMarketplaceSettings>}
     * @memberof SponsoredProductsGlobalKeywordText
     */
    marketplaceSettings?: Array<SponsoredProductsKeywordTextMarketplaceSettings>;
    /**
     * 
     * @type {SponsoredProductsLocale}
     * @memberof SponsoredProductsGlobalKeywordText
     */
    locale?: SponsoredProductsLocale;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsGlobalKeywordText
     */
    value: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeKeyword
 */
export interface SponsoredProductsGlobalNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    keywordId: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    matchType: SponsoredProductsNegativeMatchType;
    /**
     * Name for the keyword
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordText}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    keywordText: SponsoredProductsGlobalNegativeKeywordText;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordExtendedData}
     * @memberof SponsoredProductsGlobalNegativeKeyword
     */
    extendedData?: SponsoredProductsGlobalNegativeKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordExtendedData
 */
export interface SponsoredProductsGlobalNegativeKeywordExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordServingStatus}
     * @memberof SponsoredProductsGlobalNegativeKeywordExtendedData
     */
    servingStatus?: SponsoredProductsGlobalKeywordServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsGlobalNegativeKeywordFailureResponseItem {
    /**
     * the index of the negativeKeyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalNegativeKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsNegativeKeywordMutationError>}
     * @memberof SponsoredProductsGlobalNegativeKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsGlobalNegativeKeywordSuccessResponseItem {
    /**
     * the index of the negativeKeyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeyword}
     * @memberof SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
     */
    negativeKeyword?: SponsoredProductsGlobalNegativeKeyword;
    /**
     * the negativeKeyword ID
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeKeywordSuccessResponseItem
     */
    negativeKeywordId?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeKeywordText
 */
export interface SponsoredProductsGlobalNegativeKeywordText {
    /**
     * The marketplace settings for keyword text to be overridden for marketplace.
     * @type {Array<SponsoredProductsKeywordTextMarketplaceSettings>}
     * @memberof SponsoredProductsGlobalNegativeKeywordText
     */
    marketplaceSettings?: Array<SponsoredProductsKeywordTextMarketplaceSettings>;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeKeywordText
     */
    value: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClause
 */
export interface SponsoredProductsGlobalNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    targetId: string;
    /**
     * The resolved NegativeTargeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    campaignId: string;
    /**
     * Name for the negative targeting clause
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    name: string;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeTargetingClauseExtendedData}
     * @memberof SponsoredProductsGlobalNegativeTargetingClause
     */
    extendedData?: SponsoredProductsGlobalNegativeTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsGlobalNegativeTargetingClauseExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalTargetingClauseServingStatus}
     * @memberof SponsoredProductsGlobalNegativeTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsGlobalTargetingClauseServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem {
    /**
     * the index of the NegativeTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsNegativeTargetMutationError>}
     * @memberof SponsoredProductsGlobalNegativeTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsNegativeTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem {
    /**
     * the NegativeTargetingClause ID
     * @type {string}
     * @memberof SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
     */
    targetId?: string;
    /**
     * the index of the NegativeTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeTargetingClause}
     * @memberof SponsoredProductsGlobalNegativeTargetingClauseSuccessResponseItem
     */
    negativeTargetingClause?: SponsoredProductsGlobalNegativeTargetingClause;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalProductAServingStatusReason {
    ProductAdDeliveringInAllMarketplaces = 'PRODUCT_AD_DELIVERING_IN_ALL_MARKETPLACES',
    AdvertiserPaymentFailureInAtLeastOneMarketplace = 'ADVERTISER_PAYMENT_FAILURE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdvertiserPolicingPendingReviewInAtleastOneMarketplaces = 'ADVERTISER_POLICING_PENDING_REVIEW_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPolicingSuspendedInAtleastOneMarketplaces = 'ADVERTISER_POLICING_SUSPENDED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserPausedInAtleastOneMarketplaces = 'ADVERTISER_PAUSED_IN_ATLEAST_ONE_MARKETPLACES',
    AdvertiserArchivedInAtleastOneMarketplaces = 'ADVERTISER_ARCHIVED_IN_ATLEAST_ONE_MARKETPLACES',
    CampaignOutOfBudgetInAtLeastOneMarketplace = 'CAMPAIGN_OUT_OF_BUDGET_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPausedInAtLeastOneMarketplace = 'CAMPAIGN_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignIncompleteInAtLeastOneMarketplace = 'CAMPAIGN_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    CampaignPendingStartDate = 'CAMPAIGN_PENDING_START_DATE',
    CampaignEnded = 'CAMPAIGN_ENDED',
    AdGroupPausedInAtLeastOneMarketplace = 'AD_GROUP_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncompleteInAtLeastOneMarketplace = 'AD_GROUP_INCOMPLETE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupCreationFailedInAtLeastOneMarketplace = 'AD_GROUP_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupPolicingPendingReviewInAtLeastOneMarketplace = 'AD_GROUP_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupPolicingCreativeRejectedInAtLeastOneMarketplace = 'AD_GROUP_POLICING_CREATIVE_REJECTED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdGroupLowBidInAtLeastOneMarketplace = 'AD_GROUP_LOW_BID_IN_AT_LEAST_ONE_MARKETPLACE',
    AdArchived = 'AD_ARCHIVED',
    AdPausedInAtLeastOneMarketplace = 'AD_PAUSED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdPolicingSuspendedInAtLeastOneMarketplace = 'AD_POLICING_SUSPENDED_IN_AT_LEAST_ONE_MARKETPLACE',
    AdMissingDecorationInAtLeastOneMarketplace = 'AD_MISSING_DECORATION_IN_AT_LEAST_ONE_MARKETPLACE',
    AdMissingImageInAtLeastOneMarketplace = 'AD_MISSING_IMAGE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdPolicingPendingReviewInAtLeastOneMarketplace = 'AD_POLICING_PENDING_REVIEW_IN_AT_LEAST_ONE_MARKETPLACE',
    AdNotBuyableInAtLeastOneMarketplace = 'AD_NOT_BUYABLE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdNotInBuyboxInAtLeastOneMarketplace = 'AD_NOT_IN_BUYBOX_IN_AT_LEAST_ONE_MARKETPLACE',
    AdOutOfStockInAtLeastOneMarketplace = 'AD_OUT_OF_STOCK_IN_AT_LEAST_ONE_MARKETPLACE',
    AdLandingPageNotAvailableInAtLeastOneMarketplace = 'AD_LANDING_PAGE_NOT_AVAILABLE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdStatusUnavailableInAtLeastOneMarketplace = 'AD_STATUS_UNAVAILABLE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdNoPurchasableOfferInAtLeastOneMarketplace = 'AD_NO_PURCHASABLE_OFFER_IN_AT_LEAST_ONE_MARKETPLACE',
    AdIneligibleInAtLeastOneMarketplace = 'AD_INELIGIBLE_IN_AT_LEAST_ONE_MARKETPLACE',
    AdCreationFailedInAtLeastOneMarketplace = 'AD_CREATION_FAILED_IN_AT_LEAST_ONE_MARKETPLACE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalProductAd
 */
export interface SponsoredProductsGlobalProductAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof SponsoredProductsGlobalProductAd
     */
    adId: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SponsoredProductsGlobalProductAd
     */
    campaignId: string;
    /**
     * The custom text that is associated with this ad. Defined for custom text ads only.
     * @type {string}
     * @memberof SponsoredProductsGlobalProductAd
     */
    customText?: string;
    /**
     * Name for the product Ad
     * @type {string}
     * @memberof SponsoredProductsGlobalProductAd
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalProductIdentifiers}
     * @memberof SponsoredProductsGlobalProductAd
     */
    asin?: SponsoredProductsGlobalProductIdentifiers;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalProductAd
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalProductIdentifiers}
     * @memberof SponsoredProductsGlobalProductAd
     */
    sku?: SponsoredProductsGlobalProductIdentifiers;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof SponsoredProductsGlobalProductAd
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalProductAdExtendedData}
     * @memberof SponsoredProductsGlobalProductAd
     */
    extendedData?: SponsoredProductsGlobalProductAdExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalProductAdExtendedData
 */
export interface SponsoredProductsGlobalProductAdExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalProductAdServingStatus}
     * @memberof SponsoredProductsGlobalProductAdExtendedData
     */
    servingStatus?: SponsoredProductsGlobalProductAdServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalProductAdFailureResponseItem
 */
export interface SponsoredProductsGlobalProductAdFailureResponseItem {
    /**
     * the index of the product ad in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalProductAdFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsProductAdMutationError>}
     * @memberof SponsoredProductsGlobalProductAdFailureResponseItem
     */
    errors?: Array<SponsoredProductsProductAdMutationError>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalProductAdMarketplaceServingReason {
    AdGroupStatusEnabledDetail = 'AD_GROUP_STATUS_ENABLED_DETAIL',
    AdGroupPausedDetail = 'AD_GROUP_PAUSED_DETAIL',
    AdGroupArchivedDetail = 'AD_GROUP_ARCHIVED_DETAIL',
    AdGroupIncompleteDetail = 'AD_GROUP_INCOMPLETE_DETAIL',
    AdGroupPolicingPendingReviewDetail = 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
    AdGroupPolicingCreativeRejectedDetail = 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
    AdGroupLowBidDetail = 'AD_GROUP_LOW_BID_DETAIL',
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
    AdStatusLiveDetail = 'AD_STATUS_LIVE_DETAIL',
    AdPolicingPendingReviewDetail = 'AD_POLICING_PENDING_REVIEW_DETAIL',
    AdPolicingSuspendedDetail = 'AD_POLICING_SUSPENDED_DETAIL',
    AdPausedDetail = 'AD_PAUSED_DETAIL',
    AdArchivedDetail = 'AD_ARCHIVED_DETAIL'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsGlobalProductAdMarketplaceServingStatus {
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    CampaignPendingStartDate = 'CAMPAIGN_PENDING_START_DATE',
    CampaignEnded = 'CAMPAIGN_ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    AdvertiserStatusEnabled = 'ADVERTISER_STATUS_ENABLED',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AdStatusLive = 'AD_STATUS_LIVE',
    AdPolicingPendingReview = 'AD_POLICING_PENDING_REVIEW',
    AdPolicingSuspended = 'AD_POLICING_SUSPENDED',
    AdPaused = 'AD_PAUSED',
    AdArchived = 'AD_ARCHIVED',
    AdCreationFailed = 'AD_CREATION_FAILED',
    StatusUnavailable = 'STATUS_UNAVAILABLE',
    AdMissingImage = 'AD_MISSING_IMAGE',
    AdMissingDecoration = 'AD_MISSING_DECORATION',
    AdNotBuyable = 'AD_NOT_BUYABLE',
    AdNotInBuybox = 'AD_NOT_IN_BUYBOX',
    AdOutOfStock = 'AD_OUT_OF_STOCK',
    AdLandingPageNotAvailable = 'AD_LANDING_PAGE_NOT_AVAILABLE',
    AdNoPurchasableOffer = 'AD_NO_PURCHASABLE_OFFER',
    AdIneligible = 'AD_INELIGIBLE',
    AdEligible = 'AD_ELIGIBLE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsGlobalProductAdServingStatus
 */
export interface SponsoredProductsGlobalProductAdServingStatus {
    /**
     * Serving status details of Product Ad
     * @type {Array<SponsoredProductsGlobalProductAServingStatusReason>}
     * @memberof SponsoredProductsGlobalProductAdServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalProductAServingStatusReason>;
    /**
     * The marketplace serving statuses.
     * @type {Array<SponsoredProductsMarketplaceProductAdServingStatus>}
     * @memberof SponsoredProductsGlobalProductAdServingStatus
     */
    marketplaceAdServingStatus?: Array<SponsoredProductsMarketplaceProductAdServingStatus>;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityServingStatus}
     * @memberof SponsoredProductsGlobalProductAdServingStatus
     */
    adServingStatus?: SponsoredProductsGlobalEntityServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalProductAdSuccessResponseItem
 */
export interface SponsoredProductsGlobalProductAdSuccessResponseItem {
    /**
     * the ProductAd ID
     * @type {string}
     * @memberof SponsoredProductsGlobalProductAdSuccessResponseItem
     */
    adId?: string;
    /**
     * The index in the original list from the request.
     * @type {number}
     * @memberof SponsoredProductsGlobalProductAdSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsGlobalProductAd}
     * @memberof SponsoredProductsGlobalProductAdSuccessResponseItem
     */
    productAd?: SponsoredProductsGlobalProductAd;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalProductIdentifiers
 */
export interface SponsoredProductsGlobalProductIdentifiers {
    /**
     * 
     * @type {Array<SponsoredProductsMarketplaceLevelProductIdentifier>}
     * @memberof SponsoredProductsGlobalProductIdentifiers
     */
    marketplaceSettings?: Array<SponsoredProductsMarketplaceLevelProductIdentifier>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalTargetingClause
 */
export interface SponsoredProductsGlobalTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    expression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    targetId: string;
    /**
     * The resolved targeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    campaignId: string;
    /**
     * Name for the targeting clause
     * @type {string}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsExpressionType}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    expressionType: SponsoredProductsExpressionType;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityState}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    state: SponsoredProductsGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    bid: SponsoredProductsGlobalBid;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalTargetingClauseExtendedData}
     * @memberof SponsoredProductsGlobalTargetingClause
     */
    extendedData?: SponsoredProductsGlobalTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseExtendedData
 */
export interface SponsoredProductsGlobalTargetingClauseExtendedData {
    /**
     * 
     * @type {SponsoredProductsGlobalTargetingClauseServingStatus}
     * @memberof SponsoredProductsGlobalTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsGlobalTargetingClauseServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsGlobalTargetingClauseFailureResponseItem {
    /**
     * the index of the targetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsTargetMutationError>}
     * @memberof SponsoredProductsGlobalTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseServingStatus
 */
export interface SponsoredProductsGlobalTargetingClauseServingStatus {
    /**
     * Serving status details of adgroup
     * @type {Array<SponsoredProductsGlobalKeywordServingStatusReason>}
     * @memberof SponsoredProductsGlobalTargetingClauseServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalKeywordServingStatusReason>;
    /**
     * 
     * @type {SponsoredProductsGlobalEntityServingStatus}
     * @memberof SponsoredProductsGlobalTargetingClauseServingStatus
     */
    targetingClauseServingStatus?: SponsoredProductsGlobalEntityServingStatus;
    /**
     * The marketplace serving statuses.
     * @type {Array<SponsoredProductsMarketplaceTargetingClauseServingStatus>}
     * @memberof SponsoredProductsGlobalTargetingClauseServingStatus
     */
    marketplaceTargetingClauseServingStatus?: Array<SponsoredProductsMarketplaceTargetingClauseServingStatus>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsGlobalTargetingClauseSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsGlobalTargetingClause}
     * @memberof SponsoredProductsGlobalTargetingClauseSuccessResponseItem
     */
    targetingClause?: SponsoredProductsGlobalTargetingClause;
    /**
     * the targetingClause ID
     * @type {string}
     * @memberof SponsoredProductsGlobalTargetingClauseSuccessResponseItem
     */
    targetId?: string;
    /**
     * the index of the targetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsGlobalTargetingClauseSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsGlobalTargetingExpressionPredicate
 */
export interface SponsoredProductsGlobalTargetingExpressionPredicate {
    /**
     * The marketplace settings for expression to be overridden for marketplace.
     * @type {Array<SponsoredProductsTargetingExpressionPredicateMarketValue>}
     * @memberof SponsoredProductsGlobalTargetingExpressionPredicate
     */
    marketplaceSettings?: Array<SponsoredProductsTargetingExpressionPredicateMarketValue>;
    /**
     * 
     * @type {SponsoredProductsTargetingExpressionPredicateType}
     * @memberof SponsoredProductsGlobalTargetingExpressionPredicate
     */
    type?: SponsoredProductsTargetingExpressionPredicateType;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsInternalErrorErrorCode {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * Error that represents non-retryable API service error. Sending the same request will result in another error.
 * @export
 * @interface SponsoredProductsInternalServerError
 */
export interface SponsoredProductsInternalServerError {
    /**
     * 
     * @type {SponsoredProductsInternalServerErrorReason}
     * @memberof SponsoredProductsInternalServerError
     */
    reason: SponsoredProductsInternalServerErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsInternalServerError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsInternalServerError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsInternalServerErrorReason {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @interface SponsoredProductsInternalServerExceptionResponseContent
 */
export interface SponsoredProductsInternalServerExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInternalErrorErrorCode}
     * @memberof SponsoredProductsInternalServerExceptionResponseContent
     */
    code: SponsoredProductsInternalErrorErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsInternalServerExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsInvalidArgumentErrorCode {
    InvalidArgument = 'INVALID_ARGUMENT'
}

/**
 * Errors related to ad eligibility
 * @export
 * @interface SponsoredProductsInvalidInputError
 */
export interface SponsoredProductsInvalidInputError {
    /**
     * 
     * @type {SponsoredProductsInvalidInputErrorReason}
     * @memberof SponsoredProductsInvalidInputError
     */
    reason: SponsoredProductsInvalidInputErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsInvalidInputError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsInvalidInputError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsInvalidInputErrorReason {
    InvalidToken = 'INVALID_TOKEN'
}

/**
 * 
 * @export
 * @interface SponsoredProductsKeyword
 */
export interface SponsoredProductsKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsKeyword
     */
    keywordId: string;
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser. For example, if the advertiser’s preferred language is Simplified Chinese, set the locale to zh_CN. Supported locales include: Simplified Chinese (locale: zh_CN) for US, UK and CA. English (locale: en_GB) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SponsoredProductsKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsMatchType}
     * @memberof SponsoredProductsKeyword
     */
    matchType: SponsoredProductsMatchType;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsKeyword
     */
    state: SponsoredProductsEntityState;
    /**
     * Bid associated with this keyword. Applicable to biddable match types only. Keywords that do not have bid values in listKeywords will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsKeyword
     */
    bid?: number;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsKeyword
     */
    adGroupId: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsKeyword
     */
    keywordText: string;
    /**
     * 
     * @type {SponsoredProductsKeywordExtendedData}
     * @memberof SponsoredProductsKeyword
     */
    extendedData?: SponsoredProductsKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordAccessError
 */
export interface SponsoredProductsKeywordAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsKeywordAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsKeywordAccessErrorSelector}
     * @memberof SponsoredProductsKeywordAccessError
     */
    errorValue: SponsoredProductsKeywordAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordAccessErrorSelector
 */
export interface SponsoredProductsKeywordAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsLocaleError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    localeError?: SponsoredProductsLocaleError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsKeywordAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsKeywordAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsKeywordAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsKeywordAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsKeywordAccessError>}
     * @memberof SponsoredProductsKeywordAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsKeywordAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordExtendedData
 */
export interface SponsoredProductsKeywordExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsKeywordExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsKeywordExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * The serving status reasons of the Keyword
     * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
     * @memberof SponsoredProductsKeywordExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsKeywordExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordFailureResponseItem
 */
export interface SponsoredProductsKeywordFailureResponseItem {
    /**
     * the index of the keyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsKeywordMutationError>}
     * @memberof SponsoredProductsKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordMutationError
 */
export interface SponsoredProductsKeywordMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsKeywordMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsKeywordMutationErrorSelector}
     * @memberof SponsoredProductsKeywordMutationError
     */
    errorValue: SponsoredProductsKeywordMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordMutationErrorSelector
 */
export interface SponsoredProductsKeywordMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsTargetingClauseSetupError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
    /**
     * 
     * @type {SponsoredProductsLocaleError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    localeError?: SponsoredProductsLocaleError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsKeywordMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsKeywordMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsKeywordMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsKeywordMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsKeywordMutationError>}
     * @memberof SponsoredProductsKeywordMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsKeywordMutationError>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsKeywordServingStatus {
    TargetingClauseStatusLive = 'TARGETING_CLAUSE_STATUS_LIVE',
    TargetingClausePolicingSuspended = 'TARGETING_CLAUSE_POLICING_SUSPENDED',
    TargetingClausePaused = 'TARGETING_CLAUSE_PAUSED',
    TargetingClauseArchived = 'TARGETING_CLAUSE_ARCHIVED',
    TargetingClauseBlocked = 'TARGETING_CLAUSE_BLOCKED',
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    PendingReview = 'PENDING_REVIEW',
    Rejected = 'REJECTED',
    PendingStartDate = 'PENDING_START_DATE',
    Ended = 'ENDED',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserOutOfBudget = 'ADVERTISER_OUT_OF_BUDGET',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AccountOutOfBudget = 'ACCOUNT_OUT_OF_BUDGET',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsKeywordServingStatusDetail
 */
export interface SponsoredProductsKeywordServingStatusDetail {
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatusReason}
     * @memberof SponsoredProductsKeywordServingStatusDetail
     */
    name?: SponsoredProductsKeywordServingStatusReason;
    /**
     * A URL with additional information about the status identifier.
     * @type {string}
     * @memberof SponsoredProductsKeywordServingStatusDetail
     */
    helpUrl?: string;
    /**
     * A human-readable description of the status identifier specified in the name field.
     * @type {string}
     * @memberof SponsoredProductsKeywordServingStatusDetail
     */
    message?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsKeywordServingStatusReason {
    TargetingClauseStatusLiveDetail = 'TARGETING_CLAUSE_STATUS_LIVE_DETAIL',
    TargetingClausePolicingSuspendedDetail = 'TARGETING_CLAUSE_POLICING_SUSPENDED_DETAIL',
    TargetingClausePausedDetail = 'TARGETING_CLAUSE_PAUSED_DETAIL',
    TargetingClauseArchivedDetail = 'TARGETING_CLAUSE_ARCHIVED_DETAIL',
    TargetingClauseBlockedDetail = 'TARGETING_CLAUSE_BLOCKED_DETAIL',
    AdGroupStatusEnabledDetail = 'AD_GROUP_STATUS_ENABLED_DETAIL',
    AdGroupPausedDetail = 'AD_GROUP_PAUSED_DETAIL',
    AdGroupArchivedDetail = 'AD_GROUP_ARCHIVED_DETAIL',
    AdGroupIncompleteDetail = 'AD_GROUP_INCOMPLETE_DETAIL',
    AdGroupPolicingPendingReviewDetail = 'AD_GROUP_POLICING_PENDING_REVIEW_DETAIL',
    AdGroupPolicingCreativeRejectedDetail = 'AD_GROUP_POLICING_CREATIVE_REJECTED_DETAIL',
    AdGroupLowBidDetail = 'AD_GROUP_LOW_BID_DETAIL',
    CampaignStatusEnabledDetail = 'CAMPAIGN_STATUS_ENABLED_DETAIL',
    CampaignPausedDetail = 'CAMPAIGN_PAUSED_DETAIL',
    CampaignArchivedDetail = 'CAMPAIGN_ARCHIVED_DETAIL',
    PendingReviewDetail = 'PENDING_REVIEW_DETAIL',
    RejectedDetail = 'REJECTED_DETAIL',
    PendingStartDateDetail = 'PENDING_START_DATE_DETAIL',
    EndedDetail = 'ENDED_DETAIL',
    CampaignOutOfBudgetDetail = 'CAMPAIGN_OUT_OF_BUDGET_DETAIL',
    CampaignIncompleteDetail = 'CAMPAIGN_INCOMPLETE_DETAIL',
    PortfolioStatusEnabledDetail = 'PORTFOLIO_STATUS_ENABLED_DETAIL',
    PortfolioPausedDetail = 'PORTFOLIO_PAUSED_DETAIL',
    PortfolioArchivedDetail = 'PORTFOLIO_ARCHIVED_DETAIL',
    PortfolioOutOfBudgetDetail = 'PORTFOLIO_OUT_OF_BUDGET_DETAIL',
    PortfolioPendingStartDateDetail = 'PORTFOLIO_PENDING_START_DATE_DETAIL',
    PortfolioEndedDetail = 'PORTFOLIO_ENDED_DETAIL',
    AdvertiserPolicingSuspendedDetail = 'ADVERTISER_POLICING_SUSPENDED_DETAIL',
    AdvertiserPolicingPendingReviewDetail = 'ADVERTISER_POLICING_PENDING_REVIEW_DETAIL',
    AdvertiserArchivedDetail = 'ADVERTISER_ARCHIVED_DETAIL',
    AdvertiserPausedDetail = 'ADVERTISER_PAUSED_DETAIL',
    AdvertiserOutOfBudgetDetail = 'ADVERTISER_OUT_OF_BUDGET_DETAIL',
    AdvertiserPaymentFailureDetail = 'ADVERTISER_PAYMENT_FAILURE_DETAIL',
    AccountOutOfBudgetDetail = 'ACCOUNT_OUT_OF_BUDGET_DETAIL',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsKeywordSuccessResponseItem
 */
export interface SponsoredProductsKeywordSuccessResponseItem {
    /**
     * the keyword ID
     * @type {string}
     * @memberof SponsoredProductsKeywordSuccessResponseItem
     */
    keywordId?: string;
    /**
     * the index of the keyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsKeywordSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsKeyword}
     * @memberof SponsoredProductsKeywordSuccessResponseItem
     */
    keyword?: SponsoredProductsKeyword;
}
/**
 * Filter by keywordText
 * @export
 * @interface SponsoredProductsKeywordTextFilter
 */
export interface SponsoredProductsKeywordTextFilter {
    /**
     * 
     * @type {SponsoredProductsQueryTermMatchType}
     * @memberof SponsoredProductsKeywordTextFilter
     */
    queryTermMatchType?: SponsoredProductsQueryTermMatchType;
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsKeywordTextFilter
     */
    include?: Array<string>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsKeywordTextMarketplaceSettings
 */
export interface SponsoredProductsKeywordTextMarketplaceSettings {
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsKeywordTextMarketplaceSettings
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsKeywordTextMarketplaceSettings
     */
    value: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsAdGroupsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsNameFilter}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    nameFilter?: SponsoredProductsNameFilter;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsRequestContent
     */
    campaignTargetingTypeFilter?: SponsoredProductsTargetingType;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsAdGroupsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsAdGroup>}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsResponseContent
     */
    adGroups?: Array<SponsoredProductsAdGroup>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsAdGroupsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * Restricts results to resources with the selected matchType
     * @type {Array<SponsoredProductsNegativeMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords?: Array<SponsoredProductsCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    campaignNegativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsCampaignNegativeTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent
     */
    campaignNegativeTargetingClauses?: Array<SponsoredProductsCampaignNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    campaignIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    portfolioIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsNameFilter}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsRequestContent
     */
    nameFilter?: SponsoredProductsNameFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsCampaignsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsCampaign>}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsResponseContent
     */
    campaigns?: Array<SponsoredProductsCampaign>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsCampaignsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsNameFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    nameFilter?: SponsoredProductsNameFilter;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsRequestContent
     */
    campaignTargetingTypeFilter?: SponsoredProductsTargetingType;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsDraftAdGroup>}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
     */
    adGroups?: Array<SponsoredProductsDraftAdGroup>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftAdGroupsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsRequestContent
     */
    matchTypeFilter?: SponsoredProductsNegativeMatchType;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords?: Array<SponsoredProductsDraftCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
     */
    campaignIdFilter: SponsoredProductsObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusRequestContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaignPromotionStatus>}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
     */
    campaignStatuses?: Array<SponsoredProductsDraftCampaignPromotionStatus>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsPromotionStatusResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
     */
    campaignIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
     */
    portfolioIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsNameFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsRequestContent
     */
    nameFilter?: SponsoredProductsNameFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsDraftCampaign>}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
     */
    campaigns?: Array<SponsoredProductsDraftCampaign>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftCampaignsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * Restricts results to draft keywords associated with locale
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    locale?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    keywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    keywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Only the draft keyword with match type that is in this list will be listed
     * @type {Array<SponsoredProductsMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsDraftKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
     */
    keywords?: Array<SponsoredProductsDraftKeyword>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftKeywordsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    negativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * The locale preference of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    locale?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Restricts results to resources with the selected matchType
     * @type {Array<SponsoredProductsNegativeMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent {
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
     */
    negativeKeywords?: Array<SponsoredProductsDraftNegativeKeyword>;
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeKeywordsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftNegativeTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsDraftNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses?: Array<SponsoredProductsDraftNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
     */
    adIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftProductAd>}
     * @memberof SponsoredProductsListSponsoredProductsDraftProductAdsResponseContent
     */
    productAds?: Array<SponsoredProductsDraftProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    expressionTypeFilter?: SponsoredProductsExpressionTypeFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    targetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsDraftTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsDraftTargetingClausesResponseContent
     */
    targetingClauses?: Array<SponsoredProductsDraftTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent {
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalAdGroup>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
     */
    adGroups?: Array<SponsoredProductsGlobalAdGroup>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalAdGroupsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaignNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords?: Array<SponsoredProductsGlobalCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
     */
    campaignIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaign>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
     */
    campaigns?: Array<SponsoredProductsGlobalCampaign>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalCampaignsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent {
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsRequestContent
     */
    keywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
     */
    keywords?: Array<SponsoredProductsGlobalKeyword>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalKeywordsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent {
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
     */
    negativeKeywords?: Array<SponsoredProductsGlobalNegativeKeyword>;
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeKeywordsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalNegativeTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses?: Array<SponsoredProductsGlobalNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent {
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
     */
    adIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalProductAd>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalProductAdsResponseContent
     */
    productAds?: Array<SponsoredProductsGlobalProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent {
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
     */
    targetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsGlobalTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsGlobalTargetingClausesResponseContent
     */
    targetingClauses?: Array<SponsoredProductsGlobalTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * Restricts results to keywords associated with locale
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    locale?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    keywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    keywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Only the keyword with match type that is in this list will be listed
     * @type {Array<SponsoredProductsMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
     */
    keywords?: Array<SponsoredProductsKeyword>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsPreviewResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * Restricts results to keywords associated with locale
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    locale?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    keywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    keywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Only the keyword with match type that is in this list will be listed
     * @type {Array<SponsoredProductsMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsKeywordsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<SponsoredProductsKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsResponseContent
     */
    keywords?: Array<SponsoredProductsKeyword>;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsKeywordsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    negativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * Restricts results to negativeKeywords that match the specified locale.
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    locale?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Only the negativeKeyword with the match type that is in this list will be listed
     * @type {Array<SponsoredProductsNegativeMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent {
    /**
     * 
     * @type {Array<SponsoredProductsNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
     */
    negativeKeywords?: Array<SponsoredProductsNegativeKeyword>;
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsPreviewResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * 
     * @type {SponsoredProductsKeywordTextFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    negativeKeywordTextFilter?: SponsoredProductsKeywordTextFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * Restricts results to negativeKeywords that match the specified locale.
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    locale?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    negativeKeywordIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * Only the negativeKeyword with the match type that is in this list will be listed
     * @type {Array<SponsoredProductsNegativeMatchType>}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
     */
    matchTypeFilter?: Array<SponsoredProductsNegativeMatchType>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent {
    /**
     * 
     * @type {Array<SponsoredProductsNegativeKeyword>}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
     */
    negativeKeywords?: Array<SponsoredProductsNegativeKeyword>;
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesPreviewResponseContent
     */
    negativeTargetingClauses?: Array<SponsoredProductsNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    negativeTargetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses?: Array<SponsoredProductsNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsListSponsoredProductsProductAdsRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    adIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsListSponsoredProductsProductAdsResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsProductAd>}
     * @memberof SponsoredProductsListSponsoredProductsProductAdsResponseContent
     */
    productAds?: Array<SponsoredProductsProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    expressionTypeFilter?: SponsoredProductsExpressionTypeFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    targetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesPreviewResponseContent
     */
    targetingClauses?: Array<SponsoredProductsTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesRequestContent {
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    campaignIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsEntityStateFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    stateFilter?: SponsoredProductsEntityStateFilter;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    expressionTypeFilter?: SponsoredProductsExpressionTypeFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    maxResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    targetIdFilter?: SponsoredProductsObjectIdFilter;
    /**
     * 
     * @type {SponsoredProductsAsinFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    asinFilter?: SponsoredProductsAsinFilter;
    /**
     * 
     * @type {SponsoredProductsReducedObjectIdFilter}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    adGroupIdFilter?: SponsoredProductsReducedObjectIdFilter;
    /**
     * Whether to get entity with extended data fields such as creationDate, lastUpdateDate, servingStatus
     * @type {boolean}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
     */
    includeExtendedDataFields?: boolean;
}
/**
 * 
 * @export
 * @interface SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsListSponsoredProductsTargetingClausesResponseContent {
    /**
     * The total number of entities
     * @type {number}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
     */
    totalResults?: number;
    /**
     * token value allowing to navigate to the next response page
     * @type {string}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SponsoredProductsTargetingClause>}
     * @memberof SponsoredProductsListSponsoredProductsTargetingClausesResponseContent
     */
    targetingClauses?: Array<SponsoredProductsTargetingClause>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsLocale {
    EnAe = 'en_AE',
    DeDe = 'de_DE',
    ArEg = 'ar_EG',
    EsEs = 'es_ES',
    FrFr = 'fr_FR',
    EnGb = 'en_GB',
    ItIt = 'it_IT',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    EnSa = 'en_SA',
    SvSe = 'sv_SE',
    TrTr = 'tr_TR',
    EnAu = 'en_AU',
    EnIn = 'en_IN',
    JaJp = 'ja_JP',
    EnSg = 'en_SG',
    PtBr = 'pt_BR',
    EnCa = 'en_CA',
    EsMx = 'es_MX',
    EnUs = 'en_US'
}

/**
 * 
 * @export
 * @interface SponsoredProductsLocaleError
 */
export interface SponsoredProductsLocaleError {
    /**
     * 
     * @type {SponsoredProductsLocaleErrorReason}
     * @memberof SponsoredProductsLocaleError
     */
    reason: SponsoredProductsLocaleErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsLocaleError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsLocaleError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsLocaleErrorReason {
    InvalidLocale = 'INVALID_LOCALE'
}

/**
 * Errors being used to represent malformed values e.g. containing not allowed characters, not following patters etc
 * @export
 * @interface SponsoredProductsMalformedValueError
 */
export interface SponsoredProductsMalformedValueError {
    /**
     * 
     * @type {SponsoredProductsMalformedValueErrorReason}
     * @memberof SponsoredProductsMalformedValueError
     */
    reason: SponsoredProductsMalformedValueErrorReason;
    /**
     * fragment of the value which is wrong
     * @type {string}
     * @memberof SponsoredProductsMalformedValueError
     */
    fragment?: string;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMalformedValueError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsMalformedValueError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsMalformedValueError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsMalformedValueErrorReason {
    ForbiddenChars = 'FORBIDDEN_CHARS',
    PatternNotMatched = 'PATTERN_NOT_MATCHED',
    TooLong = 'TOO_LONG',
    TooShort = 'TOO_SHORT',
    LeadingOrTrailingWhitespace = 'LEADING_OR_TRAILING_WHITESPACE',
    Blank = 'BLANK'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsMarketplace {
    Us = 'US',
    Ca = 'CA',
    Mx = 'MX',
    Br = 'BR',
    Uk = 'UK',
    De = 'DE',
    Fr = 'FR',
    Es = 'ES',
    It = 'IT',
    In = 'IN',
    Ae = 'AE',
    Sa = 'SA',
    Nl = 'NL',
    Pl = 'PL',
    Se = 'SE',
    Tr = 'TR',
    Eg = 'EG',
    Jp = 'JP',
    Au = 'AU',
    Sg = 'SG'
}

/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceAdGroupServingStatus
 */
export interface SponsoredProductsMarketplaceAdGroupServingStatus {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalAdGroupMarketplaceServingReason>}
     * @memberof SponsoredProductsMarketplaceAdGroupServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalAdGroupMarketplaceServingReason>;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceAdGroupServingStatus
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsGlobalAdGroupMarketplaceServingStatus}
     * @memberof SponsoredProductsMarketplaceAdGroupServingStatus
     */
    servingStatus: SponsoredProductsGlobalAdGroupMarketplaceServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceBid
 */
export interface SponsoredProductsMarketplaceBid {
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceBid
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsMarketplaceBid
     */
    bid?: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceBudget
 */
export interface SponsoredProductsMarketplaceBudget {
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceBudget
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * Monetary value
     * @type {number}
     * @memberof SponsoredProductsMarketplaceBudget
     */
    budget: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceCampaignServingStatus
 */
export interface SponsoredProductsMarketplaceCampaignServingStatus {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalCampaignMarketplaceServingReason>}
     * @memberof SponsoredProductsMarketplaceCampaignServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalCampaignMarketplaceServingReason>;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceCampaignServingStatus
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsGlobalCampaignMarketplaceServingStatus}
     * @memberof SponsoredProductsMarketplaceCampaignServingStatus
     */
    servingStatus: SponsoredProductsGlobalCampaignMarketplaceServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceLevelKeywordServingStatus
 */
export interface SponsoredProductsMarketplaceLevelKeywordServingStatus {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>}
     * @memberof SponsoredProductsMarketplaceLevelKeywordServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceLevelKeywordServingStatus
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordMarketplaceServingStatus}
     * @memberof SponsoredProductsMarketplaceLevelKeywordServingStatus
     */
    servingStatus: SponsoredProductsGlobalKeywordMarketplaceServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceLevelProductIdentifier
 */
export interface SponsoredProductsMarketplaceLevelProductIdentifier {
    /**
     * 
     * @type {string}
     * @memberof SponsoredProductsMarketplaceLevelProductIdentifier
     */
    identifier: string;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceLevelProductIdentifier
     */
    marketplace?: SponsoredProductsMarketplace;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceProductAdServingStatus
 */
export interface SponsoredProductsMarketplaceProductAdServingStatus {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalProductAdMarketplaceServingReason>}
     * @memberof SponsoredProductsMarketplaceProductAdServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalProductAdMarketplaceServingReason>;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceProductAdServingStatus
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsGlobalProductAdMarketplaceServingStatus}
     * @memberof SponsoredProductsMarketplaceProductAdServingStatus
     */
    servingStatus: SponsoredProductsGlobalProductAdMarketplaceServingStatus;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceState
 */
export interface SponsoredProductsMarketplaceState {
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceState
     */
    marketplace: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsMarketplaceState
     */
    state: SponsoredProductsEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsMarketplaceTargetingClauseServingStatus
 */
export interface SponsoredProductsMarketplaceTargetingClauseServingStatus {
    /**
     * 
     * @type {Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>}
     * @memberof SponsoredProductsMarketplaceTargetingClauseServingStatus
     */
    statusReasons?: Array<SponsoredProductsGlobalKeywordMarketplaceServingStatusReason>;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMarketplaceTargetingClauseServingStatus
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordMarketplaceServingStatus}
     * @memberof SponsoredProductsMarketplaceTargetingClauseServingStatus
     */
    servingStatus: SponsoredProductsGlobalKeywordMarketplaceServingStatus;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsMatchType {
    Exact = 'EXACT',
    Phrase = 'PHRASE',
    Broad = 'BROAD',
    Other = 'OTHER'
}

/**
 * Error describing missing values in API payloads
 * @export
 * @interface SponsoredProductsMissingValueError
 */
export interface SponsoredProductsMissingValueError {
    /**
     * 
     * @type {SponsoredProductsMissingValueErrorReason}
     * @memberof SponsoredProductsMissingValueError
     */
    reason: SponsoredProductsMissingValueErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsMissingValueError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsMissingValueError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsMissingValueError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsMissingValueErrorReason {
    MissingValue = 'MISSING_VALUE'
}

/**
 * Filter entities by name
 * @export
 * @interface SponsoredProductsNameFilter
 */
export interface SponsoredProductsNameFilter {
    /**
     * 
     * @type {SponsoredProductsQueryTermMatchType}
     * @memberof SponsoredProductsNameFilter
     */
    queryTermMatchType?: SponsoredProductsQueryTermMatchType;
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsNameFilter
     */
    include?: Array<string>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeyword
 */
export interface SponsoredProductsNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeyword
     */
    keywordId: string;
    /**
     * The unlocalized keyword text in the preferred locale of the advertiser
     * @type {string}
     * @memberof SponsoredProductsNegativeKeyword
     */
    nativeLanguageKeyword?: string;
    /**
     * The locale preference of the advertiser.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeyword
     */
    nativeLanguageLocale?: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeyword
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeMatchType}
     * @memberof SponsoredProductsNegativeKeyword
     */
    matchType: SponsoredProductsNegativeMatchType;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsNegativeKeyword
     */
    state: SponsoredProductsEntityState;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeyword
     */
    adGroupId: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeyword
     */
    keywordText: string;
    /**
     * 
     * @type {SponsoredProductsNegativeKeywordExtendedData}
     * @memberof SponsoredProductsNegativeKeyword
     */
    extendedData?: SponsoredProductsNegativeKeywordExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordAccessError
 */
export interface SponsoredProductsNegativeKeywordAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsNegativeKeywordAccessErrorSelector}
     * @memberof SponsoredProductsNegativeKeywordAccessError
     */
    errorValue: SponsoredProductsNegativeKeywordAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordAccessErrorSelector
 */
export interface SponsoredProductsNegativeKeywordAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsNegativeKeywordAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsNegativeKeywordAccessExceptionResponseContent
 */
export interface SponsoredProductsNegativeKeywordAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsNegativeKeywordAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeKeywordAccessError>}
     * @memberof SponsoredProductsNegativeKeywordAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsNegativeKeywordAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordExtendedData
 */
export interface SponsoredProductsNegativeKeywordExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsNegativeKeywordExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * The serving status reasons of the Keyword
     * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
     * @memberof SponsoredProductsNegativeKeywordExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordFailureResponseItem
 */
export interface SponsoredProductsNegativeKeywordFailureResponseItem {
    /**
     * the index of the negativeKeyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsNegativeKeywordFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsNegativeKeywordMutationError>}
     * @memberof SponsoredProductsNegativeKeywordFailureResponseItem
     */
    errors?: Array<SponsoredProductsNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordMutationError
 */
export interface SponsoredProductsNegativeKeywordMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsNegativeKeywordMutationErrorSelector}
     * @memberof SponsoredProductsNegativeKeywordMutationError
     */
    errorValue: SponsoredProductsNegativeKeywordMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordMutationErrorSelector
 */
export interface SponsoredProductsNegativeKeywordMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsTargetingClauseSetupError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsNegativeKeywordMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsNegativeKeywordMutationExceptionResponseContent
 */
export interface SponsoredProductsNegativeKeywordMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsNegativeKeywordMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeKeywordMutationError>}
     * @memberof SponsoredProductsNegativeKeywordMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsNegativeKeywordMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeKeywordSuccessResponseItem
 */
export interface SponsoredProductsNegativeKeywordSuccessResponseItem {
    /**
     * the index of the negativeKeyword in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsNegativeKeywordSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsNegativeKeyword}
     * @memberof SponsoredProductsNegativeKeywordSuccessResponseItem
     */
    negativeKeyword?: SponsoredProductsNegativeKeyword;
    /**
     * the negativeKeyword ID
     * @type {string}
     * @memberof SponsoredProductsNegativeKeywordSuccessResponseItem
     */
    negativeKeywordId?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsNegativeMatchType {
    NegativeExact = 'NEGATIVE_EXACT',
    NegativePhrase = 'NEGATIVE_PHRASE',
    NegativeBroad = 'NEGATIVE_BROAD',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetAccessError
 */
export interface SponsoredProductsNegativeTargetAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsNegativeTargetAccessErrorSelector}
     * @memberof SponsoredProductsNegativeTargetAccessError
     */
    errorValue: SponsoredProductsNegativeTargetAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetAccessErrorSelector
 */
export interface SponsoredProductsNegativeTargetAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsNegativeTargetAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsNegativeTargetAccessExceptionResponseContent
 */
export interface SponsoredProductsNegativeTargetAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsNegativeTargetAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeTargetAccessError>}
     * @memberof SponsoredProductsNegativeTargetAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsNegativeTargetAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetMutationError
 */
export interface SponsoredProductsNegativeTargetMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsNegativeTargetMutationErrorSelector}
     * @memberof SponsoredProductsNegativeTargetMutationError
     */
    errorValue: SponsoredProductsNegativeTargetMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetMutationErrorSelector
 */
export interface SponsoredProductsNegativeTargetMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsTargetingClauseSetupError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsNegativeTargetMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsNegativeTargetMutationExceptionResponseContent
 */
export interface SponsoredProductsNegativeTargetMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsNegativeTargetMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsNegativeTargetMutationError>}
     * @memberof SponsoredProductsNegativeTargetMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsNegativeTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetingClause
 */
export interface SponsoredProductsNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    expression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    targetId: string;
    /**
     * The resolved NegativeTargeting expression.
     * @type {Array<SponsoredProductsNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsNegativeTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    state: SponsoredProductsEntityState;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsNegativeTargetingClauseExtendedData}
     * @memberof SponsoredProductsNegativeTargetingClause
     */
    extendedData?: SponsoredProductsNegativeTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetingClauseExtendedData
 */
export interface SponsoredProductsNegativeTargetingClauseExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * The serving status reasons of the NegativeTargetingClause
     * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
     * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingClauseExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsNegativeTargetingClauseFailureResponseItem {
    /**
     * the index of the NegativeTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsNegativeTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsNegativeTargetMutationError>}
     * @memberof SponsoredProductsNegativeTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsNegativeTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsNegativeTargetingClauseSuccessResponseItem {
    /**
     * the NegativeTargetingClause ID
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingClauseSuccessResponseItem
     */
    targetId?: string;
    /**
     * the index of the NegativeTargetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsNegativeTargetingClauseSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsNegativeTargetingClause}
     * @memberof SponsoredProductsNegativeTargetingClauseSuccessResponseItem
     */
    negativeTargetingClause?: SponsoredProductsNegativeTargetingClause;
}
/**
 * 
 * @export
 * @interface SponsoredProductsNegativeTargetingExpressionPredicate
 */
export interface SponsoredProductsNegativeTargetingExpressionPredicate {
    /**
     * 
     * @type {SponsoredProductsNegativeTargetingExpressionPredicateType}
     * @memberof SponsoredProductsNegativeTargetingExpressionPredicate
     */
    type?: SponsoredProductsNegativeTargetingExpressionPredicateType;
    /**
     * The expression value
     * @type {string}
     * @memberof SponsoredProductsNegativeTargetingExpressionPredicate
     */
    value?: string;
}
/**
 * The type of nagative targeting expression. You can only specify values for the following predicates: | Predicate | Description | | --- | --- | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `OTHER` | Other Type.   |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsNegativeTargetingExpressionPredicateType {
    AsinBrandSameAs = 'ASIN_BRAND_SAME_AS',
    AsinSameAs = 'ASIN_SAME_AS',
    Other = 'OTHER'
}

/**
 * Filter entities by the list of objectIds
 * @export
 * @interface SponsoredProductsObjectIdFilter
 */
export interface SponsoredProductsObjectIdFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsObjectIdFilter
     */
    include: Array<string>;
}
/**
 * Errors not related to any of the other error types
 * @export
 * @interface SponsoredProductsOtherError
 */
export interface SponsoredProductsOtherError {
    /**
     * 
     * @type {SponsoredProductsOtherErrorReason}
     * @memberof SponsoredProductsOtherError
     */
    reason: SponsoredProductsOtherErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsOtherError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsOtherError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsOtherError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsOtherErrorReason {
    OtherError = 'OTHER_ERROR'
}

/**
 * Errors related to parent entity
 * @export
 * @interface SponsoredProductsParentEntityError
 */
export interface SponsoredProductsParentEntityError {
    /**
     * 
     * @type {SponsoredProductsParentEntityErrorReason}
     * @memberof SponsoredProductsParentEntityError
     */
    reason: SponsoredProductsParentEntityErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsParentEntityError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsParentEntityError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsParentEntityErrorReason {
    DoesNotTargetTheseMarketplaces = 'PARENT_ENTITY_DOES_NOT_TARGET_THESE_MARKETPLACES',
    Archived = 'PARENT_ENTITY_ARCHIVED',
    NotFound = 'PARENT_ENTITY_NOT_FOUND'
}

/**
 * You can enable controls to adjust your bid based on the placement location. Specify a location where you want to use bid controls. The percentage value set is the percentage of the original bid for which you want to have your bid adjustment increased. For example, a 50% adjustment on a $1.00 bid would increase the bid to $1.50 for the opportunity to win a specified placement. | Predicate |  Placement | |-----------|------------| | `PLACEMENT_TOP` | Top of search (first page) | | `PLACEMENT_PRODUCT_PAGE` | Product pages | | `PLACEMENT_REST_OF_SEARCH` | Rest of the search (read only) |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsPlacement {
    Top = 'PLACEMENT_TOP',
    ProductPage = 'PLACEMENT_PRODUCT_PAGE',
    RestOfSearch = 'PLACEMENT_REST_OF_SEARCH'
}

/**
 * 
 * @export
 * @interface SponsoredProductsPlacementBidding
 */
export interface SponsoredProductsPlacementBidding {
    /**
     * 
     * @type {number}
     * @memberof SponsoredProductsPlacementBidding
     */
    percentage?: number;
    /**
     * 
     * @type {SponsoredProductsPlacement}
     * @memberof SponsoredProductsPlacementBidding
     */
    placement?: SponsoredProductsPlacement;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAd
 */
export interface SponsoredProductsProductAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof SponsoredProductsProductAd
     */
    adId: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SponsoredProductsProductAd
     */
    campaignId: string;
    /**
     * The custom text that is associated with this ad. Defined for custom text ads only.
     * @type {string}
     * @memberof SponsoredProductsProductAd
     */
    customText?: string;
    /**
     * The ASIN associated with the product. Defined for vendors only.
     * @type {string}
     * @memberof SponsoredProductsProductAd
     */
    asin?: string;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsProductAd
     */
    state: SponsoredProductsEntityState;
    /**
     * The SKU associated with the product. Defined for seller accounts only.
     * @type {string}
     * @memberof SponsoredProductsProductAd
     */
    sku?: string;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof SponsoredProductsProductAd
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsProductAdExtendedData}
     * @memberof SponsoredProductsProductAd
     */
    extendedData?: SponsoredProductsProductAdExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdAccessError
 */
export interface SponsoredProductsProductAdAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsProductAdAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsProductAdAccessErrorSelector}
     * @memberof SponsoredProductsProductAdAccessError
     */
    errorValue: SponsoredProductsProductAdAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdAccessErrorSelector
 */
export interface SponsoredProductsProductAdAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsProductAdAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsProductAdAccessExceptionResponseContent
 */
export interface SponsoredProductsProductAdAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsProductAdAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsProductAdAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsProductAdAccessError>}
     * @memberof SponsoredProductsProductAdAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsProductAdAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdExtendedData
 */
export interface SponsoredProductsProductAdExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsProductAdExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsAdServingStatus}
     * @memberof SponsoredProductsProductAdExtendedData
     */
    servingStatus?: SponsoredProductsAdServingStatus;
    /**
     * The serving status reasons of the Ad
     * @type {Array<SponsoredProductsAdServingStatusDetail>}
     * @memberof SponsoredProductsProductAdExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsAdServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsProductAdExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdFailureResponseItem
 */
export interface SponsoredProductsProductAdFailureResponseItem {
    /**
     * the index of the product ad in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsProductAdFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsProductAdMutationError>}
     * @memberof SponsoredProductsProductAdFailureResponseItem
     */
    errors?: Array<SponsoredProductsProductAdMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdMutationError
 */
export interface SponsoredProductsProductAdMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsProductAdMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsProductAdMutationErrorSelector}
     * @memberof SponsoredProductsProductAdMutationError
     */
    errorValue: SponsoredProductsProductAdMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdMutationErrorSelector
 */
export interface SponsoredProductsProductAdMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsAsinOwnershipError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    asinOwnershipError?: SponsoredProductsAsinOwnershipError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsUnsupportedOperationError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    unsupportedOperationError?: SponsoredProductsUnsupportedOperationError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsProductIdentifierError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    productIdentifierError?: SponsoredProductsProductIdentifierError;
    /**
     * 
     * @type {SponsoredProductsAdEligibilityError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    adEligibilityError?: SponsoredProductsAdEligibilityError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsProductAdMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsProductAdMutationExceptionResponseContent
 */
export interface SponsoredProductsProductAdMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsProductAdMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsProductAdMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsProductAdMutationError>}
     * @memberof SponsoredProductsProductAdMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsProductAdMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsProductAdSuccessResponseItem
 */
export interface SponsoredProductsProductAdSuccessResponseItem {
    /**
     * the ProductAd ID
     * @type {string}
     * @memberof SponsoredProductsProductAdSuccessResponseItem
     */
    adId?: string;
    /**
     * The index in the original list from the request.
     * @type {number}
     * @memberof SponsoredProductsProductAdSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {SponsoredProductsProductAd}
     * @memberof SponsoredProductsProductAdSuccessResponseItem
     */
    productAd?: SponsoredProductsProductAd;
}
/**
 * Errors related to product identifiers
 * @export
 * @interface SponsoredProductsProductIdentifierError
 */
export interface SponsoredProductsProductIdentifierError {
    /**
     * 
     * @type {SponsoredProductsProductIdentifierErrorReason}
     * @memberof SponsoredProductsProductIdentifierError
     */
    reason: SponsoredProductsProductIdentifierErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsProductIdentifierError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsProductIdentifierError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsProductIdentifierError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsProductIdentifierErrorReason {
    Sku = 'INVALID_SKU',
    Asin = 'INVALID_ASIN'
}

/**
 * 
 * @export
 * @interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent {
    /**
     * 
     * @type {SponsoredProductsObjectIdFilter}
     * @memberof SponsoredProductsPromoteSponsoredProductsDraftCampaignsRequestContent
     */
    campaignIdFilter: SponsoredProductsObjectIdFilter;
}
/**
 * 
 * @export
 * @interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
     * @memberof SponsoredProductsPromoteSponsoredProductsDraftCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 * Match type for query filters. | Value |  Description | |-----------|------------| | `BROAD_MATCH` | Match if the queried value contains the filter value. (substring matching) | | `EXACT_MATCH` | Match if the queried value is exactly equivalent to the filter value. |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsQueryTermMatchType {
    BroadMatch = 'BROAD_MATCH',
    ExactMatch = 'EXACT_MATCH'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsQuotaErrorReason {
    QuotaExceeded = 'QUOTA_EXCEEDED',
    NonArchivedQuotaExceeded = 'NON_ARCHIVED_QUOTA_EXCEEDED'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsQuotaScope {
    Account = 'ACCOUNT',
    ParentEntity = 'PARENT_ENTITY'
}

/**
 * Errors related to range constraints violations
 * @export
 * @interface SponsoredProductsRangeError
 */
export interface SponsoredProductsRangeError {
    /**
     * 
     * @type {SponsoredProductsValueLimitErrorReason}
     * @memberof SponsoredProductsRangeError
     */
    reason: SponsoredProductsValueLimitErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsRangeError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * allowed values
     * @type {Array<string>}
     * @memberof SponsoredProductsRangeError
     */
    allowed?: Array<string>;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsRangeError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * optional upper limit
     * @type {string}
     * @memberof SponsoredProductsRangeError
     */
    upperLimit?: string;
    /**
     * optional lower limit
     * @type {string}
     * @memberof SponsoredProductsRangeError
     */
    lowerLimit?: string;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsRangeError
     */
    message: string;
}
/**
 * Filter entities by the list of objectIds
 * @export
 * @interface SponsoredProductsReducedObjectIdFilter
 */
export interface SponsoredProductsReducedObjectIdFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsReducedObjectIdFilter
     */
    include: Array<string>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsSchemaValidationExceptionResponseContent
 */
export interface SponsoredProductsSchemaValidationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsSchemaValidationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsSchemaValidationExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetAccessError
 */
export interface SponsoredProductsTargetAccessError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsTargetAccessError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsTargetAccessErrorSelector}
     * @memberof SponsoredProductsTargetAccessError
     */
    errorValue: SponsoredProductsTargetAccessErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetAccessErrorSelector
 */
export interface SponsoredProductsTargetAccessErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsInvalidInputError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    invalidInputError?: SponsoredProductsInvalidInputError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsTargetAccessErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
}
/**
 * Exception resulting in accessing campaign management entities
 * @export
 * @interface SponsoredProductsTargetAccessExceptionResponseContent
 */
export interface SponsoredProductsTargetAccessExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsTargetAccessExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsTargetAccessExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsTargetAccessError>}
     * @memberof SponsoredProductsTargetAccessExceptionResponseContent
     */
    errors?: Array<SponsoredProductsTargetAccessError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetCampaignAttributes
 */
export interface SponsoredProductsTargetCampaignAttributes {
    /**
     * The identifier of the target marketplace.
     * @type {string}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    marketplaceId: string;
    /**
     * The end date for the campaign in formats according to https://tools.ietf.org/html/rfc3339#section-5.6.
     * @type {string}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    endDate?: string;
    /**
     * The name to be appended to the campaign. If new name already exists, a number will be appended i.e. if \"Campaign Name Copy\" exist, we will name it \"Campaign Name Copy 1\"
     * @type {string}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    nameSuffix: string;
    /**
     * The start date of the campaign in formats according to https://tools.ietf.org/html/rfc3339#section-5.6.
     * @type {string}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    startDate?: string;
    /**
     * The advertiser id per the targeted marketplace. Advertiser id per marketplace can fetched through /v2/profiles API.
     * @type {string}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    advertiserId: string;
    /**
     * The budget for the campaign.
     * @type {number}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    budget?: number;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsTargetCampaignAttributes
     */
    status: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetMutationError
 */
export interface SponsoredProductsTargetMutationError {
    /**
     * The type of the error
     * @type {string}
     * @memberof SponsoredProductsTargetMutationError
     */
    errorType: string;
    /**
     * 
     * @type {SponsoredProductsTargetMutationErrorSelector}
     * @memberof SponsoredProductsTargetMutationError
     */
    errorValue: SponsoredProductsTargetMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetMutationErrorSelector
 */
export interface SponsoredProductsTargetMutationErrorSelector {
    /**
     * 
     * @type {SponsoredProductsEntityStateError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    entityStateError?: SponsoredProductsEntityStateError;
    /**
     * 
     * @type {SponsoredProductsMissingValueError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    missingValueError?: SponsoredProductsMissingValueError;
    /**
     * 
     * @type {SponsoredProductsBiddingError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    biddingError?: SponsoredProductsBiddingError;
    /**
     * 
     * @type {SponsoredProductsDuplicateValueError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    duplicateValueError?: SponsoredProductsDuplicateValueError;
    /**
     * 
     * @type {SponsoredProductsRangeError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    rangeError?: SponsoredProductsRangeError;
    /**
     * 
     * @type {SponsoredProductsParentEntityError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    parentEntityError?: SponsoredProductsParentEntityError;
    /**
     * 
     * @type {SponsoredProductsOtherError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    otherError?: SponsoredProductsOtherError;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    expressionTypeError?: SponsoredProductsExpressionTypeError;
    /**
     * 
     * @type {SponsoredProductsThrottledError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    throttledError?: SponsoredProductsThrottledError;
    /**
     * 
     * @type {SponsoredProductsEntityNotFoundError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    entityNotFoundError?: SponsoredProductsEntityNotFoundError;
    /**
     * 
     * @type {SponsoredProductsTargetingClauseSetupError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    targetingClauseSetupError?: SponsoredProductsTargetingClauseSetupError;
    /**
     * 
     * @type {SponsoredProductsMalformedValueError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    malformedValueError?: SponsoredProductsMalformedValueError;
    /**
     * 
     * @type {SponsoredProductsBillingError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    billingError?: SponsoredProductsBillingError;
    /**
     * 
     * @type {SponsoredProductsEntityQuotaError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    entityQuotaError?: SponsoredProductsEntityQuotaError;
    /**
     * 
     * @type {SponsoredProductsInternalServerError}
     * @memberof SponsoredProductsTargetMutationErrorSelector
     */
    internalServerError?: SponsoredProductsInternalServerError;
}
/**
 * Exception resulting in mutating campaign management entities
 * @export
 * @interface SponsoredProductsTargetMutationExceptionResponseContent
 */
export interface SponsoredProductsTargetMutationExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsInvalidArgumentErrorCode}
     * @memberof SponsoredProductsTargetMutationExceptionResponseContent
     */
    code: SponsoredProductsInvalidArgumentErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsTargetMutationExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<SponsoredProductsTargetMutationError>}
     * @memberof SponsoredProductsTargetMutationExceptionResponseContent
     */
    errors?: Array<SponsoredProductsTargetMutationError>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetingClause
 */
export interface SponsoredProductsTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
     * @memberof SponsoredProductsTargetingClause
     */
    expression: Array<SponsoredProductsTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsTargetingClause
     */
    targetId: string;
    /**
     * The resolved targeting expression.
     * @type {Array<SponsoredProductsTargetingExpressionPredicate>}
     * @memberof SponsoredProductsTargetingClause
     */
    resolvedExpression: Array<SponsoredProductsTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsTargetingClause
     */
    campaignId: string;
    /**
     * 
     * @type {SponsoredProductsExpressionType}
     * @memberof SponsoredProductsTargetingClause
     */
    expressionType: SponsoredProductsExpressionType;
    /**
     * 
     * @type {SponsoredProductsEntityState}
     * @memberof SponsoredProductsTargetingClause
     */
    state: SponsoredProductsEntityState;
    /**
     * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsTargetingClause
     */
    bid?: number;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SponsoredProductsTargetingClause
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsTargetingClauseExtendedData}
     * @memberof SponsoredProductsTargetingClause
     */
    extendedData?: SponsoredProductsTargetingClauseExtendedData;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetingClauseExtendedData
 */
export interface SponsoredProductsTargetingClauseExtendedData {
    /**
     * Last updated date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsTargetingClauseExtendedData
     */
    lastUpdateDateTime?: string;
    /**
     * 
     * @type {SponsoredProductsKeywordServingStatus}
     * @memberof SponsoredProductsTargetingClauseExtendedData
     */
    servingStatus?: SponsoredProductsKeywordServingStatus;
    /**
     * The serving status reasons of the TargetingClause
     * @type {Array<SponsoredProductsKeywordServingStatusDetail>}
     * @memberof SponsoredProductsTargetingClauseExtendedData
     */
    servingStatusDetails?: Array<SponsoredProductsKeywordServingStatusDetail>;
    /**
     * Creation date in ISO 8601.
     * @type {string}
     * @memberof SponsoredProductsTargetingClauseExtendedData
     */
    creationDateTime?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetingClauseFailureResponseItem
 */
export interface SponsoredProductsTargetingClauseFailureResponseItem {
    /**
     * the index of the targetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsTargetingClauseFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors
     * @type {Array<SponsoredProductsTargetMutationError>}
     * @memberof SponsoredProductsTargetingClauseFailureResponseItem
     */
    errors?: Array<SponsoredProductsTargetMutationError>;
}
/**
 * Errors related to targeting clause setup
 * @export
 * @interface SponsoredProductsTargetingClauseSetupError
 */
export interface SponsoredProductsTargetingClauseSetupError {
    /**
     * 
     * @type {SponsoredProductsTargetingClauseSetupErrorReason}
     * @memberof SponsoredProductsTargetingClauseSetupError
     */
    reason: SponsoredProductsTargetingClauseSetupErrorReason;
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsTargetingClauseSetupError
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsTargetingClauseSetupError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsTargetingClauseSetupError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsTargetingClauseSetupErrorReason {
    TargetingTypeNotAllowedForAutoTargetingCampaign = 'TARGETING_TYPE_NOT_ALLOWED_FOR_AUTO_TARGETING_CAMPAIGN',
    TypeConflictInAdGroup = 'TYPE_CONFLICT_IN_AD_GROUP',
    AutoTargetingClauseCannotBeCreatedManually = 'AUTO_TARGETING_CLAUSE_CANNOT_BE_CREATED_MANUALLY',
    TargetingExpressionInvalidValue = 'TARGETING_EXPRESSION_INVALID_VALUE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsTargetingClauseSuccessResponseItem
 */
export interface SponsoredProductsTargetingClauseSuccessResponseItem {
    /**
     * 
     * @type {SponsoredProductsTargetingClause}
     * @memberof SponsoredProductsTargetingClauseSuccessResponseItem
     */
    targetingClause?: SponsoredProductsTargetingClause;
    /**
     * the targetingClause ID
     * @type {string}
     * @memberof SponsoredProductsTargetingClauseSuccessResponseItem
     */
    targetId?: string;
    /**
     * the index of the targetingClause in the array from the request body
     * @type {number}
     * @memberof SponsoredProductsTargetingClauseSuccessResponseItem
     */
    index: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetingExpressionPredicate
 */
export interface SponsoredProductsTargetingExpressionPredicate {
    /**
     * 
     * @type {SponsoredProductsTargetingExpressionPredicateType}
     * @memberof SponsoredProductsTargetingExpressionPredicate
     */
    type?: SponsoredProductsTargetingExpressionPredicateType;
    /**
     * The expression value
     * @type {string}
     * @memberof SponsoredProductsTargetingExpressionPredicate
     */
    value?: string;
}
/**
 * 
 * @export
 * @interface SponsoredProductsTargetingExpressionPredicateMarketValue
 */
export interface SponsoredProductsTargetingExpressionPredicateMarketValue {
    /**
     * 
     * @type {SponsoredProductsMarketplace}
     * @memberof SponsoredProductsTargetingExpressionPredicateMarketValue
     */
    marketplace?: SponsoredProductsMarketplace;
    /**
     * The expression value
     * @type {string}
     * @memberof SponsoredProductsTargetingExpressionPredicateMarketValue
     */
    value?: string;
}
/**
 * The type of targeting expression. You can specify values for the following predicates: | Predicate | Description | | --- | --- | | `QUERY_BROAD_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Loose match` target type in the UI, this will show your ad to shoppers who use search terms loosely related to your products.| | `QUERY_HIGH_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Close match` target type in the UI, this will show your ad to shoppers who use search terms closely related to your products.| | `ASIN_ACCESSORY_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Complements` target type in the UI, this will show your ad to shoppers who view the detail pages of products that complement your product.| | `ASIN_SUBSTITUTE_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Substitutes` target type in the UI, this will show your ad to shoppers who use detail pages of products similar to yours.| | `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. | | `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. | | `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. | | `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. | | `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. | | `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | | `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. | | `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   | | `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   | | `OTHER` | Other Type.   |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsTargetingExpressionPredicateType {
    AsinCategorySameAs = 'ASIN_CATEGORY_SAME_AS',
    AsinBrandSameAs = 'ASIN_BRAND_SAME_AS',
    AsinPriceLessThan = 'ASIN_PRICE_LESS_THAN',
    AsinPriceBetween = 'ASIN_PRICE_BETWEEN',
    AsinPriceGreaterThan = 'ASIN_PRICE_GREATER_THAN',
    AsinReviewRatingLessThan = 'ASIN_REVIEW_RATING_LESS_THAN',
    AsinReviewRatingBetween = 'ASIN_REVIEW_RATING_BETWEEN',
    AsinReviewRatingGreaterThan = 'ASIN_REVIEW_RATING_GREATER_THAN',
    AsinSameAs = 'ASIN_SAME_AS',
    QueryBroadRelMatches = 'QUERY_BROAD_REL_MATCHES',
    QueryHighRelMatches = 'QUERY_HIGH_REL_MATCHES',
    AsinSubstituteRelated = 'ASIN_SUBSTITUTE_RELATED',
    AsinAccessoryRelated = 'ASIN_ACCESSORY_RELATED',
    AsinAgeRangeSameAs = 'ASIN_AGE_RANGE_SAME_AS',
    AsinGenreSameAs = 'ASIN_GENRE_SAME_AS',
    AsinIsPrimeShippingEligible = 'ASIN_IS_PRIME_SHIPPING_ELIGIBLE',
    AsinExpandedFrom = 'ASIN_EXPANDED_FROM',
    Other = 'OTHER'
}

/**
 * The type of targeting expression. You can specify values for the following predicates: | Predicate | Description | | --- | --- | | `QUERY_BROAD_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Loose match` target type in the UI, this will show your ad to shoppers who use search terms loosely related to your products.| | `QUERY_HIGH_REL_MATCHES` | Auto Targeting - cannot be manually created - corresponds to the `Close match` target type in the UI, this will show your ad to shoppers who use search terms closely related to your products.| | `ASIN_ACCESSORY_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Complements` target type in the UI, this will show your ad to shoppers who view the detail pages of products that complement your product.| | `ASIN_SUBSTITUTE_RELATED` | Auto Targeting - cannot be manually created - corresponds to the `Substitutes` target type in the UI, this will show your ad to shoppers who use detail pages of products similar to yours.| | `ASIN_CATEGORY_SAME_AS` | Target the category that is the same as the category expressed | | `ASIN_BRAND_SAME_AS` | Target the brand that is the same as the brand expressed. | | `ASIN_PRICE_LESS_THAN` | Target a price that is less than the price expressed. | | `ASIN_PRICE_BETWEEN` | Target a price that is between the prices expressed. | | `ASIN_PRICE_GREATER_THAN` | Target a price that is greater than the price expressed. | | `ASIN_REVIEW_RATING_LESS_THAN` | Target a review rating less than the review rating that is expressed. | | `ASIN_REVIEW_RATING_BETWEEN` | Target a review rating that is between the review ratings expressed. | | `ASIN_REVIEW_RATING_GREATER_THAN` | Target a review rating that is greater than the review rating expressed. | | `ASIN_SAME_AS` | Target an ASIN that is the same as the ASIN expressed. | | `ASIN_IS_PRIME_SHIPPING_ELIGIBLE` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | | `ASIN_AGE_RANGE_SAME_AS` | Target an age range that is in the expressed range. This refinement can be applied for toys and games categories only. | | `ASIN_GENRE_SAME_AS` | Target products related to the expressed genre. This refinement can be applied for Books and eBooks categories only.   | | `ASIN_EXPANDED_FROM` | Target products similar in performance to the ASIN expressed.   | | `OTHER` | Other Type.   |
 * @export
 * @enum {string}
 */

export enum SponsoredProductsTargetingExpressionPredicateTypeWithoutOther {
    AsinCategorySameAs = 'ASIN_CATEGORY_SAME_AS',
    AsinBrandSameAs = 'ASIN_BRAND_SAME_AS',
    AsinPriceLessThan = 'ASIN_PRICE_LESS_THAN',
    AsinPriceBetween = 'ASIN_PRICE_BETWEEN',
    AsinPriceGreaterThan = 'ASIN_PRICE_GREATER_THAN',
    AsinReviewRatingLessThan = 'ASIN_REVIEW_RATING_LESS_THAN',
    AsinReviewRatingBetween = 'ASIN_REVIEW_RATING_BETWEEN',
    AsinReviewRatingGreaterThan = 'ASIN_REVIEW_RATING_GREATER_THAN',
    AsinSameAs = 'ASIN_SAME_AS',
    QueryBroadRelMatches = 'QUERY_BROAD_REL_MATCHES',
    QueryHighRelMatches = 'QUERY_HIGH_REL_MATCHES',
    AsinSubstituteRelated = 'ASIN_SUBSTITUTE_RELATED',
    AsinAccessoryRelated = 'ASIN_ACCESSORY_RELATED',
    AsinAgeRangeSameAs = 'ASIN_AGE_RANGE_SAME_AS',
    AsinGenreSameAs = 'ASIN_GENRE_SAME_AS',
    AsinIsPrimeShippingEligible = 'ASIN_IS_PRIME_SHIPPING_ELIGIBLE',
    AsinExpandedFrom = 'ASIN_EXPANDED_FROM'
}

/**
 * 
 * @export
 * @interface SponsoredProductsTargetingExpressionPredicateWithoutOther
 */
export interface SponsoredProductsTargetingExpressionPredicateWithoutOther {
    /**
     * 
     * @type {SponsoredProductsTargetingExpressionPredicateTypeWithoutOther}
     * @memberof SponsoredProductsTargetingExpressionPredicateWithoutOther
     */
    type: SponsoredProductsTargetingExpressionPredicateTypeWithoutOther;
    /**
     * The expression value
     * @type {string}
     * @memberof SponsoredProductsTargetingExpressionPredicateWithoutOther
     */
    value?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsTargetingType {
    Auto = 'AUTO',
    Manual = 'MANUAL'
}

/**
 * Error that represents failure due to API caller exceeding allowed service limits.
 * @export
 * @interface SponsoredProductsThrottledError
 */
export interface SponsoredProductsThrottledError {
    /**
     * 
     * @type {SponsoredProductsThrottledErrorReason}
     * @memberof SponsoredProductsThrottledError
     */
    reason: SponsoredProductsThrottledErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsThrottledError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsThrottledError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsThrottledErrorCode {
    Throttled = 'THROTTLED'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsThrottledErrorReason {
    Throttled = 'THROTTLED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsThrottlingExceptionResponseContent
 */
export interface SponsoredProductsThrottlingExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsThrottledErrorCode}
     * @memberof SponsoredProductsThrottlingExceptionResponseContent
     */
    code: SponsoredProductsThrottledErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsThrottlingExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsUnauthorizedErrorCode {
    Unauthorized = 'UNAUTHORIZED'
}

/**
 * 
 * @export
 * @interface SponsoredProductsUnauthorizedExceptionResponseContent
 */
export interface SponsoredProductsUnauthorizedExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsUnauthorizedErrorCode}
     * @memberof SponsoredProductsUnauthorizedExceptionResponseContent
     */
    code: SponsoredProductsUnauthorizedErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsUnauthorizedExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsUnsupportedMediaTypeErrorCode {
    UnsupportedMediaType = 'UNSUPPORTED_MEDIA_TYPE'
}

/**
 * 
 * @export
 * @interface SponsoredProductsUnsupportedMediaTypeExceptionResponseContent
 */
export interface SponsoredProductsUnsupportedMediaTypeExceptionResponseContent {
    /**
     * 
     * @type {SponsoredProductsUnsupportedMediaTypeErrorCode}
     * @memberof SponsoredProductsUnsupportedMediaTypeExceptionResponseContent
     */
    code: SponsoredProductsUnsupportedMediaTypeErrorCode;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsUnsupportedMediaTypeExceptionResponseContent
     */
    message: string;
}
/**
 * Errors being used to represent an unsupported operation e.g. Seller are not supported to create custom text product ads.
 * @export
 * @interface SponsoredProductsUnsupportedOperationError
 */
export interface SponsoredProductsUnsupportedOperationError {
    /**
     * 
     * @type {SponsoredProductsUnsupportedOperationErrorReason}
     * @memberof SponsoredProductsUnsupportedOperationError
     */
    reason: SponsoredProductsUnsupportedOperationErrorReason;
    /**
     * 
     * @type {SponsoredProductsErrorCause}
     * @memberof SponsoredProductsUnsupportedOperationError
     */
    cause?: SponsoredProductsErrorCause;
    /**
     * Human readable error message
     * @type {string}
     * @memberof SponsoredProductsUnsupportedOperationError
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsUnsupportedOperationErrorReason {
    UnsupportedOperation = 'UNSUPPORTED_OPERATION'
}

/**
 * 
 * @export
 * @interface SponsoredProductsUpdateAdGroup
 */
export interface SponsoredProductsUpdateAdGroup {
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsUpdateAdGroup
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateAdGroup
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateAdGroup
     */
    adGroupId: string;
    /**
     * A bid value for use when no bid is specified for keywords in the ad group. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsUpdateAdGroup
     */
    defaultBid?: number;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateCampaign
 */
export interface SponsoredProductsUpdateCampaign {
    /**
     * The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaign
     */
    portfolioId?: string | null;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaign
     */
    endDate?: string | null;
    /**
     * The identifier of the campaign.
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaign
     */
    campaignId: string;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaign
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsUpdateCampaign
     */
    targetingType?: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateCampaign
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
     * @memberof SponsoredProductsUpdateCampaign
     */
    dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateBudget}
     * @memberof SponsoredProductsUpdateCampaign
     */
    budget?: SponsoredProductsCreateOrUpdateBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsUpdateCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateCampaignNegativeKeyword
 */
export interface SponsoredProductsUpdateCampaignNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaignNegativeKeyword
     */
    keywordId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateCampaignNegativeKeyword
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateCampaignNegativeTargetingClause
 */
export interface SponsoredProductsUpdateCampaignNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsUpdateCampaignNegativeTargetingClause
     */
    expression?: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsUpdateCampaignNegativeTargetingClause
     */
    targetId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateCampaignNegativeTargetingClause
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateDraftCampaign
 */
export interface SponsoredProductsUpdateDraftCampaign {
    /**
     * The identifier of an existing portfolio to which the draft is associated.
     * @type {string}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    portfolioId?: string | null;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    endDate?: string | null;
    /**
     * The identifier of the draft.
     * @type {string}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    campaignId: string;
    /**
     * The name of the draft.
     * @type {string}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    targetingType?: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    dynamicBidding?: SponsoredProductsCreateOrUpdateDraftCampaignDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDraftCampaignBudget}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    budget?: SponsoredProductsCreateOrUpdateDraftCampaignBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsUpdateDraftCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalAdGroup
 */
export interface SponsoredProductsUpdateGlobalAdGroup {
    /**
     * 
     * @type {Array<string>}
     * @memberof SponsoredProductsUpdateGlobalAdGroup
     */
    applicableMarketplaces?: Array<string>;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalAdGroup
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalAdGroup
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalAdGroup
     */
    adGroupId: string;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsUpdateGlobalAdGroup
     */
    defaultBid?: SponsoredProductsGlobalBid;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalCampaign
 */
export interface SponsoredProductsUpdateGlobalCampaign {
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    endDate?: string;
    /**
     * The identifier of the campaign.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    campaignId: string;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsTargetingType}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    targetingType?: SponsoredProductsTargetingType;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateDynamicBidding}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    dynamicBidding?: SponsoredProductsCreateOrUpdateDynamicBidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    startDate?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalBudget}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    budget?: SponsoredProductsGlobalBudget;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof SponsoredProductsUpdateGlobalCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalCampaignNegativeKeyword
 */
export interface SponsoredProductsUpdateGlobalCampaignNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
     */
    keywordId: string;
    /**
     * Name for the keyword
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordText}
     * @memberof SponsoredProductsUpdateGlobalCampaignNegativeKeyword
     */
    keywordText?: SponsoredProductsGlobalNegativeKeywordText;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalKeyword
 */
export interface SponsoredProductsUpdateGlobalKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalKeyword
     */
    keywordId: string;
    /**
     * Name for the Keyword
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalKeyword
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsUpdateGlobalKeyword
     */
    bid?: SponsoredProductsGlobalBid;
    /**
     * 
     * @type {SponsoredProductsGlobalKeywordText}
     * @memberof SponsoredProductsUpdateGlobalKeyword
     */
    keywordText?: SponsoredProductsGlobalKeywordText;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalNegativeKeyword
 */
export interface SponsoredProductsUpdateGlobalNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
     */
    keywordId: string;
    /**
     * Name for the keyword
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalNegativeKeywordText}
     * @memberof SponsoredProductsUpdateGlobalNegativeKeyword
     */
    keywordText?: SponsoredProductsGlobalNegativeKeywordText;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalNegativeTargetingClause
 */
export interface SponsoredProductsUpdateGlobalNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
     */
    expression?: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
     */
    targetId: string;
    /**
     * Name for the negative targeting clause
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalNegativeTargetingClause
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalProductAd
 */
export interface SponsoredProductsUpdateGlobalProductAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalProductAd
     */
    adId: string;
    /**
     * Name for the product Ad
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalProductAd
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsGlobalProductIdentifiers}
     * @memberof SponsoredProductsUpdateGlobalProductAd
     */
    asin?: SponsoredProductsGlobalProductIdentifiers;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalProductAd
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalProductIdentifiers}
     * @memberof SponsoredProductsUpdateGlobalProductAd
     */
    sku?: SponsoredProductsGlobalProductIdentifiers;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateGlobalTargetingClause
 */
export interface SponsoredProductsUpdateGlobalTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsGlobalTargetingExpressionPredicate>}
     * @memberof SponsoredProductsUpdateGlobalTargetingClause
     */
    expression?: Array<SponsoredProductsGlobalTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalTargetingClause
     */
    targetId: string;
    /**
     * Name for the targeting clause
     * @type {string}
     * @memberof SponsoredProductsUpdateGlobalTargetingClause
     */
    name?: string;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeWithoutOther}
     * @memberof SponsoredProductsUpdateGlobalTargetingClause
     */
    expressionType?: SponsoredProductsExpressionTypeWithoutOther;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateGlobalEntityState}
     * @memberof SponsoredProductsUpdateGlobalTargetingClause
     */
    state?: SponsoredProductsCreateOrUpdateGlobalEntityState;
    /**
     * 
     * @type {SponsoredProductsGlobalBid}
     * @memberof SponsoredProductsUpdateGlobalTargetingClause
     */
    bid?: SponsoredProductsGlobalBid;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateKeyword
 */
export interface SponsoredProductsUpdateKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateKeyword
     */
    keywordId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateKeyword
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * Bid associated with this keyword. Applicable to biddable match types only. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsUpdateKeyword
     */
    bid?: number | null;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateNegativeKeyword
 */
export interface SponsoredProductsUpdateNegativeKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SponsoredProductsUpdateNegativeKeyword
     */
    keywordId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateNegativeKeyword
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateNegativeTargetingClause
 */
export interface SponsoredProductsUpdateNegativeTargetingClause {
    /**
     * The NegativeTargeting expression.
     * @type {Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>}
     * @memberof SponsoredProductsUpdateNegativeTargetingClause
     */
    expression?: Array<SponsoredProductsCreateOrUpdateNegativeTargetingExpressionPredicate>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsUpdateNegativeTargetingClause
     */
    targetId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateNegativeTargetingClause
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateProductAd
 */
export interface SponsoredProductsUpdateProductAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof SponsoredProductsUpdateProductAd
     */
    adId: string;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateProductAd
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent {
    /**
     * An array of adGroups with updated values.
     * @type {Array<SponsoredProductsUpdateAdGroup>}
     * @memberof SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent
     */
    adGroups: Array<SponsoredProductsUpdateAdGroup>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkAdGroupOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent {
    /**
     * An array of campaignNegativeKeywords with updated values.
     * @type {Array<SponsoredProductsUpdateCampaignNegativeKeyword>}
     * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywords: Array<SponsoredProductsUpdateCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent {
    /**
     * An array of Campaign Negative TargetingClauses with updated values.
     * @type {Array<SponsoredProductsUpdateCampaignNegativeTargetingClause>}
     * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent
     */
    campaignNegativeTargetingClauses: Array<SponsoredProductsUpdateCampaignNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent
     */
    campaignNegativeTargetingClauses: SponsoredProductsBulkCampaignNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent {
    /**
     * An array of campaigns with updated values.
     * @type {Array<SponsoredProductsUpdateCampaign>}
     * @memberof SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent
     */
    campaigns: Array<SponsoredProductsUpdateCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkCampaignOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent {
    /**
     * An array of drafts with updated values.
     * @type {Array<SponsoredProductsUpdateDraftCampaign>}
     * @memberof SponsoredProductsUpdateSponsoredProductsDraftCampaignsRequestContent
     */
    campaigns: Array<SponsoredProductsUpdateDraftCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkDraftCampaignOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsDraftCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkDraftCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent {
    /**
     * An array of adGroups with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalAdGroup>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsRequestContent
     */
    adGroups: Array<SponsoredProductsUpdateGlobalAdGroup>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalAdGroupOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalAdGroupsResponseContent
     */
    adGroups: SponsoredProductsBulkGlobalAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent {
    /**
     * An array of campaignNegativeKeywords with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalCampaignNegativeKeyword>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsRequestContent
     */
    campaignNegativeKeywords: Array<SponsoredProductsUpdateGlobalCampaignNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignNegativeKeywordsResponseContent
     */
    campaignNegativeKeywords: SponsoredProductsBulkGlobalCampaignNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent {
    /**
     * An array of campaigns with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalCampaign>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignsRequestContent
     */
    campaigns: Array<SponsoredProductsUpdateGlobalCampaign>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalCampaignOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalCampaignsResponseContent
     */
    campaigns: SponsoredProductsBulkGlobalCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent {
    /**
     * An array of keywords with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalKeyword>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalKeywordsRequestContent
     */
    keywords: Array<SponsoredProductsUpdateGlobalKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalKeywordOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkGlobalKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent {
    /**
     * An array of negativeKeywords with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalNegativeKeyword>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsRequestContent
     */
    negativeKeywords: Array<SponsoredProductsUpdateGlobalNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkGlobalNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent {
    /**
     * An array of negativeTargeting with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalNegativeTargetingClause>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesRequestContent
     */
    negativeTargetingClauses: Array<SponsoredProductsUpdateGlobalNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkGlobalNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent {
    /**
     * An array of ads with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalProductAd>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalProductAdsRequestContent
     */
    productAds: Array<SponsoredProductsUpdateGlobalProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalProductAdOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkGlobalProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent {
    /**
     * An array of targetingClauses with updated values.
     * @type {Array<SponsoredProductsUpdateGlobalTargetingClause>}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesRequestContent
     */
    targetingClauses: Array<SponsoredProductsUpdateGlobalTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkGlobalTargetingClauseOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsGlobalTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkGlobalTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent {
    /**
     * An array of keywords with updated values.
     * @type {Array<SponsoredProductsUpdateKeyword>}
     * @memberof SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent
     */
    keywords: Array<SponsoredProductsUpdateKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkKeywordOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent
     */
    keywords: SponsoredProductsBulkKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent {
    /**
     * An array of negativeKeywords with updated values.
     * @type {Array<SponsoredProductsUpdateNegativeKeyword>}
     * @memberof SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent
     */
    negativeKeywords: Array<SponsoredProductsUpdateNegativeKeyword>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkNegativeKeywordOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent
     */
    negativeKeywords: SponsoredProductsBulkNegativeKeywordOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent {
    /**
     * An array of negativeTargeting with updated values.
     * @type {Array<SponsoredProductsUpdateNegativeTargetingClause>}
     * @memberof SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent
     */
    negativeTargetingClauses: Array<SponsoredProductsUpdateNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkNegativeTargetingClauseOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent
     */
    negativeTargetingClauses: SponsoredProductsBulkNegativeTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent {
    /**
     * An array of ads with updated values.
     * @type {Array<SponsoredProductsUpdateProductAd>}
     * @memberof SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent
     */
    productAds: Array<SponsoredProductsUpdateProductAd>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkProductAdOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent
     */
    productAds: SponsoredProductsBulkProductAdOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
 */
export interface SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent {
    /**
     * An array of targetingClauses with updated values.
     * @type {Array<SponsoredProductsUpdateTargetingClause>}
     * @memberof SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent
     */
    targetingClauses: Array<SponsoredProductsUpdateTargetingClause>;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent
 */
export interface SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent {
    /**
     * 
     * @type {SponsoredProductsBulkTargetingClauseOperationResponse}
     * @memberof SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent
     */
    targetingClauses: SponsoredProductsBulkTargetingClauseOperationResponse;
}
/**
 * 
 * @export
 * @interface SponsoredProductsUpdateTargetingClause
 */
export interface SponsoredProductsUpdateTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>}
     * @memberof SponsoredProductsUpdateTargetingClause
     */
    expression?: Array<SponsoredProductsTargetingExpressionPredicateWithoutOther>;
    /**
     * The target identifier
     * @type {string}
     * @memberof SponsoredProductsUpdateTargetingClause
     */
    targetId: string;
    /**
     * 
     * @type {SponsoredProductsExpressionTypeWithoutOther}
     * @memberof SponsoredProductsUpdateTargetingClause
     */
    expressionType?: SponsoredProductsExpressionTypeWithoutOther;
    /**
     * 
     * @type {SponsoredProductsCreateOrUpdateEntityState}
     * @memberof SponsoredProductsUpdateTargetingClause
     */
    state?: SponsoredProductsCreateOrUpdateEntityState;
    /**
     * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. For more information about bid constraints by marketplace, see [bid limits](https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace).
     * @type {number}
     * @memberof SponsoredProductsUpdateTargetingClause
     */
    bid?: number | null;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum SponsoredProductsValueLimitErrorReason {
    TooLow = 'TOO_LOW',
    TooHigh = 'TOO_HIGH',
    InvalidEnumValue = 'INVALID_ENUM_VALUE',
    NotInList = 'NOT_IN_LIST'
}

/**
 * The budget rule state.
 * @export
 * @enum {string}
 */

export enum State {
    Active = 'ACTIVE',
    Paused = 'PAUSED'
}

/**
 * Response object to get number of targetable asins for refinements provided by the user
 * @export
 * @interface TargetableAsinCounts
 */
export interface TargetableAsinCounts {
    /**
     * 
     * @type {IntegerRange}
     * @memberof TargetableAsinCounts
     */
    asinCounts?: IntegerRange;
}
/**
 * Response object containing all targetable categories for the advertiser\'s marketplace. ID is the category ID. NA is the name. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.
 * @export
 * @interface TargetableCategories
 */
export interface TargetableCategories {
    /**
     * 
     * @type {string}
     * @memberof TargetableCategories
     */
    categoryTree?: string;
}
/**
 * Response object containing all targetable categories for the advertiser\'s marketplace in a language of preference (LoP) provide by the locale query parameter. ID is the category ID. NA is the name. TN is the translated name in the language of preference. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.
 * @export
 * @interface TargetableCategoriesLoP
 */
export interface TargetableCategoriesLoP {
    /**
     * 
     * @type {string}
     * @memberof TargetableCategoriesLoP
     */
    categoryTree?: string;
}
/**
 * The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases.
 * @export
 * @interface TargetingExpression
 */
export interface TargetingExpression {
    /**
     * 
     * @type {string}
     * @memberof TargetingExpression
     */
    type: TargetingExpressionTypeEnum;
    /**
     * The targeting expression value.
     * @type {string}
     * @memberof TargetingExpression
     */
    value?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TargetingExpressionTypeEnum {
    CloseMatch = 'CLOSE_MATCH',
    LooseMatch = 'LOOSE_MATCH',
    Substitutes = 'SUBSTITUTES',
    Complements = 'COMPLEMENTS',
    KeywordBroadMatch = 'KEYWORD_BROAD_MATCH',
    KeywordExactMatch = 'KEYWORD_EXACT_MATCH',
    KeywordPhraseMatch = 'KEYWORD_PHRASE_MATCH'
}

/**
 * Contains suggested recommendation for the auto targeting group.
 * @export
 * @interface TargetingGroupBidRecommendation
 */
export interface TargetingGroupBidRecommendation {
    /**
     * The suggested bid value associated with this targeting.
     * @type {number}
     * @memberof TargetingGroupBidRecommendation
     */
    suggestedBid?: number;
    /**
     * The target identifier.
     * @type {string}
     * @memberof TargetingGroupBidRecommendation
     */
    targetId?: string;
    /**
     * The type of targeting group expression. | Value | Description | | --- | --- | | `LOOSE_MATCH` | This will show your ad to shoppers who use search terms loosely related to your products.| | `CLOSE_MATCH` | This will show your ad to shoppers who use search terms closely related to your products.| | `COMPLEMENTS` | This will show your ad to shoppers who view the detail pages of products that complement your product.| | `SUBSTITUTES` | This will show your ad to shoppers who use detail pages of products similar to yours.|
     * @type {string}
     * @memberof TargetingGroupBidRecommendation
     */
    targetingGroupExpression?: TargetingGroupBidRecommendationTargetingGroupExpressionEnum;
    /**
     * Type of suggested action.
     * @type {string}
     * @memberof TargetingGroupBidRecommendation
     */
    action?: TargetingGroupBidRecommendationActionEnum;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof TargetingGroupBidRecommendation
     */
    adGroupId?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TargetingGroupBidRecommendationTargetingGroupExpressionEnum {
    CloseMatch = 'CLOSE_MATCH',
    LooseMatch = 'LOOSE_MATCH',
    Substitutes = 'SUBSTITUTES',
    Complements = 'COMPLEMENTS'
}
/**
    * @export
    * @enum {string}
    */
export enum TargetingGroupBidRecommendationActionEnum {
    Add = 'ADD',
    Remove = 'REMOVE',
    Increase = 'INCREASE',
    Decrease = 'DECREASE'
}

/**
 * The bid recommendation theme. This API currently supports `CONVERSION_OPPORTUNITIES`, `PRIME_DAY`, `FALL_PRIME_DEAL_EVENT`, and `BFCM_HOLIDAY` themes.
 * @export
 * @enum {string}
 */

export enum Theme {
    ConversionOpportunities = 'CONVERSION_OPPORTUNITIES',
    PrimeDay = 'PRIME_DAY',
    FallPrimeDealEvent = 'FALL_PRIME_DEAL_EVENT',
    BfcmHoliday = 'BFCM_HOLIDAY'
}

/**
 * 
 * @export
 * @interface ThemeBasedBidRecommendation
 */
export interface ThemeBasedBidRecommendation {
    /**
     * 
     * @type {Theme}
     * @memberof ThemeBasedBidRecommendation
     */
    theme: Theme;
    /**
     * The bid recommendations for targeting expressions listed in the request.
     * @type {Array<BidRecommendationPerTargetingExpression>}
     * @memberof ThemeBasedBidRecommendation
     */
    bidRecommendationsForTargetingExpressions: Array<BidRecommendationPerTargetingExpression>;
    /**
     * 
     * @type {ImpactMetrics}
     * @memberof ThemeBasedBidRecommendation
     */
    impactMetrics?: ImpactMetrics | null;
}
/**
 * A list of bid recommendation themes and associated bid recommendations.
 * @export
 * @interface ThemeBasedBidRecommendationResponse
 */
export interface ThemeBasedBidRecommendationResponse {
    /**
     * 
     * @type {Array<ThemeBasedBidRecommendation>}
     * @memberof ThemeBasedBidRecommendationResponse
     */
    bidRecommendations: Array<ThemeBasedBidRecommendation>;
}
/**
 * Recommended asins grouped by theme attribute.
 * @export
 * @interface ThemeRecommendation
 */
export interface ThemeRecommendation {
    /**
     * A theme name representing the context around the recommended list of ASINs.
     * @type {string}
     * @memberof ThemeRecommendation
     */
    description?: string;
    /**
     * List of recommended ASINs under current theme.
     * @type {Array<string>}
     * @memberof ThemeRecommendation
     */
    recommendedAsins?: Array<string>;
    /**
     * A theme name representing the context around the recommended list of ASINs.
     * @type {string}
     * @memberof ThemeRecommendation
     */
    theme?: string;
}
/**
 * 
 * @export
 * @interface ThemedBid
 */
export interface ThemedBid {
    /**
     * 
     * @type {BidValues}
     * @memberof ThemedBid
     */
    suggestedBid?: BidValues;
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof ThemedBid
     */
    matchType?: ThemedBidMatchTypeEnum;
    /**
     * The keyword target rank.
     * @type {number}
     * @memberof ThemedBid
     */
    rank?: number;
    /**
     * The theme of the bid recommendation. The default theme is CONVERSION_OPPORTUNITIES.
     * @type {string}
     * @memberof ThemedBid
     */
    theme?: string;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof ThemedBid
     */
    bid?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum ThemedBidMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * Returns information about a ThrottlingException.
 * @export
 * @interface ThrottlingException
 */
export interface ThrottlingException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof ThrottlingException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof ThrottlingException
     */
    details?: string;
}
/**
 * Returns information about an UnauthorizedException.
 * @export
 * @interface UnauthorizedException
 */
export interface UnauthorizedException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof UnauthorizedException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof UnauthorizedException
     */
    details?: string;
}
/**
 * Returns information about UnprocessableEntityException.
 * @export
 * @interface UnprocessableEntityException
 */
export interface UnprocessableEntityException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof UnprocessableEntityException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof UnprocessableEntityException
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface UpdateBudgetRulesResponse
 */
export interface UpdateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof UpdateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface UpdateSBBudgetRulesRequest
 */
export interface UpdateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRule>}
     * @memberof UpdateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRule>;
}
/**
 * Request object for updating budget rule for SD campaign
 * @export
 * @interface UpdateSDBudgetRulesRequest
 */
export interface UpdateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRule>}
     * @memberof UpdateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRule>;
}
/**
 * Request object for updating budget rule for SP campaign
 * @export
 * @interface UpdateSPBudgetRulesRequest
 */
export interface UpdateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRule>}
     * @memberof UpdateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRule>;
}
/**
 * 
 * @export
 * @interface UpdateSPCampaignOptimizationRuleResponse
 */
export interface UpdateSPCampaignOptimizationRuleResponse {
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRuleResponse
     */
    campaignOptimizationId?: string;
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRuleResponse
     */
    details?: string;
}
/**
 * Request object for updating campaign optimization rule
 * @export
 * @interface UpdateSPCampaignOptimizationRulesRequest
 */
export interface UpdateSPCampaignOptimizationRulesRequest {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    recurrence: RecurrenceType;
    /**
     * 
     * @type {RuleAction}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleAction: RuleAction;
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    campaignOptimizationId: string;
    /**
     * 
     * @type {Array<RuleCondition>}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleCondition: Array<RuleCondition>;
    /**
     * 
     * @type {RuleType}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleType: RuleType;
    /**
     * The campaign optimization rule name.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleName?: string;
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    campaignIds: Array<string>;
}
/**
 * Returns information about a ValidationException.
 * @export
 * @interface ValidationException
 */
export interface ValidationException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof ValidationException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof ValidationException
     */
    details?: string;
}
/**
 * Metrics benchmark values.
 * @export
 * @interface Values
 */
export interface Values {
    /**
     * 
     * @type {Conversions}
     * @memberof Values
     */
    conversions?: Conversions;
    /**
     * 
     * @type {Clicks}
     * @memberof Values
     */
    clicks?: Clicks;
    /**
     * 
     * @type {Impressions}
     * @memberof Values
     */
    impressions?: Impressions;
}

/**
 * AdGroupsApi - axios parameter creator
 * @export
 */
export const AdGroupsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsAdGroups', 'sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent', sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent)
            const localVarPath = `/sp/adGroups`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsAdGroups', 'sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent', sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent)
            const localVarPath = `/sp/adGroups/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/adGroups/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsAdGroups', 'sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent', sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent)
            const localVarPath = `/sp/adGroups`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spAdGroup.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AdGroupsApi - functional programming interface
 * @export
 */
export const AdGroupsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AdGroupsApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsAdGroupsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AdGroupsApi - factory interface
 * @export
 */
export const AdGroupsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AdGroupsApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent} sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsAdGroupsResponseContent> {
            return localVarFp.createSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent} sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsAdGroupsResponseContent> {
            return localVarFp.deleteSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsAdGroupsRequestContent} [sponsoredProductsListSponsoredProductsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsAdGroupsResponseContent> {
            return localVarFp.listSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsAdGroupsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent} sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsAdGroupsResponseContent> {
            return localVarFp.updateSponsoredProductsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiCreateSponsoredProductsAdGroupsRequest
 */
export interface AdGroupsApiCreateSponsoredProductsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiCreateSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof AdGroupsApiCreateSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent}
     * @memberof AdGroupsApiCreateSponsoredProductsAdGroups
     */
    readonly sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent: SponsoredProductsCreateSponsoredProductsAdGroupsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof AdGroupsApiCreateSponsoredProductsAdGroups
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiDeleteSponsoredProductsAdGroupsRequest
 */
export interface AdGroupsApiDeleteSponsoredProductsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiDeleteSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof AdGroupsApiDeleteSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent}
     * @memberof AdGroupsApiDeleteSponsoredProductsAdGroups
     */
    readonly sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent: SponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent
}

/**
 * Request parameters for listSponsoredProductsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiListSponsoredProductsAdGroupsRequest
 */
export interface AdGroupsApiListSponsoredProductsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiListSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof AdGroupsApiListSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsAdGroupsRequestContent}
     * @memberof AdGroupsApiListSponsoredProductsAdGroups
     */
    readonly sponsoredProductsListSponsoredProductsAdGroupsRequestContent?: SponsoredProductsListSponsoredProductsAdGroupsRequestContent
}

/**
 * Request parameters for updateSponsoredProductsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiUpdateSponsoredProductsAdGroupsRequest
 */
export interface AdGroupsApiUpdateSponsoredProductsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiUpdateSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof AdGroupsApiUpdateSponsoredProductsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent}
     * @memberof AdGroupsApiUpdateSponsoredProductsAdGroups
     */
    readonly sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent: SponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof AdGroupsApiUpdateSponsoredProductsAdGroups
     */
    readonly prefer?: string
}

/**
 * AdGroupsApi - object-oriented interface
 * @export
 * @class AdGroupsApi
 * @extends {BaseAPI}
 */
export class AdGroupsApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdGroupsApiCreateSponsoredProductsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public createSponsoredProductsAdGroups(requestParameters: AdGroupsApiCreateSponsoredProductsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).createSponsoredProductsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsAdGroupsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdGroupsApiDeleteSponsoredProductsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public deleteSponsoredProductsAdGroups(requestParameters: AdGroupsApiDeleteSponsoredProductsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).deleteSponsoredProductsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsAdGroupsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {AdGroupsApiListSponsoredProductsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public listSponsoredProductsAdGroups(requestParameters: AdGroupsApiListSponsoredProductsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).listSponsoredProductsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsAdGroupsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdGroupsApiUpdateSponsoredProductsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public updateSponsoredProductsAdGroups(requestParameters: AdGroupsApiUpdateSponsoredProductsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).updateSponsoredProductsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsAdGroupsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRecommendationNewCampaignsApi - axios parameter creator
 * @export
 */
export const BudgetRecommendationNewCampaignsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendation: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaigns/initialBudgetRecommendation`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spinitialbudgetrecommendation.v3.4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(initialBudgetRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRecommendationNewCampaignsApi - functional programming interface
 * @export
 */
export const BudgetRecommendationNewCampaignsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRecommendationNewCampaignsApiAxiosParamCreator(configuration)
    return {
        /**
         * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<InitialBudgetRecommendationResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, initialBudgetRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRecommendationNewCampaignsApi - factory interface
 * @export
 */
export const BudgetRecommendationNewCampaignsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRecommendationNewCampaignsApiFp(configuration)
    return {
        /**
         * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {InitialBudgetRecommendationRequest} [initialBudgetRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest, options?: any): AxiosPromise<InitialBudgetRecommendationResponse> {
            return localVarFp.getBudgetRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, initialBudgetRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getBudgetRecommendation operation in BudgetRecommendationNewCampaignsApi.
 * @export
 * @interface BudgetRecommendationNewCampaignsApiGetBudgetRecommendationRequest
 */
export interface BudgetRecommendationNewCampaignsApiGetBudgetRecommendationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRecommendationNewCampaignsApiGetBudgetRecommendation
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof BudgetRecommendationNewCampaignsApiGetBudgetRecommendation
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {InitialBudgetRecommendationRequest}
     * @memberof BudgetRecommendationNewCampaignsApiGetBudgetRecommendation
     */
    readonly initialBudgetRecommendationRequest?: InitialBudgetRecommendationRequest
}

/**
 * BudgetRecommendationNewCampaignsApi - object-oriented interface
 * @export
 * @class BudgetRecommendationNewCampaignsApi
 * @extends {BaseAPI}
 */
export class BudgetRecommendationNewCampaignsApi extends BaseAPI {
    /**
     * Creates daily budget recommendation along with benchmark metrics when creating a new campaign.
     * @param {BudgetRecommendationNewCampaignsApiGetBudgetRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRecommendationNewCampaignsApi
     */
    public getBudgetRecommendation(requestParameters: BudgetRecommendationNewCampaignsApiGetBudgetRecommendationRequest, options?: any) {
        return BudgetRecommendationNewCampaignsApiFp(this.configuration).getBudgetRecommendation(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.initialBudgetRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - axios parameter creator
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {BudgetRecommendationRequest} budgetRecommendationRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRecommendationRequest: BudgetRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRecommendationRequest' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'budgetRecommendationRequest', budgetRecommendationRequest)
            const localVarPath = `/sp/campaigns/budgetRecommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.budgetrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(budgetRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - functional programming interface
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRecommendationsAndMissedOpportunitiesApiAxiosParamCreator(configuration)
    return {
        /**
         * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {BudgetRecommendationRequest} budgetRecommendationRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRecommendationRequest: BudgetRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BudgetRecommendationResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - factory interface
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRecommendationsAndMissedOpportunitiesApiFp(configuration)
    return {
        /**
         * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {BudgetRecommendationRequest} budgetRecommendationRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRecommendationRequest: BudgetRecommendationRequest, options?: any): AxiosPromise<BudgetRecommendationResponse> {
            return localVarFp.getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getBudgetRecommendations operation in BudgetRecommendationsAndMissedOpportunitiesApi.
 * @export
 * @interface BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest
 */
export interface BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {BudgetRecommendationRequest}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendations
     */
    readonly budgetRecommendationRequest: BudgetRecommendationRequest
}

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - object-oriented interface
 * @export
 * @class BudgetRecommendationsAndMissedOpportunitiesApi
 * @extends {BaseAPI}
 */
export class BudgetRecommendationsAndMissedOpportunitiesApi extends BaseAPI {
    /**
     * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. Note: value -1 means we don’t have enough information to compute the campaign’s percent time in budget. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
     * @param {BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApi
     */
    public getBudgetRecommendations(requestParameters: BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest, options?: any) {
        return BudgetRecommendationsAndMissedOpportunitiesApiFp(this.configuration).getBudgetRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesApi - axios parameter creator
 * @export
 */
export const BudgetRulesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'campaignId', campaignId)
            // verify required parameter 'createAssociatedBudgetRulesRequest' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'createAssociatedBudgetRulesRequest', createAssociatedBudgetRulesRequest)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createAssociatedBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPBudgetRulesRequest: CreateSPBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSPBudgetRulesRequest' is not null or undefined
            assertParamExists('createBudgetRulesForSPCampaigns', 'createSPBudgetRulesRequest', createSPBudgetRulesRequest)
            const localVarPath = `/sp/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSPBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'campaignId', campaignId)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)))
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sp/budgetRules/{budgetRuleId}`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSPBudgetRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'budgetRuleId', budgetRuleId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'pageSize', pageSize)
            const localVarPath = `/sp/budgetRules/{budgetRuleId}/campaigns`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'campaignId', campaignId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'pageSize', pageSize)
            // verify required parameter 'startDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'startDate', startDate)
            // verify required parameter 'endDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'endDate', endDate)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules/budgetHistory`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (startDate !== undefined) {
                localVarQueryParameter['startDate'] = startDate;
            }

            if (endDate !== undefined) {
                localVarQueryParameter['endDate'] = endDate;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSPBudgetRulesForAdvertiser: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getSPBudgetRulesForAdvertiser', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getSPBudgetRulesForAdvertiser', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getSPBudgetRulesForAdvertiser', 'pageSize', pageSize)
            const localVarPath = `/sp/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'campaignId', campaignId)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSPBudgetRulesRequest' is not null or undefined
            assertParamExists('updateBudgetRulesForSPCampaigns', 'updateSPBudgetRulesRequest', updateSPBudgetRulesRequest)
            const localVarPath = `/sp/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSPBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesApi - functional programming interface
 * @export
 */
export const BudgetRulesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesApiAxiosParamCreator(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPBudgetRulesRequest: CreateSPBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPBudgetRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPGetAssociatedCampaignsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPBudgetHistory>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPBudgetRulesForAdvertiserResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPListAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesApi - factory interface
 * @export
 */
export const BudgetRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesApiFp(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): AxiosPromise<CreateAssociatedBudgetRulesResponse> {
            return localVarFp.createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPBudgetRulesRequest: CreateSPBudgetRulesRequest, options?: any): AxiosPromise<CreateBudgetRulesResponse> {
            return localVarFp.createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): AxiosPromise<object> {
            return localVarFp.disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): AxiosPromise<GetSPBudgetRuleResponse> {
            return localVarFp.getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<SPGetAssociatedCampaignsResponse> {
            return localVarFp.getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): AxiosPromise<SPBudgetHistory> {
            return localVarFp.getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<GetSPBudgetRulesForAdvertiserResponse> {
            return localVarFp.getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): AxiosPromise<SPListAssociatedBudgetRulesResponse> {
            return localVarFp.listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest, options?: any): AxiosPromise<UpdateBudgetRulesResponse> {
            return localVarFp.updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createAssociatedBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly campaignId: number

    /**
     * 
     * @type {CreateAssociatedBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest
}

/**
 * Request parameters for createBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSPBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateBudgetRulesForSPCampaigns
     */
    readonly createSPBudgetRulesRequest: CreateSPBudgetRulesRequest
}

/**
 * Request parameters for disassociateAssociatedBudgetRuleForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest
 */
export interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly campaignId: number

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getBudgetRuleByRuleIdForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest
 */
export interface BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getCampaignsAssociatedWithSPBudgetRule operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest
 */
export interface BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly budgetRuleId: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getRuleBasedBudgetHistoryForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest
 */
export interface BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly campaignId: number

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly pageSize: number

    /**
     * The start date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly startDate: string

    /**
     * The end date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly endDate: string

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getSPBudgetRulesForAdvertiser operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest
 */
export interface BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly nextToken?: string
}

/**
 * Request parameters for listAssociatedBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSPCampaigns
     */
    readonly campaignId: number
}

/**
 * Request parameters for updateBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSPBudgetRulesRequest}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSPCampaigns
     */
    readonly updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest
}

/**
 * BudgetRulesApi - object-oriented interface
 * @export
 * @class BudgetRulesApi
 * @extends {BaseAPI}
 */
export class BudgetRulesApi extends BaseAPI {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createAssociatedBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createAssociatedBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.createAssociatedBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSPBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public disassociateAssociatedBudgetRuleForSPCampaigns(requestParameters: BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).disassociateAssociatedBudgetRuleForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getBudgetRuleByRuleIdForSPCampaigns(requestParameters: BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getBudgetRuleByRuleIdForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets all the campaigns associated with a budget rule
     * @param {BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getCampaignsAssociatedWithSPBudgetRule(requestParameters: BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getCampaignsAssociatedWithSPBudgetRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets the budget history for a campaign specified by identifier.
     * @param {BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getRuleBasedBudgetHistoryForSPCampaigns(requestParameters: BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getRuleBasedBudgetHistoryForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.pageSize, requestParameters.startDate, requestParameters.endDate, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Get all budget rules created by an advertiser
     * @param {BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getSPBudgetRulesForAdvertiser(requestParameters: BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getSPBudgetRulesForAdvertiser(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public listAssociatedBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).listAssociatedBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more budget rules.
     * @param {BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public updateBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).updateBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSPBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesRecommendationApi - axios parameter creator
 * @export
 */
export const BudgetRulesRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sPGetBudgetRulesRecommendation: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sPGetBudgetRulesRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sPGetBudgetRulesRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaigns/budgetRules/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spbudgetrulesrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(uNKNOWNBASETYPE, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesRecommendationApi - functional programming interface
 * @export
 */
export const BudgetRulesRecommendationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesRecommendationApiAxiosParamCreator(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPBudgetRulesRecommendationEventResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesRecommendationApi - factory interface
 * @export
 */
export const BudgetRulesRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesRecommendationApiFp(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): AxiosPromise<SPBudgetRulesRecommendationEventResponse> {
            return localVarFp.sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sPGetBudgetRulesRecommendation operation in BudgetRulesRecommendationApi.
 * @export
 * @interface BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest
 */
export interface BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSPGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSPGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {any}
     * @memberof BudgetRulesRecommendationApiSPGetBudgetRulesRecommendation
     */
    readonly uNKNOWNBASETYPE?: any
}

/**
 * BudgetRulesRecommendationApi - object-oriented interface
 * @export
 * @class BudgetRulesRecommendationApi
 * @extends {BaseAPI}
 */
export class BudgetRulesRecommendationApi extends BaseAPI {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesRecommendationApi
     */
    public sPGetBudgetRulesRecommendation(requestParameters: BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest, options?: any) {
        return BudgetRulesRecommendationApiFp(this.configuration).sPGetBudgetRulesRecommendation(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.uNKNOWNBASETYPE, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetUsageApi - axios parameter creator
 * @export
 */
export const BudgetUsageApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Budget usage API for SP campaigns
         * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spCampaignsBudgetUsage: async (amazonAdvertisingAPIClientId: any, amazonAdvertisingAPIScope: any, budgetUsageCampaignRequest: BudgetUsageCampaignRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('spCampaignsBudgetUsage', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('spCampaignsBudgetUsage', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetUsageCampaignRequest' is not null or undefined
            assertParamExists('spCampaignsBudgetUsage', 'budgetUsageCampaignRequest', budgetUsageCampaignRequest)
            const localVarPath = `/sp/campaigns/budget/usage`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(JSON.stringify(amazonAdvertisingAPIClientId));
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(JSON.stringify(amazonAdvertisingAPIScope));
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spcampaignbudgetusage.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(budgetUsageCampaignRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetUsageApi - functional programming interface
 * @export
 */
export const BudgetUsageApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetUsageApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Budget usage API for SP campaigns
         * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async spCampaignsBudgetUsage(amazonAdvertisingAPIClientId: any, amazonAdvertisingAPIScope: any, budgetUsageCampaignRequest: BudgetUsageCampaignRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BudgetUsageCampaignResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.spCampaignsBudgetUsage(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetUsageCampaignRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetUsageApi - factory interface
 * @export
 */
export const BudgetUsageApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetUsageApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Budget usage API for SP campaigns
         * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        spCampaignsBudgetUsage(amazonAdvertisingAPIClientId: any, amazonAdvertisingAPIScope: any, budgetUsageCampaignRequest: BudgetUsageCampaignRequest, options?: any): AxiosPromise<BudgetUsageCampaignResponse> {
            return localVarFp.spCampaignsBudgetUsage(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetUsageCampaignRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for spCampaignsBudgetUsage operation in BudgetUsageApi.
 * @export
 * @interface BudgetUsageApiSpCampaignsBudgetUsageRequest
 */
export interface BudgetUsageApiSpCampaignsBudgetUsageRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {any}
     * @memberof BudgetUsageApiSpCampaignsBudgetUsage
     */
    readonly amazonAdvertisingAPIClientId: any

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {any}
     * @memberof BudgetUsageApiSpCampaignsBudgetUsage
     */
    readonly amazonAdvertisingAPIScope: any

    /**
     * 
     * @type {BudgetUsageCampaignRequest}
     * @memberof BudgetUsageApiSpCampaignsBudgetUsage
     */
    readonly budgetUsageCampaignRequest: BudgetUsageCampaignRequest
}

/**
 * BudgetUsageApi - object-oriented interface
 * @export
 * @class BudgetUsageApi
 * @extends {BaseAPI}
 */
export class BudgetUsageApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Budget usage API for SP campaigns
     * @param {BudgetUsageApiSpCampaignsBudgetUsageRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetUsageApi
     */
    public spCampaignsBudgetUsage(requestParameters: BudgetUsageApiSpCampaignsBudgetUsageRequest, options?: any) {
        return BudgetUsageApiFp(this.configuration).spCampaignsBudgetUsage(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetUsageCampaignRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignNegativeKeywordsApi - axios parameter creator
 * @export
 */
export const CampaignNegativeKeywordsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsCampaignNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsCampaignNegativeKeywords', 'sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent', sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent)
            const localVarPath = `/sp/campaignNegativeKeywords`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsCampaignNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaignNegativeKeywords', 'sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent', sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent)
            const localVarPath = `/sp/campaignNegativeKeywords/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsCampaignNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaignNegativeKeywords/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsCampaignNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaignNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaignNegativeKeywords', 'sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent', sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent)
            const localVarPath = `/sp/campaignNegativeKeywords`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignNegativeKeywordsApi - functional programming interface
 * @export
 */
export const CampaignNegativeKeywordsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignNegativeKeywordsApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignNegativeKeywordsApi - factory interface
 * @export
 */
export const CampaignNegativeKeywordsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignNegativeKeywordsApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsResponseContent> {
            return localVarFp.createSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsResponseContent> {
            return localVarFp.deleteSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsResponseContent> {
            return localVarFp.listSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsResponseContent> {
            return localVarFp.updateSponsoredProductsCampaignNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsCampaignNegativeKeywords operation in CampaignNegativeKeywordsApi.
 * @export
 * @interface CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywordsRequest
 */
export interface CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent}
     * @memberof CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywords
     */
    readonly sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywords
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsCampaignNegativeKeywords operation in CampaignNegativeKeywordsApi.
 * @export
 * @interface CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywordsRequest
 */
export interface CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent}
     * @memberof CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywords
     */
    readonly sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent
}

/**
 * Request parameters for listSponsoredProductsCampaignNegativeKeywords operation in CampaignNegativeKeywordsApi.
 * @export
 * @interface CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywordsRequest
 */
export interface CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent}
     * @memberof CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywords
     */
    readonly sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent
}

/**
 * Request parameters for updateSponsoredProductsCampaignNegativeKeywords operation in CampaignNegativeKeywordsApi.
 * @export
 * @interface CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywordsRequest
 */
export interface CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent}
     * @memberof CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywords
     */
    readonly sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywords
     */
    readonly prefer?: string
}

/**
 * CampaignNegativeKeywordsApi - object-oriented interface
 * @export
 * @class CampaignNegativeKeywordsApi
 * @extends {BaseAPI}
 */
export class CampaignNegativeKeywordsApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeKeywordsApi
     */
    public createSponsoredProductsCampaignNegativeKeywords(requestParameters: CampaignNegativeKeywordsApiCreateSponsoredProductsCampaignNegativeKeywordsRequest, options?: any) {
        return CampaignNegativeKeywordsApiFp(this.configuration).createSponsoredProductsCampaignNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsCampaignNegativeKeywordsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeKeywordsApi
     */
    public deleteSponsoredProductsCampaignNegativeKeywords(requestParameters: CampaignNegativeKeywordsApiDeleteSponsoredProductsCampaignNegativeKeywordsRequest, options?: any) {
        return CampaignNegativeKeywordsApiFp(this.configuration).deleteSponsoredProductsCampaignNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsCampaignNegativeKeywordsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeKeywordsApi
     */
    public listSponsoredProductsCampaignNegativeKeywords(requestParameters: CampaignNegativeKeywordsApiListSponsoredProductsCampaignNegativeKeywordsRequest, options?: any) {
        return CampaignNegativeKeywordsApiFp(this.configuration).listSponsoredProductsCampaignNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsCampaignNegativeKeywordsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeKeywordsApi
     */
    public updateSponsoredProductsCampaignNegativeKeywords(requestParameters: CampaignNegativeKeywordsApiUpdateSponsoredProductsCampaignNegativeKeywordsRequest, options?: any) {
        return CampaignNegativeKeywordsApiFp(this.configuration).updateSponsoredProductsCampaignNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsCampaignNegativeKeywordsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignNegativeTargetingClausesApi - axios parameter creator
 * @export
 */
export const CampaignNegativeTargetingClausesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsCampaignNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsCampaignNegativeTargetingClauses', 'sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent', sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent)
            const localVarPath = `/sp/campaignNegativeTargets`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsCampaignNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaignNegativeTargetingClauses', 'sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent', sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent)
            const localVarPath = `/sp/campaignNegativeTargets/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsCampaignNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaignNegativeTargets/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsCampaignNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaignNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaignNegativeTargetingClauses', 'sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent', sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent)
            const localVarPath = `/sp/campaignNegativeTargets`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaignNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignNegativeTargetingClausesApi - functional programming interface
 * @export
 */
export const CampaignNegativeTargetingClausesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignNegativeTargetingClausesApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignNegativeTargetingClausesApi - factory interface
 * @export
 */
export const CampaignNegativeTargetingClausesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignNegativeTargetingClausesApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
            return localVarFp.createSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
            return localVarFp.deleteSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
            return localVarFp.listSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesResponseContent> {
            return localVarFp.updateSponsoredProductsCampaignNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsCampaignNegativeTargetingClauses operation in CampaignNegativeTargetingClausesApi.
 * @export
 * @interface CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClausesRequest
 */
export interface CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent}
     * @memberof CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsCampaignNegativeTargetingClauses operation in CampaignNegativeTargetingClausesApi.
 * @export
 * @interface CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClausesRequest
 */
export interface CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent}
     * @memberof CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent
}

/**
 * Request parameters for listSponsoredProductsCampaignNegativeTargetingClauses operation in CampaignNegativeTargetingClausesApi.
 * @export
 * @interface CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClausesRequest
 */
export interface CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent}
     * @memberof CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent
}

/**
 * Request parameters for updateSponsoredProductsCampaignNegativeTargetingClauses operation in CampaignNegativeTargetingClausesApi.
 * @export
 * @interface CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClausesRequest
 */
export interface CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent}
     * @memberof CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClauses
     */
    readonly prefer?: string
}

/**
 * CampaignNegativeTargetingClausesApi - object-oriented interface
 * @export
 * @class CampaignNegativeTargetingClausesApi
 * @extends {BaseAPI}
 */
export class CampaignNegativeTargetingClausesApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeTargetingClausesApi
     */
    public createSponsoredProductsCampaignNegativeTargetingClauses(requestParameters: CampaignNegativeTargetingClausesApiCreateSponsoredProductsCampaignNegativeTargetingClausesRequest, options?: any) {
        return CampaignNegativeTargetingClausesApiFp(this.configuration).createSponsoredProductsCampaignNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeTargetingClausesApi
     */
    public deleteSponsoredProductsCampaignNegativeTargetingClauses(requestParameters: CampaignNegativeTargetingClausesApiDeleteSponsoredProductsCampaignNegativeTargetingClausesRequest, options?: any) {
        return CampaignNegativeTargetingClausesApiFp(this.configuration).deleteSponsoredProductsCampaignNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeTargetingClausesApi
     */
    public listSponsoredProductsCampaignNegativeTargetingClauses(requestParameters: CampaignNegativeTargetingClausesApiListSponsoredProductsCampaignNegativeTargetingClausesRequest, options?: any) {
        return CampaignNegativeTargetingClausesApiFp(this.configuration).listSponsoredProductsCampaignNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsCampaignNegativeTargetingClausesRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignNegativeTargetingClausesApi
     */
    public updateSponsoredProductsCampaignNegativeTargetingClauses(requestParameters: CampaignNegativeTargetingClausesApiUpdateSponsoredProductsCampaignNegativeTargetingClausesRequest, options?: any) {
        return CampaignNegativeTargetingClausesApiFp(this.configuration).updateSponsoredProductsCampaignNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsCampaignNegativeTargetingClausesRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignOptimizationRulesApi - axios parameter creator
 * @export
 */
export const CampaignOptimizationRulesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSPCampaignOptimizationRulesRequest' is not null or undefined
            assertParamExists('createOptimizationRule', 'createSPCampaignOptimizationRulesRequest', createSPCampaignOptimizationRulesRequest)
            const localVarPath = `/sp/rules/campaignOptimization`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSPCampaignOptimizationRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCampaignOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteCampaignOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteCampaignOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignOptimizationId' is not null or undefined
            assertParamExists('deleteCampaignOptimizationRule', 'campaignOptimizationId', campaignOptimizationId)
            const localVarPath = `/sp/rules/campaignOptimization/{campaignOptimizationId}`
                .replace(`{${"campaignOptimizationId"}}`, encodeURIComponent(String(campaignOptimizationId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignOptimizationId' is not null or undefined
            assertParamExists('getCampaignOptimizationRule', 'campaignOptimizationId', campaignOptimizationId)
            const localVarPath = `/sp/rules/campaignOptimization/{campaignOptimizationId}`
                .replace(`{${"campaignOptimizationId"}}`, encodeURIComponent(String(campaignOptimizationId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule recommendation for SP campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOptimizationRuleEligibility: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getOptimizationRuleEligibility', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getOptimizationRuleEligibility', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' is not null or undefined
            assertParamExists('getOptimizationRuleEligibility', 'sPCampaignOptimizationRecommendationsAPIRequest', sPCampaignOptimizationRecommendationsAPIRequest)
            const localVarPath = `/sp/rules/campaignOptimization/eligibility`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sPCampaignOptimizationRecommendationsAPIRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleNotification: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRuleNotification', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRuleNotification', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sPCampaignOptimizationNotificationAPIRequest' is not null or undefined
            assertParamExists('getRuleNotification', 'sPCampaignOptimizationNotificationAPIRequest', sPCampaignOptimizationNotificationAPIRequest)
            const localVarPath = `/sp/rules/campaignOptimization/state`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sPCampaignOptimizationNotificationAPIRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSPCampaignOptimizationRulesRequest' is not null or undefined
            assertParamExists('updateOptimizationRule', 'updateSPCampaignOptimizationRulesRequest', updateSPCampaignOptimizationRulesRequest)
            const localVarPath = `/sp/rules/campaignOptimization`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSPCampaignOptimizationRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignOptimizationRulesApi - functional programming interface
 * @export
 */
export const CampaignOptimizationRulesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignOptimizationRulesApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSPCampaignOptimizationRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPCampaignOptimizationRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteSPCampaignOptimizationRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPCampaignOptimizationRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule recommendation for SP campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getOptimizationRuleEligibility(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPCampaignOptimizationRecommendationAPIResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getOptimizationRuleEligibility(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationRecommendationsAPIRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRuleNotification(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPCampaignOptimizationNotificationAPIResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleNotification(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationNotificationAPIRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateSPCampaignOptimizationRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPCampaignOptimizationRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignOptimizationRulesApi - factory interface
 * @export
 */
export const CampaignOptimizationRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignOptimizationRulesApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest, options?: any): AxiosPromise<CreateSPCampaignOptimizationRulesResponse> {
            return localVarFp.createOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPCampaignOptimizationRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): AxiosPromise<DeleteSPCampaignOptimizationRuleResponse> {
            return localVarFp.deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): AxiosPromise<GetSPCampaignOptimizationRuleResponse> {
            return localVarFp.getCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule recommendation for SP campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOptimizationRuleEligibility(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest, options?: any): AxiosPromise<SPCampaignOptimizationRecommendationAPIResponse> {
            return localVarFp.getOptimizationRuleEligibility(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationRecommendationsAPIRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleNotification(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest, options?: any): AxiosPromise<SPCampaignOptimizationNotificationAPIResponse> {
            return localVarFp.getRuleNotification(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationNotificationAPIRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest, options?: any): AxiosPromise<UpdateSPCampaignOptimizationRuleResponse> {
            return localVarFp.updateOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPCampaignOptimizationRulesRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiCreateOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiCreateOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiCreateOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiCreateOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSPCampaignOptimizationRulesRequest}
     * @memberof CampaignOptimizationRulesApiCreateOptimizationRule
     */
    readonly createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest
}

/**
 * Request parameters for deleteCampaignOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiDeleteCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiDeleteCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The sp campaign optimization rule identifier.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiDeleteCampaignOptimizationRule
     */
    readonly campaignOptimizationId: string
}

/**
 * Request parameters for getCampaignOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The sp campaign optimization rule identifier.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetCampaignOptimizationRule
     */
    readonly campaignOptimizationId: string
}

/**
 * Request parameters for getOptimizationRuleEligibility operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest
 */
export interface CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetOptimizationRuleEligibility
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetOptimizationRuleEligibility
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SPCampaignOptimizationRecommendationsAPIRequest}
     * @memberof CampaignOptimizationRulesApiGetOptimizationRuleEligibility
     */
    readonly sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest
}

/**
 * Request parameters for getRuleNotification operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiGetRuleNotificationRequest
 */
export interface CampaignOptimizationRulesApiGetRuleNotificationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetRuleNotification
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetRuleNotification
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SPCampaignOptimizationNotificationAPIRequest}
     * @memberof CampaignOptimizationRulesApiGetRuleNotification
     */
    readonly sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest
}

/**
 * Request parameters for updateOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiUpdateOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiUpdateOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiUpdateOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiUpdateOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSPCampaignOptimizationRulesRequest}
     * @memberof CampaignOptimizationRulesApiUpdateOptimizationRule
     */
    readonly updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest
}

/**
 * CampaignOptimizationRulesApi - object-oriented interface
 * @export
 * @class CampaignOptimizationRulesApi
 * @extends {BaseAPI}
 */
export class CampaignOptimizationRulesApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates a campaign optimization rule.
     * @param {CampaignOptimizationRulesApiCreateOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public createOptimizationRule(requestParameters: CampaignOptimizationRulesApiCreateOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).createOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSPCampaignOptimizationRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes a campaign optimization rule specified by identifier.
     * @param {CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public deleteCampaignOptimizationRule(requestParameters: CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).deleteCampaignOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignOptimizationId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule specified by identifier.
     * @param {CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public getCampaignOptimizationRule(requestParameters: CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).getCampaignOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignOptimizationId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule recommendation for SP campaigns.
     * @param {CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public getOptimizationRuleEligibility(requestParameters: CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).getOptimizationRuleEligibility(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sPCampaignOptimizationRecommendationsAPIRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
     * @param {CampaignOptimizationRulesApiGetRuleNotificationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public getRuleNotification(requestParameters: CampaignOptimizationRulesApiGetRuleNotificationRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).getRuleNotification(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sPCampaignOptimizationNotificationAPIRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates a campaign optimization rule.
     * @param {CampaignOptimizationRulesApiUpdateOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public updateOptimizationRule(requestParameters: CampaignOptimizationRulesApiUpdateOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).updateOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSPCampaignOptimizationRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignsApi - axios parameter creator
 * @export
 */
export const CampaignsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsCampaignsRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsCampaigns', 'sponsoredProductsCreateSponsoredProductsCampaignsRequestContent', sponsoredProductsCreateSponsoredProductsCampaignsRequestContent)
            const localVarPath = `/sp/campaigns`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsCampaigns', 'sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent', sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent)
            const localVarPath = `/sp/campaigns/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaigns/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsCampaigns', 'sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent', sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent)
            const localVarPath = `/sp/campaigns`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spCampaign.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignsApi - functional programming interface
 * @export
 */
export const CampaignsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignsApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsCampaignsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsCampaignsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignsApi - factory interface
 * @export
 */
export const CampaignsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignsApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent} sponsoredProductsCreateSponsoredProductsCampaignsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsCampaignsResponseContent> {
            return localVarFp.createSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsCampaignsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent} sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsCampaignsResponseContent> {
            return localVarFp.deleteSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsCampaignsRequestContent} [sponsoredProductsListSponsoredProductsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsCampaignsResponseContent> {
            return localVarFp.listSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsCampaignsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent} sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsCampaignsResponseContent> {
            return localVarFp.updateSponsoredProductsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiCreateSponsoredProductsCampaignsRequest
 */
export interface CampaignsApiCreateSponsoredProductsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiCreateSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignsApiCreateSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsCampaignsRequestContent}
     * @memberof CampaignsApiCreateSponsoredProductsCampaigns
     */
    readonly sponsoredProductsCreateSponsoredProductsCampaignsRequestContent: SponsoredProductsCreateSponsoredProductsCampaignsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof CampaignsApiCreateSponsoredProductsCampaigns
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiDeleteSponsoredProductsCampaignsRequest
 */
export interface CampaignsApiDeleteSponsoredProductsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiDeleteSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignsApiDeleteSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent}
     * @memberof CampaignsApiDeleteSponsoredProductsCampaigns
     */
    readonly sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent: SponsoredProductsDeleteSponsoredProductsCampaignsRequestContent
}

/**
 * Request parameters for listSponsoredProductsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiListSponsoredProductsCampaignsRequest
 */
export interface CampaignsApiListSponsoredProductsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiListSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignsApiListSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsCampaignsRequestContent}
     * @memberof CampaignsApiListSponsoredProductsCampaigns
     */
    readonly sponsoredProductsListSponsoredProductsCampaignsRequestContent?: SponsoredProductsListSponsoredProductsCampaignsRequestContent
}

/**
 * Request parameters for updateSponsoredProductsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiUpdateSponsoredProductsCampaignsRequest
 */
export interface CampaignsApiUpdateSponsoredProductsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiUpdateSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignsApiUpdateSponsoredProductsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent}
     * @memberof CampaignsApiUpdateSponsoredProductsCampaigns
     */
    readonly sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent: SponsoredProductsUpdateSponsoredProductsCampaignsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof CampaignsApiUpdateSponsoredProductsCampaigns
     */
    readonly prefer?: string
}

/**
 * CampaignsApi - object-oriented interface
 * @export
 * @class CampaignsApi
 * @extends {BaseAPI}
 */
export class CampaignsApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignsApiCreateSponsoredProductsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public createSponsoredProductsCampaigns(requestParameters: CampaignsApiCreateSponsoredProductsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).createSponsoredProductsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsCampaignsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignsApiDeleteSponsoredProductsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public deleteSponsoredProductsCampaigns(requestParameters: CampaignsApiDeleteSponsoredProductsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).deleteSponsoredProductsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsCampaignsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {CampaignsApiListSponsoredProductsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public listSponsoredProductsCampaigns(requestParameters: CampaignsApiListSponsoredProductsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).listSponsoredProductsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsCampaignsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {CampaignsApiUpdateSponsoredProductsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public updateSponsoredProductsCampaigns(requestParameters: CampaignsApiUpdateSponsoredProductsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).updateSponsoredProductsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsCampaignsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ConsolidatedRecommendationsApi - axios parameter creator
 * @export
 */
export const ConsolidatedRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
         * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, nextToken?: string, maxResults?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaign/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (maxResults !== undefined) {
                localVarQueryParameter['maxResults'] = maxResults;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ConsolidatedRecommendationsApi - functional programming interface
 * @export
 */
export const ConsolidatedRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ConsolidatedRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
         * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, nextToken?: string, maxResults?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetCampaignRecommendationsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, nextToken, maxResults, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ConsolidatedRecommendationsApi - factory interface
 * @export
 */
export const ConsolidatedRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ConsolidatedRecommendationsApiFp(configuration)
    return {
        /**
         * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {string} [nextToken] Optional. Token to retrieve subsequent page of results.
         * @param {string} [maxResults] Optional. Limits the number of items to return in the response.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, nextToken?: string, maxResults?: string, options?: any): AxiosPromise<GetCampaignRecommendationsResponse> {
            return localVarFp.getCampaignRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, nextToken, maxResults, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getCampaignRecommendations operation in ConsolidatedRecommendationsApi.
 * @export
 * @interface ConsolidatedRecommendationsApiGetCampaignRecommendationsRequest
 */
export interface ConsolidatedRecommendationsApiGetCampaignRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ConsolidatedRecommendationsApiGetCampaignRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof ConsolidatedRecommendationsApiGetCampaignRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Optional. Token to retrieve subsequent page of results.
     * @type {string}
     * @memberof ConsolidatedRecommendationsApiGetCampaignRecommendations
     */
    readonly nextToken?: string

    /**
     * Optional. Limits the number of items to return in the response.
     * @type {string}
     * @memberof ConsolidatedRecommendationsApiGetCampaignRecommendations
     */
    readonly maxResults?: string
}

/**
 * ConsolidatedRecommendationsApi - object-oriented interface
 * @export
 * @class ConsolidatedRecommendationsApi
 * @extends {BaseAPI}
 */
export class ConsolidatedRecommendationsApi extends BaseAPI {
    /**
     * Gets the top consolidated recommendations across bid, budget, targeting for SP campaigns given an advertiser profile id. The recommendations are refreshed everyday.  **Requires one of these permissions**: [\"advertiser_campaign_view\",\"advertiser_campaign_edit\"]
     * @param {ConsolidatedRecommendationsApiGetCampaignRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ConsolidatedRecommendationsApi
     */
    public getCampaignRecommendations(requestParameters: ConsolidatedRecommendationsApiGetCampaignRecommendationsRequest, options?: any) {
        return ConsolidatedRecommendationsApiFp(this.configuration).getCampaignRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.nextToken, requestParameters.maxResults, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * KeywordRecommendationsApi - axios parameter creator
 * @export
 */
export const KeywordRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also have added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
         * @param {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest} [adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRankedKeywordRecommendation: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIMarketplaceId?: string, amazonAdvertisingAPIAdvertiserId?: string, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRankedKeywordRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRankedKeywordRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/keywords/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIMarketplaceId !== undefined && amazonAdvertisingAPIMarketplaceId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-MarketplaceId'] = String(amazonAdvertisingAPIMarketplaceId);
            }

            if (amazonAdvertisingAPIAdvertiserId !== undefined && amazonAdvertisingAPIAdvertiserId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spkeywordsrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * KeywordRecommendationsApi - functional programming interface
 * @export
 */
export const KeywordRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = KeywordRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also have added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
         * @param {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest} [adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRankedKeywordRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIMarketplaceId?: string, amazonAdvertisingAPIAdvertiserId?: string, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<KeywordTargetResponse>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRankedKeywordRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, amazonAdvertisingAPIMarketplaceId, amazonAdvertisingAPIAdvertiserId, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * KeywordRecommendationsApi - factory interface
 * @export
 */
export const KeywordRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = KeywordRecommendationsApiFp(configuration)
    return {
        /**
         * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also have added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
         * @param {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest} [adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRankedKeywordRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIMarketplaceId?: string, amazonAdvertisingAPIAdvertiserId?: string, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest, options?: any): AxiosPromise<Array<KeywordTargetResponse>> {
            return localVarFp.getRankedKeywordRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, amazonAdvertisingAPIMarketplaceId, amazonAdvertisingAPIAdvertiserId, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getRankedKeywordRecommendation operation in KeywordRecommendationsApi.
 * @export
 * @interface KeywordRecommendationsApiGetRankedKeywordRecommendationRequest
 */
export interface KeywordRecommendationsApiGetRankedKeywordRecommendationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The advertiser\&#39;s Marketplace ID associated with the advertiser account.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIMarketplaceId?: string

    /**
     * The advertiser\&#39;s ID associated with the advertiser account.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIAdvertiserId?: string

    /**
     * 
     * @type {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest}
     * @memberof KeywordRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest
}

/**
 * KeywordRecommendationsApi - object-oriented interface
 * @export
 * @class KeywordRecommendationsApi
 * @extends {BaseAPI}
 */
export class KeywordRecommendationsApi extends BaseAPI {
    /**
     * The <b> POST /sp/targets/keywords/recommendations </b> endpoint returns recommended keyword targets given either A) a list of ad ASINs or B) a campaign ID and ad group ID. Please use the recommendationType field to specify if you want to use option A or option B. This endpoint will also return recommended bids along with each recommendation keyword target.<br><br> <b> Ranking </b> <br> The keyword recommendations will be ranked in descending order of clicks or impressions, depending on the <b>sortDimension</b> field provided by the user. You may also input your own keyword targets to be ranked alongside the keyword recommendations by using the <b>targets</b> array. <br><br> <b> Localization </b> <br> Use the <b> locale </b> field to get keywords in your specified locale. Supported marketplace to locale mappings can be found at the <a href=\'https://advertising.amazon.com/API/docs/en-us/localization/#/Keyword%20Localization\'>POST /keywords/localize</a> endpoint. <h1> Version 5.0 </h1>  <h2> New Features </h2> Version 5.0 utilizes the new theme-based bid recommendations, which can be retrieved at the endpoint <b>/sp/targets/bid/recommendations</b>, to return improved bid recommendations for each keyword. Theme-based bid recommendations provide \\\\\\\"themes\\\\\\\" and \\\\\\\"impact metrics\\\\\\\" along with each bid suggestion to help you choose the right bid for your keyword target.<br><br><b>Themes</b><br> We now may return multiple bid suggestions for each keyword target. Each suggestion will have a theme to express the business objective of the bid. Available themes are: <ul> <li> CONVERSION_OPPORTUNITIES - The default theme which aims to maximize number of conversions. </li> <li> SPECIAL_DAYS - A theme available during high sales events such as Prime Day, to anticipate an increase in sales and competition.</li></ul><b>Impact Metrics</b><br>We have added impact metrics which provide insight on the number of clicks and conversions you will receive for targeting a keyword at a certain bid. <br><br><b>Bidding Strategy</b><br> You may now specify your bidding strategy in the KEYWORDS_BY_ASINS request to get bid suggestions tailored to your bidding strategy. For KEYWORDS_BY_ADGROUP requests, you will not specify a bidding strategy, because the bidding strategy of the ad group is used. The three bidding strategies are: <ul> <li> LEGACY_FOR_SALES - Dynamic bids (down only) </li> <li> AUTO_FOR_SALES - Dynamic bids (up and down) </li> <li> MANUAL - Fixed bids </li> </ul> <h3> Availability </h3> Version 5.0 is only available in the following marketplaces: US, CA, UK, DE, FR, ES, IN, JP. <h1> Version 4.0 </h1> <h2> New features </h2> Version 4.0 allows users to retrieve recommended keyword targets which are sorted in descending order of clicks or conversions. The default sort dimension, if not specified, ranks recommendations by our interal ranking mechanism. We have also have added search term metrics. <b> Search term impression share </b> indicates the percentage share of all ad-attributed impressions you received on that keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. <b> Search term impression rank </b> indicates your ranking among all advertisers for the keyword by ad impressions in a marketplace. It tells an advertiser how many advertisers had higher share of ad impressions. <i> Search term information is only available for keywords the advertiser targeted with ad impressions. </i> <h3> Availability </h3> Version 4.0 is available in all marketplaces.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get keyword recommendations
     * @param {KeywordRecommendationsApiGetRankedKeywordRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordRecommendationsApi
     */
    public getRankedKeywordRecommendation(requestParameters: KeywordRecommendationsApiGetRankedKeywordRecommendationRequest, options?: any) {
        return KeywordRecommendationsApiFp(this.configuration).getRankedKeywordRecommendation(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.amazonAdvertisingAPIMarketplaceId, requestParameters.amazonAdvertisingAPIAdvertiserId, requestParameters.adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * KeywordsApi - axios parameter creator
 * @export
 */
export const KeywordsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsKeywordsRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsKeywords', 'sponsoredProductsCreateSponsoredProductsKeywordsRequestContent', sponsoredProductsCreateSponsoredProductsKeywordsRequestContent)
            const localVarPath = `/sp/keywords`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsKeywords', 'sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent', sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent)
            const localVarPath = `/sp/keywords/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/keywords/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsKeywords', 'sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent', sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent)
            const localVarPath = `/sp/keywords`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * KeywordsApi - functional programming interface
 * @export
 */
export const KeywordsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = KeywordsApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsKeywordsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsKeywordsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * KeywordsApi - factory interface
 * @export
 */
export const KeywordsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = KeywordsApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsKeywordsResponseContent> {
            return localVarFp.createSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsKeywordsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsKeywordsResponseContent> {
            return localVarFp.deleteSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsKeywordsRequestContent} [sponsoredProductsListSponsoredProductsKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsKeywordsResponseContent> {
            return localVarFp.listSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsKeywordsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsKeywordsResponseContent> {
            return localVarFp.updateSponsoredProductsKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsKeywords operation in KeywordsApi.
 * @export
 * @interface KeywordsApiCreateSponsoredProductsKeywordsRequest
 */
export interface KeywordsApiCreateSponsoredProductsKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordsApiCreateSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof KeywordsApiCreateSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsKeywordsRequestContent}
     * @memberof KeywordsApiCreateSponsoredProductsKeywords
     */
    readonly sponsoredProductsCreateSponsoredProductsKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsKeywordsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof KeywordsApiCreateSponsoredProductsKeywords
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsKeywords operation in KeywordsApi.
 * @export
 * @interface KeywordsApiDeleteSponsoredProductsKeywordsRequest
 */
export interface KeywordsApiDeleteSponsoredProductsKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordsApiDeleteSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof KeywordsApiDeleteSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent}
     * @memberof KeywordsApiDeleteSponsoredProductsKeywords
     */
    readonly sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsKeywordsRequestContent
}

/**
 * Request parameters for listSponsoredProductsKeywords operation in KeywordsApi.
 * @export
 * @interface KeywordsApiListSponsoredProductsKeywordsRequest
 */
export interface KeywordsApiListSponsoredProductsKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordsApiListSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof KeywordsApiListSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsKeywordsRequestContent}
     * @memberof KeywordsApiListSponsoredProductsKeywords
     */
    readonly sponsoredProductsListSponsoredProductsKeywordsRequestContent?: SponsoredProductsListSponsoredProductsKeywordsRequestContent
}

/**
 * Request parameters for updateSponsoredProductsKeywords operation in KeywordsApi.
 * @export
 * @interface KeywordsApiUpdateSponsoredProductsKeywordsRequest
 */
export interface KeywordsApiUpdateSponsoredProductsKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordsApiUpdateSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof KeywordsApiUpdateSponsoredProductsKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent}
     * @memberof KeywordsApiUpdateSponsoredProductsKeywords
     */
    readonly sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsKeywordsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof KeywordsApiUpdateSponsoredProductsKeywords
     */
    readonly prefer?: string
}

/**
 * KeywordsApi - object-oriented interface
 * @export
 * @class KeywordsApi
 * @extends {BaseAPI}
 */
export class KeywordsApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {KeywordsApiCreateSponsoredProductsKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordsApi
     */
    public createSponsoredProductsKeywords(requestParameters: KeywordsApiCreateSponsoredProductsKeywordsRequest, options?: any) {
        return KeywordsApiFp(this.configuration).createSponsoredProductsKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsKeywordsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {KeywordsApiDeleteSponsoredProductsKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordsApi
     */
    public deleteSponsoredProductsKeywords(requestParameters: KeywordsApiDeleteSponsoredProductsKeywordsRequest, options?: any) {
        return KeywordsApiFp(this.configuration).deleteSponsoredProductsKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsKeywordsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {KeywordsApiListSponsoredProductsKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordsApi
     */
    public listSponsoredProductsKeywords(requestParameters: KeywordsApiListSponsoredProductsKeywordsRequest, options?: any) {
        return KeywordsApiFp(this.configuration).listSponsoredProductsKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsKeywordsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {KeywordsApiUpdateSponsoredProductsKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordsApi
     */
    public updateSponsoredProductsKeywords(requestParameters: KeywordsApiUpdateSponsoredProductsKeywordsRequest, options?: any) {
        return KeywordsApiFp(this.configuration).updateSponsoredProductsKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsKeywordsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * NegativeKeywordsApi - axios parameter creator
 * @export
 */
export const NegativeKeywordsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsNegativeKeywords', 'sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent', sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent)
            const localVarPath = `/sp/negativeKeywords`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsNegativeKeywords', 'sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent', sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent)
            const localVarPath = `/sp/negativeKeywords/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/negativeKeywords/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsNegativeKeywords: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsNegativeKeywords', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsNegativeKeywords', 'sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent', sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent)
            const localVarPath = `/sp/negativeKeywords`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeKeyword.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * NegativeKeywordsApi - functional programming interface
 * @export
 */
export const NegativeKeywordsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = NegativeKeywordsApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * NegativeKeywordsApi - factory interface
 * @export
 */
export const NegativeKeywordsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = NegativeKeywordsApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeKeywordsResponseContent> {
            return localVarFp.createSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeKeywordsResponseContent> {
            return localVarFp.deleteSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent} [sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsNegativeKeywordsResponseContent> {
            return localVarFp.listSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeKeywordsResponseContent> {
            return localVarFp.updateSponsoredProductsNegativeKeywords(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsNegativeKeywords operation in NegativeKeywordsApi.
 * @export
 * @interface NegativeKeywordsApiCreateSponsoredProductsNegativeKeywordsRequest
 */
export interface NegativeKeywordsApiCreateSponsoredProductsNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeKeywordsApiCreateSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeKeywordsApiCreateSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent}
     * @memberof NegativeKeywordsApiCreateSponsoredProductsNegativeKeywords
     */
    readonly sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof NegativeKeywordsApiCreateSponsoredProductsNegativeKeywords
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsNegativeKeywords operation in NegativeKeywordsApi.
 * @export
 * @interface NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywordsRequest
 */
export interface NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent}
     * @memberof NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywords
     */
    readonly sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent
}

/**
 * Request parameters for listSponsoredProductsNegativeKeywords operation in NegativeKeywordsApi.
 * @export
 * @interface NegativeKeywordsApiListSponsoredProductsNegativeKeywordsRequest
 */
export interface NegativeKeywordsApiListSponsoredProductsNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeKeywordsApiListSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeKeywordsApiListSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent}
     * @memberof NegativeKeywordsApiListSponsoredProductsNegativeKeywords
     */
    readonly sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent?: SponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent
}

/**
 * Request parameters for updateSponsoredProductsNegativeKeywords operation in NegativeKeywordsApi.
 * @export
 * @interface NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywordsRequest
 */
export interface NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywordsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywords
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent}
     * @memberof NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywords
     */
    readonly sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywords
     */
    readonly prefer?: string
}

/**
 * NegativeKeywordsApi - object-oriented interface
 * @export
 * @class NegativeKeywordsApi
 * @extends {BaseAPI}
 */
export class NegativeKeywordsApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {NegativeKeywordsApiCreateSponsoredProductsNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeKeywordsApi
     */
    public createSponsoredProductsNegativeKeywords(requestParameters: NegativeKeywordsApiCreateSponsoredProductsNegativeKeywordsRequest, options?: any) {
        return NegativeKeywordsApiFp(this.configuration).createSponsoredProductsNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsNegativeKeywordsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeKeywordsApi
     */
    public deleteSponsoredProductsNegativeKeywords(requestParameters: NegativeKeywordsApiDeleteSponsoredProductsNegativeKeywordsRequest, options?: any) {
        return NegativeKeywordsApiFp(this.configuration).deleteSponsoredProductsNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsNegativeKeywordsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {NegativeKeywordsApiListSponsoredProductsNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeKeywordsApi
     */
    public listSponsoredProductsNegativeKeywords(requestParameters: NegativeKeywordsApiListSponsoredProductsNegativeKeywordsRequest, options?: any) {
        return NegativeKeywordsApiFp(this.configuration).listSponsoredProductsNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsNegativeKeywordsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywordsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeKeywordsApi
     */
    public updateSponsoredProductsNegativeKeywords(requestParameters: NegativeKeywordsApiUpdateSponsoredProductsNegativeKeywordsRequest, options?: any) {
        return NegativeKeywordsApiFp(this.configuration).updateSponsoredProductsNegativeKeywords(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsNegativeKeywordsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * NegativeTargetingClausesApi - axios parameter creator
 * @export
 */
export const NegativeTargetingClausesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsNegativeTargetingClauses', 'sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent', sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent)
            const localVarPath = `/sp/negativeTargets`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsNegativeTargetingClauses', 'sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent', sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent)
            const localVarPath = `/sp/negativeTargets/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/negativeTargets/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsNegativeTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsNegativeTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsNegativeTargetingClauses', 'sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent', sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent)
            const localVarPath = `/sp/negativeTargets`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spNegativeTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * NegativeTargetingClausesApi - functional programming interface
 * @export
 */
export const NegativeTargetingClausesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = NegativeTargetingClausesApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * NegativeTargetingClausesApi - factory interface
 * @export
 */
export const NegativeTargetingClausesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = NegativeTargetingClausesApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesResponseContent> {
            return localVarFp.createSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesResponseContent> {
            return localVarFp.deleteSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsNegativeTargetingClausesResponseContent> {
            return localVarFp.listSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesResponseContent> {
            return localVarFp.updateSponsoredProductsNegativeTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsNegativeTargetingClauses operation in NegativeTargetingClausesApi.
 * @export
 * @interface NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClausesRequest
 */
export interface NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent}
     * @memberof NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClauses
     */
    readonly sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClauses
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsNegativeTargetingClauses operation in NegativeTargetingClausesApi.
 * @export
 * @interface NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClausesRequest
 */
export interface NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent}
     * @memberof NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClauses
     */
    readonly sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent
}

/**
 * Request parameters for listSponsoredProductsNegativeTargetingClauses operation in NegativeTargetingClausesApi.
 * @export
 * @interface NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClausesRequest
 */
export interface NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent}
     * @memberof NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClauses
     */
    readonly sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent
}

/**
 * Request parameters for updateSponsoredProductsNegativeTargetingClauses operation in NegativeTargetingClausesApi.
 * @export
 * @interface NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClausesRequest
 */
export interface NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent}
     * @memberof NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClauses
     */
    readonly sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClauses
     */
    readonly prefer?: string
}

/**
 * NegativeTargetingClausesApi - object-oriented interface
 * @export
 * @class NegativeTargetingClausesApi
 * @extends {BaseAPI}
 */
export class NegativeTargetingClausesApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeTargetingClausesApi
     */
    public createSponsoredProductsNegativeTargetingClauses(requestParameters: NegativeTargetingClausesApiCreateSponsoredProductsNegativeTargetingClausesRequest, options?: any) {
        return NegativeTargetingClausesApiFp(this.configuration).createSponsoredProductsNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsNegativeTargetingClausesRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeTargetingClausesApi
     */
    public deleteSponsoredProductsNegativeTargetingClauses(requestParameters: NegativeTargetingClausesApiDeleteSponsoredProductsNegativeTargetingClausesRequest, options?: any) {
        return NegativeTargetingClausesApiFp(this.configuration).deleteSponsoredProductsNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsNegativeTargetingClausesRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeTargetingClausesApi
     */
    public listSponsoredProductsNegativeTargetingClauses(requestParameters: NegativeTargetingClausesApiListSponsoredProductsNegativeTargetingClausesRequest, options?: any) {
        return NegativeTargetingClausesApiFp(this.configuration).listSponsoredProductsNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsNegativeTargetingClausesRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof NegativeTargetingClausesApi
     */
    public updateSponsoredProductsNegativeTargetingClauses(requestParameters: NegativeTargetingClausesApiUpdateSponsoredProductsNegativeTargetingClausesRequest, options?: any) {
        return NegativeTargetingClausesApiFp(this.configuration).updateSponsoredProductsNegativeTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsNegativeTargetingClausesRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductAdsApi - axios parameter creator
 * @export
 */
export const ProductAdsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsProductAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsProductAds', 'sponsoredProductsCreateSponsoredProductsProductAdsRequestContent', sponsoredProductsCreateSponsoredProductsProductAdsRequestContent)
            const localVarPath = `/sp/productAds`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsProductAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsProductAds', 'sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent', sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent)
            const localVarPath = `/sp/productAds/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsProductAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/productAds/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsProductAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsProductAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsProductAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsProductAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsProductAds', 'sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent', sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent)
            const localVarPath = `/sp/productAds`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spProductAd.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductAdsApi - functional programming interface
 * @export
 */
export const ProductAdsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductAdsApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsProductAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsProductAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductAdsApi - factory interface
 * @export
 */
export const ProductAdsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductAdsApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent} sponsoredProductsCreateSponsoredProductsProductAdsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsProductAdsResponseContent> {
            return localVarFp.createSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent} sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsProductAdsResponseContent> {
            return localVarFp.deleteSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsProductAdsRequestContent} [sponsoredProductsListSponsoredProductsProductAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsProductAdsResponseContent> {
            return localVarFp.listSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsProductAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent} sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsProductAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsProductAdsResponseContent> {
            return localVarFp.updateSponsoredProductsProductAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsProductAds operation in ProductAdsApi.
 * @export
 * @interface ProductAdsApiCreateSponsoredProductsProductAdsRequest
 */
export interface ProductAdsApiCreateSponsoredProductsProductAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ProductAdsApiCreateSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ProductAdsApiCreateSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsProductAdsRequestContent}
     * @memberof ProductAdsApiCreateSponsoredProductsProductAds
     */
    readonly sponsoredProductsCreateSponsoredProductsProductAdsRequestContent: SponsoredProductsCreateSponsoredProductsProductAdsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof ProductAdsApiCreateSponsoredProductsProductAds
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsProductAds operation in ProductAdsApi.
 * @export
 * @interface ProductAdsApiDeleteSponsoredProductsProductAdsRequest
 */
export interface ProductAdsApiDeleteSponsoredProductsProductAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ProductAdsApiDeleteSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ProductAdsApiDeleteSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent}
     * @memberof ProductAdsApiDeleteSponsoredProductsProductAds
     */
    readonly sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent: SponsoredProductsDeleteSponsoredProductsProductAdsRequestContent
}

/**
 * Request parameters for listSponsoredProductsProductAds operation in ProductAdsApi.
 * @export
 * @interface ProductAdsApiListSponsoredProductsProductAdsRequest
 */
export interface ProductAdsApiListSponsoredProductsProductAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ProductAdsApiListSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ProductAdsApiListSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsProductAdsRequestContent}
     * @memberof ProductAdsApiListSponsoredProductsProductAds
     */
    readonly sponsoredProductsListSponsoredProductsProductAdsRequestContent?: SponsoredProductsListSponsoredProductsProductAdsRequestContent
}

/**
 * Request parameters for updateSponsoredProductsProductAds operation in ProductAdsApi.
 * @export
 * @interface ProductAdsApiUpdateSponsoredProductsProductAdsRequest
 */
export interface ProductAdsApiUpdateSponsoredProductsProductAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ProductAdsApiUpdateSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ProductAdsApiUpdateSponsoredProductsProductAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent}
     * @memberof ProductAdsApiUpdateSponsoredProductsProductAds
     */
    readonly sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent: SponsoredProductsUpdateSponsoredProductsProductAdsRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof ProductAdsApiUpdateSponsoredProductsProductAds
     */
    readonly prefer?: string
}

/**
 * ProductAdsApi - object-oriented interface
 * @export
 * @class ProductAdsApi
 * @extends {BaseAPI}
 */
export class ProductAdsApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {ProductAdsApiCreateSponsoredProductsProductAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductAdsApi
     */
    public createSponsoredProductsProductAds(requestParameters: ProductAdsApiCreateSponsoredProductsProductAdsRequest, options?: any) {
        return ProductAdsApiFp(this.configuration).createSponsoredProductsProductAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsProductAdsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {ProductAdsApiDeleteSponsoredProductsProductAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductAdsApi
     */
    public deleteSponsoredProductsProductAds(requestParameters: ProductAdsApiDeleteSponsoredProductsProductAdsRequest, options?: any) {
        return ProductAdsApiFp(this.configuration).deleteSponsoredProductsProductAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsProductAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {ProductAdsApiListSponsoredProductsProductAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductAdsApi
     */
    public listSponsoredProductsProductAds(requestParameters: ProductAdsApiListSponsoredProductsProductAdsRequest, options?: any) {
        return ProductAdsApiFp(this.configuration).listSponsoredProductsProductAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsProductAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {ProductAdsApiUpdateSponsoredProductsProductAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductAdsApi
     */
    public updateSponsoredProductsProductAds(requestParameters: ProductAdsApiUpdateSponsoredProductsProductAdsRequest, options?: any) {
        return ProductAdsApiFp(this.configuration).updateSponsoredProductsProductAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsProductAdsRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductRecommendationServiceApi - axios parameter creator
 * @export
 */
export const ProductRecommendationServiceApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
         * @summary Suggested target ASINs for your advertised product
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
         * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProductRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIAdvertiserId?: string, getProductRecommendationsRequest?: GetProductRecommendationsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getProductRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getProductRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/products/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIAdvertiserId !== undefined && amazonAdvertisingAPIAdvertiserId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproductrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getProductRecommendationsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductRecommendationServiceApi - functional programming interface
 * @export
 */
export const ProductRecommendationServiceApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductRecommendationServiceApiAxiosParamCreator(configuration)
    return {
        /**
         * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
         * @summary Suggested target ASINs for your advertised product
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
         * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProductRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIAdvertiserId?: string, getProductRecommendationsRequest?: GetProductRecommendationsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProductRecommendationsByTheme>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProductRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, amazonAdvertisingAPIAdvertiserId, getProductRecommendationsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductRecommendationServiceApi - factory interface
 * @export
 */
export const ProductRecommendationServiceApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductRecommendationServiceApiFp(configuration)
    return {
        /**
         * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
         * @summary Suggested target ASINs for your advertised product
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
         * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProductRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIAdvertiserId?: string, getProductRecommendationsRequest?: GetProductRecommendationsRequest, options?: any): AxiosPromise<ProductRecommendationsByTheme> {
            return localVarFp.getProductRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, amazonAdvertisingAPIAdvertiserId, getProductRecommendationsRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getProductRecommendations operation in ProductRecommendationServiceApi.
 * @export
 * @interface ProductRecommendationServiceApiGetProductRecommendationsRequest
 */
export interface ProductRecommendationServiceApiGetProductRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The Advertiser ID associated with the advertiser account.
     * @type {string}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly amazonAdvertisingAPIAdvertiserId?: string

    /**
     * 
     * @type {GetProductRecommendationsRequest}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly getProductRecommendationsRequest?: GetProductRecommendationsRequest
}

/**
 * ProductRecommendationServiceApi - object-oriented interface
 * @export
 * @class ProductRecommendationServiceApi
 * @extends {BaseAPI}
 */
export class ProductRecommendationServiceApi extends BaseAPI {
    /**
     * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
     * @summary Suggested target ASINs for your advertised product
     * @param {ProductRecommendationServiceApiGetProductRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductRecommendationServiceApi
     */
    public getProductRecommendations(requestParameters: ProductRecommendationServiceApiGetProductRecommendationsRequest, options?: any) {
        return ProductRecommendationServiceApiFp(this.configuration).getProductRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.amazonAdvertisingAPIAdvertiserId, requestParameters.getProductRecommendationsRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductTargetingApi - axios parameter creator
 * @export
 */
export const ProductTargetingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns a list of category recommendations for the input list of ASINs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
         * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCategoryRecommendationsForASINs: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCategoryRecommendationsForASINs', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCategoryRecommendationsForASINs', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/categories/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getCategoryRecommendationsForAsinsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands recommended for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNegativeBrands: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getNegativeBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getNegativeBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/negativeTargets/brands/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns refinements according to category input.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRefinementsForCategory: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, categoryId: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRefinementsForCategory', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRefinementsForCategory', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'categoryId' is not null or undefined
            assertParamExists('getRefinementsForCategory', 'categoryId', categoryId)
            const localVarPath = `/sp/targets/category/{categoryId}/refinements`
                .replace(`{${"categoryId"}}`, encodeURIComponent(String(categoryId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get number of targetable asins based on refinements provided by the user.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableASINCounts: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getTargetableASINCounts', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getTargetableASINCounts', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/products/count`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getTargetableAsinCountsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns all targetable categories.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableCategories: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getTargetableCategories', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getTargetableCategories', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/categories`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands related to keyword input for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {SearchBrandsRequest} [searchBrandsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchBrands: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, searchBrandsRequest?: SearchBrandsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('searchBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('searchBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/negativeTargets/brands/search`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(searchBrandsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductTargetingApi - functional programming interface
 * @export
 */
export const ProductTargetingApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductTargetingApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns a list of category recommendations for the input list of ASINs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
         * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CategoryRecommendations>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, locale, getCategoryRecommendationsForAsinsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands recommended for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getNegativeBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Brand>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns refinements according to category input.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRefinementsForCategory(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, categoryId: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Refinements>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRefinementsForCategory(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, locale, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get number of targetable asins based on refinements provided by the user.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTargetableASINCounts(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TargetableAsinCounts>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns all targetable categories.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTargetableCategories(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TargetableCategories>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetableCategories(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, locale, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands related to keyword input for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {SearchBrandsRequest} [searchBrandsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async searchBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, searchBrandsRequest?: SearchBrandsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Brand>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.searchBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductTargetingApi - factory interface
 * @export
 */
export const ProductTargetingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductTargetingApiFp(configuration)
    return {
        /**
         * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns a list of category recommendations for the input list of ASINs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
         * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest, options?: any): AxiosPromise<CategoryRecommendations> {
            return localVarFp.getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, locale, getCategoryRecommendationsForAsinsRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands recommended for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNegativeBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options?: any): AxiosPromise<Array<Brand>> {
            return localVarFp.getNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns refinements according to category input.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRefinementsForCategory(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, categoryId: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', options?: any): AxiosPromise<Refinements> {
            return localVarFp.getRefinementsForCategory(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, locale, options).then((request) => request(axios, basePath));
        },
        /**
         * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get number of targetable asins based on refinements provided by the user.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableASINCounts(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest, options?: any): AxiosPromise<TargetableAsinCounts> {
            return localVarFp.getTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns all targetable categories.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'} [locale] The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableCategories(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN', options?: any): AxiosPromise<TargetableCategories> {
            return localVarFp.getTargetableCategories(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, locale, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands related to keyword input for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {SearchBrandsRequest} [searchBrandsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, searchBrandsRequest?: SearchBrandsRequest, options?: any): AxiosPromise<Array<Brand>> {
            return localVarFp.searchBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getCategoryRecommendationsForASINs operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetCategoryRecommendationsForASINsRequest
 */
export interface ProductTargetingApiGetCategoryRecommendationsForASINsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly prefer?: string

    /**
     * The locale to which the caller wishes to translate the list of category recommendations to. For example, if the caller wishes to receive a list of category recommendations in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned list of category recommendations will be in the default language of the marketplace.
     * @type {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'

    /**
     * 
     * @type {GetCategoryRecommendationsForAsinsRequest}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest
}

/**
 * Request parameters for getNegativeBrands operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetNegativeBrandsRequest
 */
export interface ProductTargetingApiGetNegativeBrandsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetNegativeBrands
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetNegativeBrands
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetNegativeBrands
     */
    readonly prefer?: string
}

/**
 * Request parameters for getRefinementsForCategory operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetRefinementsForCategoryRequest
 */
export interface ProductTargetingApiGetRefinementsForCategoryRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly categoryId: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly prefer?: string

    /**
     * The locale to which the caller wishes to translate the refinements to. For example, if the caller wishes to receive the refinements in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the refinements will be in the default language of the marketplace.
     * @type {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'
}

/**
 * Request parameters for getTargetableASINCounts operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetTargetableASINCountsRequest
 */
export interface ProductTargetingApiGetTargetableASINCountsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly prefer?: string

    /**
     * 
     * @type {GetTargetableAsinCountsRequest}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest
}

/**
 * Request parameters for getTargetableCategories operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetTargetableCategoriesRequest
 */
export interface ProductTargetingApiGetTargetableCategoriesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly prefer?: string

    /**
     * The locale to which the caller wishes to translate the targetable categories to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned targetable categories will be in the default language of the marketplace.
     * @type {'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly locale?: 'ar_AE' | 'de_DE' | 'en_AE' | 'en_AU' | 'en_CA' | 'en_GB' | 'en_IN' | 'en_SG' | 'en_US' | 'es_ES' | 'es_MX' | 'fr_CA' | 'fr_FR' | 'hi_IN' | 'it_IT' | 'ja_JP' | 'ko_KR' | 'nl_NL' | 'pl_PL' | 'pt_BR' | 'sv_SE' | 'ta_IN' | 'th_TH' | 'tr_TR' | 'vi_VN' | 'zh_CN'
}

/**
 * Request parameters for searchBrands operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiSearchBrandsRequest
 */
export interface ProductTargetingApiSearchBrandsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly prefer?: string

    /**
     * 
     * @type {SearchBrandsRequest}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly searchBrandsRequest?: SearchBrandsRequest
}

/**
 * ProductTargetingApi - object-oriented interface
 * @export
 * @class ProductTargetingApi
 * @extends {BaseAPI}
 */
export class ProductTargetingApi extends BaseAPI {
    /**
     * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns a list of category recommendations for the input list of ASINs.
     * @param {ProductTargetingApiGetCategoryRecommendationsForASINsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getCategoryRecommendationsForASINs(requestParameters: ProductTargetingApiGetCategoryRecommendationsForASINsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getCategoryRecommendationsForASINs(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.locale, requestParameters.getCategoryRecommendationsForAsinsRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands recommended for negative targeting.
     * @param {ProductTargetingApiGetNegativeBrandsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getNegativeBrands(requestParameters: ProductTargetingApiGetNegativeBrandsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getNegativeBrands(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns refinements according to category input.
     * @param {ProductTargetingApiGetRefinementsForCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getRefinementsForCategory(requestParameters: ProductTargetingApiGetRefinementsForCategoryRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getRefinementsForCategory(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.categoryId, requestParameters.prefer, requestParameters.locale, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get number of targetable asins based on refinements provided by the user.
     * @param {ProductTargetingApiGetTargetableASINCountsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getTargetableASINCounts(requestParameters: ProductTargetingApiGetTargetableASINCountsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getTargetableASINCounts(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.getTargetableAsinCountsRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns all targetable categories.
     * @param {ProductTargetingApiGetTargetableCategoriesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getTargetableCategories(requestParameters: ProductTargetingApiGetTargetableCategoriesRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getTargetableCategories(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.locale, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands related to keyword input for negative targeting.
     * @param {ProductTargetingApiSearchBrandsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public searchBrands(requestParameters: ProductTargetingApiSearchBrandsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).searchBrands(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.searchBrandsRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * TargetingClausesApi - axios parameter creator
 * @export
 */
export const TargetingClausesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent' is not null or undefined
            assertParamExists('createSponsoredProductsTargetingClauses', 'sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent', sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent)
            const localVarPath = `/sp/targets`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent' is not null or undefined
            assertParamExists('deleteSponsoredProductsTargetingClauses', 'sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent', sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent)
            const localVarPath = `/sp/targets/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsListSponsoredProductsTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsTargetingClauses: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredProductsTargetingClauses', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent' is not null or undefined
            assertParamExists('updateSponsoredProductsTargetingClauses', 'sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent', sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent)
            const localVarPath = `/sp/targets`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spTargetingClause.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * TargetingClausesApi - functional programming interface
 * @export
 */
export const TargetingClausesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = TargetingClausesApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * TargetingClausesApi - factory interface
 * @export
 */
export const TargetingClausesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = TargetingClausesApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsCreateSponsoredProductsTargetingClausesResponseContent> {
            return localVarFp.createSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent} sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, options?: any): AxiosPromise<SponsoredProductsDeleteSponsoredProductsTargetingClausesResponseContent> {
            return localVarFp.deleteSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent} [sponsoredProductsListSponsoredProductsTargetingClausesRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent, options?: any): AxiosPromise<SponsoredProductsListSponsoredProductsTargetingClausesResponseContent> {
            return localVarFp.listSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsListSponsoredProductsTargetingClausesRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent} sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent 
         * @param {string} [prefer] The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer?: string, options?: any): AxiosPromise<SponsoredProductsUpdateSponsoredProductsTargetingClausesResponseContent> {
            return localVarFp.updateSponsoredProductsTargetingClauses(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, prefer, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredProductsTargetingClauses operation in TargetingClausesApi.
 * @export
 * @interface TargetingClausesApiCreateSponsoredProductsTargetingClausesRequest
 */
export interface TargetingClausesApiCreateSponsoredProductsTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof TargetingClausesApiCreateSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof TargetingClausesApiCreateSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent}
     * @memberof TargetingClausesApiCreateSponsoredProductsTargetingClauses
     */
    readonly sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof TargetingClausesApiCreateSponsoredProductsTargetingClauses
     */
    readonly prefer?: string
}

/**
 * Request parameters for deleteSponsoredProductsTargetingClauses operation in TargetingClausesApi.
 * @export
 * @interface TargetingClausesApiDeleteSponsoredProductsTargetingClausesRequest
 */
export interface TargetingClausesApiDeleteSponsoredProductsTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof TargetingClausesApiDeleteSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof TargetingClausesApiDeleteSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent}
     * @memberof TargetingClausesApiDeleteSponsoredProductsTargetingClauses
     */
    readonly sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent: SponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent
}

/**
 * Request parameters for listSponsoredProductsTargetingClauses operation in TargetingClausesApi.
 * @export
 * @interface TargetingClausesApiListSponsoredProductsTargetingClausesRequest
 */
export interface TargetingClausesApiListSponsoredProductsTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof TargetingClausesApiListSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof TargetingClausesApiListSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsListSponsoredProductsTargetingClausesRequestContent}
     * @memberof TargetingClausesApiListSponsoredProductsTargetingClauses
     */
    readonly sponsoredProductsListSponsoredProductsTargetingClausesRequestContent?: SponsoredProductsListSponsoredProductsTargetingClausesRequestContent
}

/**
 * Request parameters for updateSponsoredProductsTargetingClauses operation in TargetingClausesApi.
 * @export
 * @interface TargetingClausesApiUpdateSponsoredProductsTargetingClausesRequest
 */
export interface TargetingClausesApiUpdateSponsoredProductsTargetingClausesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof TargetingClausesApiUpdateSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof TargetingClausesApiUpdateSponsoredProductsTargetingClauses
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent}
     * @memberof TargetingClausesApiUpdateSponsoredProductsTargetingClauses
     */
    readonly sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent: SponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent

    /**
     * The \&quot;Prefer\&quot; header, as defined in [RFC7240], allows clients to request certain behavior from the service. The service ignores preference values that are either not supported or not known by the service. Either multiple Prefer headers are passed or single one with comma separated values, both forms are equivalent Supported preferences: return&#x3D;representation - return the full object when doing create/update/delete operations instead of ids. Please note that the extendedData field will be part of the full object for /list endpoints only.
     * @type {string}
     * @memberof TargetingClausesApiUpdateSponsoredProductsTargetingClauses
     */
    readonly prefer?: string
}

/**
 * TargetingClausesApi - object-oriented interface
 * @export
 * @class TargetingClausesApi
 * @extends {BaseAPI}
 */
export class TargetingClausesApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {TargetingClausesApiCreateSponsoredProductsTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TargetingClausesApi
     */
    public createSponsoredProductsTargetingClauses(requestParameters: TargetingClausesApiCreateSponsoredProductsTargetingClausesRequest, options?: any) {
        return TargetingClausesApiFp(this.configuration).createSponsoredProductsTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsCreateSponsoredProductsTargetingClausesRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {TargetingClausesApiDeleteSponsoredProductsTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TargetingClausesApi
     */
    public deleteSponsoredProductsTargetingClauses(requestParameters: TargetingClausesApiDeleteSponsoredProductsTargetingClausesRequest, options?: any) {
        return TargetingClausesApiFp(this.configuration).deleteSponsoredProductsTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsDeleteSponsoredProductsTargetingClausesRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {TargetingClausesApiListSponsoredProductsTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TargetingClausesApi
     */
    public listSponsoredProductsTargetingClauses(requestParameters: TargetingClausesApiListSponsoredProductsTargetingClausesRequest, options?: any) {
        return TargetingClausesApiFp(this.configuration).listSponsoredProductsTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsListSponsoredProductsTargetingClausesRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {TargetingClausesApiUpdateSponsoredProductsTargetingClausesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TargetingClausesApi
     */
    public updateSponsoredProductsTargetingClauses(requestParameters: TargetingClausesApiUpdateSponsoredProductsTargetingClausesRequest, options?: any) {
        return TargetingClausesApiFp(this.configuration).updateSponsoredProductsTargetingClauses(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sponsoredProductsUpdateSponsoredProductsTargetingClausesRequestContent, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ThemeBasedBidRecommendationApi - axios parameter creator
 * @export
 */
export const ThemeBasedBidRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary This API is currently available in US, UK, DE, CA, JP, IN, ES, and FR. The API supports keyword and auto targets only. The API will return a 422 response when an unsupported marketplace or target is provided. For product targets in all marketplaces, and keyword or auto targets in other marketplaces, call /v2/sp/targets/bidRecommendations.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest} [adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getThemeBasedBidRecommendationForAdGroupV1: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/bid/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spthemebasedbidrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ThemeBasedBidRecommendationApi - functional programming interface
 * @export
 */
export const ThemeBasedBidRecommendationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ThemeBasedBidRecommendationApiAxiosParamCreator(configuration)
    return {
        /**
         * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary This API is currently available in US, UK, DE, CA, JP, IN, ES, and FR. The API supports keyword and auto targets only. The API will return a 422 response when an unsupported marketplace or target is provided. For product targets in all marketplaces, and keyword or auto targets in other marketplaces, call /v2/sp/targets/bidRecommendations.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest} [adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ThemeBasedBidRecommendationResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ThemeBasedBidRecommendationApi - factory interface
 * @export
 */
export const ThemeBasedBidRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ThemeBasedBidRecommendationApiFp(configuration)
    return {
        /**
         * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary This API is currently available in US, UK, DE, CA, JP, IN, ES, and FR. The API supports keyword and auto targets only. The API will return a 422 response when an unsupported marketplace or target is provided. For product targets in all marketplaces, and keyword or auto targets in other marketplaces, call /v2/sp/targets/bidRecommendations.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest} [adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest, options?: any): AxiosPromise<ThemeBasedBidRecommendationResponse> {
            return localVarFp.getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getThemeBasedBidRecommendationForAdGroupV1 operation in ThemeBasedBidRecommendationApi.
 * @export
 * @interface ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request
 */
export interface ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest}
     * @memberof ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1
     */
    readonly adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest
}

/**
 * ThemeBasedBidRecommendationApi - object-oriented interface
 * @export
 * @class ThemeBasedBidRecommendationApi
 * @extends {BaseAPI}
 */
export class ThemeBasedBidRecommendationApi extends BaseAPI {
    /**
     * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary This API is currently available in US, UK, DE, CA, JP, IN, ES, and FR. The API supports keyword and auto targets only. The API will return a 422 response when an unsupported marketplace or target is provided. For product targets in all marketplaces, and keyword or auto targets in other marketplaces, call /v2/sp/targets/bidRecommendations.
     * @param {ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ThemeBasedBidRecommendationApi
     */
    public getThemeBasedBidRecommendationForAdGroupV1(requestParameters: ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request, options?: any) {
        return ThemeBasedBidRecommendationApiFp(this.configuration).getThemeBasedBidRecommendationForAdGroupV1(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


