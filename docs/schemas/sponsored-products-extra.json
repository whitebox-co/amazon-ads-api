{
  "info": {
    "description": "Sponsored Products Targeting API.",
    "title": "Sponsored Products",
    "version": "3.0"
  },
  "paths": {
    "/sp/campaigns/{campaignId}/budgetRules/budgetHistory": {
      "get": {
        "summary": "Gets the budget history for a campaign specified by identifier.",
        "description": "The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "getRuleBasedBudgetHistoryForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetHistory"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize",
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "startDate",
            "description": "The start date of the budget history in YYYYMMDD format.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "endDate",
            "description": "The end date of the budget history in YYYYMMDD format.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/rules/campaignOptimization/eligibility": {
      "post": {
        "summary": "Gets a campaign optimization rule recommendation for SP campaigns.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SPCampaignOptimizationRecommendationsAPIRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "GetOptimizationRuleEligibility",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPCampaignOptimizationRecommendationAPIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/targets/keywords/recommendations": {
      "post": {
        "summary": "Get ranked keywords recommendations",
        "description": "Get keyword recommendations ranked by user-provided metric\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "tags": [
          "Get ranked keywords recommendations"
        ],
        "requestBody": {
          "content": {
            "application/vnd.spkeywordsrecommendation.v3+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "KEYWORDS_FOR_ADGROUP": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest",
                    "KEYWORDS_FOR_ASINS": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            },
            "application/vnd.spkeywordsrecommendation.v4+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest"
                  },
                  {
                    "$ref": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "KEYWORDS_FOR_ADGROUP": "#/components/schemas/AdGroupKeywordTargetRankRecommendationRequest",
                    "KEYWORDS_FOR_ASINS": "#/components/schemas/AsinsKeywordTargetRankRecommendationRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "operationId": "getRankedKeywordRecommendation",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "description": "A list of ranked keyword targets",
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/KeywordTargetResponse"
                  }
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/RankedTargetResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.spkeywordsrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              },
              "application/vnd.spkeywordsrecommendation.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTargetingError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-MarketplaceId",
            "description": "The advertiser's Marketplace ID associated with the advertiser account."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "description": "The advertiser's ID associated with the advertiser account."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API."
          }
        ]
      }
    },
    "/sp/budgetRules": {
      "post": {
        "summary": "Creates one or more budget rules.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSPBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "CreateBudgetRulesForSPCampaigns",
        "responses": {
          "207": {
            "description": "Multi-status. An object containing a list of budget rule response objects reflecting the same order as the input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateBudgetRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      },
      "get": {
        "summary": "Get all budget rules created by an advertiser",
        "operationId": "GetSPBudgetRulesForAdvertiser",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSPBudgetRulesForAdvertiserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize",
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      },
      "put": {
        "summary": "Updates one or more budget rules.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSPBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "UpdateBudgetRulesForSPCampaigns",
        "responses": {
          "207": {
            "description": "Multi-status. An object containing a list of budget rule response objects reflecting the same order as the input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBudgetRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/targets/categories/recommendations": {
      "post": {
        "summary": "Returns a list of category recommendations for the input list of ASINs.",
        "requestBody": {
          "content": {
            "application/vnd.spproducttargeting.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/GetCategoryRecommendationsForAsinsRequest"
              }
            }
          }
        },
        "operationId": "getCategoryRecommendationsForASINs",
        "description": "Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRecommendations"
                }
              },
              "application/vnd.spproducttargetingresponse.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/CategoryRecommendationsWithAsinCounts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/v2/sp/productAds": {
      "get": {
        "operationId": "listProductAdsV2",
        "description": "Public api for listing sponsored products for productAds\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "$ref": "#/components/responses/v2SPListProductAdResponse"
          },
          "400": {
            "$ref": "#/components/responses/SPBadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/SPUnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/SPNotFoundError"
          },
          "429": {
            "$ref": "#/components/responses/SPTooManyRequestError"
          },
          "500": {
            "$ref": "#/components/responses/SPInternalServerError"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/SPClientHeader"
          },
          {
            "$ref": "#/components/parameters/SPProfileHeader"
          },
          {
            "$ref": "#/components/parameters/SPStartIndexQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCountQueryString"
          },
          {
            "$ref": "#/components/parameters/SPStateFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCampaignIdFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPAdGroupIdFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPAdIdFilterQueryString"
          }
        ],
        "tags": [
          "Product ads"
        ]
      }
    },
    "/sp/budgetRules/{budgetRuleId}": {
      "get": {
        "summary": "Gets a budget rule specified by identifier.",
        "operationId": "GetBudgetRuleByRuleIdForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSPBudgetRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "budgetRuleId",
            "description": "The budget rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/rules/campaignOptimization/{campaignOptimizationId}": {
      "get": {
        "summary": "Gets a campaign optimization rule specified by identifier.",
        "operationId": "GetCampaignOptimizationRule",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSPCampaignOptimizationRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "campaignOptimizationId",
            "description": "The sp campaign optimization rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      },
      "delete": {
        "summary": "Deletes a campaign optimization rule specified by identifier.",
        "operationId": "DeleteCampaignOptimizationRule",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteSPCampaignOptimizationRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "campaignOptimizationId",
            "description": "The sp campaign optimization rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/negativeTargets/brands/recommendations": {
      "get": {
        "summary": "Returns brands recommended for negative targeting.",
        "operationId": "getNegativeBrands",
        "description": "Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors' brands.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brands"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "403": {
            "description": "Access Denied - Request failed because the user is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessDeniedException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/campaigns/budgetRecommendations": {
      "post": {
        "summary": "Get recommended daily budget and estimated missed opportunities for campaigns.",
        "requestBody": {
          "content": {
            "application/vnd.budgetrecommendation.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/BudgetRecommendationRequest"
              }
            }
          },
          "required": true
        },
        "description": "Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign's chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign's historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "operationId": "getBudgetRecommendations",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRecommendationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - access to the requested resource is forbidden",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - the payload is in a format not supported by this method.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - Failed due to invalid parameters.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - request was rate-limited. Retry later.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server DBCError - something went wrong on the server. Retry later and report a DBCError if unresolved.",
            "content": {
              "application/vnd.budgetrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "Budget recommendations and missed opportunities"
        ]
      }
    },
    "/v2/sp/campaigns": {
      "get": {
        "operationId": "listCampaignsV2",
        "description": "Public api for listing sponsored products for campaigns\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "$ref": "#/components/responses/v2SPListCampaignsResponse"
          },
          "400": {
            "$ref": "#/components/responses/SPBadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/SPUnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/SPNotFoundError"
          },
          "429": {
            "$ref": "#/components/responses/SPTooManyRequestError"
          },
          "500": {
            "$ref": "#/components/responses/SPInternalServerError"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/SPClientHeader"
          },
          {
            "$ref": "#/components/parameters/SPProfileHeader"
          },
          {
            "$ref": "#/components/parameters/SPStartIndexQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCountQueryString"
          },
          {
            "$ref": "#/components/parameters/SPStateFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPNameQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCampaignIdFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPPortfolioIdFilterQueryString"
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    },
    "/sp/targets/products/count": {
      "post": {
        "summary": "Get number of targetable asins based on refinements provided by the user.",
        "requestBody": {
          "content": {
            "application/vnd.spproducttargeting.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/GetTargetableAsinCountsRequest"
              }
            }
          }
        },
        "operationId": "getTargetableASINCounts",
        "description": "Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableAsinCounts"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/v2/sp/adGroups": {
      "get": {
        "operationId": "listAdGroupsV2",
        "description": "Public api for listing sponsored products for ad groups\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "$ref": "#/components/responses/v2SPListAdGroupResponse"
          },
          "400": {
            "$ref": "#/components/responses/SPBadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/SPUnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/SPNotFoundError"
          },
          "429": {
            "$ref": "#/components/responses/SPTooManyRequestError"
          },
          "500": {
            "$ref": "#/components/responses/SPInternalServerError"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/SPClientHeader"
          },
          {
            "$ref": "#/components/parameters/SPProfileHeader"
          },
          {
            "$ref": "#/components/parameters/SPStartIndexQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCountQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCampaignTypeQueryString"
          },
          {
            "$ref": "#/components/parameters/SPStateFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPNameQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCampaignIdFilterQueryString"
          }
        ],
        "tags": [
          "Ad groups"
        ]
      }
    },
    "/sp/targets/categories": {
      "get": {
        "summary": "Returns all targetable categories.",
        "operationId": "getTargetableCategories",
        "description": "Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableCategories"
                }
              },
              "application/vnd.spproducttargetingresponse.v4+json": {
                "schema": {
                  "$ref": "#/components/schemas/TargetableCategories"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/budgetRules/{budgetRuleId}/campaigns": {
      "get": {
        "summary": "Gets all the campaigns associated with a budget rule",
        "operationId": "GetCampaignsAssociatedWithSPBudgetRule",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPGetAssociatedCampaignsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "budgetRuleId",
            "description": "The budget rule identifier.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results."
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "pageSize",
            "description": "Sets a limit on the number of results returned. Maximum limit of `pageSize` is 30.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/rules/campaignOptimization": {
      "post": {
        "summary": "Creates a campaign optimization rule.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSPCampaignOptimizationRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "CreateOptimizationRule",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateSPCampaignOptimizationRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      },
      "put": {
        "summary": "Updates a campaign optimization rule.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSPCampaignOptimizationRulesRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "UpdateOptimizationRule",
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateSPCampaignOptimizationRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/sp/campaigns/{campaignId}/budgetRules": {
      "post": {
        "summary": "Associates one or more budget rules to a campaign specified by identifer.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateAssociatedBudgetRulesRequest"
              }
            }
          },
          "required": true
        },
        "description": "A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "operationId": "CreateAssociatedBudgetRulesForSPCampaigns",
        "responses": {
          "207": {
            "description": "Multi-status. An object containing a list of associated budget rule response objects reflecting the same order as the input.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateAssociatedBudgetRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      },
      "get": {
        "summary": "Gets a list of budget rules associated to a campaign specified by identifier.",
        "operationId": "ListAssociatedBudgetRulesForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SPListAssociatedBudgetRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}": {
      "delete": {
        "summary": "Disassociates a budget rule specified by identifier from a campaign specified by identifier.",
        "operationId": "DisassociateAssociatedBudgetRuleForSPCampaigns",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DisassociateAssociatedBudgetRuleResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BudgetRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "format": "int64",
              "type": "number"
            },
            "in": "path",
            "name": "campaignId",
            "description": "The campaign identifier.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "budgetRuleId",
            "description": "The budget rule identifier.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRules"
        ]
      }
    },
    "/sp/campaigns/budgetRules/recommendations": {
      "post": {
        "summary": "Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.",
        "requestBody": {
          "content": {
            "application/vnd.spbudgetrulesrecommendation.v3+json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/SPBudgetRulesRecommendationEventRequest"
                  }
                ],
                "discriminator": {
                  "mapping": {
                    "EVENTS_FOR_EXISTING_CAMPAIGN": "#/components/schemas/SPBudgetRulesRecommendationEventRequest"
                  },
                  "propertyName": "recommendationType"
                }
              }
            }
          }
        },
        "operationId": "SPGetBudgetRulesRecommendation",
        "description": "A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationEventResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error. Something went wrong on the server.",
            "content": {
              "application/vnd.spbudgetrulesrecommendation.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPBudgetRulesRecommendationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
            "required": true
          }
        ],
        "tags": [
          "BudgetRulesRecommendation"
        ]
      }
    },
    "/sp/targets/products/recommendations": {
      "post": {
        "summary": "Suggested target ASINs for your advertised product",
        "requestBody": {
          "content": {
            "application/vnd.spproductrecommendation.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/GetProductRecommendationsRequest"
              }
            }
          }
        },
        "operationId": "getProductRecommendations",
        "description": "Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br>\n<h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired.\n</br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session.\n</br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme.\n</br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews.\n</br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i>\n",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproductrecommendationresponse.themes.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRecommendationsByTheme"
                }
              },
              "application/vnd.spproductrecommendationresponse.asins.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductRecommendationsByASIN"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-AdvertiserId",
            "description": "The Advertiser ID associated with the advertiser account."
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Product Recommendation Service"
        ]
      }
    },
    "/sp/negativeTargets/brands/search": {
      "post": {
        "summary": "Returns brands related to keyword input for negative targeting.",
        "requestBody": {
          "content": {
            "application/vnd.spproducttargeting.v3+json": {
              "schema": {
                "$ref": "#/components/schemas/SearchBrandsRequest"
              }
            }
          }
        },
        "operationId": "searchBrands",
        "description": "Returns brands related to keyword input for negative targeting.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Brands"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request - The input fails to satisfy the constraints of the API.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/targets/category/{categoryId}/refinements": {
      "get": {
        "summary": "Returns refinements according to category input.",
        "operationId": "getRefinementsForCategory",
        "description": "Returns refinements according to category input.\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "responses": {
          "200": {
            "description": "success",
            "content": {
              "application/vnd.spproducttargetingresponse.v3+json": {
                "schema": {
                  "$ref": "#/components/schemas/Refinements"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestException"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnauthorizedException"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity - Failed due to invalid parameters.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnprocessableEntityException"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ThrottlingException"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry\nlater and report an error if unresolved.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerException"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "categoryId",
            "description": "The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Prefer",
            "description": "Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.",
            "required": false
          }
        ],
        "tags": [
          "Product Targeting"
        ]
      }
    },
    "/sp/rules/campaignOptimization/state": {
      "post": {
        "summary": "Gets campaign optimization rule state. Recommended refresh frequency is once a day.",
        "requestBody": {
          "content": {
            "application/vnd.optimizationrules.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/SPCampaignOptimizationNotificationAPIRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "GetRuleNotification",
        "responses": {
          "200": {
            "description": "Successful Operation.",
            "content": {
              "application/vnd.optimizationrules.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SPCampaignOptimizationNotificationAPIResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized. The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden. The request failed because user does not have access to a specified resource.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable entity. The server understood the request, but was unable to process the instruction.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests. The request was rate-limited. Retry later.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CampaignOptimizationRuleError"
                }
              }
            }
          }
        },
        "description": "\n\n**Requires one of these permissions**:\n[\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Campaign Optimization Rules"
        ]
      }
    },
    "/v2/sp/campaigns/extended": {
      "get": {
        "operationId": "listCampaignsExV2",
        "description": "Public api for listing sponsored products for campaigns",
        "responses": {
          "200": {
            "$ref": "#/components/responses/v2SPListCampaignsExtendedResponse"
          },
          "400": {
            "$ref": "#/components/responses/SPBadRequestError"
          },
          "401": {
            "$ref": "#/components/responses/SPUnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/SPNotFoundError"
          },
          "429": {
            "$ref": "#/components/responses/SPTooManyRequestError"
          },
          "500": {
            "$ref": "#/components/responses/SPInternalServerError"
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/SPClientHeader"
          },
          {
            "$ref": "#/components/parameters/SPProfileHeader"
          },
          {
            "$ref": "#/components/parameters/SPStartIndexQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCountQueryString"
          },
          {
            "$ref": "#/components/parameters/SPStateFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPNameQueryString"
          },
          {
            "$ref": "#/components/parameters/SPCampaignIdFilterQueryString"
          },
          {
            "$ref": "#/components/parameters/SPPortfolioIdFilterQueryString"
          }
        ],
        "tags": [
          "Campaigns"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "CategoryRecommendationsWithAsinCounts": {
        "description": "Response object for the GetCategoryRecommendationsForAsins API.",
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of category recommendations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItemWithAsinCounts"
            }
          }
        }
      },
      "SPKeywordsListResponseObject": {
        "properties": {
          "keywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPKeyword"
            }
          },
          "nextToken": {
            "$ref": "#/components/schemas/SPNextToken"
          }
        }
      },
      "UpdateSPCampaignOptimizationRuleResponse": {
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "SPTargetsListResponseObject": {
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/SPNextToken"
          },
          "targets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPTargetingClause"
            }
          }
        }
      },
      "SPTargetingExpressionPredicate": {
        "properties": {
          "type": {
            "description": "The targeting type. These are the supported values: 'queryBroadMatches', 'queryPhraseMatches', 'queryExactMatches', 'asinCategorySameAs', 'asinBrandSameAs', 'asinPriceLessThan', 'asinPriceBetween', 'asinPriceGreaterThan', 'asinReviewRatingLessThan', 'asinReviewRatingBetween', 'asinReviewRatingGreaterThan', 'asinSameAs', 'queryBroadRelMatches', 'queryHighRelMatches', 'asinSubstituteRelated', 'asinAccessoryRelated', 'asinAgeRangeSameAs', 'asinGenreSameAs, 'asinIsPrimeShippingEligible'.",
            "type": "string"
          },
          "value": {
            "description": "The expression value",
            "type": "string"
          }
        }
      },
      "CreateBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRuleResponse"
            }
          }
        }
      },
      "RuleRecommendationMetrics": {
        "description": "Performance Metrics supported by the rule recommendation",
        "type": "object",
        "properties": {
          "roas": {
            "format": "double",
            "description": "return on ad spend value",
            "type": "number"
          },
          "averageBid": {
            "format": "double",
            "description": "average bid",
            "type": "number"
          }
        }
      },
      "CampaignOptimizationRuleError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SPNegativeKeyword": {
        "properties": {
          "keywordId": {
            "description": "The identifier of the negative keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the negative keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "description": "The type of match, 'negativeExact' or 'negativePhrase'.",
            "type": "string"
          },
          "state": {
            "description": "The current resource state, 'enabled', 'archived', 'paused'.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which the negative keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The text of the expression to match against a search query.",
            "type": "string"
          }
        }
      },
      "GetSPBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "AsinsKeywordTargetRankRecommendationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTargetRankRecommendationRequest"
          }
        ],
        "description": "request object to get rank recommendations for keywordTarget by Asin list",
        "required": [
          "recommendationType",
          "asins"
        ],
        "properties": {
          "asins": {
            "maxItems": 50,
            "description": "An array list of Asins",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "recommendationType": {
            "description": "The recommendation type to get recommendations for Asin list",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ASINS"
            ]
          }
        }
      },
      "ThemeRecommendation": {
        "description": "Recommended asins grouped by theme attribute.",
        "type": "object",
        "properties": {
          "description": {
            "description": "A theme name representing the context around the recommended list of ASINs.",
            "type": "string",
            "example": "These target ASINs generated sales for the input ASIN in the past 30 days."
          },
          "recommendedAsins": {
            "description": "List of recommended ASINs under current theme.",
            "type": "array",
            "items": {
              "minLength": 10,
              "type": "string",
              "maxLength": 10,
              "example": "BX20002121"
            }
          },
          "theme": {
            "description": "A theme name representing the context around the recommended list of ASINs.",
            "type": "string",
            "example": "Top Converting targets"
          }
        }
      },
      "RuleConditionList": {
        "maxItems": 3,
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/RuleCondition"
        }
      },
      "GetTargetableAsinCountsRequest": {
        "type": "object",
        "required": [
          "category"
        ],
        "properties": {
          "ageRanges": {
            "$ref": "#/components/schemas/AgeRanges"
          },
          "brands": {
            "$ref": "#/components/schemas/Brands"
          },
          "genres": {
            "$ref": "#/components/schemas/Genres"
          },
          "isPrimeShipping": {
            "description": "Indicates if products have prime shipping",
            "type": "boolean"
          },
          "ratingRange": {
            "$ref": "#/components/schemas/RatingRange"
          },
          "category": {
            "description": "The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.",
            "type": "string"
          },
          "priceRange": {
            "$ref": "#/components/schemas/PriceRange"
          }
        }
      },
      "SBRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date.",
        "type": "string",
        "enum": [
          "SCHEDULE"
        ]
      },
      "UpdateSPCampaignOptimizationRulesRequest": {
        "description": "Request object for updating campaign optimization rule",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "ruleAction": {
            "$ref": "#/components/schemas/RuleAction"
          },
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "ruleCondition": {
            "$ref": "#/components/schemas/RuleConditionList"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "ruleName": {
            "$ref": "#/components/schemas/RuleName"
          },
          "campaignIds": {
            "maxItems": 20,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        },
        "required": [
          "campaignOptimizationId"
        ],
        "example": {
          "recurrence": "DAILY",
          "ruleAction": "ADOPT",
          "campaignOptimizationId": "10001",
          "ruleCondition": [
            {
              "metricName": "ROAS",
              "comparisonOperator": "GREATER_THAN",
              "threshold": "7"
            },
            {
              "metricName": "AVERAGE_BID",
              "comparisonOperator": "LESS_THAN",
              "threshold": "15"
            }
          ],
          "ruleType": "BID",
          "ruleName": "RuleROAS4",
          "campaignIds": [
            "123784",
            "1223785"
          ]
        }
      },
      "SDBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SDBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "SPCampaignOptimizationNotificationAPIRequest": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "maxItems": 100,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        }
      },
      "state": {
        "description": "The budget rule state.",
        "type": "string",
        "enum": [
          "ACTIVE",
          "PAUSED"
        ]
      },
      "SPKeywordText": {
        "properties": {
          "keywordText": {
            "description": "Restricts results to keywords that match the specified text exactly.",
            "type": "string"
          }
        }
      },
      "SBGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "EventTypeRuleDuration": {
        "description": "Object representing event type rule duration.",
        "type": "object",
        "required": [
          "eventId"
        ],
        "properties": {
          "eventId": {
            "description": "The event identifier. This value is available from the budget rules recommendation API.",
            "type": "string"
          },
          "endDate": {
            "description": "The event end date in YYYYMMDD format. Read-only.",
            "type": "string"
          },
          "eventName": {
            "description": "The event name. Read-only.",
            "type": "string"
          },
          "startDate": {
            "description": "The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.",
            "type": "string"
          }
        }
      },
      "BudgetRecommendationError": {
        "type": "object",
        "required": [
          "Error",
          "campaignId",
          "index"
        ],
        "properties": {
          "campaignId": {
            "description": "encrypted campaignId",
            "type": "string"
          },
          "index": {
            "description": "Correlate the recommendation to the campaign index in the request. Zero-based",
            "type": "integer"
          },
          "Error": {
            "$ref": "#/components/schemas/SPTORBudgetRecommendationError"
          }
        }
      },
      "CreateSDBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRuleDetails"
            }
          }
        }
      },
      "SPExpressionType": {
        "description": "The type of expression, 'auto', 'manual'.",
        "type": "string"
      },
      "RecurrenceType": {
        "description": "The frequency of the rule application.",
        "type": "string",
        "enum": [
          "DAILY"
        ]
      },
      "KeywordBidInfo": {
        "type": "object",
        "properties": {
          "suggestedBid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BidSuggestion"
              }
            ]
          },
          "matchType": {
            "description": "Keyword match type. The default value will be BROAD.",
            "type": "string",
            "enum": [
              "BROAD",
              "EXACT",
              "PHRASE"
            ]
          },
          "rank": {
            "description": "The keyword target rank",
            "type": "number"
          },
          "bid": {
            "format": "Double",
            "description": "The bid value for the keyword. The default value will be the suggested bid.",
            "type": "number"
          }
        }
      },
      "SPRuleBasedBudget": {
        "type": "object",
        "properties": {
          "executionTime": {
            "format": "int64",
            "description": "Epoch time of budget rule execution.",
            "type": "number"
          },
          "appliedRule": {
            "$ref": "#/components/schemas/SPBudgetRule"
          },
          "ruleBasedBudgetValue": {
            "description": "The budget value.",
            "type": "number"
          },
          "dailyBudgetValue": {
            "description": "The daily budget value.",
            "type": "number"
          },
          "performanceMetric": {
            "$ref": "#/components/schemas/PerformanceMetricValue"
          }
        }
      },
      "RuleNotificationError": {
        "type": "object",
        "properties": {
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "Error": {
            "$ref": "#/components/schemas/CampaignOptimizationRuleError"
          }
        }
      },
      "RuleType": {
        "description": "The type of the campaign optimization rule. Only Support BID as of now",
        "type": "string",
        "enum": [
          "BID",
          "KEYWORD",
          "PRODUCT"
        ]
      },
      "SBBudgetHistory": {
        "type": "object",
        "properties": {
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBRuleBasedBudget"
            }
          }
        }
      },
      "RecommendationOptions": {
        "properties": {
          "maxRecommendations": {
            "default": 200,
            "maximum": 200,
            "description": "The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.",
            "type": "number",
            "minimum": 0
          },
          "sortDimension": {
            "description": "The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.",
            "type": "string",
            "enum": [
              "CLICKS",
              "CONVERSIONS",
              "DEFAULT"
            ]
          },
          "locale": {
            "description": "Translations are for readability and do not affect the targeting of ads. zh_CN is supported in US, UK, CA. en_GB is supported in DE, FR, IT, ES. Note: Translations will be null if locale is unsupported",
            "type": "string",
            "enum": [
              "zh_CN",
              "en_GB"
            ]
          }
        }
      },
      "SPBudgetRulesRecommendationEventRequest": {
        "type": "object",
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          }
        },
        "required": [
          "campaignId"
        ]
      },
      "BudgetRuleResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          },
          "ruleId": {
            "description": "The rule identifier.",
            "type": "string"
          },
          "associatedCampaignIds": {
            "type": "array",
            "items": {
              "description": "The campaign identifier for which rule based budget may get updated",
              "type": "string"
            }
          }
        }
      },
      "SPNegativeKeywordsListResponseObject": {
        "properties": {
          "negativeKeywords": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPNegativeKeyword"
            }
          },
          "nextToken": {
            "$ref": "#/components/schemas/SPNextToken"
          }
        }
      },
      "Refinements": {
        "description": "Response object for the GetRefinementsForCategory API, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.",
        "type": "object",
        "properties": {
          "ageRanges": {
            "$ref": "#/components/schemas/AgeRanges"
          },
          "brands": {
            "$ref": "#/components/schemas/Brands"
          },
          "genres": {
            "$ref": "#/components/schemas/Genres"
          }
        }
      },
      "ThrottlingException": {
        "description": "Returns information about a ThrottlingException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "CreateSPBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRuleDetails"
            }
          }
        }
      },
      "PerformanceMeasureCondition": {
        "type": "object",
        "required": [
          "comparisonOperator",
          "metricName",
          "threshold"
        ],
        "properties": {
          "metricName": {
            "$ref": "#/components/schemas/PerformanceMetric"
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "threshold": {
            "format": "double",
            "description": "The performance threshold value.",
            "type": "number"
          }
        }
      },
      "GetSDBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SDBudgetRule"
          }
        }
      },
      "SPBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for SP campaign",
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SPRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "ProductRecommendation": {
        "description": "Recommended asin and related information.",
        "type": "object",
        "properties": {
          "themes": {
            "description": "List of themes associated with this recommended ASIN.",
            "type": "array",
            "items": {
              "type": "string",
              "example": "Top Converting ASINs"
            }
          },
          "recommendedAsin": {
            "minLength": 10,
            "description": "Recommended ASIN",
            "type": "string",
            "maxLength": 10,
            "example": "BX20002121"
          }
        }
      },
      "KeywordTargetRankRecommendationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/RecommendationOptions"
          }
        ],
        "properties": {
          "targets": {
            "description": "User defined keyword targets list.",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KeywordTarget"
                }
              ]
            },
            "maxLength": 100
          }
        }
      },
      "SPCampaignOptimizationNotificationAPIResponse": {
        "type": "object",
        "properties": {
          "CampaignOptimizationRecommendationsError": {
            "maxItems": 100,
            "description": "List of errors that occured when generating campaign optimization notifications.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleNotificationError"
            }
          },
          "CampaignOptimizationNotifications": {
            "maxItems": 100,
            "description": "List of successful campaign optimization notifications for campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleNotification"
            }
          }
        }
      },
      "TargetableAsinCounts": {
        "description": "Response object to get number of targetable asins for refinements provided by the user",
        "type": "object",
        "properties": {
          "asinCounts": {
            "$ref": "#/components/schemas/IntegerRange"
          }
        }
      },
      "AgeRange": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Age Range. This field is OPTIONAL if the Age Range object is being used as an input.",
            "type": "string"
          },
          "id": {
            "description": "Id of Age Range. This field is REQUIRED if the Age Range object is being used as an input. Use the GetRefinementsForCategory to retrieve Age Range Node IDs.",
            "type": "string"
          }
        }
      },
      "RuleAction": {
        "description": "The action taken when the campaign optimization rule is enabled. Defaults to adopt",
        "type": "string",
        "enum": [
          "ADOPT"
        ]
      },
      "SevenDaysMissedOpportunities": {
        "type": "object",
        "properties": {
          "estimatedMissedSalesLower": {
            "description": "Lower bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.",
            "type": "number"
          },
          "estimatedMissedSalesUpper": {
            "description": "Upper bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.",
            "type": "number"
          },
          "endDate": {
            "description": "End date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time",
            "type": "string"
          },
          "estimatedMissedImpressionsLower": {
            "description": "Lower bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "estimatedMissedClicksLower": {
            "description": "Lower bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "estimatedMissedClicksUpper": {
            "description": "Upper bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "estimatedMissedImpressionsUpper": {
            "description": "Upper bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.",
            "type": "integer"
          },
          "startDate": {
            "description": "Starting date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time",
            "type": "string"
          },
          "percentTimeInBudget": {
            "description": "percentage of time the campaign is active with a budget. Provided as a decimal ranging from 0 to 1 (e.g. 0.76 means the campaign was in budget for 76% of the time between the startDate and endDate period)",
            "type": "number"
          }
        }
      },
      "v2SPCampaign": {
        "properties": {
          "campaignType": {
            "description": "The advertising product managed by this campaign.",
            "type": "string"
          },
          "portfolioId": {
            "description": "The identifier of an existing portfolio to which the campaign is associated.",
            "type": "string"
          },
          "bidding": {
            "$ref": "#/components/schemas/v2SPCampaignBidding"
          },
          "endDate": {
            "description": "The ending date of the campaign. The format of the date is YYYYMMDD",
            "type": "string"
          },
          "dailyBudget": {
            "description": "The daily budget of the campaign.",
            "type": "number"
          },
          "campaignId": {
            "description": "The identifier of the campaign.",
            "type": "string"
          },
          "targetingType": {
            "description": "The type of targeting of the campaign.",
            "type": "string"
          },
          "state": {
            "description": "The current resource state.",
            "type": "string",
            "enum": [
              "enabled",
              "paused",
              "archived"
            ]
          },
          "premiumBidAdjustment": {
            "description": "If set to true, Amazon increases the default bid for ads that are eligible to appear in this placement.",
            "type": "boolean"
          },
          "startDate": {
            "description": "The starting date of the campaign. The format of the date is YYYYMMDD",
            "type": "string"
          },
          "tags": {
            "description": "A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.",
            "type": "object"
          }
        }
      },
      "AdGroupKeywordTargetRankRecommendationRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTargetRankRecommendationRequest"
          }
        ],
        "description": "request object to get rank recommendations for keywordTarget by adGroup",
        "required": [
          "recommendationType",
          "adGroupId",
          "campaignId"
        ],
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign",
            "type": "string"
          },
          "recommendationType": {
            "description": "The recommendation type to get recommendations by adGroup",
            "type": "string",
            "enum": [
              "KEYWORDS_FOR_ADGROUP"
            ]
          },
          "adGroupId": {
            "description": "The identifier of the ad group",
            "type": "string"
          }
        }
      },
      "Profile": {
        "properties": {
          "accountInfo": {
            "$ref": "#/components/schemas/ProfileAccountInfo"
          },
          "dailyBudget": {
            "description": "Note that this field applies to Sponsored Product campaigns for seller type accounts only. Not supported for vendor type accounts.",
            "readOnly": false,
            "type": "number"
          },
          "profileId": {
            "format": "int64",
            "type": "integer"
          },
          "countryCode": {
            "$ref": "#/components/schemas/ProfileCountryCode"
          },
          "timezone": {
            "description": "The time zone used for all date-based campaign management and reporting.\n|Region|`countryCode`|Country Name|`timezone`|\n|------|-----|-----|------|\n|NA|US|United States|America/Los_Angeles|\n|NA|CA|Canada|America/Los_Angeles|\n|EU|UK|United Kingdom|Europe/London|\n|EU|DE|Germany|Europe/Paris|\n|EU|FR|France|Europe/Paris|\n|EU|ES|Spain|Europe/Paris|\n|EU|IT|Italy|Europe/Paris|\n|FE|JP|Japan|Asia/Tokyo|\n|FE|AU|Australia|Australia/Sydney|\n|EU|AE|United Arab Emirates|Asia/Dubai|",
            "readOnly": true,
            "type": "string",
            "enum": [
              "America/Los_Angeles",
              "Europe/London",
              "Europe/Paris",
              "Asia/Tokyo",
              "Australia/Sydney",
              "Asia/Dubai"
            ]
          },
          "currencyCode": {
            "description": "The currency used for all monetary values for entities under this profile.\n|Region|`countryCode`|Country Name|`currencyCode`|\n|-----|------|------|------|\n|NA|US|United States|USD|\n|NA|CA|Canada|CAD|\n|EU|UK|United Kingdom|GBP|\n|EU|DE|Germany|EUR|\n|EU|FR|France|EUR|\n|EU|ES|Spain|EUR|\n|EU|IT|Italy|EUR|\n|FE|JP|Japan|JPY|\n|FE|AU|Australia|AUD|\n|EU|AE|United Arab Emirates|AED|",
            "readOnly": true,
            "type": "string",
            "enum": [
              "USD",
              "CAD",
              "GBP",
              "JPY",
              "EUR",
              "AUD",
              "AED"
            ]
          }
        }
      },
      "PriceRange": {
        "description": "A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.",
        "type": "object",
        "properties": {
          "min": {
            "format": "double",
            "type": "number"
          },
          "max": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "BudgetRuleRecommendation": {
        "type": "object",
        "properties": {
          "suggestedBudgetIncreasePercent": {
            "description": "suggested increase percent",
            "type": "number"
          },
          "ruleName": {
            "description": "rule name for the recomemendation",
            "type": "string"
          },
          "ruleId": {
            "description": "rule id for the recomemendation",
            "type": "string"
          }
        }
      },
      "GetSPBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SPBudgetRule"
          }
        }
      },
      "RatingRange": {
        "description": "Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.",
        "type": "object",
        "properties": {
          "min": {
            "format": "int32",
            "type": "integer"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "ProductRecommendationsByASIN": {
        "description": "Product recommendations supplemented with relevant information.",
        "type": "object",
        "properties": {
          "nextCursor": {
            "description": "An identifier to fetch next set of `ProductRecommendation` records in the result set if available. This will be null when at the end of result set.",
            "type": "string",
            "example": "MTAxNTExOTQ1MjAwNzI5NDE="
          },
          "previousCursor": {
            "description": "Optional parameter that links to the previous result set served. This parameter will be null on the first request.",
            "type": "string",
            "example": "TQ1MjAwNzI5NDE="
          },
          "recommendations": {
            "description": "An array of `ProductRecommendation` objects.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductRecommendation"
            }
          }
        }
      },
      "RuleDuration": {
        "type": "object",
        "properties": {
          "eventTypeRuleDuration": {
            "$ref": "#/components/schemas/EventTypeRuleDuration"
          },
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          }
        }
      },
      "budgetIncreaseBy": {
        "type": "object",
        "required": [
          "type",
          "value"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/BudgetChangeType"
          },
          "value": {
            "format": "double",
            "description": "The budget value.",
            "type": "number"
          }
        }
      },
      "UnauthorizedException": {
        "description": "Returns information about an UnauthorizedException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SPRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "KeywordRankedTargetsResponse": {
        "type": "object",
        "properties": {
          "targets": {
            "description": "A list of ranked keyword targets",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeywordTargetResponse"
            }
          }
        }
      },
      "SPExpressionFilter": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/SPTargetingExpressionPredicate"
        }
      },
      "CreateAssociatedBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRuleIds": {
            "maxItems": 25,
            "description": "A list of budget rule identifiers.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetCategoryRecommendationsForAsinsRequest": {
        "description": "Request object to retrieve Category Recommendations based on the input ASINs.",
        "type": "object",
        "properties": {
          "asins": {
            "maxItems": 10000,
            "description": "List of input ASINs. This API does not check if the ASINs are valid ASINs.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "includeAncestor": {
            "description": "Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.",
            "type": "boolean"
          }
        }
      },
      "IntegerRange": {
        "type": "object",
        "properties": {
          "min": {
            "format": "int32",
            "type": "integer"
          },
          "max": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "SPNegativeTargetingClause": {
        "properties": {
          "expression": {
            "description": "The negative targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The negative target identifier.",
            "type": "string"
          },
          "resolvedExpression": {
            "description": "The resolved targeting expression, translating the ids in the expression into their string values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this negative target is associated.",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SPExpressionType"
          },
          "state": {
            "description": "The current resource state, 'enabled', 'archived', 'paused'.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this negative target is associated.",
            "type": "string"
          }
        }
      },
      "InternalServerException": {
        "description": "Returns information about an InternalServerException",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "v2SPProductAd": {
        "properties": {
          "adId": {
            "description": "The product ad identifier.",
            "type": "string"
          },
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "asin": {
            "description": "The ASIN associated with the product. Defined for vendors only.",
            "type": "string"
          },
          "state": {
            "description": "The current resource state.",
            "type": "string",
            "enum": [
              "enabled",
              "paused",
              "archived"
            ]
          },
          "sku": {
            "description": "The SKU associated with the product. Defined for seller accounts only.",
            "type": "string"
          },
          "adGroupId": {
            "description": "The ad group identifier.",
            "type": "string"
          }
        }
      },
      "SPMaxResults": {
        "description": "Sets a limit on the number of results returned by an operation.",
        "maximum": 300,
        "type": "integer",
        "minimum": 1
      },
      "BudgetRecommendationRequest": {
        "type": "object",
        "required": [
          "campaignIds"
        ],
        "properties": {
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "List of campaigns.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "TargetableCategories": {
        "description": "Response object containing all targetable categories for the advertiser's marketplace. ID is the category ID. NA is the name. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.",
        "type": "object",
        "properties": {
          "categoryTree": {
            "type": "string"
          }
        },
        "example": "[{\"id\":2748212011,\"na\":\"Art Paper\",\"ch\":[{\"id\":8090742011,\"na\":\"Palette Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":11,\"max\":19}},{\"id\":8090734011,\"na\":\"Sketchbooks & Notebooks\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":3,\"max\":5}}],\"ta\":true,\"asinCountRange\":{\"min\":57,\"max\":84}},{\"id\":12898291,\"na\":\"Tracing Paper\",\"ch\":[],\"ta\":true, \"asinCountRange\":{\"min\":24,\"max\":40}}]"
      },
      "RuleConditionMetric": {
        "description": "The advertising performance metric. ROAS is calculated across 21 days and average_bid across 7 days",
        "type": "string",
        "enum": [
          "ROAS",
          "AVERAGE_BID"
        ]
      },
      "KeywordTargetResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/KeywordTarget"
          }
        ],
        "properties": {
          "suggestedBid": {
            "allOf": [
              {
                "$ref": "#/components/schemas/BidSuggestion"
              }
            ]
          },
          "translation": {
            "description": "The translation of keyword if a locale is passed in",
            "type": "string"
          },
          "rank": {
            "description": "The keyword target rank",
            "type": "number"
          }
        }
      },
      "GetSDBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "CreateSPCampaignOptimizationRulesRequest": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "ruleAction": {
            "$ref": "#/components/schemas/RuleAction"
          },
          "ruleCondition": {
            "$ref": "#/components/schemas/RuleConditionList"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "ruleName": {
            "$ref": "#/components/schemas/RuleName"
          },
          "campaignIds": {
            "maxItems": 20,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        },
        "required": [
          "ruleName",
          "ruleType",
          "recurrence",
          "ruleCondition"
        ],
        "example": {
          "recurrence": "DAILY",
          "ruleAction": "ADOPT",
          "ruleCondition": [
            {
              "metricName": "ROAS",
              "comparisonOperator": "GREATER_THAN",
              "threshold": "4"
            },
            {
              "metricName": "AVERAGE_BID",
              "comparisonOperator": "LESS_THAN",
              "threshold": "10"
            }
          ],
          "ruleType": "BID",
          "ruleName": "RuleROAS4",
          "campaignIds": [
            "123784",
            "1223785"
          ]
        }
      },
      "campaignOptimizationId": {
        "description": "The persistent rule identifier.",
        "type": "string",
        "maxLength": 355
      },
      "ProfileAccountInfo": {
        "properties": {
          "name": {
            "description": "Account Name. Not currently populated for sellers.",
            "readOnly": true,
            "type": "string"
          },
          "subType": {
            "description": "The account subtype.",
            "readOnly": true,
            "type": "string",
            "enum": [
              "KDP_AUTHOR",
              "AMAZON_ATTRIBUTION"
            ]
          },
          "id": {
            "description": "Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.",
            "readOnly": true,
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/ProfileAccountType"
          },
          "marketplaceStringId": {
            "description": "The identifier of the marketplace to which the account is associated.",
            "readOnly": true,
            "type": "string"
          },
          "validPaymentMethod": {
            "description": "Only present for Vendors, this returns whether the Advertiser has set up a valid payment method or not.",
            "readOnly": true,
            "type": "boolean"
          }
        }
      },
      "RuleRecommendationError": {
        "type": "object",
        "properties": {
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "Error": {
            "$ref": "#/components/schemas/CampaignOptimizationRuleError"
          }
        }
      },
      "BudgetRecommendationResponse": {
        "type": "object",
        "required": [
          "budgetRecommendationsErrorResults",
          "budgetRecommendationsSuccessResults"
        ],
        "properties": {
          "budgetRecommendationsSuccessResults": {
            "description": "List of successful budget recomendation for campagins.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRecommendation"
            }
          },
          "budgetRecommendationsErrorResults": {
            "description": "List of errors that occured when generating bduget recommendation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRecommendationError"
            }
          }
        },
        "example": {
          "budgetRecommendationsSuccessResults": [
            {
              "campaignId": "A3REPY26ZX1BSY",
              "suggestedBudget": 3,
              "index": 1,
              "sevenDaysMissedOpportunities": {
                "estimatedMissedSalesLower": 105.5,
                "estimatedMissedSalesUpper": 130.5,
                "endDate": "20200807",
                "estimatedMissedImpressionsLower": 1,
                "estimatedMissedClicksLower": 3,
                "estimatedMissedClicksUpper": 7,
                "estimatedMissedImpressionsUpper": 5,
                "startDate": "20200801",
                "percentTimeInBudget": 80
              }
            },
            {
              "campaignId": "A7X89CAWZZAX89",
              "suggestedBudget": "-1",
              "index": 3,
              "sevenDaysMissedOpportunities": {
                "estimatedMissedSalesLower": 78.5,
                "estimatedMissedSalesUpper": 98.5,
                "endDate": "20200807",
                "estimatedMissedImpressionsLower": 3,
                "estimatedMissedClicksLower": 1,
                "estimatedMissedClicksUpper": 3,
                "estimatedMissedImpressionsUpper": 8,
                "startDate": "20200801",
                "percentTimeInBudget": 65.2
              },
              "budgetRuleRecommendation": {
                "suggestedBudgetIncreasePercent": 5,
                "ruleName": "sample rule",
                "ruleId": "123"
              }
            }
          ],
          "budgetRecommendationsErrorResults": [
            {
              "campaignId": "A1N2ZCAWZZAX89",
              "index": 2,
              "Error": {
                "code": "400",
                "details": "Bad Request."
              }
            }
          ]
        }
      },
      "SBListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBCampaignBudgetRule"
            }
          }
        }
      },
      "ListBrandsResponseObject": {
        "properties": {
          "brands": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ExternalBrand"
            }
          },
          "merchantId": {
            "type": "string"
          },
          "merchantType": {
            "type": "string"
          }
        }
      },
      "Genre": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of Genre. This field is OPTIONAL if the Genre object is being used as an input.",
            "type": "string"
          },
          "id": {
            "description": "Id of Genre. This field is REQUIRED if the Genre object is being used as an input. Use the GetRefinementsForCategory to retrieve Genre Node IDs.",
            "type": "string"
          }
        }
      },
      "CategoryItem": {
        "type": "object",
        "properties": {
          "parent": {
            "description": "The category id of the parent node",
            "type": "string"
          },
          "path": {
            "description": "The path of the category, which contains the current category and all parent categories",
            "type": "string"
          },
          "canBeTargeted": {
            "description": "A flag which indicates if the current node may be targeted",
            "type": "boolean"
          },
          "name": {
            "description": "The name of the category",
            "type": "string"
          },
          "id": {
            "description": "The category id of the current node",
            "type": "string"
          }
        }
      },
      "SBCampaignBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SBBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status. Read-only.",
            "type": "string"
          }
        }
      },
      "CategoryItemWithAsinCounts": {
        "type": "object",
        "properties": {
          "categoryPath": {
            "description": "The path of the category, which contains the current category and all parent categories",
            "type": "string"
          },
          "name": {
            "description": "The name of the category",
            "type": "string"
          },
          "asinCounts": {
            "description": "An integer range between min and max",
            "$ref": "#/components/schemas/IntegerRange"
          },
          "parentCategoryId": {
            "description": "The category id of the parent node",
            "type": "string"
          },
          "id": {
            "description": "The category id of the current node",
            "type": "string"
          }
        }
      },
      "Recurrence": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "daysOfWeek": {
            "description": "Object representing days of the week for weekly type rule. It is not required for daily recurrence type",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DayOfWeek"
            }
          }
        }
      },
      "SPError": {
        "properties": {
          "code": {
            "description": "An enumerated error for machine use.",
            "readOnly": true,
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "AccessDeniedException": {
        "description": "Returns information about an AccessDeniedException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "SPTORBudgetRecommendationError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "example": {
          "code": "200",
          "details": "success"
        }
      },
      "v2SPAdGroup": {
        "properties": {
          "campaignId": {
            "description": "The identifier of the campaign that the ad group is associated with.",
            "type": "string"
          },
          "name": {
            "description": "The name of the ad group.",
            "type": "string"
          },
          "state": {
            "description": "The current resource state.",
            "type": "string",
            "enum": [
              "enabled",
              "paused",
              "archived"
            ]
          },
          "adGroupId": {
            "description": "The identifier of the ad group.",
            "type": "string"
          },
          "defaultBid": {
            "description": "The bid value used when no bid is specified for keywords in the ad group.",
            "type": "number"
          }
        }
      },
      "SPBudgetRulesRecommendationError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "DateRangeTypeRuleDuration": {
        "description": "Object representing date range type rule duration.",
        "type": "object",
        "required": [
          "startDate"
        ],
        "properties": {
          "endDate": {
            "description": "The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.",
            "type": "string"
          },
          "startDate": {
            "description": "The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.",
            "type": "string"
          }
        }
      },
      "SPTargetingClause": {
        "properties": {
          "expression": {
            "description": "The targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPTargetingExpressionPredicate"
            }
          },
          "targetId": {
            "description": "The target identifier.",
            "type": "string"
          },
          "resolvedExpression": {
            "description": "The resolved targeting expression, translating the ids in the expression into their string values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPTargetingExpressionPredicate"
            }
          },
          "campaignId": {
            "description": "The identifier of the campaign to which this target is associated.",
            "type": "string"
          },
          "expressionType": {
            "$ref": "#/components/schemas/SPExpressionType"
          },
          "state": {
            "description": "The current resource state, 'enabled', 'archived', 'paused'.",
            "type": "string"
          },
          "bid": {
            "$ref": "#/components/schemas/SPBid"
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this target is associated.",
            "type": "string"
          }
        }
      },
      "SDGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SPNextToken": {
        "minLength": 1,
        "description": "Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.",
        "type": "string",
        "maxLength": 2048
      },
      "ExternalBrand": {
        "properties": {
          "brandEntityId": {
            "type": "string"
          },
          "catalogType": {
            "type": "string"
          },
          "brandRegistryName": {
            "type": "string"
          },
          "brandId": {
            "type": "string"
          },
          "browseNodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vendorCodes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SBBudgetRuleDetails": {
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SBRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "SPKeywordsListRequest": {
        "type": "object",
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/SPNextToken"
          },
          "maxResults": {
            "$ref": "#/components/schemas/SPMaxResults"
          },
          "filters": {
            "type": "object",
            "properties": {
              "campaignIdFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources within the specified campaign identifiers.",
                  "type": "string"
                }
              },
              "stateFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources with state within the specified values. Valid values: 'enabled', 'archived', 'paused'.",
                  "type": "string"
                }
              },
              "adGroupIdFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources within the specified adGroup identifiers.",
                  "type": "string"
                }
              },
              "matchTypeFilter": {
                "type": "array",
                "items": {
                  "description": "The type of match. For keywords, valid values are: 'exact', 'phrase', 'broad'. For negativeKeywords, valid values are: 'negativeExact', 'negativePhrase'. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.",
                  "type": "string"
                }
              },
              "keywordText": {
                "type": "array",
                "items": {
                  "description": "Restricts results to keywords that match the specified text.",
                  "type": "string"
                }
              },
              "keywordIdFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources within the specified keyword identifiers.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "RuleRecommendation": {
        "type": "object",
        "properties": {
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "performanceMetrics": {
            "$ref": "#/components/schemas/RuleRecommendationMetrics"
          }
        }
      },
      "Genres": {
        "description": "List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Genre"
        }
      },
      "SPBudgetRulesRecommendationEventResponse": {
        "description": "Special events with date range and suggested budget increase.",
        "type": "object",
        "properties": {
          "recommendedBudgetRuleEvents": {
            "description": "A list of recommended special events with date range and suggested budget increase.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRulesRecommendationEvent"
            }
          }
        }
      },
      "RuleName": {
        "description": "The campaign optimization rule name.",
        "type": "string",
        "maxLength": 355
      },
      "SDRuleType": {
        "description": "The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.",
        "type": "string",
        "enum": [
          "SCHEDULE",
          "PERFORMANCE"
        ]
      },
      "UnprocessableEntityException": {
        "description": "Returns information about UnprocessableEntityException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "BudgetRecommendation": {
        "type": "object",
        "required": [
          "budgetRuleRecommendation",
          "campaignId",
          "index",
          "sevenDaysMissedOpportunities",
          "suggestedBudget"
        ],
        "properties": {
          "campaignId": {
            "description": "encrypted campaignId",
            "type": "string"
          },
          "suggestedBudget": {
            "description": "recommended budget for the campaign.",
            "type": "number"
          },
          "index": {
            "description": "Correlate the recommendation to the campaign index in the request. Zero-based",
            "type": "integer"
          },
          "sevenDaysMissedOpportunities": {
            "$ref": "#/components/schemas/SevenDaysMissedOpportunities"
          },
          "budgetRuleRecommendation": {
            "$ref": "#/components/schemas/BudgetRuleRecommendation"
          }
        }
      },
      "SBRuleDuration": {
        "type": "object",
        "required": [
          "dateRangeTypeRuleDuration"
        ],
        "properties": {
          "dateRangeTypeRuleDuration": {
            "$ref": "#/components/schemas/DateRangeTypeRuleDuration"
          }
        }
      },
      "Range": {
        "type": "object",
        "properties": {
          "min": {
            "format": "double",
            "type": "number"
          },
          "max": {
            "format": "double",
            "type": "number"
          }
        }
      },
      "RuleNotification": {
        "type": "object",
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/RuleState"
          },
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "campaignId": {
            "$ref": "#/components/schemas/RuleCampaignId"
          },
          "notificationString": {
            "description": "Explains why the rule state is disabled",
            "type": "string"
          }
        }
      },
      "SearchBrandsRequest": {
        "description": "Request object for SearchBrands API.",
        "type": "object",
        "required": [
          "keyword"
        ],
        "properties": {
          "keyword": {
            "type": "string"
          }
        }
      },
      "SBBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SBBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "GetProductRecommendationsRequest": {
        "description": "Request structure to get ASIN recommendations for a set of input ASINs.",
        "type": "object",
        "required": [
          "adAsins"
        ],
        "properties": {
          "cursor": {
            "description": "A optional cursor value that can be used to fetch next or previous set of records.",
            "type": "string",
            "example": "MTAxNTwNzI5NDE="
          },
          "adAsins": {
            "description": "List of input ASINs.",
            "type": "array",
            "items": {
              "minLength": 10,
              "type": "string",
              "maxLength": 10,
              "example": "BX20002121"
            }
          },
          "count": {
            "description": "Count of objects requested in the response. The count will be applied on the objects returned under `recommendations` array in response body.  <ul> <li>Requesting `application/vnd.spproductrecommendationresponse.themes.v3+json` mediatype applies the count on `ThemeRecommendation` objects.If no count value is passed a default of `5` is assumed. The API will return a maximum of `10` themes irrespective of how large the count is set. </li> <li>Requesting `application/vnd.spproductrecommendationresponse.asins.v3+json` mediatype applies count on the `ProductRecommendation` objects in reponse body.If no count value is passed a default of `100` is assumed. The API will return a maximum of `1000` recommendations irrespective of how large the count is set. </li> </ul> Please refer the response Schemas for more info.",
            "type": "integer",
            "minimum": 1,
            "example": "5"
          },
          "locale": {
            "description": "Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).",
            "type": "string",
            "example": "en_US"
          }
        }
      },
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of brand. This field is OPTIONAL if the Brand object is being used as an input.",
            "type": "string"
          },
          "id": {
            "description": "Id of brand. This field is REQUIRED if the Brand object is being used as an input. Use the GetRefinementsForCategory to retrieve Brand Node IDs.",
            "type": "string"
          }
        }
      },
      "SPCampaignOptimizationRecommendationAPIResponse": {
        "type": "object",
        "properties": {
          "CampaignOptimizationRecommendations": {
            "maxItems": 100,
            "description": "List of successful campaign optimization recomendation for campaigns.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleRecommendation"
            }
          },
          "CampaignOptimizationRecommendationsError": {
            "maxItems": 100,
            "description": "List of errors that occured when generating campaign optimization recommendation.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleRecommendationError"
            }
          }
        }
      },
      "PerformanceMetric": {
        "description": "The advertising performance metric.",
        "type": "string",
        "enum": [
          "ACOS",
          "CTR",
          "CVR",
          "ROAS"
        ]
      },
      "SPCampaignOptimizationRecommendationsAPIRequest": {
        "type": "object",
        "properties": {
          "campaignIds": {
            "maxItems": 100,
            "description": "A list of campaign ids",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          }
        }
      },
      "GetSBBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "budgetRule": {
            "$ref": "#/components/schemas/SBBudgetRule"
          }
        }
      },
      "AssociatedBudgetRuleResponse": {
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          }
        }
      },
      "v2SPCampaignBiddingAdjustment": {
        "properties": {
          "predicate": {
            "description": "You can enable controls to adjust your bid based on the placement location. Specify a location where you want to use bid controls. The percentage value set is the percentage of the original bid for which you want to have your bid adjustment increased. For example, a 50% adjustment on a $1.00 bid would increase the bid to $1.50 for the opportunity to win a specified placement.",
            "type": "string",
            "enum": [
              "placementTop",
              "placementProductPage"
            ]
          },
          "percentage": {
            "description": "The bid adjustment percentage value.",
            "type": "string"
          }
        }
      },
      "ProfileCountryCode": {
        "description": "The countryCode for a given country\n|Region|`countryCode`|Country Name|\n|------|-----|-------|\n|NA|US|United States|\n|NA|CA|Canada|\n|EU|UK|United Kingdom|\n|EU|DE|Germany|\n|EU|FR|France|\n|EU|ES|Spain|\n|EU|IT|Italy|\n|EU|AE|United Arab Emirates|\n|FE|JP|Japan|\n|FE|AU|Australia|",
        "readOnly": true,
        "type": "string",
        "enum": [
          "US",
          "CA",
          "UK",
          "DE",
          "FR",
          "ES",
          "IT",
          "JP",
          "AU",
          "AE"
        ]
      },
      "SPTargetsListRequest": {
        "type": "object",
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/SPNextToken"
          },
          "maxResults": {
            "$ref": "#/components/schemas/SPMaxResults"
          },
          "filters": {
            "type": "object",
            "properties": {
              "campaignIdFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources within the specified campaign identifiers.",
                  "type": "string"
                }
              },
              "stateFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources with state within the specified values. Valid values: 'enabled', 'archived', 'paused'.",
                  "type": "string"
                }
              },
              "targetIdFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources within the specified target identifiers.",
                  "type": "string"
                }
              },
              "expressionFilter": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SPExpressionFilter"
                }
              },
              "adGroupIdFilter": {
                "type": "array",
                "items": {
                  "description": "Restricts results to resources within the specified adGroup identifiers.",
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "ComparisonOperator": {
        "description": "The comparison operator.",
        "type": "string",
        "enum": [
          "GREATER_THAN",
          "LESS_THAN",
          "EQUAL_TO",
          "LESS_THAN_OR_EQUAL_TO",
          "GREATER_THAN_OR_EQUAL_TO"
        ]
      },
      "RuleState": {
        "description": "The campaign optimization rule state.",
        "type": "string",
        "enum": [
          "ENABLED",
          "DISABLED"
        ]
      },
      "RecKeywordTarget": {
        "type": "object",
        "properties": {
          "searchTermImpressionShare": {
            "format": "Double",
            "description": "The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.",
            "type": "number"
          },
          "translation": {
            "description": "The translation of keyword if a locale is passed in",
            "type": "string"
          },
          "bidInfo": {
            "description": "A list of keyword bid info",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/KeywordBidInfo"
                }
              ]
            }
          },
          "searchTermImpressionRank": {
            "description": "The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.",
            "type": "number"
          },
          "keyword": {
            "description": "The keyword value",
            "type": "string"
          },
          "userSelectedKeyword": {
            "description": "Flag that tells if keyword was selected by the user or was recommended by KRS",
            "type": "boolean"
          },
          "recId": {
            "description": "The recommended keyword target id",
            "type": "string"
          }
        }
      },
      "UpdateSDBudgetRulesRequest": {
        "description": "Request object for updating budget rule for SD campaign",
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            }
          }
        }
      },
      "CategoryRecommendations": {
        "description": "Response object for the GetCategoryRecommendationsForAsins API.",
        "type": "object",
        "properties": {
          "categories": {
            "description": "List of category recommendations",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CategoryItem"
            }
          }
        }
      },
      "v2SPCampaignBidding": {
        "description": "Specifies bidding controls.",
        "properties": {
          "adjustments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/v2SPCampaignBiddingAdjustment"
            }
          },
          "strategy": {
            "description": "The bidding strategy.",
            "type": "string",
            "enum": [
              "legacyForSales",
              "autoForSales",
              "manual"
            ]
          }
        }
      },
      "KeywordTarget": {
        "properties": {
          "matchType": {
            "description": "Keyword match type. The default value will be BROAD.",
            "type": "string",
            "enum": [
              "BROAD",
              "EXACT",
              "PHRASE"
            ]
          },
          "keyword": {
            "description": "The keyword value",
            "type": "string"
          },
          "bid": {
            "format": "double",
            "description": "The bid value for the keyword. The default value will be the suggested bid.",
            "type": "number"
          },
          "userSelectedKeyword": {
            "description": "Flag that tells if keyword was selected by the user or was recommended by KRS",
            "type": "boolean"
          }
        }
      },
      "GetSBBudgetRulesForAdvertiserResponse": {
        "type": "object",
        "properties": {
          "budgetRulesForAdvertiserResponse": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of rules created by the advertiser.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRule"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SDListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDBudgetRule"
            }
          }
        }
      },
      "SPListAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "associatedRules": {
            "description": "A list of associated budget rules.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPCampaignBudgetRule"
            }
          }
        }
      },
      "SDRuleBasedBudget": {
        "type": "object",
        "properties": {
          "executionTime": {
            "format": "int64",
            "description": "Epoch time of budget rule execution.",
            "type": "number"
          },
          "appliedRule": {
            "$ref": "#/components/schemas/SDBudgetRule"
          },
          "ruleBasedBudgetValue": {
            "description": "The budget value.",
            "type": "number"
          },
          "dailyBudgetValue": {
            "description": "The daily budget value.",
            "type": "number"
          },
          "performanceMetric": {
            "$ref": "#/components/schemas/PerformanceMetricValue"
          }
        }
      },
      "DeleteSPCampaignOptimizationRuleResponse": {
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "RuleCampaignId": {
        "description": "campaignId",
        "type": "string"
      },
      "SBRuleBasedBudget": {
        "type": "object",
        "properties": {
          "executionTime": {
            "format": "int64",
            "description": "Epoch time of budget rule execution.",
            "type": "number"
          },
          "appliedRule": {
            "$ref": "#/components/schemas/SBBudgetRule"
          },
          "ruleBasedBudgetValue": {
            "description": "The budget value.",
            "type": "number"
          },
          "dailyBudgetValue": {
            "description": "The daily budget value.",
            "type": "number"
          },
          "performanceMetric": {
            "$ref": "#/components/schemas/PerformanceMetricValue"
          }
        }
      },
      "CreateSBBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRuleDetails"
            }
          }
        }
      },
      "RankedTargetResponse": {
        "type": "object",
        "properties": {
          "keywordTargetList": {
            "description": "A list of ranked keyword targets",
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/RecKeywordTarget"
                }
              ]
            }
          }
        }
      },
      "AgeRanges": {
        "description": "List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children's toys and games.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/AgeRange"
        }
      },
      "v2SPCampaignExtended": {
        "properties": {
          "lastUpdatedDate": {
            "description": "The date that any value associated with the campaign was last changed, in epoch time.",
            "type": "number"
          },
          "servingStatus": {
            "description": "The computed status of the campaign. See developer notes for more information.",
            "type": "string",
            "enum": [
              "CAMPAIGN_ARCHIVED",
              "CAMPAIGN_PAUSED",
              "CAMPAIGN_STATUS_ENABLED",
              "ADVERTISER_PAYMENT_FAILED",
              "ADVERTISER_PAYMENT_FAILURE",
              "CAMPAIGN_OUT_OF_BUDGET",
              "PENDING_START_DATE",
              "CAMPAIGN_INCOMPLETE",
              "ENDED"
            ]
          },
          "creationDate": {
            "description": "The creation date of the campaign, in epoch time.",
            "type": "number"
          }
        }
      },
      "SDBudgetHistory": {
        "type": "object",
        "properties": {
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SDRuleBasedBudget"
            }
          }
        }
      },
      "CreateSPCampaignOptimizationRulesResponse": {
        "type": "object",
        "properties": {
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the error, if unsuccessful",
            "type": "string"
          }
        }
      },
      "SPGetAssociatedCampaignsResponse": {
        "type": "object",
        "properties": {
          "associatedCampaigns": {
            "minItems": 0,
            "maxItems": 30,
            "description": "A list of campaigns that are associated to this budget rule.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedCampaign"
            }
          },
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          }
        }
      },
      "SPBid": {
        "format": "float",
        "description": "The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. This table details the maximum allowable bid (in local currency) for keywords by marketplace:\n| Marketplace | Currency | Min / Max bid for SP |\n| --- | --- | --- |\n| US | USD | 0.02 / 1000 |\n| CA | CAD | 0.02 / 1000 |\n| UK | GBP | 0.02 / 1000 |\n| DE | EUR | 0.02 / 1000 |\n| FR | EUR | 0.02 / 1000 |\n| ES | EUR | 0.02 / 1000 |\n| IT | EUR | 0.02 / 1000 |\n| JP | JPY | 2.0 / 100000 |\n| AU | AUD | 0.10 / 1410 |\n| AE | AED | 0.24 / 184.0 |",
        "type": "number",
        "minimum": 0.02
      },
      "GetSPCampaignOptimizationRuleResponse": {
        "type": "object",
        "properties": {
          "CampaignOptimizationRule": {
            "$ref": "#/components/schemas/CampaignOptimizationRule"
          }
        }
      },
      "SPCampaignBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SPBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status. Read-only.",
            "type": "string"
          }
        }
      },
      "SPBudgetRule": {
        "type": "object",
        "required": [
          "ruleId"
        ],
        "properties": {
          "ruleState": {
            "$ref": "#/components/schemas/state"
          },
          "lastUpdatedDate": {
            "format": "int64",
            "description": "Epoch time of budget rule update. Read-only.",
            "type": "number"
          },
          "createdDate": {
            "format": "int64",
            "description": "Epoch time of budget rule creation. Read-only.",
            "type": "number"
          },
          "ruleDetails": {
            "$ref": "#/components/schemas/SPBudgetRuleDetails"
          },
          "ruleId": {
            "description": "The budget rule identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule status. Read-only.",
            "type": "string"
          }
        }
      },
      "DayOfWeek": {
        "description": "The day of the week.",
        "type": "string",
        "enum": [
          "MONDAY",
          "TUESDAY",
          "WEDNESDAY",
          "THURSDAY",
          "FRIDAY",
          "SATURDAY",
          "SUNDAY"
        ]
      },
      "SPNegativeTargetsListResponseObject": {
        "properties": {
          "nextToken": {
            "$ref": "#/components/schemas/SPNextToken"
          },
          "negativeTargets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPNegativeTargetingClause"
            }
          }
        }
      },
      "UpdateBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BudgetRuleResponse"
            }
          }
        }
      },
      "SPTargetingError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "RuleCondition": {
        "type": "object",
        "properties": {
          "metricName": {
            "$ref": "#/components/schemas/RuleConditionMetric"
          },
          "comparisonOperator": {
            "$ref": "#/components/schemas/ComparisonOperator"
          },
          "threshold": {
            "format": "double",
            "description": "The performance threshold value.",
            "type": "number"
          }
        },
        "required": [
          "metricName",
          "threshold",
          "comparisonOperator"
        ]
      },
      "RuleCreationDate": {
        "description": "Time of campaign optimization rule creation in ISO 8061. Read-only.",
        "type": "string"
      },
      "CreateAssociatedBudgetRulesResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssociatedBudgetRuleResponse"
            }
          }
        }
      },
      "UpdateSBBudgetRulesRequest": {
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SBBudgetRule"
            }
          }
        }
      },
      "PerformanceMetricValue": {
        "description": "An object giving the name of the performance metric and its value when the rule was evaluated",
        "type": "object",
        "properties": {
          "name": {
            "description": "Name of the performance metric",
            "type": "string"
          },
          "value": {
            "format": "double",
            "description": "Value of the performance metric",
            "type": "number"
          }
        }
      },
      "BudgetRuleError": {
        "description": "The Error Response Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated error code for machine use.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "ProductRecommendationsByTheme": {
        "description": "Product recommendations grouped by theme attribute.",
        "type": "object",
        "properties": {
          "nextCursor": {
            "description": "An identifier to fetch next set of `ThemeRecommendation` records in the result set if available. This will be null when at the end of result set.",
            "type": "string",
            "example": "MTAxNTExOzI5NDE="
          },
          "previousCursor": {
            "description": "Optional parameter that links to the previous result set served to the requester.",
            "type": "string",
            "example": "OTQ1wNzI5NDE="
          },
          "recommendations": {
            "description": "An array of `ThemeRecommendation` objects",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ThemeRecommendation"
            }
          }
        }
      },
      "BidSuggestion": {
        "description": "Suggested bid range",
        "properties": {
          "suggested": {
            "format": "double",
            "description": "The suggested bid",
            "type": "number"
          },
          "rangeStart": {
            "format": "double",
            "description": "The bid range start",
            "type": "number"
          },
          "bidRecId": {
            "description": "The bid recommendation id",
            "type": "string"
          },
          "rangeEnd": {
            "format": "double",
            "description": "The bid range end",
            "type": "number"
          }
        }
      },
      "UpdateSPBudgetRulesRequest": {
        "description": "Request object for updating budget rule for SP campaign",
        "type": "object",
        "properties": {
          "budgetRulesDetails": {
            "maxItems": 25,
            "description": "A list of budget rule details.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPBudgetRule"
            }
          }
        }
      },
      "SPBudgetRulesRecommendationEvent": {
        "type": "object",
        "properties": {
          "eventId": {
            "description": "The event identifier.",
            "type": "string"
          },
          "endDate": {
            "description": "The end date in YYYYMMDD format.",
            "type": "string"
          },
          "suggestedBudgetIncreasePercent": {
            "description": "The suggested budget increase expressed as a percent.",
            "type": "number"
          },
          "eventName": {
            "description": "The event name.",
            "type": "string"
          },
          "startDate": {
            "description": "The start date in YYYYMMDD format.",
            "type": "string"
          }
        }
      },
      "SPKeyword": {
        "properties": {
          "keywordId": {
            "description": "The identifier of the keyword.",
            "type": "string"
          },
          "campaignId": {
            "description": "The identifier of the campaign to which the keyword is associated.",
            "type": "string"
          },
          "matchType": {
            "description": "The type of match, 'exact', 'phrase', 'broad'.",
            "type": "string"
          },
          "state": {
            "description": "The current resource state, 'enabled', 'archived', 'paused'.",
            "type": "string"
          },
          "bid": {
            "format": "float",
            "description": "Bid associated with this keyword. Applicable to biddable match types only.",
            "type": "number",
            "minimum": 0.02
          },
          "adGroupId": {
            "description": "The identifier of the ad group to which this keyword is associated.",
            "type": "string"
          },
          "keywordText": {
            "description": "The keyword text.",
            "type": "string"
          }
        }
      },
      "AssociatedCampaign": {
        "type": "object",
        "required": [
          "campaignId",
          "campaignName",
          "ruleStatus"
        ],
        "properties": {
          "campaignId": {
            "description": "The campaign identifier.",
            "type": "string"
          },
          "ruleStatus": {
            "description": "The budget rule evaluation status for this campaign. Read-only.",
            "type": "string"
          },
          "campaignName": {
            "description": "The campaign name.",
            "type": "string"
          }
        }
      },
      "Brands": {
        "description": "List of Brands.",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Brand"
        }
      },
      "ProfileAccountType": {
        "description": "The `seller` and `vendor` account types are associated with Sponsored Ads APIs. The `agency` account type is associated with DSP and Data Provider APIs.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "vendor",
          "seller",
          "agency"
        ]
      },
      "BadRequestException": {
        "description": "Returns information about a BadRequestException.",
        "type": "object",
        "properties": {
          "code": {
            "description": "The HTTP status code of the response.",
            "type": "string"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "RuleStatus": {
        "description": "The campaign optimization rule status. Read-Only",
        "type": "string",
        "enum": [
          "ACTIVE",
          "ARCHIVED"
        ]
      },
      "DisassociateAssociatedBudgetRuleResponse": {
        "type": "object"
      },
      "BudgetChangeType": {
        "description": "The value by which to update the budget of the budget rule.",
        "type": "string",
        "enum": [
          "PERCENT"
        ]
      },
      "SDBudgetRuleDetails": {
        "description": "Object representing details of a budget rule for SD campaign",
        "type": "object",
        "properties": {
          "duration": {
            "$ref": "#/components/schemas/RuleDuration"
          },
          "recurrence": {
            "$ref": "#/components/schemas/Recurrence"
          },
          "ruleType": {
            "$ref": "#/components/schemas/SDRuleType"
          },
          "budgetIncreaseBy": {
            "$ref": "#/components/schemas/budgetIncreaseBy"
          },
          "name": {
            "description": "The budget rule name. Required to be unique within a campaign.",
            "type": "string",
            "maxLength": 355
          },
          "performanceMeasureCondition": {
            "$ref": "#/components/schemas/PerformanceMeasureCondition"
          }
        }
      },
      "CampaignOptimizationRule": {
        "type": "object",
        "properties": {
          "recurrence": {
            "$ref": "#/components/schemas/RecurrenceType"
          },
          "ruleAction": {
            "$ref": "#/components/schemas/RuleAction"
          },
          "campaignOptimizationId": {
            "$ref": "#/components/schemas/campaignOptimizationId"
          },
          "createdDate": {
            "$ref": "#/components/schemas/RuleCreationDate"
          },
          "ruleCondition": {
            "$ref": "#/components/schemas/RuleConditionList"
          },
          "ruleType": {
            "$ref": "#/components/schemas/RuleType"
          },
          "ruleName": {
            "$ref": "#/components/schemas/RuleName"
          },
          "campaignIds": {
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RuleCampaignId"
            }
          },
          "ruleStatus": {
            "$ref": "#/components/schemas/RuleStatus"
          }
        },
        "required": [
          "campaignOptimizationId"
        ]
      },
      "SPBudgetHistory": {
        "type": "object",
        "properties": {
          "nextToken": {
            "description": "To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.",
            "type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SPRuleBasedBudget"
            }
          }
        }
      }
    },
    "requestBodies": {},
    "responses": {
      "ListBrandsResponse": {
        "description": "Brand information for advertiser for a given program type",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ListBrandsResponseObject"
            }
          }
        }
      },
      "SPKeywordsListResponse": {
        "description": "Success.",
        "content": {
          "application/vnd.spgetkeywordlistresponse.v3.0+json": {
            "schema": {
              "$ref": "#/components/schemas/SPKeywordsListResponseObject"
            }
          }
        }
      },
      "SPNegativeTargetsListResponse": {
        "description": "Success.",
        "content": {
          "application/vnd.spgetnegativetargetingclauselistresponse.v3.0+json": {
            "schema": {
              "$ref": "#/components/schemas/SPNegativeTargetsListResponseObject"
            }
          }
        }
      },
      "v2SPListCampaignsExtendedResponse": {
        "description": "List of campaigns",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/v2SPCampaign"
                  },
                  {
                    "$ref": "#/components/schemas/v2SPCampaignExtended"
                  }
                ]
              }
            }
          }
        }
      },
      "v2SPListProductAdResponse": {
        "description": "List of ProductAd",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2SPProductAd"
              }
            }
          }
        }
      },
      "SPTooManyRequestError": {
        "description": "Too many requests.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SPError"
            }
          }
        }
      },
      "SPTargetsListResponse": {
        "description": "Success.",
        "content": {
          "application/vnd.spgettargetingclauselistresponse.v3.0+json": {
            "schema": {
              "$ref": "#/components/schemas/SPTargetsListResponseObject"
            }
          }
        }
      },
      "SPNotFoundError": {
        "description": "The requested resource was not found.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SPError"
            }
          }
        }
      },
      "v2SPListAdGroupResponse": {
        "description": "List of adGroups",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2SPAdGroup"
              }
            }
          }
        }
      },
      "SPInternalServerError": {
        "description": "Internal server error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SPError"
            }
          }
        }
      },
      "SPUnauthorizedError": {
        "description": "Unauthorized.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SPError"
            }
          }
        }
      },
      "SPNegativeKeywordsListResponse": {
        "description": "Success.",
        "content": {
          "application/vnd.spgetnegativekeywordlistresponse.v3.0+json": {
            "schema": {
              "$ref": "#/components/schemas/SPNegativeKeywordsListResponseObject"
            }
          }
        }
      },
      "v2SPListCampaignsResponse": {
        "description": "List of campaigns",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/v2SPCampaign"
              }
            }
          }
        }
      },
      "SPBadRequestError": {
        "description": "Bad request.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/SPError"
            }
          }
        }
      }
    },
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {
      "SPAdIdFilterQueryString": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "adIdFilter",
        "description": "Restricts results to product ads associated with the product ad identifiers specified in the comma-delimited list.",
        "required": false
      },
      "SPPortfolioIdFilterQueryString": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "portfolioIdFilter",
        "description": "Comma delimited list of portfolio ids to filter on",
        "required": false
      },
      "SPStateFilterQueryString": {
        "schema": {
          "type": "string",
          "enum": [
            "enabled",
            "paused",
            "archived",
            "enabled,paused",
            "enabled,archived",
            "paused,archived",
            "enabled,paused,archived"
          ]
        },
        "in": "query",
        "name": "stateFilter",
        "description": "Comma delimited list of states to filter on",
        "required": false
      },
      "SPCampaignIdFilterQueryString": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "campaignIdFilter",
        "description": "Comma delimited list of campaign ids to filter on",
        "required": false
      },
      "SPStartIndexQueryString": {
        "schema": {
          "default": 0,
          "type": "integer"
        },
        "in": "query",
        "name": "startIndex",
        "description": "0-indexed record offset for the result set. Defaults to 0.",
        "required": false
      },
      "SPCampaignTypeQueryString": {
        "schema": {
          "type": "string",
          "enum": [
            "sponsoredProducts",
            "headlineSearch",
            "sponsoredBrands"
          ]
        },
        "in": "query",
        "name": "name",
        "description": "Restricts results to ad groups within campaign types specified in comma-separated list.",
        "required": false
      },
      "PSSProgramTypeQueryString": {
        "schema": {
          "type": "string",
          "enum": [
            "HSA",
            "SP",
            "LSA",
            "DA",
            "SB",
            "SDP",
            "SDFTV"
          ]
        },
        "in": "query",
        "name": "programType",
        "description": "PSS Program Type",
        "required": true
      },
      "SPAdGroupIdFilterQueryString": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "adGroupIdFilter",
        "description": "Restricts results to keywords associated with ad groups specified by identifier in the comma-delimited list.",
        "required": false
      },
      "SPClientHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-ClientId",
        "description": "The identifier of a client associated with a \"Login with Amazon\" developer account.",
        "required": true
      },
      "SPProfileHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-Scope",
        "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.",
        "required": true
      },
      "ProfileTypeFilter": {
        "schema": {
          "type": "string",
          "enum": [
            "seller",
            "vendor",
            "agency"
          ]
        },
        "in": "query",
        "name": "profileTypeFilter",
        "description": "Filter on types of profiles to return, this is a comma delimited list.  Default is all. This filter is an Inclusive AND.",
        "required": false
      },
      "ValidPaymentMethodFilter": {
        "schema": {
          "type": "string",
          "enum": [
            "true",
            "false"
          ]
        },
        "in": "query",
        "name": "validPaymentMethodFilter",
        "description": "Filter on valid payment methods. Default is to include all profiles. Setting this filter to true returns only profiles with either no validPaymentMethod field or true.  Setting this to false returns only profiles with false in the validPaymentMethod field.",
        "required": false
      },
      "ExcludeSubTypeFilter": {
        "schema": {
          "type": "string",
          "enum": [
            "KDP_AUTHOR",
            "AMAZON_ATTRIBUTION"
          ]
        },
        "in": "query",
        "name": "excludeSubTypeFilter",
        "description": "Filter out specific sub types.  This is a negative filter where all values in the list will NOT be included in the response.  This is a comma delimited list.",
        "required": false
      },
      "SPNameQueryString": {
        "schema": {
          "type": "string"
        },
        "in": "query",
        "name": "name",
        "description": "Restricts results to campaigns with the specified name.",
        "required": false
      },
      "SPCountQueryString": {
        "schema": {
          "type": "integer"
        },
        "in": "query",
        "name": "count",
        "description": "Number of records to include in the paged response. Defaults to max page size",
        "required": false
      }
    }
  },
  "openapi": "3.0.1"
}