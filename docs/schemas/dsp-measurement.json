{
  "info": {
    "description": "Measurement management.",
    "title": "Measurement",
    "version": "3.0"
  },
  "paths": {
    "/measurement/vendorProducts/surveyQuestionTemplates": {
      "get": {
        "summary": "Gets the survey question templates for the specific vendor product(s).",
        "description": "Gets the survey question templates for the specific vendor product(s).\n\n**Requires one of these permissions**:\n[]",
        "operationId": "vendorProductSurveyQuestionTemplates",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveyQuestionTemplatesV1M1"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveyQuestionTemplatesV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "vendorProductIds",
            "description": "Vendor product canonical identifier to filter with.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "surveyQuestionTemplateIds",
            "description": "Vendor product survey question template identifier to filter with.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/brandLift": {
      "post": {
        "summary": "Create new DSP BRAND_LIFT studies.",
        "requestBody": {
          "description": "An array of study objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                }
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                }
              }
            }
          }
        },
        "description": "Create new DSP BRAND_LIFT studies.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CreateDSPBrandLiftStudies",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The syntax of the request is correct, but the server was unable to process the contained instructions.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "get": {
        "summary": "Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.",
        "description": "Gets one or more DSP BRAND_LIFT studies with requested study identifiers or an advertiser identifier.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPBrandLiftStudies",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1M1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1M1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPBrandLiftStudiesV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "studyIdFilters",
            "description": "Study canonical identifier to filter with. Either one of studyIdFilters or advertiserId should be provided.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "advertiserId",
            "description": "The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "put": {
        "summary": "Update DSP BRAND_LIFT studies. This will be a full update.",
        "requestBody": {
          "description": "An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                }
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
                }
              }
            }
          }
        },
        "description": "Update DSP BRAND_LIFT studies. This will be a full update.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "UpdateDSPBrandLiftStudies",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "422": {
            "description": "Unprocessable Entity - The syntax of the request is correct, but the server was unable to process the contained instructions.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Study Eligibility Failed"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/planning/eligibility": {
      "post": {
        "summary": "Checks eligibility against all vendor products.",
        "requestBody": {
          "description": "Fetch measurement vendor products request object.",
          "content": {
            "application/vnd.measurementeligibility.v1.3+json": {
              "schema": {
                "$ref": "#/components/schemas/PlanningEligibilityRequestV1M3"
              }
            },
            "application/vnd.measurementeligibility.v1.1+json": {
              "schema": {
                "$ref": "#/components/schemas/PlanningEligibilityRequestV1M3"
              }
            }
          }
        },
        "description": "Checks eligibility against all vendor products.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CheckPlanningEligibility",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanningEligibilityResponseV1M3"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PlanningEligibilityResponseV1M3"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access.",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ]
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/creativeTesting": {
      "post": {
        "summary": "Create new DSP CREATIVE_TESTING study.",
        "requestBody": {
          "description": "Create object for DSP CREATIVE_TESTING study.",
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDSPCreativeTestingStudyV1M2"
              }
            }
          }
        },
        "description": "Create new DSP CREATIVE_TESTING study.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CreateDSPCreativeTestingStudy",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPCreativeTestingStudyV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "get": {
        "summary": "Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.",
        "description": "Gets one or more DSP CREATIVE_TESTING studies with requested study identifiers or an advertiser identifier.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPCreativeTestingStudies",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPCreativeTestingStudiesV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "studyIds",
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "advertiserId",
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/studies/surveys": {
      "post": {
        "summary": "Create new study surveys.",
        "requestBody": {
          "description": "An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                }
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                }
              }
            }
          }
        },
        "description": "Create new study surveys.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CreateSurveys",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "get": {
        "summary": "Gets one or more study surveys with requested survey identifiers or a study identifier.",
        "description": "Gets one or more study surveys with requested survey identifiers or a study identifier.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetSurveys",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1M1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1M1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedSurveysV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "surveyIds",
            "description": "Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "studyId",
            "description": "A study canonical identifier. Either one of surveyIds or studyId should be provided.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "put": {
        "summary": "Update measurement surveys. This will be a full update.",
        "requestBody": {
          "description": "An array of survey objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.studymanagement.v1.1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                }
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1M1"
                }
              }
            },
            "application/vnd.studymanagement.v1+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/SurveyV1"
                }
              }
            }
          }
        },
        "description": "Update measurement surveys. This will be a full update.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "UpdateSurveys",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/SurveyResponsesV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/studies/brandLift/{studyId}/result": {
      "get": {
        "summary": "Get result of a DSP BRAND_LIFT study.",
        "description": "Get result of a DSP BRAND_LIFT study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPBrandLiftStudyResult",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandLiftStudyResultV1M1"
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/BrandLiftStudyResultV1"
                }
              }
            }
          },
          "307": {
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Redirect URI with S3 file location containing result data."
              }
            },
            "description": "Successful operation for downloading result file."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementresult.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1+json`, `application/vnd.measurementresult.v1.1+json`, `text/vnd.measurementresult.v1+csv`",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/omnichannelMetrics": {
      "post": {
        "summary": "Checks the DSP OMNICHANNEL_METRICS study type eligibility against vendor products.",
        "requestBody": {
          "description": "The DSP omnichannel metrics eligibility request object.",
          "content": {
            "application/vnd.measurementeligibility.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityRequestV1M2"
              }
            },
            "application/vnd.measurementeligibility.v1.3+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityRequestV1M3"
              }
            }
          }
        },
        "description": "Checks the DSP OMNICHANNEL_METRICS study type eligibility status against vendor products.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CheckDSPOmnichannelMetricsEligibility",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementeligibility.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/creativeTesting/{studyId}": {
      "put": {
        "summary": "Update DSP CREATIVE_TESTING study. This will be a full update.",
        "requestBody": {
          "description": "Update object for DSP CREATIVE_TESTING study.",
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDSPCreativeTestingStudyV1M2"
              }
            }
          }
        },
        "description": "Update DSP CREATIVE_TESTING study. This will be a full update.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "UpdateDSPCreativeTestingStudy",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPCreativeTestingStudyV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/audienceResearch": {
      "post": {
        "summary": "Create new DSP AUDIENCE_RESEARCH study.",
        "requestBody": {
          "description": "Create object for DSP AUDIENCE_RESEARCH study.",
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDSPAudienceResearchStudyV1M2"
              }
            }
          }
        },
        "description": "Create new DSP AUDIENCE_RESEARCH study.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CreateDSPAudienceResearchStudy",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPAudienceResearchStudyV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "get": {
        "summary": "Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.",
        "description": "Gets one or more DSP AUDIENCE_RESEARCH studies with requested study identifiers or an advertiser identifier.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPAudienceResearchStudies",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPAudienceResearchStudiesV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "studyIds",
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "advertiserId",
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/audienceResearch": {
      "post": {
        "summary": "Checks the DSP AUDIENCE_RESEARCH study type eligibility against vendor products.",
        "requestBody": {
          "description": "The DSP audience research study eligibility request object.",
          "content": {
            "application/vnd.measurementeligibility.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPAudienceResearchEligibilityRequestV1M2"
              }
            }
          }
        },
        "description": "Checks the DSP AUDIENCE_RESEARCH study type eligibility status against vendor products.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CheckDSPAudienceResearchEligibility",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/list": {
      "post": {
        "summary": "Lists the supported measurement vendor products.",
        "requestBody": {
          "description": "Fetch measurement vendor products request object.",
          "content": {
            "application/vnd.measurementvendor.v1.1+json": {
              "schema": {
                "$ref": "#/components/schemas/VendorProductRequestV1M1"
              }
            },
            "application/vnd.measurementvendor.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/VendorProductRequestV1"
              }
            }
          }
        },
        "description": "Lists the supported measurement vendors products.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "vendorProduct",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductsV1M1"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductsV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access.",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ]
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access.",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array."
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/studies": {
      "get": {
        "summary": "Gets base study objects given a list of studyIds or a list of advertiserIds.",
        "description": "Gets base study objects given a list of studyIds or a list of advertiserIds.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetStudies",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1M1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1M1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedBaseStudiesV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "studyIds",
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "advertiserId",
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "delete": {
        "summary": "Cancel existing studies. Once a study is cancelled it can not be resumed again.",
        "description": "Cancel existing studies.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CancelMeasurementStudies",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 1,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "studyIds",
            "description": "Study canonical identifiers to cancel.",
            "style": "form",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/omnichannelMetrics": {
      "post": {
        "summary": "Create new DSP OMNICHANNEL_METRICS studies.",
        "requestBody": {
          "description": "An array of study objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M2"
                }
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M3"
                }
              }
            }
          }
        },
        "description": "Create new DSP OMNICHANNEL_METRICS studies.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CreateDSPOmnichannelMetricsStudies",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "get": {
        "summary": "Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.",
        "description": "Gets one or more DSP OMNICHANNEL_METRICS studies with requested study identifiers or an advertiser identifier.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPOmnichannelMetricsStudies",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPOmnichannelMetricsStudiesV1M2"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedDSPOmnichannelMetricsStudiesV1M3"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "studyIds",
            "description": "Study canonical identifier to filter with. Either one of studyIds or advertiserId should be provided.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "advertiserId",
            "description": "The advertiser canonical identifier. Either one of studyIdFilters or advertiserId should be provided.",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      },
      "put": {
        "summary": "Update DSP OMNICHANNEL_METRICS studies. This will be a full update.",
        "requestBody": {
          "description": "An array of measurement objects. For each object, specify required fields and their values. Maximum length of the array is 1.",
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M2"
                }
              }
            },
            "application/vnd.studymanagement.v1.3+json": {
              "schema": {
                "minItems": 1,
                "maxItems": 1,
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M3"
                }
              }
            }
          }
        },
        "description": "Update DSP OMNICHANNEL_METRICS studies. This will be a full update.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "UpdateDSPOmnichannelMetricsStudies",
        "responses": {
          "207": {
            "description": "Multi-status.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/StudyResponsesV1"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.studymanagement.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/creativeTesting": {
      "post": {
        "summary": "Checks the DSP CREATIVE_TESTING study type eligibility against vendor products.",
        "requestBody": {
          "description": "The DSP creative testing study eligibility request object.",
          "content": {
            "application/vnd.measurementeligibility.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPCreativeTestingEligibilityRequestV1M2"
              }
            }
          }
        },
        "description": "Checks the DSP CREATIVE_TESTING study type eligibility status against vendor products.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CheckDSPCreativeTestingEligibility",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementeligibility.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/policies": {
      "get": {
        "summary": "Gets the policies for the specific vendor product(s).",
        "description": "Gets the policies for the specific vendor product(s).\n\n**Requires one of these permissions**:\n[]",
        "operationId": "vendorProductPolicy",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductPoliciesV1M1"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedVendorProductPoliciesV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementvendor.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementvendor.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "minItems": 1,
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "in": "query",
            "explode": false,
            "name": "vendorProductIds",
            "description": "Vendor product canonical identifier to filter with.",
            "style": "form",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/eligibility/brandLift": {
      "post": {
        "summary": "Checks the DSP BRAND_LIFT study type eligibility against vendor products.",
        "requestBody": {
          "description": "The DSP brand lift eligibility request object.",
          "content": {
            "application/vnd.measurementeligibility.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPBrandLiftEligibilityRequestV1"
              }
            },
            "application/vnd.measurementeligibility.v1.1+json": {
              "schema": {
                "$ref": "#/components/schemas/DSPBrandLiftEligibilityRequestV1M1"
              }
            }
          }
        },
        "description": "Checks the DSP BRAND_LIFT study type eligibility status against vendor products.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "CheckDSPBrandLiftEligibility",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/EligibilityResponseV1"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementeligibility.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementeligibility.v1.1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41s",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array.",
            "required": false
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of studies in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/audienceResearch/{studyId}": {
      "put": {
        "summary": "Update DSP AUDIENCE_RESEARCH study. This will be a full update.",
        "requestBody": {
          "description": "Update object for DSP AUDIENCE_RESEARCH study.",
          "content": {
            "application/vnd.studymanagement.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDSPAudienceResearchStudyV1M2"
              }
            }
          }
        },
        "description": "Update DSP AUDIENCE_RESEARCH study. This will be a full update.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "UpdateDSPAudienceResearchStudy",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/DSPAudienceResearchStudyV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Bad request"
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.studymanagement.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/audienceResearch/{studyId}/result": {
      "get": {
        "summary": "Get result of a DSP AUDIENCE_RESEARCH study.",
        "description": "Get result of a DSP AUDIENCE_RESEARCH study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPAudienceResearchStudyResult",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/AudienceResearchStudyResultV1M2"
                }
              }
            }
          },
          "307": {
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Redirect URI with S3 file location containing result data."
              }
            },
            "description": "Successful operation for downloading result file."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1.2+json`, `text/vnd.measurementresult.v1.2+csv`.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/creativeTesting/{studyId}/result": {
      "get": {
        "summary": "Get result of a DSP CREATIVE_TESTING study.",
        "description": "Get result of a DSP CREATIVE_TESTING study. Returns 200 successful response if json resource is requested in Accept header. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPCreativeTestingStudyResult",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/CreativeTestingStudyResultV1M2"
                }
              }
            }
          },
          "307": {
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Redirect URI with S3 file location containing result data."
              }
            },
            "description": "Successful operation for downloading result file."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1.2+json`, `text/vnd.measurementresult.v1.2+csv`.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurementStudies/omnichannelMetrics/brands/list": {
      "post": {
        "summary": "Search for brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "requestBody": {
          "description": "Fetch measurement vendor products request object.",
          "content": {
            "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/MeasurementStudiesOmnichannelMetricsBrandSearchRequest"
              }
            }
          }
        },
        "description": "Search for brands to be used in the OMNICHANNEL_METRICS vendor product.\n\n**Requires one of these permissions**:\n[]\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetMeasurementStudiesOmnichannelMetricsBrands",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedMeasurementStudiesOmnichannelMetricsBrands"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access.",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementstudiesomnichannelmetricsbrands.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/MeasurementStudiesError"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array."
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of brands in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned."
          }
        ],
        "tags": [
          "Omnichannel Metrics Study"
        ]
      }
    },
    "/measurement/studies/{studyId}/curatedResult/download": {
      "get": {
        "summary": "Get the 3P vendor's curated result file.",
        "description": "Get the download link and file type of the 3P vendor's study results in an easy to read and understand format which breaks down the effectiveness of an ad campaign. Returns a `200` response that includes an AWS S3 pre-signed URL where the curated study results file is located and the file type (format). The `OTHER` file type is returned when a new file type is added and is not supported in the current version of this API.For full support of the new file type, migrate to the latest version of this API when it is made available. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetCuratedStudyResult",
        "responses": {
          "200": {
            "description": "Successful operation for downloading curated results file.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/CuratedStudyResultV1"
                }
              }
            }
          },
          "400": {
            "description": "The `studyId` path parameter is missing, is of the wrong format or the study type associated with the `studyId` doesn't provide curated results.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "1 validation error(s) occurred. Please correct them and request again.",
                  "errors": [
                    {
                      "fieldName": "studyId",
                      "errorType": "Unsupported study type",
                      "message": "Omnichannel Metrics is not supported, supported study types are: Brand Lift"
                    }
                  ]
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementresult.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "The version(s) of the requested resource. Available version(s) - `application/vnd.measurementresult.v1+json`.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/measurement/vendorProducts/omnichannelMetrics/brands/list": {
      "post": {
        "summary": "Search for brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "requestBody": {
          "description": "Fetch measurement vendor products request object.",
          "content": {
            "application/vnd.ocmbrands.v1.3+json": {
              "schema": {
                "$ref": "#/components/schemas/OmnichannelMetricsBrandSearchRequestV1M2"
              }
            },
            "application/vnd.ocmbrands.v1.2+json": {
              "schema": {
                "$ref": "#/components/schemas/OmnichannelMetricsBrandSearchRequestV1M2"
              }
            }
          }
        },
        "description": "Search for brands to be used in the OMNICHANNEL_METRICS vendor product.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "omnichannelMetricsBrandSearch",
        "responses": {
          "200": {
            "description": "Successful operation.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOmnichannelMetricsBrandsV1M2"
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedOmnichannelMetricsBrandsV1M2"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request."
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request."
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access.",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ]
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access.",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed."
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found."
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found."
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests."
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests."
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.ocmbrands.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.ocmbrands.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "nextToken",
            "description": "Token from a previous request. Use in conjunction with the `maxResults` parameter to control pagination of the returned array."
          },
          {
            "schema": {
              "default": 10,
              "maximum": 100,
              "type": "integer",
              "minimum": 1
            },
            "in": "query",
            "name": "maxResults",
            "description": "Sets the maximum number of brands in the returned array. Use in conjunction with the `nextToken` parameter to control pagination. The range for maxResults is [1,100] with default as 10. For example, supplying maxResults=20 with a previously returned token will fetch up to the next 20 items. In some cases, fewer items may be returned.",
            "required": false
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    },
    "/dsp/measurement/studies/omnichannelMetrics/{studyId}/result": {
      "get": {
        "summary": "Get result of a DSP OMNICHANNEL_METRICS study.",
        "description": "Get result of a DSP OMNICHANNEL_METRICS study. Returns a 307 Temporary Redirect response if any of the file types is requested and response includes a location header with the value set to an AWS S3 path where the result is located. The path expires after 60 seconds. Accept header does not support json for OMNICHANNEL_METRICS study type.\n\n**Requires one of these permissions**:\n[]",
        "operationId": "GetDSPOmnichannelMetricsStudyResult",
        "responses": {
          "307": {
            "headers": {
              "Location": {
                "schema": {
                  "type": "string"
                },
                "description": "Redirect URI with S3 file location containing result data."
              }
            },
            "description": "Successful operation for downloading result file."
          },
          "400": {
            "description": "Bad Request or request body is not matching with input model.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Malformed JSON."
                }
              }
            }
          },
          "401": {
            "description": "Unauthenticated request.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthenticated Request"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - Request failed because user is not authorized to access a resource.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Unauthorized Access",
                  "errors": [
                    {
                      "errorType": "ENTITY_NOT_ALLOWED",
                      "message": "Given entity is not allowed"
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "Not Found - Requested resource does not exist or is not visible for the authenticated user.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Resource Not Found"
                }
              }
            }
          },
          "415": {
            "description": "Unsupported Media Type - Version not supported.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "07939123-b8aa-466a-a991-8ab45b3a2f8e",
                  "message": "Invalid `accept` header provided. Please ensure you are specifying supported version for the requested resource."
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Too Many Requests"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error.",
            "content": {
              "application/vnd.measurementresult.v1.3+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              },
              "application/vnd.measurementresult.v1.2+json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorV1"
                },
                "example": {
                  "requestId": "ad165994-489a-4fcf-a175-7a846c899b41",
                  "message": "Internal Server Error"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/clientHeader"
          },
          {
            "$ref": "#/components/parameters/profileHeader"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Accept",
            "description": "The version(s) of the requested resource. Available version(s) - `text/vnd.measurementresult.v1+xlsx`",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "studyId",
            "description": "The canonical identifier that represents a unique study.",
            "required": true
          }
        ],
        "tags": [
          "Measurement"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "PlaceholderValueTypeV1": {
        "description": "The placeholder value type.",
        "type": "string",
        "enum": [
          "STRING",
          "INTEGER"
        ]
      },
      "MeasurementStudiesSurveyQuestionPlaceholder": {
        "description": "The object specifying a placeholder in Survey question.",
        "type": "object",
        "properties": {
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "fieldValues": {
            "minItems": 0,
            "maxItems": 20,
            "description": "The survey question placeholder field values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            }
          }
        }
      },
      "BaseStudyV1M1": {
        "description": "The base study object.",
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          },
          "submissionType": {
            "$ref": "#/components/schemas/StudySubmissionTypeV1"
          },
          "lastUpdatedDate": {
            "format": "date-time",
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "studyResultStatus": {
            "description": "The status of result of the study.",
            "type": "string",
            "enum": [
              "AVAILABLE"
            ]
          },
          "rejectionReasons": {
            "minItems": 0,
            "maxItems": 100,
            "deprecated": true,
            "description": "List of reasons for rejection, this will only be available if the status is REJECTED. This field is deprecated, use statusReasons instead.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reviewDate": {
            "format": "date-time",
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "links": {
            "minItems": 0,
            "maxItems": 100,
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ResourceLinkV1M1"
            }
          },
          "id": {
            "description": "The study canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyStatusV1"
          },
          "createDate": {
            "format": "date-time",
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "SurveyQuestionObjectiveTypeV1": {
        "description": "The survey objective.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AWARENESS",
          "PREFERENCE",
          "FAVORABILITY",
          "AD_RECALL",
          "INTENT",
          "ATTITUDES",
          "BEHAVIORS",
          "FAMILIARITY",
          "ASSOCIATION"
        ]
      },
      "DSPAudienceResearchCostEstimationResponseV1M2": {
        "description": "The response object of DSP Audience Research study cost estimation.",
        "properties": {
          "cost": {
            "description": "The estimated cost for the Study.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV1M2"
          }
        }
      },
      "PlanningEligibilityV1M3": {
        "description": "The request object of measurement eligibility check.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "Vendor product canonical identifier.",
            "type": "string"
          },
          "rank": {
            "description": "The lower the number, the more recommended the vendor product is.",
            "type": "number"
          },
          "issues": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of issues will be provided if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EligibilityIssueV1M2"
            }
          },
          "status": {
            "$ref": "#/components/schemas/EligibilityStatusV1"
          }
        }
      },
      "BaseStudyV1M2": {
        "description": "The base study object.",
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          },
          "lastUpdatedDate": {
            "format": "date-time",
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "studyResultStatus": {
            "description": "The status of result of the study.",
            "type": "string",
            "enum": [
              "AVAILABLE"
            ]
          },
          "reviewDate": {
            "format": "date-time",
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyStatusV1"
          },
          "createDate": {
            "format": "date-time",
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "PaginatedMeasurementStudiesSurveys": {
        "description": "A list of study surveys.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveys": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurvey"
            }
          }
        }
      },
      "UpdateDSPCreativeTestingStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingMetadataV1M2"
          }
        ],
        "description": "Update DSP CREATIVE_TESTING study object.",
        "type": "object"
      },
      "PaginatedMeasurementOmnichannelMetricsStudies": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementOmnichannelMetricsStudy"
            }
          }
        }
      },
      "MeasurementBrandLiftStudyEligibilityData": {
        "description": "The campaign study eligibility data.",
        "type": "object",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical DSP order identifiers. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MeasurementStudiesVendorProductPolicy": {
        "description": "The policy rules will be enforced at vendor product level.",
        "type": "object",
        "properties": {
          "maximumOrders": {
            "description": "The maximum number of order allowed for the product.",
            "type": "integer"
          },
          "supportedGoals": {
            "minItems": 0,
            "maxItems": 7,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementGoal"
            }
          },
          "leadTime": {
            "description": "Days required for measurement configuration. It is recommended that the startDate of the campaign has sufficient padding to accommodate this lead time, but measurement can begin after the campaign start date in some cases.",
            "type": "integer"
          },
          "requiredQuestionObjectives": {
            "minItems": 0,
            "maxItems": 24,
            "description": "The required question objectives that need to be included as part of the survey.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionObjectiveType"
            }
          },
          "benchMarkCategoryRequired": {
            "description": "Whether or not the benchMark category is required for measurement setup.",
            "type": "boolean"
          },
          "supportedVerbs": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of top 100 supported verbs that can be used in survey questions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maximumSurveyQuestions": {
            "description": "The maximum number of survey questions required for the product.",
            "type": "integer"
          },
          "minimumOrders": {
            "description": "The maximum number of orders required for the product.",
            "type": "integer"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "verbRequired": {
            "description": "Whether or not a verb is required for measurement setup. It will be used in applicable survey questions to construct the question text.",
            "type": "boolean"
          },
          "customQuestionAllowed": {
            "description": "Whether custom survey questions are allowed.",
            "type": "boolean"
          },
          "maximumStudyLength": {
            "description": "The maximum required length/duration of the study in days.",
            "type": "integer"
          },
          "maximumPeerNames": {
            "description": "The maximum number of peer names required for the product.",
            "type": "integer"
          },
          "requiredQuestionCategories": {
            "minItems": 0,
            "maxItems": 4,
            "description": "The requirements for survey question categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionCategoryRequirement"
            }
          },
          "supportedMarketplaces": {
            "minItems": 0,
            "maxItems": 22,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesMarketplace"
            }
          },
          "minimumStudyLength": {
            "description": "The minimum required length/duration of the study in days.",
            "type": "integer"
          },
          "vendorApprovalRequired": {
            "description": "Whether or not the vendor requires an additional sign off process to fully qualify for study.",
            "type": "boolean"
          },
          "minimumPeerNames": {
            "description": "The minimum number of peer names required for the product.",
            "type": "integer"
          },
          "externalReferenceIdRequired": {
            "description": "Whether or not the vendor assigned external reference identifier is required for measurement setup.",
            "type": "boolean"
          },
          "minimumSurveyQuestions": {
            "description": "The minimum number of survey questions required for the product.",
            "type": "integer"
          }
        }
      },
      "SurveyErrorV1": {
        "description": "The survey error object.",
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "questionTemplateId": {
            "type": "string"
          },
          "errorType": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ]
      },
      "MeasurementAudienceResearchFeeRequest": {
        "description": "The request object to get fee for a Audience Research study.",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "templatedShortQuestions": {
            "minItems": 1,
            "maxItems": 20,
            "description": "A list of templated survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesTemplatedSurveyShortQuestion"
            }
          },
          "advertiserId": {
            "description": "The associated DSP advertiser identifier. Mandatory field for DSP clients.",
            "type": "string"
          }
        }
      },
      "VendorProductPolicyV1": {
        "description": "The policy rules will be enforced at vendor product level.",
        "type": "object",
        "properties": {
          "maximumOrders": {
            "description": "The maximum number of order allowed for the product.",
            "type": "integer"
          },
          "supportedGoals": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementGoalV1"
            }
          },
          "leadTime": {
            "description": "Days required for measurement configuration. It is recommended that the startDate of the campaign has sufficient padding to accommodate this lead time, but measurement can begin after the campaign start date in some cases.",
            "type": "integer"
          },
          "requiredQuestionObjectives": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The required question objectives that need to be included as part of the survey.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
            }
          },
          "benchMarkCategoryRequired": {
            "description": "Whether or not the benchMark category is required for measurement setup.",
            "type": "boolean"
          },
          "maximumSurveyQuestions": {
            "description": "The maximum number of survey questions required for the product.",
            "type": "integer"
          },
          "minimumOrders": {
            "description": "The maximum number of orders required for the product.",
            "type": "integer"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "customQuestionAllowed": {
            "description": "Whether custom survey questions are allowed.",
            "type": "boolean"
          },
          "maximumStudyLength": {
            "description": "The maximum required length/duration of the study in days.",
            "type": "integer"
          },
          "maximumPeerNames": {
            "description": "The maximum number of peer names required for the product.",
            "type": "integer"
          },
          "supportedMarketplaces": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementMarketplaceV1"
            }
          },
          "minimumStudyLength": {
            "description": "The minimum required length/duration of the study in days.",
            "type": "integer"
          },
          "vendorApprovalRequired": {
            "description": "Whether or not the vendor requires an additional sign off process to fully qualify for study.",
            "type": "boolean"
          },
          "minimumPeerNames": {
            "description": "The minimum number of peer names required for the product.",
            "type": "integer"
          },
          "externalReferenceIdRequired": {
            "description": "Whether or not the vendor assigned external reference identifier is required for measurement setup.",
            "type": "boolean"
          },
          "minimumSurveyQuestions": {
            "description": "The minimum number of survey questions required for the product.",
            "type": "integer"
          }
        }
      },
      "PaginatedDSPBrandLiftStudiesV1": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSPBrandLiftStudyV1"
            }
          }
        }
      },
      "SurveyResponseResultV1M2": {
        "description": "The rate of response for each response in Survey question.",
        "properties": {
          "questionResponse": {
            "$ref": "#/components/schemas/SurveyQuestionResponseV1M2"
          },
          "questionAsset": {
            "$ref": "#/components/schemas/AssetV1M2"
          },
          "isQualifyingResponse": {
            "description": "Is the response a qualifying response. Used in calculating Brand Lift.",
            "type": "boolean"
          },
          "responseRate": {
            "format": "double",
            "description": "The percentage of people choosing this response.",
            "type": "number"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "segmentValue": {
            "description": "The segment value to which this response data belongs to. Would be corresponding to the above segmentType field.",
            "type": "string"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "marginOfError": {
            "description": "The percentage of margin of error for this response.",
            "type": "number"
          },
          "statisticalSignificance": {
            "format": "double",
            "description": "The significance percentage for the response data in this segment.",
            "type": "number"
          },
          "adExposedGroupResponseRate": {
            "format": "double",
            "description": "The percent of people in ad exposed group choosing this response.",
            "type": "number"
          },
          "controlGroupResponseRate": {
            "format": "double",
            "description": "The percent of people in control group choosing this response.",
            "type": "number"
          },
          "questionSequence": {
            "description": "Sequence number of the question in the Survey.",
            "type": "number"
          },
          "segmentType": {
            "description": "The segment type to which this response data belongs to.",
            "type": "string",
            "enum": [
              "OVERALL",
              "AGE",
              "HOUSEHOLD_INCOME",
              "GENDER",
              "AUDIENCES",
              "FREQUENCY",
              "CHANNEL"
            ]
          }
        }
      },
      "SurveyQuestionCategoryV1M1": {
        "description": "The survey question category.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "BRAND_KPI",
          "WEIGHTING",
          "CUSTOM"
        ]
      },
      "StudyStatusV1": {
        "description": "The study status. Only required if study is in DRAFT as part of study creation/update.",
        "type": "string",
        "enum": [
          "RUNNING",
          "PENDING",
          "APPROVED",
          "REJECTED",
          "ENDED",
          "CANCELLED",
          "DRAFT",
          "INFEASIBLE"
        ]
      },
      "SurveyResponseResultV1M1": {
        "description": "The rate of response for each response in Survey question.",
        "properties": {
          "questionResponse": {
            "description": "The response choosen by Survey audience.",
            "type": "string"
          },
          "statisticalSignificance": {
            "description": "The significance percentage for the response data in this segment.",
            "type": "number"
          },
          "isQualifyingResponse": {
            "description": "Is the response a qualifying response. Used in calculating Brand Lift.",
            "type": "boolean"
          },
          "responseRate": {
            "description": "The percentage of people choosing this response.",
            "type": "number"
          },
          "adExposedGroupResponseRate": {
            "description": "The percent of people in ad exposed group choosing this response.",
            "type": "number"
          },
          "controlGroupResponseRate": {
            "description": "The percent of people in control group choosing this response.",
            "type": "number"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
          },
          "segmentValue": {
            "description": "The segment value to which this response data belongs to. Would be corresponding to the above segmentType field.",
            "type": "string"
          },
          "questionSequence": {
            "description": "Sequence number of the question in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "segmentType": {
            "description": "The segment type to which this response data belongs to.",
            "type": "string",
            "enum": [
              "OVERALL",
              "AGE",
              "HOUSEHOLD_INCOME",
              "GENDER",
              "AUDIENCES",
              "FREQUENCY",
              "CHANNEL"
            ]
          }
        }
      },
      "MeasurementBrandLiftStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementBrandLiftStudyMetadata"
          }
        ],
        "description": "BRAND_LIFT study object.",
        "type": "object"
      },
      "SurveyQuestionTypeV1": {
        "description": "The survey question type. SINGLE_SELECT question will allow customers to choose only one response, MULTI_SELECT question will allow customers to choose multiple responses, RATING will allow customers to choose a rating on a scale (e.g. 1 to 5), FREE_TEXT will allow customers to provide a free formed question text, SINGLE_ASSET_SELECT will allow customers to choose an asset as the response.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SINGLE_SELECT",
          "MULTI_SELECT",
          "RATING",
          "FREE_TEXT",
          "SINGLE_ASSET_SELECT"
        ]
      },
      "FundingTypeV1": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "COMPLIMENTARY"
        ]
      },
      "BenchmarkCategoryV1": {
        "description": "The study benchmark product category.",
        "type": "string",
        "enum": [
          "APPLIANCES",
          "APPS_AND_GAMES",
          "ARTS_CRAFTS_AND_SEWING",
          "AUTOMOTIVE",
          "BABY",
          "BEAUTY_AND_PERSONAL_CARE",
          "BOOKS",
          "CELL_PHONES_AND_ACCESSORIES",
          "CLOTHING_SHOES_AND_JEWELRY",
          "COMPUTERS_AND_ACCESSORIES",
          "DIGITAL_MUSIC",
          "ELECTRONICS",
          "EDUCATION",
          "FINANCIAL_AND_INSURANCE",
          "FOOD",
          "BEVERAGES",
          "HEALTH_AND_HOUSEHOLD",
          "HOME_AND_KITCHEN",
          "KITCHEN_AND_DINING",
          "MOVIES_AND_TV",
          "OFFICE_PRODUCTS",
          "PATIO_LAWN_AND_GARDEN",
          "PET_SUPPLIES",
          "RESTAURANTS",
          "SOFTWARE",
          "SPORTS_AND_OUTDOORS",
          "TELECOMMUNICATIONS_SERVICES",
          "TOOLS_AND_HOME_IMPROVEMENT",
          "TOYS_AND_GAMES",
          "VIDEO_GAMES",
          "HOSPITALITY"
        ]
      },
      "MeasurementStudiesBenchmarkCategory": {
        "description": "The study benchmark product category. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "APPLIANCES",
          "APPS_AND_GAMES",
          "ARTS_CRAFTS_AND_SEWING",
          "AUTOMOTIVE",
          "BABY",
          "BEAUTY_AND_PERSONAL_CARE",
          "BOOKS",
          "CELL_PHONES_AND_ACCESSORIES",
          "CLOTHING_SHOES_AND_JEWELRY",
          "COMPUTERS_AND_ACCESSORIES",
          "DIGITAL_MUSIC",
          "ELECTRONICS",
          "EDUCATION",
          "FINANCIAL_AND_INSURANCE",
          "FOOD",
          "BEVERAGES",
          "HEALTH_AND_HOUSEHOLD",
          "HOME_AND_KITCHEN",
          "KITCHEN_AND_DINING",
          "MOVIES_AND_TV",
          "OFFICE_PRODUCTS",
          "PATIO_LAWN_AND_GARDEN",
          "PET_SUPPLIES",
          "RESTAURANTS",
          "SOFTWARE",
          "SPORTS_AND_OUTDOORS",
          "TELECOMMUNICATIONS_SERVICES",
          "TOOLS_AND_HOME_IMPROVEMENT",
          "TOYS_AND_GAMES",
          "VIDEO_GAMES",
          "HOSPITALITY",
          "OTHER"
        ]
      },
      "StudyResponseV1": {
        "description": "Study response.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "The index of the object in the request, starting from 1.",
            "type": "integer"
          },
          "studyId": {
            "description": "The study canonical identifier.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message of the code.",
            "type": "string"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubErrorV1"
            }
          }
        }
      },
      "MeasurementStudiesAssetType": {
        "description": "The type of the Asset.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "IMAGE",
          "VIDEO"
        ]
      },
      "SubErrorV1": {
        "description": "The sub error object.",
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "errorType": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ]
      },
      "GetMeasurementStudiesSurvey": {
        "description": "The request object for fetching measurement studies based on surveys.",
        "type": "object",
        "properties": {
          "studyId": {
            "description": "A study canonical identifier. Either one of surveyIds or studyId should be provided.",
            "type": "string"
          },
          "surveyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Survey canonical identifier to filter with. Either one of surveyIds or studyId should be provided.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "StudyObjectiveV1": {
        "description": "Measurement category based on the purpose of the measurement.",
        "type": "string",
        "enum": [
          "CAMPAIGN_MEASUREMENT",
          "CAMPAIGN_PLANNING"
        ]
      },
      "OmnichannelMetricsBrandSearchRequestV1M2": {
        "description": "The request object to fetch brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "type": "object",
        "properties": {
          "brandIdFilter": {
            "minItems": 1,
            "maxItems": 50,
            "description": "List of brandIds in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brandNameSearch": {
            "description": "Text to search for eligible brands in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "type": "string"
          }
        }
      },
      "DSPAudienceResearchStudyV1M2": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The study canonical identifier. Immutable field.",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchMetadataV1M2"
          }
        ],
        "description": "DSP AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "MeasurementStudiesTemplatedSurveyShortQuestion": {
        "description": "The templated measurement survey question.",
        "type": "object",
        "properties": {
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/MeasurementStudiesGridQuestionResponses"
          },
          "placeholders": {
            "minItems": 0,
            "maxItems": 15,
            "description": "List of question placeholders",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholder"
            }
          },
          "surveyQuestionTemplateId": {
            "description": "The survey question template canonical identifier.",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesSurveyQuestionObjectiveType": {
        "description": "The survey objective. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AWARENESS",
          "PREFERENCE",
          "FAVORABILITY",
          "AD_RECALL",
          "INTENT",
          "ATTITUDES",
          "UNAIDED_AWARENESS",
          "CONSIDERATION",
          "AGE",
          "GENDER",
          "HOUSEHOLD_INCOME",
          "HOUSEHOLD_SIZE",
          "CHILDREN_IN_HOUSEHOLD",
          "EDUCATION",
          "ETHNICITY",
          "TIME_ONLINE",
          "TV_MEDIA_CONSUMPTION",
          "IN_MARKET_STATUS",
          "PURCHASE_FREQUENCY",
          "PURCHASE_HISTORY",
          "PURCHASE_LOCATION",
          "BEHAVIORS",
          "FAMILIARITY",
          "ASSOCIATION",
          "OTHER"
        ]
      },
      "DSPOmnichannelMetricsStudyV1M3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsMetadataV1M2"
          }
        ],
        "description": "DSP OMNICHANNEL_METRICS study object.",
        "type": "object"
      },
      "DSPCreativeTestingEligibilityDataV1M2": {
        "description": "The creative testing study eligibility data.",
        "type": "object",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          }
        }
      },
      "PaginatedSurveysV1": {
        "description": "A list of study surveys.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveys": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyV1"
            }
          }
        }
      },
      "MeasurementStudiesGridQuestionResponses": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "type": "object",
        "properties": {
          "columns": {
            "minItems": 0,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            }
          },
          "rows": {
            "minItems": 0,
            "maxItems": 10,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderFieldValue"
            }
          }
        }
      },
      "MeasurementOmnichannelMetricsFeeRequest": {
        "description": "The request object to get fee for an Omnichannel Metrics study.",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study",
            "type": "string"
          },
          "advertiserId": {
            "description": "The associated DSP advertiser identifier. Mandatory field for DSP clients.",
            "type": "string"
          }
        }
      },
      "GetMeasurementStudiesBrandLiftResult": {
        "description": "The request object for fetching brand lift results of a specific study.",
        "type": "object",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study.",
            "type": "string"
          }
        }
      },
      "SurveyResponsesV1": {
        "description": "Surveys response.",
        "type": "object",
        "properties": {
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          },
          "responses": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseV1"
            }
          }
        }
      },
      "MeasurementStudiesEligibilityIssueSeverity": {
        "description": "Supported values are WARNING, ERROR. ERROR severity issues need to be resolved while WARNING severity issues can be ignored. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "WARNING",
          "ERROR",
          "OTHER"
        ]
      },
      "PaginatedMeasurementReachAndFrequencyStudies": {
        "description": "A list of Reach and Frequency studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementReachAndFrequencyStudy"
            }
          }
        }
      },
      "MeasurementStudiesFundingType": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon. Check vendor product policy for pricing info. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "COMPLIMENTARY",
          "THIRD_PARTY_PAYMENT",
          "CPM",
          "FLAT_RATE",
          "OTHER"
        ]
      },
      "BaseEligibilityRequestV1M1": {
        "description": "The request object of measurement eligibility check.",
        "type": "object",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M1"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vendorTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M1"
            }
          }
        }
      },
      "BaseEligibilityRequestV1M2": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M2"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vendorTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M2"
            }
          }
        }
      },
      "BaseEligibilityRequestV1M3": {
        "description": "The request object of measurement eligibility check.",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M3"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vendorTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M3"
            }
          }
        }
      },
      "GetMeasurementStudiesAudienceResearch": {
        "description": "The request object for audience research study.",
        "type": "object",
        "properties": {
          "studyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Study canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The advertiser canonical identifier. Used for querying audience research studies for a DSP advertiser Account.",
            "type": "string"
          }
        }
      },
      "VendorProductRequestV1": {
        "description": "The request object to fetch measurement vendor products.",
        "type": "object",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1"
            }
          },
          "objectiveTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyObjectiveV1"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdTypeV1"
            }
          },
          "vendorTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1"
            }
          },
          "studyTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyTypeV1"
            }
          }
        }
      },
      "MeasurementOmnichannelMetricsStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesOmnichannelMetricsEligibilityData"
          }
        ],
        "description": "The request object of omnichannel metrics eligibility check."
      },
      "DSPOmnichannelMetricsStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsMetadataV1M2"
          }
        ],
        "description": "DSP OMNICHANNEL_METRICS study object.",
        "type": "object"
      },
      "DSPBrandLiftStudyV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftMetadataV1"
          }
        ],
        "description": "DSP BRAND_LIFT study object.",
        "type": "object"
      },
      "DSPCreativeTestingMetadataV1M2": {
        "description": "The basic model for all DSP CREATIVE_TESTING objective studies.",
        "type": "object",
        "properties": {
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "assets": {
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response. In case of API responses, number of assets returned would be limited to 10 even if a creative testing study has more than 10 assets associated with it.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetV1M2"
            }
          },
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          },
          "productCategory": {
            "description": "Optional study product category.",
            "type": "string"
          }
        }
      },
      "SurveyResponseResultV1": {
        "description": "The rate of response for each response in Survey question.",
        "properties": {
          "questionResponse": {
            "description": "The response choosen by Survey audience.",
            "type": "string"
          },
          "statisticalSignificance": {
            "format": "double",
            "description": "The significance percentage for the response data in this segment.",
            "type": "number"
          },
          "isQualifyingResponse": {
            "description": "Is the response a qualifying response. Used in calculating Brand Lift.",
            "type": "boolean"
          },
          "responseRate": {
            "format": "double",
            "description": "The percentage of people choosing this response.",
            "type": "number"
          },
          "adExposedGroupResponseRate": {
            "format": "double",
            "description": "The percent of people in ad exposed group choosing this response.",
            "type": "number"
          },
          "controlGroupResponseRate": {
            "format": "double",
            "description": "The percent of people in control group choosing this response.",
            "type": "number"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "segmentValue": {
            "description": "The segment value to which this response data belongs to. Would be corresponding to the above segmentType field.",
            "type": "string"
          },
          "questionSequence": {
            "description": "Sequence number of the question in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          },
          "segmentType": {
            "description": "The segment type to which this response data belongs to.",
            "type": "string",
            "enum": [
              "OVERALL",
              "AGE",
              "HOUSEHOLD_INCOME",
              "GENDER",
              "AUDIENCES",
              "FREQUENCY",
              "CHANNEL"
            ]
          },
          "marginOfError": {
            "description": "The percentage of margin of error for this response.",
            "type": "number"
          }
        }
      },
      "MeasurementAudienceResearchStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementAudienceResearchStudyEligibilityData"
          }
        ],
        "description": "The request object of Audience Research study eligibility check."
      },
      "SurveyQuestionPlaceholderAllowedValueV1": {
        "description": "Allowed values for placeholder.",
        "type": "object",
        "properties": {
          "values": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Allowed values for placeholder.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "parentValue": {
            "description": "The field value that this value list depend on. Will be empty if this is the default list.",
            "type": "string"
          },
          "parentField": {
            "description": "The field name that this value list depends on. Will be empty if this is the default list.",
            "type": "string"
          }
        }
      },
      "MeasurementCreativeTestingStudyMetadata": {
        "description": "The basic model for all CREATIVE_TESTING objective studies.",
        "type": "object",
        "properties": {
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "assets": {
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response. In case of API responses, number of assets returned would be limited to 10 even if a creative testing study has more than 10 assets associated with it.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAsset"
            }
          },
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          },
          "productCategory": {
            "description": "Optional study product category.",
            "type": "string"
          }
        }
      },
      "AudienceGroupV1M2": {
        "description": "The model for holding Audiece selection within a group. The expression within an audience group will be evaluated using the IntraGroupOperator. The InterGroupOperator will be applied on the output of one audience group with another audience group.",
        "type": "object",
        "properties": {
          "interGroupOperator": {
            "$ref": "#/components/schemas/AudienceSelectionOperatorV1M2"
          },
          "intraGroupOperator": {
            "$ref": "#/components/schemas/AudienceSelectionOperatorV1M2"
          },
          "audienceSegments": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of audience segments in this group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceSegmentV1M2"
            }
          }
        }
      },
      "MeasurementStudiesOmnichannelMetricsBrand": {
        "type": "object",
        "properties": {
          "brandId": {
            "description": "The brand canonical Id",
            "type": "string"
          },
          "company": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          },
          "brand": {
            "description": "The brand name.",
            "type": "string"
          },
          "majorBrand": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          }
        }
      },
      "StudyTypeV1M2": {
        "description": "The study type.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "BRAND_LIFT",
          "OMNICHANNEL_METRICS",
          "AUDIENCE_RESEARCH",
          "CREATIVE_TESTING"
        ]
      },
      "PaginatedDSPAudienceResearchStudiesV1M2": {
        "description": "A list of audience research studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSPAudienceResearchStudyV1M2"
            }
          }
        }
      },
      "PaginatedDSPBrandLiftStudiesV1M1": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSPBrandLiftStudyV1M1"
            }
          }
        }
      },
      "PaginatedBaseStudiesV1": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseStudyV1"
            }
          }
        }
      },
      "MeasurementStudiesEligibilityMetadata": {
        "description": "The eligibility metadata.",
        "properties": {
          "endDate": {
            "format": "date-time",
            "description": "The latest end date of the associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "impressions": {
            "format": "int64",
            "description": "The total estimated impressions.",
            "readOnly": true,
            "type": "integer"
          },
          "flightLength": {
            "description": "The flight length of the associated orders. Expressed in days.",
            "readOnly": true,
            "type": "integer"
          },
          "startDate": {
            "format": "date-time",
            "description": "The earliest start date of associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "budget": {
            "format": "double",
            "description": "The total budget. Expressed in dollars.",
            "readOnly": true,
            "type": "number"
          }
        }
      },
      "MeasurementCreativeTestingFeeRequest": {
        "description": "The request object to get fee for a Creative Testing study.",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "templatedQuestions": {
            "minItems": 1,
            "maxItems": 20,
            "description": "A list of templated survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesTemplatedSurveyShortQuestion"
            }
          },
          "assets": {
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAsset"
            }
          },
          "advertiserId": {
            "description": "The associated DSP advertiser identifier. Mandatory field for DSP clients.",
            "type": "string"
          }
        }
      },
      "MeasurementBrandLiftStudyResult": {
        "description": "The response object for downloading study results.",
        "type": "object",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "enum": [
              "CSV",
              "PDF",
              "POWERPOINT",
              "JPEG",
              "PNG",
              "OTHER"
            ]
          }
        }
      },
      "PaginatedBaseStudiesV1M1": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BaseStudyV1M1"
            }
          }
        }
      },
      "MeasurementStudiesSurveyQuestionType": {
        "description": "The survey question type. SINGLE_SELECT question will allow customers to choose only one response, MULTI_SELECT question will allow customers to choose multiple responses, RATING will allow customers to choose a rating on a scale (e.g. 1 to 5), FREE_TEXT will allow customers to provide a free formed question text, SINGLE_ASSET_SELECT will allow customers to choose an asset as the response. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SINGLE_SELECT",
          "MULTI_SELECT",
          "RATING",
          "FREE_TEXT",
          "SINGLE_ASSET_SELECT",
          "SINGLE_SELECT_GRID",
          "OTHER"
        ]
      },
      "MeasurementStudiesAsset": {
        "description": "The Amazon Creative Asset Library asset identifier. Refer https://advertising.amazon.com/API/docs/en-us/creative-asset-library",
        "properties": {
          "assetId": {
            "description": "The assetId.",
            "type": "string"
          },
          "version": {
            "description": "The version of the asset.",
            "type": "string"
          },
          "assetType": {
            "$ref": "#/components/schemas/MeasurementStudiesAssetType"
          }
        }
      },
      "VendorProductRequestV1M1": {
        "description": "The request object to fetch measurement vendor products.",
        "type": "object",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1M1"
            }
          },
          "objectiveTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyObjectiveV1"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AdTypeV1"
            }
          },
          "vendorTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1M1"
            }
          },
          "studyTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyTypeV1"
            }
          }
        }
      },
      "MeasurementStudiesAudienceSegment": {
        "description": "The model for holding an Audience Segment.",
        "type": "object",
        "properties": {
          "segmentId": {
            "description": "ID for the audience segment. This ID can be fetched from these APIs- https://advertising.amazon.com/API/docs/en-us/audiences/#/Discovery",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesVendorProductRecommendationsOrderMetadata": {
        "description": "Metadata around a hypothetical order.",
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/MeasurementGoal"
          },
          "endDate": {
            "format": "date-time",
            "description": "The estimated end date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "type": "string"
          },
          "impressions": {
            "format": "int64",
            "description": "The total estimated impressions of the order.",
            "type": "integer"
          },
          "startDate": {
            "format": "date-time",
            "description": "The estimated start date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "type": "string"
          },
          "budget": {
            "format": "double",
            "description": "The total estimated budget of the order.",
            "type": "number"
          }
        }
      },
      "UpdateDSPAudienceResearchStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchMetadataV1M2"
          }
        ],
        "description": "Update DSP AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "BrandLiftSummaryV1": {
        "description": "Summary of Brand Lift achieved for an objective.",
        "properties": {
          "qualifyingResponses": {
            "minItems": 0,
            "maxItems": 10,
            "description": "Qualifying responses aggregated to measure the Brand Lift.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statisticalSignificance": {
            "format": "double",
            "description": "The significance percentage of achieved Brand Lift.",
            "type": "number"
          },
          "controlGroupRate": {
            "format": "double",
            "description": "Control group response rate.",
            "type": "number"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "adExposedGroupRate": {
            "format": "double",
            "description": "Ad exposed group response rate.",
            "type": "number"
          },
          "benchmarkLiftRate": {
            "format": "double",
            "description": "The benchmark lift rate for the selected product category in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          }
        }
      },
      "TemplatedSurveyQuestionV1": {
        "description": "The templated measurement survey question.",
        "type": "object",
        "properties": {
          "placeholders": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of question placeholders",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderV1"
            }
          },
          "id": {
            "description": "The survey question template canonical identifier.",
            "type": "string"
          }
        }
      },
      "SurveyQuestionSubCategoryV1M1": {
        "description": "The survey question sub-category. Only applicable to certain categories",
        "readOnly": true,
        "type": "string",
        "enum": [
          "DEMOGRAPHIC",
          "BEHAVIOR",
          "PURCHASE_HISTORY"
        ]
      },
      "PaginatedDSPOmnichannelMetricsStudiesV1M3": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M3"
            }
          }
        }
      },
      "PaginatedDSPOmnichannelMetricsStudiesV1M2": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSPOmnichannelMetricsStudyV1M2"
            }
          }
        }
      },
      "TemplatedSurveyQuestionV1M1": {
        "description": "The templated measurement survey question.",
        "type": "object",
        "properties": {
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/GridQuestionResponsesV1M1"
          },
          "placeholders": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of question placeholders",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderV1"
            }
          },
          "id": {
            "description": "The survey question template canonical identifier.",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesEligibilityField": {
        "description": "Fields that will be checked as part of eligibility API call. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "LOCALE",
          "BUDGET",
          "GOAL",
          "START_TIME",
          "END_TIME",
          "FLIGHT_LENGTH",
          "LEAD_TIME",
          "IMPRESSIONS",
          "ORDER",
          "BUYER_COUNT",
          "OTHER"
        ]
      },
      "ResourceLinkV1M1": {
        "description": "The link that can be used to access corresponding resources in advertising portal.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The resource name.",
            "type": "string"
          },
          "url": {
            "description": "The resource url.",
            "type": "string"
          }
        }
      },
      "VendorTypeV1M2": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AMAZON",
          "OMNICHANNEL_METRICS"
        ]
      },
      "MeasurementStudiesPlaceholderValueType": {
        "description": "The placeholder value type. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "STRING",
          "INTEGER",
          "OTHER"
        ]
      },
      "PaginatedMeasurementStudiesOmnichannelMetricsBrands": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of matched brands.",
            "type": "integer"
          },
          "brands": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesOmnichannelMetricsBrand"
            }
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "VendorTypeV1M3": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AMAZON",
          "KANTAR",
          "UPWAVE",
          "NIELSEN",
          "MACROMILL",
          "DYNATA",
          "LUCID",
          "OMNICHANNEL_METRICS"
        ]
      },
      "MeasurementStudiesCampaignPlanningMetadata": {
        "description": "The basic model for all CAMPAIGN_PLANNING objective studies.",
        "type": "object",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "VendorTypeV1M1": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AMAZON",
          "KANTAR",
          "UPWAVE",
          "NIELSEN",
          "MACROMILL",
          "DYNATA",
          "LUCID"
        ]
      },
      "DSPCampaignMeasurementMetadataV1M1": {
        "description": "The basic model for all DSP CAMPAIGN_MEASUREMENT objective studies.",
        "type": "object",
        "properties": {
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "MeasurementReachAndFrequencyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementReachAndFrequencyEligibilityData"
          }
        ],
        "description": "The request object of reach and frequency eligibility check.",
        "type": "object"
      },
      "GetMeasurementStudies": {
        "description": "The request object for fetching measurement studies.",
        "type": "object",
        "properties": {
          "studyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Study canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The advertiser canonical identifier. Either one of studyIds or advertiserId should be provided.",
            "type": "string"
          }
        }
      },
      "DSPBrandLiftMetadataV1": {
        "description": "The basic model for all DSP BRAND_LIFT objective studies.",
        "type": "object",
        "properties": {
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "peerNames": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of peer names for the study brand.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "benchmarkCategory": {
            "$ref": "#/components/schemas/BenchmarkCategoryV1"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        }
      },
      "MeasurementMarketplaceV1": {
        "description": "The marketplace with corresponding rules.",
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/MeasurementCountryV1"
          },
          "supportedLocales": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementLocaleV1"
            }
          },
          "minimumImpressions": {
            "format": "int64",
            "description": "The minimum impressions.",
            "type": "integer"
          },
          "minimumBudget": {
            "format": "double",
            "description": "The minimum budget. Expressed in dollars.",
            "type": "number"
          }
        }
      },
      "MeasurementStudiesAudienceGroup": {
        "description": "The model for holding Audience selection within a group. The expression within an audience group will be evaluated using the IntraGroupOperator. The InterGroupOperator will be applied on the output of one audience group with another audience group.",
        "type": "object",
        "properties": {
          "interGroupOperator": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceSelectionOperator"
          },
          "intraGroupOperator": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceSelectionOperator"
          },
          "audienceSegments": {
            "minItems": 0,
            "maxItems": 25,
            "description": "List of audience segments in this group.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAudienceSegment"
            }
          }
        }
      },
      "SurveyQuestionTemplateV1": {
        "description": "Survey question template for vendor product.",
        "type": "object",
        "properties": {
          "minimumQualifyingResponses": {
            "description": "The minimum number of qualifying responses required for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "maximumQualifyingResponses": {
            "description": "The maximum number of qualifying responses allowed for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "qualifyingResponses": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The pre-defined qualifying survey question responses with placeholders, this will help to define which responses will be counted as positive ones in the study report.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "questionResponses": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The pre-defined survey question responses with placeholders.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "type": {
            "$ref": "#/components/schemas/SurveyQuestionTypeV1"
          },
          "objectiveType": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1"
          },
          "questionText": {
            "description": "The survey question text with placeholders.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "The associated vendor product id.",
            "type": "string"
          },
          "placeholderCandidates": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
            }
          },
          "minimumQuestionResponses": {
            "description": "The minimum number of responses required for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "id": {
            "description": "The survey question template canonical Id.",
            "type": "string"
          },
          "maximumQuestionResponses": {
            "description": "The maximum number of responses allowed for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          }
        }
      },
      "CustomSurveyQuestionV1": {
        "deprecated": true,
        "description": "The templated measurement survey question.",
        "type": "object",
        "properties": {
          "responses": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/SurveyQuestionTypeV1"
          },
          "questionText": {
            "description": "The survey question text.",
            "type": "string"
          }
        }
      },
      "MeasurementStudyObjective": {
        "description": "Measurement category based on the purpose of the measurement. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "CAMPAIGN_MEASUREMENT",
          "CAMPAIGN_PLANNING",
          "OTHER"
        ]
      },
      "SurveyStatusV1": {
        "description": "The survey status. Only required if the survey is in DRAFT. Created survey will be in AVAILABLE status by default and will only be in IN_USE status if it's associated with a study.",
        "type": "string",
        "enum": [
          "IN_USE",
          "AVAILABLE",
          "DRAFT"
        ]
      },
      "GetMeasurementStudiesCreativeTestingResult": {
        "description": "The request object for fetching creative testing results of a specific study.",
        "type": "object",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study.",
            "type": "string"
          }
        }
      },
      "VendorProductV1M1": {
        "description": "The measurement vendor product.",
        "type": "object",
        "properties": {
          "vendorType": {
            "$ref": "#/components/schemas/VendorTypeV1M1"
          },
          "vendorProductType": {
            "$ref": "#/components/schemas/VendorProductTypeV1M1"
          },
          "adType": {
            "$ref": "#/components/schemas/AdTypeV1"
          },
          "fundingType": {
            "$ref": "#/components/schemas/FundingTypeV1M1"
          },
          "displayName": {
            "description": "The vendor product display name.",
            "readOnly": true,
            "type": "string"
          },
          "studyType": {
            "$ref": "#/components/schemas/StudyTypeV1"
          },
          "id": {
            "description": "The vendor product identifier.",
            "readOnly": true,
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/StudyObjectiveV1"
          }
        }
      },
      "MeasurementCreativeTestingStudyEligibilityData": {
        "description": "The creative testing study eligibility data.",
        "type": "object",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          }
        }
      },
      "EligibilityResponseV1M2": {
        "description": "The eligibility check response object.",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/EligibilityMetadataV1"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorProductEligibilityV1M2"
            }
          }
        }
      },
      "CreateDSPAudienceResearchStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchMetadataV1M2"
          }
        ],
        "description": "Create DSP AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionPlaceholderAllowedRange": {
        "description": "Allowed value range for placeholder.",
        "type": "object",
        "properties": {
          "minimumValue": {
            "format": "int32",
            "description": "The minimum allowed value.",
            "type": "integer"
          },
          "parentValue": {
            "description": "The field value that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          },
          "maximumValue": {
            "format": "int32",
            "description": "The maximum allowed value.",
            "type": "integer"
          },
          "parentField": {
            "description": "The field name that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          }
        }
      },
      "DSPOmnichannelMetricsEligibilityRequestV1M3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M3"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP omnichannel metrics eligibility check."
      },
      "DSPOmnichannelMetricsEligibilityRequestV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPOmnichannelMetricsEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP omnichannel metrics eligibility check."
      },
      "CreateDSPCreativeTestingStudyV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingMetadataV1M2"
          }
        ],
        "description": "Create DSP CREATIVE_TESTING study object.",
        "type": "object"
      },
      "DSPCreativeTestingStudyV1M2": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "id": {
                "description": "The study canonical identifier. Immutable field.",
                "type": "string"
              }
            }
          },
          {
            "$ref": "#/components/schemas/BaseStudyV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignPlanningMetadataV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingMetadataV1M2"
          }
        ],
        "description": "DSP CREATIVE_TESTING study object.",
        "type": "object"
      },
      "GetMeasurementStudiesOmnichannelMetricsResult": {
        "description": "The request object for fetching omnichannel metrics results of a specific study.",
        "type": "object",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study.",
            "type": "string"
          }
        }
      },
      "GetMeasurementStudiesSurveyQuestionTemplate": {
        "description": "The request object for fetching survey question templates of a specific vendor product.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "Vendor product canonical identifier to filter with.",
            "type": "string"
          }
        }
      },
      "StudyResponsesV1": {
        "description": "Studies response.",
        "type": "object",
        "properties": {
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          },
          "responses": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyResponseV1"
            }
          }
        }
      },
      "BrandLiftStudyResultV1": {
        "description": "The result of Brand Lift study.",
        "properties": {
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          },
          "brandLiftSummary": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Summary of Brand Lift achieved for each objective.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandLiftSummaryV1"
            }
          },
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "minItems": 1,
            "maxItems": 2000,
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1"
            }
          }
        }
      },
      "MeasurementStudyType": {
        "description": "The study type. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "BRAND_LIFT",
          "OMNICHANNEL_METRICS",
          "AUDIENCE_RESEARCH",
          "CREATIVE_TESTING",
          "REACH_AND_FREQUENCY",
          "OTHER"
        ]
      },
      "PaginatedMeasurementAudienceResearchStudies": {
        "description": "A list of audience research studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementAudienceResearchStudy"
            }
          }
        }
      },
      "MeasurementStudiesBaseEligibilityRequest": {
        "description": "The request object of measurement eligibility check.",
        "type": "object",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 0,
            "maxItems": 5,
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesFundingType"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 0,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vendorTypeFilters": {
            "minItems": 0,
            "maxItems": 9,
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorType"
            }
          }
        }
      },
      "AudienceResearchStudyResultV1M2": {
        "description": "The result of Audience Research study.",
        "properties": {
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          },
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "minItems": 1,
            "maxItems": 2000,
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1"
            }
          }
        }
      },
      "MeasurementStudySubmissionType": {
        "writeOnly": true,
        "description": "The submission type for the creation and updating of studies. Currently, this submission type is supported for brand lift and reach and frequency studies only.  This is an optional parameter in each of the request objects and its default value is `SUBMISSION` if not provided. A value of `SUBMISSION` indicates that a study should be submitted for approval. A value of `DRAFT` indicates that a study should be saved but not submitted.",
        "type": "string",
        "enum": [
          "DRAFT",
          "SUBMISSION"
        ]
      },
      "PaginatedSurveyQuestionTemplatesV1M1": {
        "type": "object",
        "properties": {
          "surveyQuestionTemplates": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionTemplateV1M1"
            }
          },
          "totalResults": {
            "format": "int32",
            "description": "The total number of templates.",
            "type": "integer"
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "DSPBrandLiftStudyV1M1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseStudyV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPCampaignMeasurementMetadataV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftMetadataV1M1"
          }
        ],
        "description": "DSP BRAND_LIFT study object.",
        "type": "object"
      },
      "EligibilityStatusV1": {
        "description": "Supported values are ELIGIBLE, INELIGIBLE and ELIGIBLE_WITH_WARNING. INELIGIBLE status indicates the study can not be created.",
        "type": "string",
        "enum": [
          "ELIGIBLE",
          "INELIGIBLE",
          "ELIGIBLE_WITH_WARNING"
        ]
      },
      "DSPBrandLiftMetadataV1M1": {
        "description": "The basic model for all DSP BRAND_LIFT objective studies.",
        "type": "object",
        "properties": {
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "peerNames": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of peer names for the study brand.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verb": {
            "description": "The verb that will be used in the applicable survey questions to construct the question text.",
            "type": "string"
          },
          "benchmarkCategory": {
            "$ref": "#/components/schemas/BenchmarkCategoryV1"
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        }
      },
      "MeasurementGoal": {
        "description": "The measurement budget optimization goal type goal. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "ENGAGEMENT_WITH_MY_AD",
          "CONSIDERATIONS_ON_AMAZON",
          "CONVERSIONS_OFF_AMAZON",
          "PURCHASES_ON_AMAZON",
          "MOBILE_APP_INSTALLS",
          "AWARENESS",
          "OTHER"
        ]
      },
      "PaginatedVendorProductsV1": {
        "description": "A list of measurement vendor products.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of vendor products.",
            "type": "integer"
          },
          "vendorProducts": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorProductV1"
            }
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "SurveyQuestionPlaceholderAllowedRangeV1": {
        "description": "Allowed value range for placeholder.",
        "type": "object",
        "properties": {
          "minimumValue": {
            "format": "int32",
            "description": "The minimum allowed value.",
            "type": "integer"
          },
          "parentValue": {
            "description": "The field value that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          },
          "maximumValue": {
            "format": "int32",
            "description": "The maximum allowed value.",
            "type": "integer"
          },
          "parentField": {
            "description": "The field name that this range depends on. Will be empty if this range is the default range.",
            "type": "string"
          }
        }
      },
      "MeasurementReachAndFrequencyEligibilityData": {
        "description": "The campaign study eligibility data.",
        "type": "object",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical DSP order identifiers. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MeasurementStudiesSurveyQuestionPlaceholderFieldValue": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The survey question placeholder field value.",
            "type": "string"
          },
          "isQualifying": {
            "description": "This is only required if the corresponding field is 'response', this will help to define if the response value will be counted as a positive one in the study report.",
            "type": "boolean"
          }
        }
      },
      "StudyReviewStatusV1": {
        "description": "The study review status. APPROVED studies will start delivering once reach the startDate.",
        "type": "string",
        "enum": [
          "APPROVED",
          "REJECTED",
          "INFEASIBLE"
        ]
      },
      "AssetTypeV1M2": {
        "description": "The type of the Asset.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "IMAGE",
          "VIDEO"
        ]
      },
      "MeasurementReachAndFrequencyStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementReachAndFrequencyMetadata"
          }
        ],
        "description": "REACH_AND_FREQUENCY study object.",
        "type": "object"
      },
      "GetMeasurementStudiesBrandLift": {
        "description": "The request object for fetching brand lift studies.",
        "type": "object",
        "properties": {
          "studyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Study canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The advertiser canonical identifier. Used for querying brand lift studies for a DSP advertiser Account.",
            "type": "string"
          }
        }
      },
      "PaginatedSurveysV1M1": {
        "description": "A list of study surveys.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "surveys": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyV1M1"
            }
          }
        }
      },
      "MeasurementStudiesVendorProduct": {
        "description": "The measurement vendor product.",
        "type": "object",
        "properties": {
          "vendorType": {
            "$ref": "#/components/schemas/MeasurementStudiesVendorType"
          },
          "vendorProductId": {
            "description": "The vendor product identifier.",
            "readOnly": true,
            "type": "string"
          },
          "adType": {
            "minItems": 1,
            "maxItems": 4,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAdType"
            }
          },
          "fundingType": {
            "$ref": "#/components/schemas/MeasurementStudiesFundingType"
          },
          "displayName": {
            "description": "The vendor product display name.",
            "readOnly": true,
            "type": "string"
          },
          "studyType": {
            "$ref": "#/components/schemas/MeasurementStudyType"
          },
          "objective": {
            "$ref": "#/components/schemas/MeasurementStudyObjective"
          }
        }
      },
      "MeasurementCreativeTestingStudyResult": {
        "description": "The response object for downloading study results.",
        "type": "object",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "enum": [
              "CSV"
            ]
          }
        }
      },
      "EligibilityFieldV1": {
        "description": "Fields that will be checked as part of eligibility API call.",
        "type": "string",
        "enum": [
          "LOCALE",
          "BUDGET",
          "GOAL",
          "START_TIME",
          "END_TIME",
          "FLIGHT_LENGTH",
          "LEAD_TIME",
          "IMPRESSIONS",
          "ORDER"
        ]
      },
      "MeasurementStudiesVendorProductRecommendationsRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesVendorProductRecommendationsMetadata"
          }
        ],
        "description": "The request object to get recommendations.",
        "type": "object"
      },
      "MeasurementStudiesSurveyQuestionCategoryRequirement": {
        "description": "The requirement for specific survey question category.",
        "type": "object",
        "properties": {
          "minimumQuestions": {
            "description": "The minimum number of questions required for the question category.",
            "type": "integer"
          },
          "maximumQuestions": {
            "description": "The maximum number of questions required for the question category.",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionCategory"
          }
        }
      },
      "MeasurementStudiesSurveyShortQuestionTemplate": {
        "description": "Template for short survey question for a vendor product. A short question supports 10 responses per question. For Grid based questions, maximum rows and columns can be 10 each.",
        "type": "object",
        "properties": {
          "minimumQualifyingResponses": {
            "description": "The minimum number of qualifying responses required for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "maximumQualifyingResponses": {
            "description": "The maximum number of qualifying responses allowed for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "subCategory": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionSubCategory"
          },
          "qualifyingResponses": {
            "minItems": 0,
            "maxItems": 10,
            "description": "The pre-defined qualifying survey question responses with placeholders, this will help to define which responses will be counted as positive ones in the study report.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "questionResponses": {
            "minItems": 0,
            "maxItems": 10,
            "description": "The pre-defined survey question responses with placeholders.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementStudiesLocale"
          },
          "type": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionType"
          },
          "priority": {
            "description": "The priority of the question. If present this will determine the ordering of questions in a survey. The check will be enforced when a survey is created/updated. Lower number indicates higher priority.",
            "type": "integer"
          },
          "objectiveType": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionObjectiveType"
          },
          "questionText": {
            "description": "The survey question text with placeholders.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "The associated vendor product id.",
            "type": "string"
          },
          "placeholderCandidates": {
            "minItems": 0,
            "maxItems": 15,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidate"
            }
          },
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionGridQuestionResponse"
          },
          "minimumQuestionResponses": {
            "description": "The minimum number of responses required for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionCategory"
          },
          "maximumQuestionResponses": {
            "description": "The maximum number of responses allowed for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "surveyQuestionTemplateId": {
            "description": "The survey question template canonical Id.",
            "type": "string"
          }
        }
      },
      "DSPCreativeTestingCostEstimationResponseV1M2": {
        "description": "The response object of DSP Creative Testing study cost estimation.",
        "properties": {
          "cost": {
            "description": "The estimated cost for the Study.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/CurrencyCodeV1M2"
          }
        }
      },
      "MeasurementOmnichannelMetricsFee": {
        "description": "The response object to get fee for an Omnichannel Metrics study.",
        "properties": {
          "fee": {
            "format": "double",
            "description": "The fee rate for the Study in percent. This will be expressed as a value between 0.0000 and 1.0000 and  rounded to 4 decimal places.",
            "maximum": 1,
            "readOnly": true,
            "type": "number",
            "minimum": 0,
            "example": 0.04
          }
        }
      },
      "DSPCreativeTestingEligibilityRequestV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPCreativeTestingEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP Creative Testing study eligibility check."
      },
      "PlanningOrderMetadataV1M3": {
        "description": "Metadata around a hypothetical order.",
        "type": "object",
        "properties": {
          "goal": {
            "$ref": "#/components/schemas/MeasurementGoalV1"
          },
          "endDate": {
            "format": "date-time",
            "description": "The estimated end date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "type": "string"
          },
          "impressions": {
            "format": "int64",
            "description": "The total estimated impressions of the order.",
            "type": "integer"
          },
          "startDate": {
            "format": "date-time",
            "description": "The estimated start date of the order in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "type": "string"
          },
          "budget": {
            "format": "double",
            "description": "The total estimated budget of the order.",
            "type": "number"
          }
        }
      },
      "MeasurementStudyStatusReasonType": {
        "description": "Measurement study reason type. Consider upgrading API version if enum OTHER is received.",
        "type": "string",
        "enum": [
          "REMOVE_EXTRA_SPACES_BETWEEN_BEFORE_OR_AFTER_WORDS",
          "REMOVE_SPACES_BETWEEN_LETTERS",
          "REMOVE_ALLCAPITALIZED_WORDS_EXCEPT_FOR_ACRONYMS",
          "CAPITALIZE_THE_FIRST_LETTER_OF_PROPER_NOUNS_LIKE_COUNTRY_NAMES",
          "CAPITALIZE_THE_FIRST_LETTER_OF_ALL_CUSTOM_ATTRIBUTES",
          "RESOLVE_INAPPROPRIATELY_CAPITALIZED_WORDS",
          "RESOLVE_IMPROPERLY_CAPITALIZED_BRAND_OR_PRODUCT_CATEGORY",
          "RESOLVE_IMPROPERLY_CAPITALIZED_CUSTOM_INPUTS",
          "RESOLVE_IMPROPERLY_PLURALIZED_CUSTOM_INPUTS",
          "REMOVE_ELLIPSES",
          "REMOVE_HYPHENS_SEPARATING_SINGLE_WORDS",
          "REMOVE_EXTRA_HYPHENS",
          "REMOVE_PUNCTATION_COMBINATIONS",
          "REMOVE_EXTRA_PUNCTUATION",
          "REMOVE_PUNCTUATION_AT_THE_END_OF_WORDS",
          "RESOLVE_UNCLEAR_BRAND_OR_PRODUCT_CATEGORY",
          "RESOLVE_UNCLEAR_PEERS",
          "RESOLVE_UNCLEAR_BRAND_OR_PRODUCT_NAME",
          "RESOLVE_UNCLEAR_CUSTOM_INPUTS",
          "REMOVE_TYPOS",
          "RESOLVE_SUBJECT_VERB_DISAGREEMENT",
          "MAKE_BRAND_OR_PRODUCT_CATEGORY_PLURAL",
          "RESOLVE_INCORRECT_POSSESSIVE_NOUNS",
          "CAPITALIZE_THE_FIRST_LETTER_OF_PROPER_NOUNS",
          "REMOVE_REDUNDANT_ANSWER_CHOICES",
          "RESOLVE_INCORRECT_TENSES",
          "REMOVE_DUPLICATE_INPUTS",
          "REMOVE_SPECIAL_CHARACTERS_AND_SYMBOLS",
          "REMOVE_NONENGLISH_WORDS",
          "REMOVE_UNCLEAR_OR_OBFUSCATED_OFFENSIVE_LANGUAGE",
          "REMOVE_DEROGATORY_LANGUAGE",
          "REMOVE_OFFENSIVE_ACRONYMS_AND_ABBREVIATIONS",
          "REMOVE_OFFENSIVE_WORDS_OR_TERMS_DISGUISED_AS_NONOFFENSIVE_TERMS",
          "REMOVE_TERMS_PRESENTED_IN_A_WAY_IN_WHICH_THEIR_TRUE_MEANING_IS_CLEARLY_OFFENSIVE",
          "REMOVE_VULGAR_AND_PROFANE_WORDS",
          "REMOVE_IRRELEVANT_WORDS",
          "RESOLVE_NEGATIVE_QUESTIONS_AND_ANSWERS_ABOUT_PEERS",
          "SURVEYS_WITH_POLITICAL_CONTENT_ARE_NOT_ALLOWED",
          "ONLY_ONE_ACTIVE_STUDY_IS_ALLOWED_PER_BRAND_OR_PRODUCT",
          "ADD_ORDERS_TO_INCREASE_IMPRESSIONS",
          "INFEASIBLE_NOT_ENOUGH_IMPRESSIONS",
          "OTHER"
        ]
      },
      "MeasurementStudiesCountry": {
        "description": "The measurement country. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "US",
          "UK",
          "DE",
          "FR",
          "JP",
          "CA",
          "IT",
          "ES",
          "EG",
          "BR",
          "AU",
          "AE",
          "SA",
          "RU",
          "MX",
          "NL",
          "SG",
          "SE",
          "TR",
          "PL",
          "IN",
          "OTHER"
        ]
      },
      "DSPBrandLiftEligibilityRequestV1M1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftEligibilityDataV1"
          }
        ],
        "description": "The request object of DSP brand lift eligibility check.",
        "type": "object"
      },
      "GridQuestionResponsesV1M1": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "type": "object",
        "properties": {
          "columns": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderFieldValueV1"
            }
          },
          "rows": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderFieldValueV1"
            }
          }
        }
      },
      "PaginatedVendorProductPoliciesV1": {
        "description": "A list of measurement vendor products policies.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of vendor products.",
            "type": "integer"
          },
          "nextToken": {
            "type": "string"
          },
          "policies": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorProductPolicyV1"
            }
          }
        }
      },
      "PaginatedMeasurementBrandLiftStudies": {
        "description": "A list of Brand Lift studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementBrandLiftStudy"
            }
          }
        }
      },
      "PlanningEligibilityRequestV1M3": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/PlanningEligibilityDataV1M3"
          }
        ],
        "description": "The request object of planning eligibility check.",
        "type": "object"
      },
      "SurveyQuestionPlaceholderCandidateV1": {
        "description": "The placeholder candidate in Survey question.",
        "type": "object",
        "properties": {
          "allowedValues": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Allowed values for placeholder. Will be empty if placeholder is free text field.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderAllowedValueV1"
            }
          },
          "maximumValueLength": {
            "description": "The maximum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "allowedValueRanges": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Allowed value ranges for placeholder. Only applicable if the valueType is INTEGER.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderAllowedRangeV1"
            }
          },
          "valueType": {
            "$ref": "#/components/schemas/PlaceholderValueTypeV1"
          },
          "inferredFields": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Where the placeholder values will be inferred from.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "defaultValues": {
            "minItems": 0,
            "maxItems": 100,
            "description": "Default values that will be appended to the values list regardless.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minimumValueLength": {
            "description": "The minimum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "allowCustomValue": {
            "description": "Whether custom value is allowed for the placeholder.",
            "type": "boolean"
          }
        }
      },
      "PaginatedOmnichannelMetricsBrandsV1M2": {
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of matched brands.",
            "type": "integer"
          },
          "brands": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OmnichannelMetricsBrandV1M2"
            }
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "MeasurementCreativeTestingStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesCampaignPlanningMetadata"
          },
          {
            "$ref": "#/components/schemas/MeasurementCreativeTestingStudyMetadata"
          }
        ],
        "description": "CREATIVE_TESTING study object.",
        "type": "object"
      },
      "MeasurementStudiesAudienceSelectionOperator": {
        "description": "The operator used in Audience Segment Selection to determine which operation needs to be applied across selected segments. AND operator takes priority over OR operator.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "OR",
          "AND"
        ]
      },
      "MeasurementStudiesEligibilityResponse": {
        "description": "The eligibility check response object.",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityMetadata"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductEligibility"
            }
          }
        }
      },
      "PaginatedVendorProductPoliciesV1M1": {
        "description": "A list of measurement vendor products policies.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of vendor products.",
            "type": "integer"
          },
          "nextToken": {
            "type": "string"
          },
          "policies": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorProductPolicyV1M1"
            }
          }
        }
      },
      "AudienceSegmentV1M2": {
        "description": "The model for holding an Audience Segment.",
        "type": "object",
        "properties": {
          "segmentId": {
            "description": "ID for the audience segment. This ID can be fetched from these APIs- https://advertising.amazon.com/API/docs/en-us/audiences/#/Discovery",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesSurveyQuestionCategory": {
        "description": "The survey question category. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "BRAND_KPI",
          "WEIGHTING",
          "CUSTOM",
          "OTHER"
        ]
      },
      "MeasurementStudiesResourceLink": {
        "description": "The link that can be used to access corresponding resources in advertising portal.",
        "type": "object",
        "properties": {
          "name": {
            "description": "The resource name.",
            "type": "string"
          },
          "url": {
            "description": "The resource url.",
            "type": "string"
          }
        }
      },
      "PaginatedVendorProductsV1M1": {
        "description": "A list of measurement vendor products.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of vendor products.",
            "type": "integer"
          },
          "vendorProducts": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorProductV1M1"
            }
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "MeasurementBrandLiftStudyMetadata": {
        "description": "The basic model for all BRAND_LIFT studies.",
        "type": "object",
        "properties": {
          "brandEntityId": {
            "description": "The brand entity Id to be measured by the study.",
            "type": "string"
          },
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "peerNames": {
            "minItems": 0,
            "maxItems": 10,
            "description": "A list of peer names for the study brand.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "verb": {
            "description": "The verb that will be used in the applicable survey questions to construct the question text.",
            "type": "string"
          },
          "benchmarkCategory": {
            "$ref": "#/components/schemas/MeasurementStudiesBenchmarkCategory"
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical DSP order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          },
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "VendorProductEligibilityV1": {
        "description": "The measurement eligibility details for a certain vendor product.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "issues": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of issues will be provided if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EligibilityIssueV1"
            }
          },
          "status": {
            "$ref": "#/components/schemas/EligibilityStatusV1"
          }
        }
      },
      "DSPAudienceResearchMetadataV1M2": {
        "description": "The basic model for all DSP AUDIENCE_RESEARCH objective studies.",
        "type": "object",
        "properties": {
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          },
          "peerNames": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of peer names for the study brand.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        }
      },
      "SurveyQuestionPlaceholderFieldValueV1": {
        "type": "object",
        "properties": {
          "value": {
            "description": "The survey question placeholder field value.",
            "type": "string"
          },
          "isQualifying": {
            "description": "This is only required if the corresponding field is 'response', this will help to define if the response value will be counted as a positive one in the study report.",
            "type": "boolean"
          }
        }
      },
      "AdTypeV1": {
        "description": "Supported values are DSP(Demand Side Platform).",
        "readOnly": true,
        "type": "string",
        "enum": [
          "DSP"
        ]
      },
      "MeasurementCreativeTestingStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementCreativeTestingStudyEligibilityData"
          }
        ],
        "description": "The request object of Creative Testing study eligibility check."
      },
      "MeasurementOmnichannelMetricsResult": {
        "description": "The response object for downloading study results.",
        "type": "object",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "enum": [
              "EXCEL"
            ]
          }
        }
      },
      "VendorProductTypeV1M2": {
        "description": "The measurement vendor product type.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SHOPPER_PANEL",
          "OMNICHANNEL_METRICS",
          "SHOPPER_PANEL_AUDIENCE_RESEARCH",
          "SHOPPER_PANEL_COMPARISON_CREATIVE_TESTING"
        ]
      },
      "VendorProductTypeV1M1": {
        "description": "The measurement vendor product type.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SHOPPER_PANEL",
          "BRAND_LIFT_INSIGHTS",
          "DASH",
          "UPWAVE",
          "DIGITAL_BRAND_EFFECT",
          "EXPANDED_VIEW_LITE",
          "MACROMILL",
          "DYNATA",
          "LUCID"
        ]
      },
      "MeasurementCreativeTestingFee": {
        "description": "The response object to get fee for a Creative Testing study.",
        "properties": {
          "fee": {
            "description": "The fee for the Study. Check currencyCode field for the currency in which this field is expressed.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/MeasurementStudiesCurrencyCode"
          }
        }
      },
      "MeasurementStudiesVendorProductRequest": {
        "description": "The request object to fetch measurement vendor products.",
        "type": "object",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 0,
            "maxItems": 5,
            "description": "FundingType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesFundingType"
            }
          },
          "objectiveTypeFilters": {
            "minItems": 0,
            "maxItems": 3,
            "description": "StudyObjective filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyObjective"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "adTypeFilters": {
            "minItems": 0,
            "maxItems": 4,
            "description": "AdType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAdType"
            }
          },
          "vendorTypeFilters": {
            "minItems": 0,
            "maxItems": 8,
            "description": "VendorType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorType"
            }
          },
          "studyTypeFilters": {
            "minItems": 0,
            "maxItems": 5,
            "description": "StudyType filters to be applied when fetching measurement vendor products. If not supplied we will include all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyType"
            }
          }
        }
      },
      "VendorProductTypeV1M3": {
        "description": "The measurement vendor product type.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SHOPPER_PANEL",
          "BRAND_LIFT_INSIGHTS",
          "DASH",
          "UPWAVE",
          "DIGITAL_BRAND_EFFECT",
          "EXPANDED_VIEW_LITE",
          "MACROMILL",
          "DYNATA",
          "LUCID",
          "OMNICHANNEL_METRICS"
        ]
      },
      "MeasurementStudiesSurveyQuestionPlaceholderCandidateType": {
        "description": "The placeholder type for survey question template. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "CHANNEL",
          "QUESTION_TEXT",
          "PLACEMENT_TYPE",
          "RESPONSE",
          "ACTION",
          "TIME",
          "DUMMY_PLACEHOLDER_1",
          "DUMMY_PLACEHOLDER_2",
          "BRAND_OR_PRODUCT_CATEGORY",
          "BRAND_OR_PRODUCT_NAME",
          "CHARACTERISTIC",
          "VERB",
          "CATEGORY",
          "PERIOD",
          "CUSTOM_STATEMENT",
          "OTHER"
        ]
      },
      "MeasurementStudyResultStatus": {
        "description": "The status of the result of the study. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AVAILABLE",
          "OTHER"
        ]
      },
      "MeasurementLocaleV1": {
        "description": "The measurement locale.",
        "type": "string",
        "enum": [
          "EN_US"
        ]
      },
      "MeasurementStudiesOmnichannelMetricsBrandSearchRequest": {
        "description": "The request object to fetch brands to be used in the OMNICHANNEL_METRICS vendor product.",
        "type": "object",
        "properties": {
          "brandIdFilter": {
            "minItems": 1,
            "maxItems": 50,
            "description": "List of brandIds in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brandNameSearch": {
            "description": "Text to search for eligible brands in the omnichannel metrics brand catalog. Either one of brandIdFilter or brandNameSearch should be provided.",
            "type": "string"
          }
        }
      },
      "BrandLiftStudyResultV1M1": {
        "description": "The result of Brand Lift study.",
        "properties": {
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          },
          "brandLiftSummary": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Summary of Brand Lift achieved for each objective.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BrandLiftSummaryV1M1"
            }
          },
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "minItems": 1,
            "maxItems": 2000,
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1M1"
            }
          }
        }
      },
      "SurveyQuestionTemplateV1M1": {
        "description": "Survey question template for vendor product.",
        "type": "object",
        "properties": {
          "minimumQualifyingResponses": {
            "description": "The minimum number of qualifying responses required for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "maximumQualifyingResponses": {
            "description": "The maximum number of qualifying responses allowed for the question. This will be available if the qualifying responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "subCategory": {
            "$ref": "#/components/schemas/SurveyQuestionSubCategoryV1M1"
          },
          "qualifyingResponses": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The pre-defined qualifying survey question responses with placeholders, this will help to define which responses will be counted as positive ones in the study report.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "questionResponses": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The pre-defined survey question responses with placeholders.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "type": {
            "$ref": "#/components/schemas/SurveyQuestionTypeV1M1"
          },
          "priority": {
            "description": "The priority of the question. If present this will determine the ordering of questions in a survey. The check will be enforced when a survey is created/updated. Lower number indicates higher priority.",
            "type": "integer"
          },
          "objectiveType": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
          },
          "questionText": {
            "description": "The survey question text with placeholders.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "The associated vendor product id.",
            "type": "string"
          },
          "placeholderCandidates": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
            }
          },
          "gridQuestionResponse": {
            "$ref": "#/components/schemas/SurveyQuestionGridQuestionResponseV1M1"
          },
          "minimumQuestionResponses": {
            "description": "The minimum number of responses required for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          },
          "id": {
            "description": "The survey question template canonical Id.",
            "type": "string"
          },
          "category": {
            "$ref": "#/components/schemas/SurveyQuestionCategoryV1M1"
          },
          "maximumQuestionResponses": {
            "description": "The maximum number of responses allowed for the question. This will be available if the question responses are not pre-defined/inferred.",
            "type": "integer"
          }
        }
      },
      "MeasurementStudiesVendorProductRecommendationsMetadata": {
        "description": "The recommendations metadata.",
        "type": "object",
        "properties": {
          "orderMetadata": {
            "minItems": 0,
            "maxItems": 7,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductRecommendationsOrderMetadata"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementStudiesLocale"
          },
          "studyTypeFilters": {
            "minItems": 0,
            "maxItems": 5,
            "description": "StudyType identifier filters to be applied when fecthing recommendations. If not supplied we will check for all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyType"
            }
          },
          "advertiserId": {
            "description": "The advertiserId.",
            "type": "string"
          }
        }
      },
      "DSPCampaignPlanningMetadataV1M2": {
        "description": "The basic model for all DSP CAMPAIGN_PLANNING objective studies.",
        "type": "object",
        "properties": {
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "DSPCreativeTestingCostEstimationRequestV1M2": {
        "description": "The request object of DSP Creative Testing study cost estimation.",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "templatedQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of templated survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1"
            }
          },
          "assets": {
            "minItems": 1,
            "maxItems": 10,
            "description": "A list of assets to be used for the creative testing study as part of either the survey question or the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AssetV1M2"
            }
          },
          "customQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of custom survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "advertiserId": {
            "description": "The associated advertiser identifier.",
            "type": "string"
          }
        }
      },
      "GetMeasurementStudiesCreativeTesting": {
        "description": "The request object for fetching creative testing studies.",
        "type": "object",
        "properties": {
          "studyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Study canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The advertiser canonical identifier. Used for querying creative testing studies for a DSP advertiser Account.",
            "type": "string"
          }
        }
      },
      "SurveyResponseV1": {
        "description": "Survey response.",
        "type": "object",
        "properties": {
          "surveyId": {
            "description": "The survey canonical identifier.",
            "type": "string"
          },
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "index": {
            "format": "int32",
            "description": "The index of the object in the request, starting from 1.",
            "type": "integer"
          },
          "message": {
            "description": "A human-readable message of the code.",
            "type": "string"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyErrorV1"
            }
          }
        }
      },
      "StudySubmissionTypeV1": {
        "writeOnly": true,
        "description": "The submission type for the creation and updating of studies. Currently, this submission type is supported for brand lift studies only.  This is an optional parameter in each of the request objects and its default value is `SUBMISSION` if not provided. A value of `SUBMISSION` indicates that a study should be submitted for approval. A value of `DRAFT` indicates that a study should be saved but not submitted.",
        "type": "string",
        "enum": [
          "DRAFT",
          "SUBMISSION"
        ]
      },
      "GetMeasurementStudiesReachAndFrequencyResult": {
        "description": "The request object for fetching reach and frequency results of a specific study.",
        "type": "object",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study.",
            "type": "string"
          }
        }
      },
      "GetMeasurementStudiesAudienceResearchResult": {
        "description": "The request object for fetching audience research study results of a specific study.",
        "type": "object",
        "properties": {
          "studyId": {
            "description": "The canonical identifier that represents a unique study.",
            "type": "string"
          }
        }
      },
      "PaginatedMeasurementStudiesVendorProductRecommendationsResponse": {
        "description": "The vendor product recommendations response object.",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityMetadata"
          },
          "nextToken": {
            "type": "string"
          },
          "recommendations": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductRecommendation"
            }
          }
        }
      },
      "MeasurementStudiesEligibilityIssue": {
        "description": "The list of eligibility issues.",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityIssueSeverity"
          },
          "code": {
            "description": "An enumerated issue code for machine use.",
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityField"
          },
          "message": {
            "description": "A human-readable description of the issue with suggestions on how to resolve the issue.",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesCustomSurveyQuestion": {
        "description": "The templated measurement survey question.",
        "type": "object",
        "properties": {
          "responses": {
            "minItems": 0,
            "maxItems": 10,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "type": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionType"
          },
          "questionText": {
            "description": "The survey question text.",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesSurveyQuestionGridQuestionResponse": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "type": "object",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidate"
          },
          "rows": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidate"
          }
        }
      },
      "MeasurementStudiesVendorProductRecommendation": {
        "description": "The vendor product recommendation object with elgibility status.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "Vendor product canonical identifier.",
            "type": "string"
          },
          "rank": {
            "description": "The lower the number, the more recommended the vendor product is.",
            "type": "number"
          },
          "issues": {
            "minItems": 0,
            "maxItems": 10,
            "description": "A list of issues will be provided containing the fields causing the issue if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesEligibilityIssue"
            }
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityStatus"
          }
        }
      },
      "VendorTypeV1": {
        "description": "The measurement vendor type, each study type will have different supported vendors.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AMAZON"
        ]
      },
      "MeasurementStudiesEligibilityStatus": {
        "description": "Supported values are ELIGIBLE, INELIGIBLE and ELIGIBLE_WITH_WARNING. INELIGIBLE status indicates the study can not be created.",
        "type": "string",
        "enum": [
          "ELIGIBLE",
          "INELIGIBLE",
          "ELIGIBLE_WITH_WARNING"
        ]
      },
      "MeasurementStudiesAdType": {
        "description": "Supported ad types.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "DSP",
          "SB",
          "SP",
          "SD"
        ]
      },
      "MeasurementStudiesVendorProductEligibility": {
        "description": "The measurement eligibility details for a certain vendor product.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "issues": {
            "minItems": 0,
            "maxItems": 11,
            "description": "A list of issues will be provided containing the fields causing the issue if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesEligibilityIssue"
            }
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesEligibilityStatus"
          }
        }
      },
      "MeasurementStudiesCurrencyCode": {
        "description": "Currency Code. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "USD",
          "CAD",
          "MXN",
          "BRL",
          "GBP",
          "EUR",
          "AED",
          "SAR",
          "INR",
          "JPY",
          "AUD",
          "SGD",
          "TRY",
          "SEK",
          "EGP",
          "PLN",
          "OTHER"
        ]
      },
      "EligibilityMetadataV1": {
        "description": "The eligibility metadata.",
        "properties": {
          "endDate": {
            "format": "date-time",
            "description": "The latest end date of the associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "impressions": {
            "format": "int64",
            "description": "The total estimated impressions.",
            "readOnly": true,
            "type": "integer"
          },
          "flightLength": {
            "description": "The flight length of the associated orders. Expressed in days.",
            "readOnly": true,
            "type": "integer"
          },
          "startDate": {
            "format": "date-time",
            "description": "The earliest start date of associated orders in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "budget": {
            "format": "double",
            "description": "The total budget. Expressed in dollars.",
            "readOnly": true,
            "type": "number"
          }
        }
      },
      "VendorProductPolicyV1M1": {
        "description": "The policy rules will be enforced at vendor product level.",
        "type": "object",
        "properties": {
          "maximumOrders": {
            "description": "The maximum number of order allowed for the product.",
            "type": "integer"
          },
          "supportedGoals": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementGoalV1"
            }
          },
          "leadTime": {
            "description": "Days required for measurement configuration. It is recommended that the startDate of the campaign has sufficient padding to accommodate this lead time, but measurement can begin after the campaign start date in some cases.",
            "type": "integer"
          },
          "requiredQuestionObjectives": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The required question objectives that need to be included as part of the survey.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
            }
          },
          "benchMarkCategoryRequired": {
            "description": "Whether or not the benchMark category is required for measurement setup.",
            "type": "boolean"
          },
          "supportedVerbs": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of supported verbs that can be used in survey questions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "maximumSurveyQuestions": {
            "description": "The maximum number of survey questions required for the product.",
            "type": "integer"
          },
          "minimumOrders": {
            "description": "The maximum number of orders required for the product.",
            "type": "integer"
          },
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "verbRequired": {
            "description": "Whether or not a verb is required for measurement setup. It will be used in applicable survey questions to construct the question text.",
            "type": "boolean"
          },
          "customQuestionAllowed": {
            "description": "Whether custom survey questions are allowed.",
            "type": "boolean"
          },
          "maximumStudyLength": {
            "description": "The maximum required length/duration of the study in days.",
            "type": "integer"
          },
          "maximumPeerNames": {
            "description": "The maximum number of peer names required for the product.",
            "type": "integer"
          },
          "requiredQuestionCategories": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The requirements for survey question categories.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionCategoryRequirementV1M1"
            }
          },
          "supportedMarketplaces": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementMarketplaceV1"
            }
          },
          "minimumStudyLength": {
            "description": "The minimum required length/duration of the study in days.",
            "type": "integer"
          },
          "vendorApprovalRequired": {
            "description": "Whether or not the vendor requires an additional sign off process to fully qualify for study.",
            "type": "boolean"
          },
          "minimumPeerNames": {
            "description": "The minimum number of peer names required for the product.",
            "type": "integer"
          },
          "externalReferenceIdRequired": {
            "description": "Whether or not the vendor assigned external reference identifier is required for measurement setup.",
            "type": "boolean"
          },
          "minimumSurveyQuestions": {
            "description": "The minimum number of survey questions required for the product.",
            "type": "integer"
          }
        }
      },
      "MeasurementStudiesOmnichannelMetricsEligibilityData": {
        "description": "The campaign study eligibility data.",
        "type": "object",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier. If provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility checks.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of DSP canonical order identifiers. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaignIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brandIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical brand identifiers.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "VendorProductEligibilityV1M2": {
        "description": "The measurement eligibility details for a certain vendor product.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "issues": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of issues will be provided if the status is INELIGIBLE or ELIGIBLE_WITH_WARNING.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EligibilityIssueV1M2"
            }
          },
          "status": {
            "$ref": "#/components/schemas/EligibilityStatusV1"
          }
        }
      },
      "AudienceTargetingGroupV1M2": {
        "description": "The model for holding Audiece targeting group. The includedAudienceGroups and excludedAudienceGroups are always joined with AND operator.",
        "type": "object",
        "properties": {
          "includedAudienceGroups": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of audience groups to be included in the targeted audience.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceGroupV1M2"
            }
          },
          "excludedAudienceGroups": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of audience groups to be excluded from the targeted audience.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AudienceGroupV1M2"
            }
          }
        }
      },
      "MeasurementAudienceResearchFee": {
        "description": "The response object to get fee for a Audience Research study.",
        "properties": {
          "fee": {
            "description": "The fee for the Study. Check currencyCode field for the currency in which this field is expressed.",
            "type": "number"
          },
          "currencyCode": {
            "$ref": "#/components/schemas/MeasurementStudiesCurrencyCode"
          }
        }
      },
      "MeasurementStudiesSurvey": {
        "description": "The measurement survey.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "The vendor product canonical identifier.",
            "type": "string"
          },
          "surveyId": {
            "description": "The survey canonical identifier. Immutable field.",
            "type": "string"
          },
          "customQuestions": {
            "minItems": 1,
            "maxItems": 20,
            "description": "A list of custom survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesCustomSurveyQuestion"
            }
          },
          "templatedShortQuestions": {
            "minItems": 1,
            "maxItems": 20,
            "description": "A list of templated survey short questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesTemplatedSurveyShortQuestion"
            }
          },
          "studyId": {
            "description": "The associated study identifier. Survey needs to be created prior to the study creation.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyStatus"
          }
        }
      },
      "MeasurementAudienceResearchStudyMetadata": {
        "description": "The basic model for all AUDIENCE_RESEARCH objective studies.",
        "type": "object",
        "properties": {
          "brandName": {
            "description": "The study brand name.",
            "type": "string"
          },
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          },
          "peerNames": {
            "minItems": 0,
            "maxItems": 10,
            "description": "A list of peer names for the study brand.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "productCategory": {
            "description": "The study product category.",
            "type": "string"
          }
        }
      },
      "BrandLiftSummaryV1M1": {
        "description": "Summary of Brand Lift achieved for an objective.",
        "properties": {
          "qualifyingResponses": {
            "minItems": 0,
            "maxItems": 10,
            "description": "Qualifying responses aggregated to measure the Brand Lift.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "statisticalSignificance": {
            "description": "The significance percentage of achieved Brand Lift.",
            "type": "number"
          },
          "controlGroupRate": {
            "description": "Control group response rate.",
            "type": "number"
          },
          "questionObjective": {
            "$ref": "#/components/schemas/SurveyQuestionObjectiveTypeV1M1"
          },
          "adExposedGroupRate": {
            "description": "Ad exposed group response rate.",
            "type": "number"
          },
          "benchmarkLiftRate": {
            "description": "The benchmark lift rate for the selected product category in the Survey.",
            "type": "number"
          },
          "questionText": {
            "description": "Text of the Survey question.",
            "type": "string"
          }
        }
      },
      "BaseStudyV1": {
        "description": "The base study object.",
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          },
          "submissionType": {
            "$ref": "#/components/schemas/StudySubmissionTypeV1"
          },
          "lastUpdatedDate": {
            "format": "date-time",
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "studyResultStatus": {
            "description": "The status of result of the study.",
            "type": "string",
            "enum": [
              "AVAILABLE"
            ]
          },
          "rejectionReasons": {
            "minItems": 0,
            "maxItems": 100,
            "deprecated": true,
            "description": "List of reasons for rejection, this will only be available if the status is REJECTED. This field is deprecated, use statusReasons instead.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "reviewDate": {
            "format": "date-time",
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The study canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyStatusV1"
          },
          "createDate": {
            "format": "date-time",
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "MeasurementReachAndFrequencyMetadata": {
        "description": "The basic model for all REACH_AND_FREQUENCY studies.",
        "type": "object",
        "properties": {
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical DSP order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "MeasurementStudyStatus": {
        "description": "The study status. Only required if study is in DRAFT as part of study creation/update. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "RUNNING",
          "PENDING",
          "APPROVED",
          "REJECTED",
          "ENDED",
          "CANCELLED",
          "DRAFT",
          "INFEASIBLE",
          "OTHER"
        ]
      },
      "MeasurementAudienceResearchStudyResult": {
        "description": "The response object for downloading study results.",
        "type": "object",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "enum": [
              "CSV"
            ]
          }
        }
      },
      "MeasurementBaseStudy": {
        "description": "The base study object.",
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 42,
            "description": "List of reasons for study status. For example, when study is marked Rejected or Ineligible, this field would be available.",
            "readOnly": true,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudyStatusReason"
            }
          },
          "surveyId": {
            "description": "The study survey canonical identifier.",
            "type": "string"
          },
          "endDate": {
            "format": "date-time",
            "description": "The study end date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the latest endDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "link": {
            "$ref": "#/components/schemas/MeasurementStudiesResourceLink"
          },
          "externalReferenceId": {
            "description": "Optional field. For some vendors, advertisers are required to provide this vendor assigned reference identifier for EXTERNAL_BILLING studies.",
            "type": "string"
          },
          "vendorProductId": {
            "description": "Associated vendor product canonical identifier.",
            "type": "string"
          },
          "submissionType": {
            "$ref": "#/components/schemas/MeasurementStudySubmissionType"
          },
          "lastUpdatedDate": {
            "format": "date-time",
            "description": "The study last updated date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "studyResultStatus": {
            "$ref": "#/components/schemas/MeasurementStudyResultStatus"
          },
          "reviewDate": {
            "format": "date-time",
            "description": "The study review date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          },
          "name": {
            "description": "The study name.",
            "type": "string"
          },
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "readOnly": true,
            "type": "string"
          },
          "studyId": {
            "description": "The study canonical identifier. Immutable field.",
            "readOnly": true,
            "type": "string"
          },
          "startDate": {
            "format": "date-time",
            "description": "The study start date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC. By default this will be the earliest startDate of the associated orders.",
            "readOnly": true,
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/MeasurementStudyStatus"
          },
          "createDate": {
            "format": "date-time",
            "description": "The study creation date in ISO format (YYYY-MM-DDThh:mm:ssTZD). Timezone is UTC.",
            "readOnly": true,
            "type": "string"
          }
        }
      },
      "PaginatedMeasurementBaseStudies": {
        "description": "A list of studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementBaseStudy"
            }
          }
        }
      },
      "MeasurementStudiesPaginatedVendorProducts": {
        "description": "A list of measurement vendor products.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of vendor products.",
            "type": "integer"
          },
          "vendorProducts": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProduct"
            }
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "MeasurementStudiesVendorType": {
        "description": "The measurement vendor name, each study type will have different supported vendors. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AMAZON",
          "KANTAR",
          "UPWAVE",
          "NIELSEN",
          "MACROMILL",
          "DYNATA",
          "LUCID",
          "OMNICHANNEL_METRICS",
          "ISPOT",
          "VIDEOAMP",
          "OTHER"
        ]
      },
      "CuratedStudyResultV1": {
        "description": "The response object for downloading curated study results.",
        "type": "object",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "description": "The file type of the curated results file.",
            "readOnly": true,
            "type": "string",
            "enum": [
              "PDF",
              "POWERPOINT",
              "JPEG",
              "PNG",
              "OTHER"
            ]
          }
        }
      },
      "EligibilityResponseV1": {
        "description": "The eligibility check response object.",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/EligibilityMetadataV1"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorProductEligibilityV1"
            }
          }
        }
      },
      "DSPBrandLiftEligibilityDataV1": {
        "description": "The campaign study eligibility data.",
        "type": "object",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier, if provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility check.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical order identifiers. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "SurveyV1M1": {
        "description": "The measurement survey.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "The vendor product canonical identifier.",
            "type": "string"
          },
          "templatedQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of templated survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1M1"
            }
          },
          "customQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "deprecated": true,
            "description": "A list of custom survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            }
          },
          "studyId": {
            "description": "The associated study identifier. Survey needs to be created prior to the study creation.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The survey canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SurveyStatusV1"
          }
        }
      },
      "DSPBrandLiftEligibilityRequestV1": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1"
          },
          {
            "$ref": "#/components/schemas/DSPBrandLiftEligibilityDataV1"
          }
        ],
        "description": "The request object of DSP brand lift eligibility check.",
        "type": "object"
      },
      "EligibilityIssueSeverityV1": {
        "description": "Supported values are WARNING, ERROR. ERROR severity issues need to be resolved while WARNING severity issues can be ignored.",
        "type": "string",
        "enum": [
          "WARNING",
          "ERROR"
        ]
      },
      "EligibilityIssueV1": {
        "description": "The list of eligibility issues.",
        "type": "object",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/EligibilityIssueSeverityV1"
          },
          "code": {
            "description": "An enumerated issue code for machine use.",
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/EligibilityFieldV1"
          },
          "message": {
            "description": "A human-readable description of the issue with suggestions on how to resolve the issue.",
            "type": "string"
          }
        }
      },
      "MeasurementStudiesSurveyStatus": {
        "description": "The survey status. Only required if the survey is in DRAFT. Created survey will be in AVAILABLE status by default and will only be in IN_USE status if it's associated with a study.",
        "type": "string",
        "enum": [
          "IN_USE",
          "AVAILABLE",
          "DRAFT"
        ]
      },
      "PlanningEligibilityResponseV1M3": {
        "description": "The planning eligibility response object.",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/EligibilityMetadataV1"
          },
          "nextToken": {
            "type": "string"
          },
          "vendorProductEligibilities": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanningEligibilityV1M3"
            }
          }
        }
      },
      "MeasurementStudiesSurveyQuestionPlaceholderAllowedValue": {
        "description": "Allowed value for placeholder.",
        "type": "object",
        "properties": {
          "parentValue": {
            "description": "The field value that this value list depend on. Will be empty if this is the default list.",
            "type": "string"
          },
          "value": {
            "description": "Allowed value string..",
            "type": "string"
          },
          "parentField": {
            "description": "The field name that this value list depends on. Will be empty if this is the default list.",
            "type": "string"
          }
        }
      },
      "ErrorV1": {
        "description": "The error response object.",
        "type": "object",
        "properties": {
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SubErrorV1"
            }
          }
        }
      },
      "MeasurementStudiesSurveyQuestionPlaceholderInferredField": {
        "description": "The inferred field for survey question placeholder candidate. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "STUDY_BRAND_NAME",
          "STUDY_BRAND_NAME_UNQUALIFIED",
          "STUDY_PEER_NAME",
          "STUDY_PRODUCT_CATEGORY",
          "STUDY_VERB",
          "OTHER"
        ]
      },
      "DSPCampaignMeasurementMetadataV1": {
        "description": "The basic model for all DSP CAMPAIGN_MEASUREMENT objective studies.",
        "type": "object",
        "properties": {
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of canonical order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "SurveyQuestionPlaceholderV1": {
        "description": "The object specifying a placeholder in Survey question.",
        "type": "object",
        "properties": {
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "fieldValues": {
            "minItems": 0,
            "maxItems": 100,
            "description": "The survey question placeholder field values.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionPlaceholderFieldValueV1"
            }
          }
        }
      },
      "MeasurementStudiesAudienceTargetingGroup": {
        "description": "The model for holding Audience targeting group. The includedAudienceGroups and excludedAudienceGroups are always joined with AND operator.",
        "type": "object",
        "properties": {
          "includedAudienceGroups": {
            "minItems": 0,
            "maxItems": 25,
            "description": "List of audience groups to be included in the targeted audience.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAudienceGroup"
            }
          },
          "excludedAudienceGroups": {
            "minItems": 0,
            "maxItems": 25,
            "description": "List of audience groups to be excluded from the targeted audience.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesAudienceGroup"
            }
          }
        }
      },
      "MeasurementStudiesError": {
        "description": "The error response object.",
        "type": "object",
        "properties": {
          "requestId": {
            "description": "Request Id that uniquely identifies your request.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable description of the response.",
            "type": "string"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSubError"
            }
          }
        }
      },
      "DSPAudienceResearchEligibilityDataV1M2": {
        "description": "The audience research study eligibility data.",
        "type": "object",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/AudienceTargetingGroupV1M2"
          }
        }
      },
      "SurveyQuestionTypeV1M1": {
        "description": "The survey question type. SINGLE_SELECT question will allow customers to choose only one response, MULTI_SELECT question will allow customers to choose multiple responses, RATING will allow customers to choose a rating on a scale (e.g. 1 to 5), FREE_TEXT will allow customers to provide a free formed question text.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SINGLE_SELECT",
          "SINGLE_SELECT_GRID",
          "MULTI_SELECT",
          "RATING",
          "FREE_TEXT"
        ]
      },
      "DSPOmnichannelMetricsEligibilityDataV1M2": {
        "description": "The campaign study eligibility data.",
        "type": "object",
        "properties": {
          "currentStudyId": {
            "description": "Optional current study identifier. If provided orders are expected to be added into this study and the orders already associated with this study will be excluded from certain eligibility checks.",
            "type": "string"
          },
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the eligibility check.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical order identifiers. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brandIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical brand identifiers.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "EligibilityFieldV1M2": {
        "description": "Fields that will be checked as part of eligibility API call.",
        "type": "string",
        "enum": [
          "LOCALE",
          "BUDGET",
          "GOAL",
          "START_TIME",
          "END_TIME",
          "FLIGHT_LENGTH",
          "LEAD_TIME",
          "IMPRESSIONS",
          "ORDER",
          "BUYER_COUNT"
        ]
      },
      "MeasurementOmnichannelMetricsStudyMetadata": {
        "description": "The basic model for all OMNICHANNEL_METRICS objective studies.",
        "type": "object",
        "properties": {
          "excludedLineItemIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical lineItem identifiers that are excluded from the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "orderIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of DSP canonical order identifiers that are associated with the study. By default all lineItems in those orders will be included.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "campaignIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical Sponsored Ads campaign identifiers that are associated with the study.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "brandIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical brand ids to be tracked for off-Amazon conversions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The associated advertiser identifier. Immutable field.",
            "type": "string"
          }
        }
      },
      "DSPAudienceResearchEligibilityRequestV1M2": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseEligibilityRequestV1M2"
          },
          {
            "$ref": "#/components/schemas/DSPAudienceResearchEligibilityDataV1M2"
          }
        ],
        "description": "The request object of DSP Audience Research study eligibility check."
      },
      "EligibilityIssueV1M2": {
        "description": "The list of eligibility issues.",
        "properties": {
          "severity": {
            "$ref": "#/components/schemas/EligibilityIssueSeverityV1"
          },
          "code": {
            "description": "An enumerated issue code for machine use.",
            "type": "string"
          },
          "field": {
            "$ref": "#/components/schemas/EligibilityFieldV1M2"
          },
          "message": {
            "description": "A human-readable description of the issue with suggestions on how to resolve the issue.",
            "type": "string"
          }
        }
      },
      "PlanningEligibilityDataV1M3": {
        "description": "The planning eligibility data.",
        "type": "object",
        "properties": {
          "orderMetadata": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PlanningOrderMetadataV1M3"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "studyTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "StudyType identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StudyTypeV1M2"
            }
          },
          "advertiserId": {
            "description": "The advertiserId.",
            "type": "string"
          }
        }
      },
      "MeasurementCountryV1": {
        "description": "The measurement country.",
        "type": "string",
        "enum": [
          "US",
          "CA",
          "UK",
          "DE",
          "IT",
          "ES",
          "FR",
          "JP",
          "MX",
          "AE",
          "AU",
          "NL",
          "BR"
        ]
      },
      "MeasurementAudienceResearchStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementStudiesCampaignPlanningMetadata"
          },
          {
            "$ref": "#/components/schemas/MeasurementAudienceResearchStudyMetadata"
          }
        ],
        "description": "AUDIENCE_RESEARCH study object.",
        "type": "object"
      },
      "BaseEligibilityRequestV1": {
        "description": "The request object of measurement eligibility check.",
        "type": "object",
        "properties": {
          "fundingTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "FundingType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FundingTypeV1"
            }
          },
          "vendorProductIdFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorProduct identifier filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "vendorTypeFilters": {
            "minItems": 1,
            "maxItems": 100,
            "description": "VendorType filters to be applied when checking eligibility status. If not supplied we will check against all available vendor products.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/VendorTypeV1"
            }
          }
        }
      },
      "SurveyQuestionObjectiveTypeV1M1": {
        "description": "The survey objective.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "AWARENESS",
          "PREFERENCE",
          "FAVORABILITY",
          "AD_RECALL",
          "INTENT",
          "ATTITUDES",
          "UNAIDED_AWARENESS",
          "CONSIDERATION",
          "AGE",
          "GENDER",
          "HOUSEHOLD_INCOME",
          "HOUSEHOLD_SIZE",
          "CHILDREN_IN_HOUSEHOLD",
          "EDUCATION",
          "ETHNICITY",
          "TIME_ONLINE",
          "TV_MEDIA_CONSUMPTION",
          "IN_MARKET_STATUS",
          "PURCHASE_FREQUENCY",
          "PURCHASE_HISTORY",
          "PURCHASE_LOCATION",
          "BEHAVIORS",
          "FAMILIARITY"
        ]
      },
      "MeasurementBrandLiftStudyEligibilityRequest": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementStudiesBaseEligibilityRequest"
          },
          {
            "$ref": "#/components/schemas/MeasurementBrandLiftStudyEligibilityData"
          }
        ],
        "description": "The request object of brand lift eligibility check.",
        "type": "object"
      },
      "MeasurementStudiesSubError": {
        "description": "The sub error object.",
        "type": "object",
        "properties": {
          "fieldName": {
            "type": "string"
          },
          "errorType": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "errorType",
          "message"
        ]
      },
      "MeasurementGoalV1": {
        "description": "The measurement budget optimization goal type goal.",
        "type": "string",
        "enum": [
          "ENGAGEMENT_WITH_MY_AD",
          "CONSIDERATIONS_ON_AMAZON",
          "CONVERSIONS_OFF_AMAZON",
          "PURCHASES_ON_AMAZON",
          "MOBILE_APP_INSTALLS",
          "AWARENESS"
        ]
      },
      "VendorProductV1": {
        "description": "The measurement vendor product.",
        "type": "object",
        "properties": {
          "vendorType": {
            "$ref": "#/components/schemas/VendorTypeV1"
          },
          "vendorProductType": {
            "$ref": "#/components/schemas/VendorProductTypeV1"
          },
          "adType": {
            "$ref": "#/components/schemas/AdTypeV1"
          },
          "fundingType": {
            "$ref": "#/components/schemas/FundingTypeV1"
          },
          "studyType": {
            "$ref": "#/components/schemas/StudyTypeV1"
          },
          "id": {
            "description": "The vendor product identifier.",
            "readOnly": true,
            "type": "string"
          },
          "objective": {
            "$ref": "#/components/schemas/StudyObjectiveV1"
          }
        }
      },
      "MeasurementStudiesMarketplace": {
        "description": "The marketplace with corresponding rules.",
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/MeasurementStudiesCountry"
          },
          "supportedLocales": {
            "minItems": 0,
            "maxItems": 2,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesLocale"
            }
          },
          "minimumImpressions": {
            "format": "int64",
            "description": "The minimum impressions.",
            "type": "integer"
          },
          "budgetTimeSpan": {
            "format": "int64",
            "description": "The time span in days to calculate budget. Null represents total impressions for the campaigns.",
            "type": "integer"
          },
          "minimumBudget": {
            "format": "double",
            "description": "The minimum budget. Expressed in marketplace currency.",
            "type": "number"
          },
          "impressionTimeSpan": {
            "format": "int64",
            "description": "The time span in days to calculate impressions. Null represents total impressions for the campaigns.",
            "type": "integer"
          }
        }
      },
      "PaginatedDSPCreativeTestingStudiesV1M2": {
        "description": "A list of creative testing studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DSPCreativeTestingStudyV1M2"
            }
          }
        }
      },
      "MeasurementStudiesCancelStudyResponse": {
        "description": "Cancel study response.",
        "type": "object",
        "properties": {
          "code": {
            "description": "An enumerated success or error code for machine use.",
            "type": "string"
          },
          "studyId": {
            "description": "The study canonical identifier.",
            "type": "string"
          },
          "message": {
            "description": "A human-readable message of the code.",
            "type": "string"
          },
          "errors": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSubError"
            }
          }
        }
      },
      "CreativeTestingStudyResultV1M2": {
        "description": "The result of Creative Testing study.",
        "properties": {
          "totalResponses": {
            "description": "Total number of responses received in the Survey.",
            "type": "number"
          },
          "studyId": {
            "description": "The canonical Id of Study.",
            "type": "string"
          },
          "surveyResponses": {
            "minItems": 1,
            "maxItems": 2000,
            "description": "Detailed response rate for each response in Survey question aggregated by different segments.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyResponseResultV1M2"
            }
          }
        }
      },
      "MeasurementStudiesSurveyQuestionSubCategory": {
        "description": "The survey question sub-category. Only applicable to certain categories. Consider upgrading API version if enum `OTHER` is received.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "DEMOGRAPHIC",
          "BEHAVIOR",
          "PURCHASE_HISTORY",
          "OTHER"
        ]
      },
      "MeasurementStudyStatusReason": {
        "description": "Measurement study status reason.",
        "type": "object",
        "properties": {
          "measurementStudyStatusReasonType": {
            "$ref": "#/components/schemas/MeasurementStudyStatusReasonType"
          },
          "statusReasonDescription": {
            "description": "Human readable description of status reason.",
            "type": "string"
          }
        }
      },
      "PaginatedMeasurementStudiesVendorProductPolicies": {
        "description": "A list of measurement vendor products policies.",
        "type": "object",
        "properties": {
          "totalResults": {
            "format": "int32",
            "description": "The total number of vendor products.",
            "type": "integer"
          },
          "nextToken": {
            "type": "string"
          },
          "policies": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesVendorProductPolicy"
            }
          }
        }
      },
      "MeasurementStudiesLocale": {
        "description": "The measurement locale. Consider upgrading API version if enum `OTHER` is received.",
        "type": "string",
        "enum": [
          "EN_US",
          "OTHER"
        ]
      },
      "OmnichannelMetricsBrandV1M2": {
        "type": "object",
        "properties": {
          "company": {
            "type": "string"
          },
          "id": {
            "description": "The brand canonical Id",
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "subcategory": {
            "type": "string"
          },
          "brand": {
            "description": "The brand name.",
            "type": "string"
          },
          "majorBrand": {
            "type": "string"
          },
          "manufacturer": {
            "type": "string"
          }
        }
      },
      "MeasurementOmnichannelMetricsStudy": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MeasurementBaseStudy"
          },
          {
            "$ref": "#/components/schemas/MeasurementOmnichannelMetricsStudyMetadata"
          }
        ],
        "description": "OMNICHANNEL_METRICS study object.",
        "type": "object"
      },
      "StudyReviewRequestV1": {
        "description": "Review an study.",
        "type": "object",
        "properties": {
          "statusReasons": {
            "minItems": 0,
            "maxItems": 100,
            "description": "List of reasons for study status. For example, when study is marked REJECTED or INELIGIBLE, this field would be available.",
            "readOnly": true,
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rejectionReasons": {
            "minItems": 0,
            "maxItems": 100,
            "deprecated": true,
            "description": "List of reasons for rejection, this will only be required if the status is REJECTED. This field is deprecated, use statusReasons instead.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "studyId": {
            "description": "The study canonical identifier.",
            "type": "string"
          },
          "comment": {
            "description": "The approver's comment on why the study is approved/rejected.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/StudyReviewStatusV1"
          }
        }
      },
      "AudienceSelectionOperatorV1M2": {
        "description": "The operator used in Audience Segment Selection to determine which operation needs to be applied across selected segments. AND operator takes priority over OR operator.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "OR",
          "AND"
        ]
      },
      "GetMeasurementStudiesReachAndFrequency": {
        "description": "The request object for fetching reach and frequency studies.",
        "type": "object",
        "properties": {
          "studyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Study canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The advertiser canonical identifier. Used for querying reach and frequency studies for a DSP advertiser Account.",
            "type": "string"
          }
        }
      },
      "CurrencyCodeV1M2": {
        "description": "Currency Code.",
        "type": "string",
        "enum": [
          "USD",
          "CAD",
          "MXN",
          "BRL",
          "GBP",
          "EUR",
          "AED",
          "SAR",
          "INR",
          "JPY",
          "AUD",
          "SGD",
          "TRY",
          "SEK",
          "EGP",
          "PLN"
        ]
      },
      "GetMeasurementStudiesOmnichannelMetrics": {
        "description": "The request object for fetching omnichannel metrics study.",
        "type": "object",
        "properties": {
          "studyIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Study canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "advertiserId": {
            "description": "The advertiser canonical identifier. Used for querying omnichannel studies for a DSP advertiser Account.",
            "type": "string"
          }
        }
      },
      "DSPOmnichannelMetricsMetadataV1M2": {
        "description": "The basic model for all DSP OMNICHANNEL_METRICS objective studies.",
        "type": "object",
        "properties": {
          "brandIds": {
            "minItems": 0,
            "maxItems": 100,
            "description": "A list of canonical brand ids to be tracked for off-Amazon conversions.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "GetMeasurementStudiesVendorProductPolicy": {
        "description": "The request object for fetching vendor product policies of specific vendor products.",
        "type": "object",
        "properties": {
          "vendorProductIds": {
            "minItems": 1,
            "maxItems": 50,
            "description": "Vendor product canonical identifier to filter with.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "FundingTypeV1M3": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "COMPLIMENTARY",
          "THIRD_PARTY_PAYMENT",
          "CPM"
        ]
      },
      "SurveyV1": {
        "description": "The measurement survey.",
        "type": "object",
        "properties": {
          "vendorProductId": {
            "description": "The vendor product canonical identifier.",
            "type": "string"
          },
          "templatedQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of templated survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1"
            }
          },
          "customQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "deprecated": true,
            "description": "A list of custom survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            }
          },
          "studyId": {
            "description": "The associated study identifier. Survey needs to be created prior to the study creation.",
            "readOnly": true,
            "type": "string"
          },
          "id": {
            "description": "The survey canonical identifier. Immutable field. This is required for update.",
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/SurveyStatusV1"
          }
        }
      },
      "AssetV1M2": {
        "description": "The Amazon Creative Asset Library asset identifier. Refer https://advertising.amazon.com/API/docs/en-us/creative-asset-library",
        "properties": {
          "assetId": {
            "description": "The assetId.",
            "type": "string"
          },
          "version": {
            "description": "The version of the asset.",
            "type": "string"
          },
          "assetType": {
            "$ref": "#/components/schemas/AssetTypeV1M2"
          }
        }
      },
      "FundingTypeV1M1": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "COMPLIMENTARY",
          "THIRD_PARTY_PAYMENT"
        ]
      },
      "MeasurementStudiesSurveyQuestionPlaceholderCandidate": {
        "description": "The placeholder candidate in Survey question.",
        "type": "object",
        "properties": {
          "allowedValues": {
            "minItems": 0,
            "maxItems": 20,
            "description": "Allowed values for placeholder. Will be empty if placeholder is free text field.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderAllowedValue"
            }
          },
          "maximumValueLength": {
            "description": "The maximum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "fieldName": {
            "description": "The survey question placeholder field name.",
            "type": "string"
          },
          "allowedValueRanges": {
            "minItems": 0,
            "maxItems": 20,
            "description": "Allowed value ranges for placeholder. Only applicable if the valueType is INTEGER.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderAllowedRange"
            }
          },
          "valueType": {
            "$ref": "#/components/schemas/MeasurementStudiesPlaceholderValueType"
          },
          "inferredFields": {
            "minItems": 0,
            "maxItems": 6,
            "description": "Where the placeholder values will be inferred from.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderInferredField"
            }
          },
          "defaultValues": {
            "minItems": 0,
            "maxItems": 10,
            "description": "Default values that will be appended to the values list regardless.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "minimumValueLength": {
            "description": "The minimum allowed character length for each individual placeholder value.",
            "type": "integer"
          },
          "allowCustomValue": {
            "description": "Whether custom value is allowed for the placeholder.",
            "type": "boolean"
          },
          "placeholderCandidateType": {
            "$ref": "#/components/schemas/MeasurementStudiesSurveyQuestionPlaceholderCandidateType"
          }
        }
      },
      "MeasurementReachAndFrequencyStudyResult": {
        "description": "The response object for downloading study results.",
        "type": "object",
        "properties": {
          "fileDownloadUrl": {
            "description": "A pre-signed S3 URL which links to the curated study results file. The URL expires after 60 seconds. If the URL expires before the curated results file is downloaded, a new download request must be created.",
            "type": "string"
          },
          "fileType": {
            "type": "string",
            "enum": [
              "PDF",
              "POWERPOINT",
              "JPEG",
              "PNG",
              "OTHER"
            ]
          }
        }
      },
      "FundingTypeV1M2": {
        "description": "The measurement funding type. For COMPLIMENTARY studies the cost will be covered by Amazon.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "COMPLIMENTARY",
          "CPM",
          "FLAT_RATE"
        ]
      },
      "StudyTypeV1": {
        "description": "The study type.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "BRAND_LIFT"
        ]
      },
      "VendorProductTypeV1": {
        "description": "The measurement vendor product type.",
        "readOnly": true,
        "type": "string",
        "enum": [
          "SHOPPER_PANEL"
        ]
      },
      "SurveyQuestionCategoryRequirementV1M1": {
        "description": "The requirement for specific survey question category.",
        "type": "object",
        "properties": {
          "minimumQuestions": {
            "description": "The minimum number of questions required for the question category.",
            "type": "integer"
          },
          "maximumQuestions": {
            "description": "The maximum number of questions required for the question category.",
            "type": "integer"
          },
          "category": {
            "$ref": "#/components/schemas/SurveyQuestionCategoryV1M1"
          }
        }
      },
      "PaginatedMeasurementStudiesSurveyQuestionTemplates": {
        "type": "object",
        "properties": {
          "surveyQuestionTemplates": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/MeasurementStudiesSurveyShortQuestionTemplate"
                }
              ]
            }
          },
          "totalResults": {
            "format": "int32",
            "description": "The total number of templates.",
            "type": "integer"
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "PaginatedMeasurementCreativeTestingStudies": {
        "description": "A list of creative testing studies.",
        "type": "object",
        "properties": {
          "nextToken": {
            "type": "string"
          },
          "measurements": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeasurementCreativeTestingStudy"
            }
          }
        }
      },
      "SurveyQuestionGridQuestionResponseV1M1": {
        "description": "The grid question response object. Only applicable for SINGLE_SELECT_GRID type question.",
        "type": "object",
        "properties": {
          "columns": {
            "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
          },
          "rows": {
            "$ref": "#/components/schemas/SurveyQuestionPlaceholderCandidateV1"
          }
        }
      },
      "DSPAudienceResearchCostEstimationRequestV1M2": {
        "description": "The request object of DSP Audience Research study cost estimation.",
        "properties": {
          "vendorProductId": {
            "description": "vendor product canonical identifier.",
            "type": "string"
          },
          "templatedQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of templated survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TemplatedSurveyQuestionV1"
            }
          },
          "customQuestions": {
            "minItems": 1,
            "maxItems": 100,
            "description": "A list of custom survey questions.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomSurveyQuestionV1"
            }
          },
          "locale": {
            "$ref": "#/components/schemas/MeasurementLocaleV1"
          },
          "advertiserId": {
            "description": "The associated advertiser identifier.",
            "type": "string"
          }
        }
      },
      "SurveyQuestionResponseV1M2": {
        "description": "The survey question response chosen by Survey audience.",
        "properties": {
          "responseType": {
            "description": "The type of response.",
            "type": "string",
            "enum": [
              "TEXT",
              "ASSET"
            ]
          },
          "responseValue": {
            "description": "The response text if the question response type is TEXT.",
            "type": "string"
          },
          "asset": {
            "$ref": "#/components/schemas/AssetV1M2"
          }
        }
      },
      "PaginatedSurveyQuestionTemplatesV1": {
        "type": "object",
        "properties": {
          "surveyQuestionTemplates": {
            "minItems": 0,
            "maxItems": 100,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SurveyQuestionTemplateV1"
            }
          },
          "totalResults": {
            "format": "int32",
            "description": "The total number of templates.",
            "type": "integer"
          },
          "nextToken": {
            "type": "string"
          }
        }
      },
      "MeasurementAudienceResearchStudyEligibilityData": {
        "description": "The audience research study eligibility data.",
        "type": "object",
        "properties": {
          "audienceTargetingGroup": {
            "$ref": "#/components/schemas/MeasurementStudiesAudienceTargetingGroup"
          }
        }
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {
      "clientHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-ClientId",
        "description": "The identifier of a client associated with a \"Login with Amazon\" account.",
        "required": true
      },
      "profileHeader": {
        "schema": {
          "type": "string"
        },
        "in": "header",
        "name": "Amazon-Advertising-API-Scope",
        "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id `profileId` from the response to pass it as input.",
        "required": true
      }
    }
  },
  "openapi": "3.0.1"
}