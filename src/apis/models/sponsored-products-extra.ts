/* tslint:disable */
/* eslint-disable */
/**
 * Sponsored Products
 * Sponsored Products Targeting API.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';
import { createRequestFunction } from "../../helpers";

/**
 * Returns information about an AccessDeniedException.
 * @export
 * @interface AccessDeniedException
 */
export interface AccessDeniedException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof AccessDeniedException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof AccessDeniedException
     */
    details?: string;
}
/**
 * request object to get rank recommendations for keywordTarget by adGroup
 * @export
 * @interface AdGroupKeywordTargetRankRecommendationRequest
 */
export interface AdGroupKeywordTargetRankRecommendationRequest {
    /**
     * The identifier of the campaign
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    campaignId: string;
    /**
     * The recommendation type to get recommendations by adGroup
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    recommendationType: AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum;
    /**
     * The identifier of the ad group
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    adGroupId: string;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    sortDimension?: AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. zh_CN is supported in US, UK, CA. en_GB is supported in DE, FR, IT, ES. Note: Translations will be null if locale is unsupported
     * @type {string}
     * @memberof AdGroupKeywordTargetRankRecommendationRequest
     */
    locale?: AdGroupKeywordTargetRankRecommendationRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum AdGroupKeywordTargetRankRecommendationRequestRecommendationTypeEnum {
    KeywordsForAdgroup = 'KEYWORDS_FOR_ADGROUP'
}
/**
    * @export
    * @enum {string}
    */
export enum AdGroupKeywordTargetRankRecommendationRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum AdGroupKeywordTargetRankRecommendationRequestLocaleEnum {
    ZhCn = 'zh_CN',
    EnGb = 'en_GB'
}

/**
 * 
 * @export
 * @interface AdGroupThemeBasedBidRecommendationRequest
 */
export interface AdGroupThemeBasedBidRecommendationRequest {
    /**
     * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
     * @type {Array<TargetingExpression>}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    targetingExpressions: Array<TargetingExpression>;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    campaignId: string;
    /**
     * The bid recommendation type.
     * @type {string}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    recommendationType: AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof AdGroupThemeBasedBidRecommendationRequest
     */
    adGroupId: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AdGroupThemeBasedBidRecommendationRequestRecommendationTypeEnum {
    BidsForExistingAdGroup = 'BIDS_FOR_EXISTING_AD_GROUP'
}

/**
 * 
 * @export
 * @interface AgeRange
 */
export interface AgeRange {
    /**
     * Name of Age Range. This field is OPTIONAL if the Age Range object is being used as an input.
     * @type {string}
     * @memberof AgeRange
     */
    name?: string;
    /**
     * Id of Age Range. This field is REQUIRED if the Age Range object is being used as an input. Use the GetRefinementsForCategory to retrieve Age Range Node IDs.
     * @type {string}
     * @memberof AgeRange
     */
    id?: string;
}
/**
 * request object to get rank recommendations for keywordTarget by Asin list
 * @export
 * @interface AsinsKeywordTargetRankRecommendationRequest
 */
export interface AsinsKeywordTargetRankRecommendationRequest {
    /**
     * An array list of Asins
     * @type {Array<string>}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    asins: Array<string>;
    /**
     * The recommendation type to get recommendations for Asin list
     * @type {string}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    recommendationType: AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    sortDimension?: AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. zh_CN is supported in US, UK, CA. en_GB is supported in DE, FR, IT, ES. Note: Translations will be null if locale is unsupported
     * @type {string}
     * @memberof AsinsKeywordTargetRankRecommendationRequest
     */
    locale?: AsinsKeywordTargetRankRecommendationRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinsKeywordTargetRankRecommendationRequestRecommendationTypeEnum {
    KeywordsForAsins = 'KEYWORDS_FOR_ASINS'
}
/**
    * @export
    * @enum {string}
    */
export enum AsinsKeywordTargetRankRecommendationRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum AsinsKeywordTargetRankRecommendationRequestLocaleEnum {
    ZhCn = 'zh_CN',
    EnGb = 'en_GB'
}

/**
 * 
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequest
 */
export interface AsinsThemeBasedBidRecommendationRequest {
    /**
     * The list of ad ASINs in the ad group.
     * @type {Array<string>}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    asins: Array<string>;
    /**
     * The list of targeting expressions. Maximum of 100 per request, use pagination for more if needed.
     * @type {Array<TargetingExpression>}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    targetingExpressions: Array<TargetingExpression>;
    /**
     * 
     * @type {AsinsThemeBasedBidRecommendationRequestBidding}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    bidding: AsinsThemeBasedBidRecommendationRequestBidding;
    /**
     * The bid recommendation type.
     * @type {string}
     * @memberof AsinsThemeBasedBidRecommendationRequest
     */
    recommendationType: AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinsThemeBasedBidRecommendationRequestRecommendationTypeEnum {
    BidsForNewAdGroup = 'BIDS_FOR_NEW_AD_GROUP'
}

/**
 * Bidding control configuration for the campaign.
 * @export
 * @interface AsinsThemeBasedBidRecommendationRequestBidding
 */
export interface AsinsThemeBasedBidRecommendationRequestBidding {
    /**
     * Placement adjustment configuration for the campaign.
     * @type {Array<PlacementAdjustment>}
     * @memberof AsinsThemeBasedBidRecommendationRequestBidding
     */
    adjustments?: Array<PlacementAdjustment>;
    /**
     * 
     * @type {BiddingStrategy}
     * @memberof AsinsThemeBasedBidRecommendationRequestBidding
     */
    strategy: BiddingStrategy;
}
/**
 * 
 * @export
 * @interface AssociatedBudgetRuleResponse
 */
export interface AssociatedBudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    details?: string;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    ruleId?: string;
}
/**
 * 
 * @export
 * @interface AssociatedCampaign
 */
export interface AssociatedCampaign {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignId: string;
    /**
     * The budget rule evaluation status for this campaign. Read-only.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    ruleStatus: string;
    /**
     * The campaign name.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignName: string;
}
/**
 * Returns information about a BadRequestException.
 * @export
 * @interface BadRequestException
 */
export interface BadRequestException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof BadRequestException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BadRequestException
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BidRecommendationError
 */
export interface BidRecommendationError {
    /**
     * A machine-readable error code.
     * @type {string}
     * @memberof BidRecommendationError
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BidRecommendationError
     */
    details: string;
}
/**
 * 
 * @export
 * @interface BidRecommendationPerTargetingExpression
 */
export interface BidRecommendationPerTargetingExpression {
    /**
     * 
     * @type {Array<BidValue>}
     * @memberof BidRecommendationPerTargetingExpression
     */
    bidValues: Array<BidValue>;
    /**
     * 
     * @type {TargetingExpression}
     * @memberof BidRecommendationPerTargetingExpression
     */
    targetingExpression: TargetingExpression;
}
/**
 * Suggested bid range
 * @export
 * @interface BidSuggestion
 */
export interface BidSuggestion {
    /**
     * The suggested bid
     * @type {number}
     * @memberof BidSuggestion
     */
    suggested?: number;
    /**
     * The bid range start
     * @type {number}
     * @memberof BidSuggestion
     */
    rangeStart?: number;
    /**
     * The bid recommendation id
     * @type {string}
     * @memberof BidSuggestion
     */
    bidRecId?: string;
    /**
     * The bid range end
     * @type {number}
     * @memberof BidSuggestion
     */
    rangeEnd?: number;
}
/**
 * Bid value of the bid recommendations
 * @export
 * @interface BidValue
 */
export interface BidValue {
    /**
     * The suggested bid.
     * @type {number}
     * @memberof BidValue
     */
    suggestedBid: number;
}
/**
 * The bidding strategy selected for the campaign. Use `LEGACY_FOR_SALES` to lower your bid in real time when your ad may be less likely to convert to a sale. Use `AUTO_FOR_SALES` to increase your bid in real time when your ad may be more likely to convert to a sale or lower your bid when less likely to convert to a sale. Use `MANUAL` to use your exact bid along with any manual adjustments.
 * @export
 * @enum {string}
 */

export enum BiddingStrategy {
    LegacyForSales = 'LEGACY_FOR_SALES',
    AutoForSales = 'AUTO_FOR_SALES',
    Manual = 'MANUAL'
}

/**
 * 
 * @export
 * @interface Brand
 */
export interface Brand {
    /**
     * Name of brand. This field is OPTIONAL if the Brand object is being used as an input.
     * @type {string}
     * @memberof Brand
     */
    name?: string;
    /**
     * Id of brand. This field is REQUIRED if the Brand object is being used as an input. Use the GetRefinementsForCategory to retrieve Brand Node IDs.
     * @type {string}
     * @memberof Brand
     */
    id?: string;
}
/**
 * The value by which to update the budget of the budget rule.
 * @export
 * @enum {string}
 */

export enum BudgetChangeType {
    Percent = 'PERCENT'
}

/**
 * 
 * @export
 * @interface BudgetIncreaseBy
 */
export interface BudgetIncreaseBy {
    /**
     * 
     * @type {BudgetChangeType}
     * @memberof BudgetIncreaseBy
     */
    type: BudgetChangeType;
    /**
     * The budget value.
     * @type {number}
     * @memberof BudgetIncreaseBy
     */
    value: number;
}
/**
 * 
 * @export
 * @interface BudgetRecommendation
 */
export interface BudgetRecommendation {
    /**
     * encrypted campaignId
     * @type {string}
     * @memberof BudgetRecommendation
     */
    campaignId: string;
    /**
     * recommended budget for the campaign.
     * @type {number}
     * @memberof BudgetRecommendation
     */
    suggestedBudget: number;
    /**
     * Correlate the recommendation to the campaign index in the request. Zero-based
     * @type {number}
     * @memberof BudgetRecommendation
     */
    index: number;
    /**
     * 
     * @type {SevenDaysMissedOpportunities}
     * @memberof BudgetRecommendation
     */
    sevenDaysMissedOpportunities: SevenDaysMissedOpportunities;
    /**
     * 
     * @type {BudgetRuleRecommendation}
     * @memberof BudgetRecommendation
     */
    budgetRuleRecommendation: BudgetRuleRecommendation;
}
/**
 * 
 * @export
 * @interface BudgetRecommendationError
 */
export interface BudgetRecommendationError {
    /**
     * encrypted campaignId
     * @type {string}
     * @memberof BudgetRecommendationError
     */
    campaignId: string;
    /**
     * Correlate the recommendation to the campaign index in the request. Zero-based
     * @type {number}
     * @memberof BudgetRecommendationError
     */
    index: number;
    /**
     * 
     * @type {SPTORBudgetRecommendationError}
     * @memberof BudgetRecommendationError
     */
    Error: SPTORBudgetRecommendationError;
}
/**
 * 
 * @export
 * @interface BudgetRecommendationRequest
 */
export interface BudgetRecommendationRequest {
    /**
     * List of campaigns.
     * @type {Array<string>}
     * @memberof BudgetRecommendationRequest
     */
    campaignIds: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetRecommendationResponse
 */
export interface BudgetRecommendationResponse {
    /**
     * List of successful budget recomendation for campagins.
     * @type {Array<BudgetRecommendation>}
     * @memberof BudgetRecommendationResponse
     */
    budgetRecommendationsSuccessResults: Array<BudgetRecommendation>;
    /**
     * List of errors that occured when generating bduget recommendation.
     * @type {Array<BudgetRecommendationError>}
     * @memberof BudgetRecommendationResponse
     */
    budgetRecommendationsErrorResults: Array<BudgetRecommendationError>;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetRuleError
 */
export interface BudgetRuleError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetRuleError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetRuleError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetRuleRecommendation
 */
export interface BudgetRuleRecommendation {
    /**
     * suggested increase percent
     * @type {number}
     * @memberof BudgetRuleRecommendation
     */
    suggestedBudgetIncreasePercent?: number;
    /**
     * rule name for the recomemendation
     * @type {string}
     * @memberof BudgetRuleRecommendation
     */
    ruleName?: string;
    /**
     * rule id for the recomemendation
     * @type {string}
     * @memberof BudgetRuleRecommendation
     */
    ruleId?: string;
}
/**
 * 
 * @export
 * @interface BudgetRuleResponse
 */
export interface BudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    details?: string;
    /**
     * The rule identifier.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    ruleId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BudgetRuleResponse
     */
    associatedCampaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CampaignOptimizationRule
 */
export interface CampaignOptimizationRule {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof CampaignOptimizationRule
     */
    recurrence?: RecurrenceType;
    /**
     * 
     * @type {RuleAction}
     * @memberof CampaignOptimizationRule
     */
    ruleAction?: RuleAction;
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof CampaignOptimizationRule
     */
    campaignOptimizationId: string;
    /**
     * Time of campaign optimization rule creation in ISO 8061. Read-only.
     * @type {string}
     * @memberof CampaignOptimizationRule
     */
    createdDate?: string;
    /**
     * 
     * @type {Array<RuleCondition>}
     * @memberof CampaignOptimizationRule
     */
    ruleCondition?: Array<RuleCondition>;
    /**
     * 
     * @type {RuleType}
     * @memberof CampaignOptimizationRule
     */
    ruleType?: RuleType;
    /**
     * The campaign optimization rule name.
     * @type {string}
     * @memberof CampaignOptimizationRule
     */
    ruleName?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof CampaignOptimizationRule
     */
    campaignIds?: Array<string>;
    /**
     * 
     * @type {RuleStatus}
     * @memberof CampaignOptimizationRule
     */
    ruleStatus?: RuleStatus;
}
/**
 * The Error Response Object.
 * @export
 * @interface CampaignOptimizationRuleError
 */
export interface CampaignOptimizationRuleError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof CampaignOptimizationRuleError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof CampaignOptimizationRuleError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface CategoryItem
 */
export interface CategoryItem {
    /**
     * The category id of the parent node
     * @type {string}
     * @memberof CategoryItem
     */
    parent?: string;
    /**
     * The path of the category, which contains the current category and all parent categories
     * @type {string}
     * @memberof CategoryItem
     */
    path?: string;
    /**
     * A flag which indicates if the current node may be targeted
     * @type {boolean}
     * @memberof CategoryItem
     */
    canBeTargeted?: boolean;
    /**
     * The name of the category
     * @type {string}
     * @memberof CategoryItem
     */
    name?: string;
    /**
     * The category id of the current node
     * @type {string}
     * @memberof CategoryItem
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface CategoryItemWithAsinCounts
 */
export interface CategoryItemWithAsinCounts {
    /**
     * The path of the category, which contains the current category and all parent categories
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    categoryPath?: string;
    /**
     * The name of the category
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    name?: string;
    /**
     * 
     * @type {IntegerRange}
     * @memberof CategoryItemWithAsinCounts
     */
    asinCounts?: IntegerRange;
    /**
     * The category id of the parent node
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    parentCategoryId?: string;
    /**
     * The category id of the current node
     * @type {string}
     * @memberof CategoryItemWithAsinCounts
     */
    id?: string;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendations
 */
export interface CategoryRecommendations {
    /**
     * List of category recommendations
     * @type {Array<CategoryItem>}
     * @memberof CategoryRecommendations
     */
    categories?: Array<CategoryItem>;
}
/**
 * Response object for the GetCategoryRecommendationsForAsins API.
 * @export
 * @interface CategoryRecommendationsWithAsinCounts
 */
export interface CategoryRecommendationsWithAsinCounts {
    /**
     * List of category recommendations
     * @type {Array<CategoryItemWithAsinCounts>}
     * @memberof CategoryRecommendationsWithAsinCounts
     */
    categories?: Array<CategoryItemWithAsinCounts>;
}
/**
 * The comparison operator.
 * @export
 * @enum {string}
 */

export enum ComparisonOperator {
    GreaterThan = 'GREATER_THAN',
    LessThan = 'LESS_THAN',
    EqualTo = 'EQUAL_TO',
    LessThanOrEqualTo = 'LESS_THAN_OR_EQUAL_TO',
    GreaterThanOrEqualTo = 'GREATER_THAN_OR_EQUAL_TO'
}

/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesRequest
 */
export interface CreateAssociatedBudgetRulesRequest {
    /**
     * A list of budget rule identifiers.
     * @type {Array<string>}
     * @memberof CreateAssociatedBudgetRulesRequest
     */
    budgetRuleIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesResponse
 */
export interface CreateAssociatedBudgetRulesResponse {
    /**
     * 
     * @type {Array<AssociatedBudgetRuleResponse>}
     * @memberof CreateAssociatedBudgetRulesResponse
     */
    responses?: Array<AssociatedBudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateBudgetRulesResponse
 */
export interface CreateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof CreateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateSBBudgetRulesRequest
 */
export interface CreateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRuleDetails>}
     * @memberof CreateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSDBudgetRulesRequest
 */
export interface CreateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRuleDetails>}
     * @memberof CreateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSPBudgetRulesRequest
 */
export interface CreateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRuleDetails>}
     * @memberof CreateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSPCampaignOptimizationRulesRequest
 */
export interface CreateSPCampaignOptimizationRulesRequest {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    recurrence: RecurrenceType;
    /**
     * 
     * @type {RuleAction}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleAction?: RuleAction;
    /**
     * 
     * @type {Array<RuleCondition>}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleCondition: Array<RuleCondition>;
    /**
     * 
     * @type {RuleType}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleType: RuleType;
    /**
     * The campaign optimization rule name.
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    ruleName: string;
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof CreateSPCampaignOptimizationRulesRequest
     */
    campaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateSPCampaignOptimizationRulesResponse
 */
export interface CreateSPCampaignOptimizationRulesResponse {
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesResponse
     */
    campaignOptimizationId?: string;
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof CreateSPCampaignOptimizationRulesResponse
     */
    details?: string;
}
/**
 * Object representing date range type rule duration.
 * @export
 * @interface DateRangeTypeRuleDuration
 */
export interface DateRangeTypeRuleDuration {
    /**
     * The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    endDate?: string;
    /**
     * The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    startDate: string;
}
/**
 * The day of the week.
 * @export
 * @enum {string}
 */

export enum DayOfWeek {
    Monday = 'MONDAY',
    Tuesday = 'TUESDAY',
    Wednesday = 'WEDNESDAY',
    Thursday = 'THURSDAY',
    Friday = 'FRIDAY',
    Saturday = 'SATURDAY',
    Sunday = 'SUNDAY'
}

/**
 * 
 * @export
 * @interface DeleteSPCampaignOptimizationRuleResponse
 */
export interface DeleteSPCampaignOptimizationRuleResponse {
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof DeleteSPCampaignOptimizationRuleResponse
     */
    campaignOptimizationId?: string;
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof DeleteSPCampaignOptimizationRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof DeleteSPCampaignOptimizationRuleResponse
     */
    details?: string;
}
/**
 * Object representing event type rule duration.
 * @export
 * @interface EventTypeRuleDuration
 */
export interface EventTypeRuleDuration {
    /**
     * The event identifier. This value is available from the budget rules recommendation API.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventId: string;
    /**
     * The event end date in YYYYMMDD format. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    endDate?: string;
    /**
     * The event name. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventName?: string;
    /**
     * The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface ExternalBrand
 */
export interface ExternalBrand {
    /**
     * 
     * @type {string}
     * @memberof ExternalBrand
     */
    brandEntityId?: string;
    /**
     * 
     * @type {string}
     * @memberof ExternalBrand
     */
    catalogType?: string;
    /**
     * 
     * @type {string}
     * @memberof ExternalBrand
     */
    brandRegistryName?: string;
    /**
     * 
     * @type {string}
     * @memberof ExternalBrand
     */
    brandId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExternalBrand
     */
    browseNodes?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ExternalBrand
     */
    vendorCodes?: Array<string>;
}
/**
 * 
 * @export
 * @interface Genre
 */
export interface Genre {
    /**
     * Name of Genre. This field is OPTIONAL if the Genre object is being used as an input.
     * @type {string}
     * @memberof Genre
     */
    name?: string;
    /**
     * Id of Genre. This field is REQUIRED if the Genre object is being used as an input. Use the GetRefinementsForCategory to retrieve Genre Node IDs.
     * @type {string}
     * @memberof Genre
     */
    id?: string;
}
/**
 * Request object to retrieve Category Recommendations based on the input ASINs.
 * @export
 * @interface GetCategoryRecommendationsForAsinsRequest
 */
export interface GetCategoryRecommendationsForAsinsRequest {
    /**
     * List of input ASINs. This API does not check if the ASINs are valid ASINs.
     * @type {Array<string>}
     * @memberof GetCategoryRecommendationsForAsinsRequest
     */
    asins?: Array<string>;
    /**
     * Enable this if you would like to retrieve categories which are ancestor nodes of the original recommended categories. This may increase the number of categories returned, but decrease the relevancy of those categories.
     * @type {boolean}
     * @memberof GetCategoryRecommendationsForAsinsRequest
     */
    includeAncestor?: boolean;
}
/**
 * Request structure to get ASIN recommendations for a set of input ASINs.
 * @export
 * @interface GetProductRecommendationsRequest
 */
export interface GetProductRecommendationsRequest {
    /**
     * A optional cursor value that can be used to fetch next or previous set of records.
     * @type {string}
     * @memberof GetProductRecommendationsRequest
     */
    cursor?: string;
    /**
     * List of input ASINs.
     * @type {Array<string>}
     * @memberof GetProductRecommendationsRequest
     */
    adAsins: Array<string>;
    /**
     * Count of objects requested in the response. The count will be applied on the objects returned under `recommendations` array in response body.  <ul> <li>Requesting `application/vnd.spproductrecommendationresponse.themes.v3+json` mediatype applies the count on `ThemeRecommendation` objects.If no count value is passed a default of `5` is assumed. The API will return a maximum of `10` themes irrespective of how large the count is set. </li> <li>Requesting `application/vnd.spproductrecommendationresponse.asins.v3+json` mediatype applies count on the `ProductRecommendation` objects in response body.If no count value is passed a default of `100` is assumed. The API will return a maximum of `1000` recommendations irrespective of how large the count is set. </li> </ul> Please refer the response Schemas for more info.
     * @type {number}
     * @memberof GetProductRecommendationsRequest
     */
    count?: number;
    /**
     * Theme names and descriptions will be provided in the language for your supported locale. Available options are en_US (U.S. English), en_GB (UK English), zh_CN (Chinese), es_ES (Spanish), jp_JP (Japanese), de_DE (German), fr_FR (French), it_IT(Italian). If locale is not provided or unsupported, the theme names and descriptions will be returned in U.S. English (en_US).
     * @type {string}
     * @memberof GetProductRecommendationsRequest
     */
    locale?: string;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRuleResponse
 */
export interface GetSBBudgetRuleResponse {
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof GetSBBudgetRuleResponse
     */
    budgetRule?: SBBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRulesForAdvertiserResponse
 */
export interface GetSBBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SBBudgetRule>}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SBBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRuleResponse
 */
export interface GetSDBudgetRuleResponse {
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof GetSDBudgetRuleResponse
     */
    budgetRule?: SDBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRulesForAdvertiserResponse
 */
export interface GetSDBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SDBudgetRule>}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SDBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRuleResponse
 */
export interface GetSPBudgetRuleResponse {
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof GetSPBudgetRuleResponse
     */
    budgetRule?: SPBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRulesForAdvertiserResponse
 */
export interface GetSPBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SPBudgetRule>}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SPBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSPCampaignOptimizationRuleResponse
 */
export interface GetSPCampaignOptimizationRuleResponse {
    /**
     * 
     * @type {CampaignOptimizationRule}
     * @memberof GetSPCampaignOptimizationRuleResponse
     */
    CampaignOptimizationRule?: CampaignOptimizationRule;
}
/**
 * 
 * @export
 * @interface GetTargetableAsinCountsRequest
 */
export interface GetTargetableAsinCountsRequest {
    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
     * @type {Array<AgeRange>}
     * @memberof GetTargetableAsinCountsRequest
     */
    ageRanges?: Array<AgeRange>;
    /**
     * List of Brands.
     * @type {Array<Brand>}
     * @memberof GetTargetableAsinCountsRequest
     */
    brands?: Array<Brand>;
    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     * @type {Array<Genre>}
     * @memberof GetTargetableAsinCountsRequest
     */
    genres?: Array<Genre>;
    /**
     * Indicates if products have prime shipping
     * @type {boolean}
     * @memberof GetTargetableAsinCountsRequest
     */
    isPrimeShipping?: boolean;
    /**
     * 
     * @type {RatingRange}
     * @memberof GetTargetableAsinCountsRequest
     */
    ratingRange?: RatingRange;
    /**
     * The category node id. Please use the GetTargetableCategories API or GetCategoryRecommendationsForASINs API to retrieve category IDs.
     * @type {string}
     * @memberof GetTargetableAsinCountsRequest
     */
    category: string;
    /**
     * 
     * @type {PriceRange}
     * @memberof GetTargetableAsinCountsRequest
     */
    priceRange?: PriceRange;
}
/**
 * The impacts are given in the same order of suggested bids.
 * @export
 * @interface ImpactMetric
 */
export interface ImpactMetric {
    /**
     * 
     * @type {Array<RangeMetricValue>}
     * @memberof ImpactMetric
     */
    values?: Array<RangeMetricValue>;
}
/**
 * The impact metrics are weekly clicks and orders received by similar products. You can look at the increase in clicks and orders to choose the right bid for your targets.
 * @export
 * @interface ImpactMetrics
 */
export interface ImpactMetrics {
    /**
     * 
     * @type {ImpactMetric}
     * @memberof ImpactMetrics
     */
    clicks?: ImpactMetric;
    /**
     * 
     * @type {ImpactMetric}
     * @memberof ImpactMetrics
     */
    orders?: ImpactMetric;
}
/**
 * 
 * @export
 * @interface IntegerRange
 */
export interface IntegerRange {
    /**
     * 
     * @type {number}
     * @memberof IntegerRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof IntegerRange
     */
    max?: number;
}
/**
 * Returns information about an InternalServerException
 * @export
 * @interface InternalServerException
 */
export interface InternalServerException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof InternalServerException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof InternalServerException
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface KeywordBidInfo
 */
export interface KeywordBidInfo {
    /**
     * 
     * @type {BidSuggestion}
     * @memberof KeywordBidInfo
     */
    suggestedBid?: BidSuggestion;
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof KeywordBidInfo
     */
    matchType?: KeywordBidInfoMatchTypeEnum;
    /**
     * The keyword target rank
     * @type {number}
     * @memberof KeywordBidInfo
     */
    rank?: number;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof KeywordBidInfo
     */
    bid?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordBidInfoMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * 
 * @export
 * @interface KeywordRankedTargetsResponse
 */
export interface KeywordRankedTargetsResponse {
    /**
     * A list of ranked keyword targets
     * @type {Array<KeywordTargetResponse>}
     * @memberof KeywordRankedTargetsResponse
     */
    targets?: Array<KeywordTargetResponse>;
}
/**
 * 
 * @export
 * @interface KeywordTarget
 */
export interface KeywordTarget {
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof KeywordTarget
     */
    matchType?: KeywordTargetMatchTypeEnum;
    /**
     * The keyword value
     * @type {string}
     * @memberof KeywordTarget
     */
    keyword?: string;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof KeywordTarget
     */
    bid?: number;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof KeywordTarget
     */
    userSelectedKeyword?: boolean;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * 
 * @export
 * @interface KeywordTargetRankRecommendationRequest
 */
export interface KeywordTargetRankRecommendationRequest {
    /**
     * User defined keyword targets list.
     * @type {Array<KeywordTarget>}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    targets?: Array<KeywordTarget>;
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    sortDimension?: KeywordTargetRankRecommendationRequestSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. zh_CN is supported in US, UK, CA. en_GB is supported in DE, FR, IT, ES. Note: Translations will be null if locale is unsupported
     * @type {string}
     * @memberof KeywordTargetRankRecommendationRequest
     */
    locale?: KeywordTargetRankRecommendationRequestLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetRankRecommendationRequestSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetRankRecommendationRequestLocaleEnum {
    ZhCn = 'zh_CN',
    EnGb = 'en_GB'
}

/**
 * 
 * @export
 * @interface KeywordTargetResponse
 */
export interface KeywordTargetResponse {
    /**
     * 
     * @type {BidSuggestion}
     * @memberof KeywordTargetResponse
     */
    suggestedBid?: BidSuggestion;
    /**
     * The translation of keyword if a locale is passed in
     * @type {string}
     * @memberof KeywordTargetResponse
     */
    translation?: string;
    /**
     * The keyword target rank
     * @type {number}
     * @memberof KeywordTargetResponse
     */
    rank?: number;
    /**
     * Keyword match type. The default value will be BROAD.
     * @type {string}
     * @memberof KeywordTargetResponse
     */
    matchType?: KeywordTargetResponseMatchTypeEnum;
    /**
     * The keyword value
     * @type {string}
     * @memberof KeywordTargetResponse
     */
    keyword?: string;
    /**
     * The bid value for the keyword. The default value will be the suggested bid.
     * @type {number}
     * @memberof KeywordTargetResponse
     */
    bid?: number;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof KeywordTargetResponse
     */
    userSelectedKeyword?: boolean;
}

/**
    * @export
    * @enum {string}
    */
export enum KeywordTargetResponseMatchTypeEnum {
    Broad = 'BROAD',
    Exact = 'EXACT',
    Phrase = 'PHRASE'
}

/**
 * 
 * @export
 * @interface ListBrandsResponseObject
 */
export interface ListBrandsResponseObject {
    /**
     * 
     * @type {Array<ExternalBrand>}
     * @memberof ListBrandsResponseObject
     */
    brands?: Array<ExternalBrand>;
    /**
     * 
     * @type {string}
     * @memberof ListBrandsResponseObject
     */
    merchantId?: string;
    /**
     * 
     * @type {string}
     * @memberof ListBrandsResponseObject
     */
    merchantType?: string;
}
/**
 * 
 * @export
 * @interface PerformanceMeasureCondition
 */
export interface PerformanceMeasureCondition {
    /**
     * 
     * @type {PerformanceMetric}
     * @memberof PerformanceMeasureCondition
     */
    metricName: PerformanceMetric;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof PerformanceMeasureCondition
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof PerformanceMeasureCondition
     */
    threshold: number;
}
/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export enum PerformanceMetric {
    Acos = 'ACOS',
    Ctr = 'CTR',
    Cvr = 'CVR',
    Roas = 'ROAS'
}

/**
 * An object giving the name of the performance metric and its value when the rule was evaluated
 * @export
 * @interface PerformanceMetricValue
 */
export interface PerformanceMetricValue {
    /**
     * Name of the performance metric
     * @type {string}
     * @memberof PerformanceMetricValue
     */
    name?: string;
    /**
     * Value of the performance metric
     * @type {number}
     * @memberof PerformanceMetricValue
     */
    value?: number;
}
/**
 * Specifies bid adjustments based on the placement location. Use `PLACEMENT_TOP` for the top of the search page. Use `PLACEMENT_PRODUCT_PAGE` for a product page.
 * @export
 * @interface PlacementAdjustment
 */
export interface PlacementAdjustment {
    /**
     * 
     * @type {string}
     * @memberof PlacementAdjustment
     */
    predicate?: PlacementAdjustmentPredicateEnum;
    /**
     * 
     * @type {number}
     * @memberof PlacementAdjustment
     */
    percentage?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum PlacementAdjustmentPredicateEnum {
    Top = 'PLACEMENT_TOP',
    ProductPage = 'PLACEMENT_PRODUCT_PAGE'
}

/**
 * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
 * @export
 * @interface PriceRange
 */
export interface PriceRange {
    /**
     * 
     * @type {number}
     * @memberof PriceRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof PriceRange
     */
    max?: number;
}
/**
 * Recommended asin and related information.
 * @export
 * @interface ProductRecommendation
 */
export interface ProductRecommendation {
    /**
     * List of themes associated with this recommended ASIN.
     * @type {Array<string>}
     * @memberof ProductRecommendation
     */
    themes?: Array<string>;
    /**
     * Recommended ASIN
     * @type {string}
     * @memberof ProductRecommendation
     */
    recommendedAsin?: string;
}
/**
 * Product recommendations supplemented with relevant information.
 * @export
 * @interface ProductRecommendationsByASIN
 */
export interface ProductRecommendationsByASIN {
    /**
     * An identifier to fetch next set of `ProductRecommendation` records in the result set if available. This will be null when at the end of result set.
     * @type {string}
     * @memberof ProductRecommendationsByASIN
     */
    nextCursor?: string;
    /**
     * Optional parameter that links to the previous result set served. This parameter will be null on the first request.
     * @type {string}
     * @memberof ProductRecommendationsByASIN
     */
    previousCursor?: string;
    /**
     * An array of `ProductRecommendation` objects.
     * @type {Array<ProductRecommendation>}
     * @memberof ProductRecommendationsByASIN
     */
    recommendations?: Array<ProductRecommendation>;
}
/**
 * Product recommendations grouped by theme attribute.
 * @export
 * @interface ProductRecommendationsByTheme
 */
export interface ProductRecommendationsByTheme {
    /**
     * An identifier to fetch next set of `ThemeRecommendation` records in the result set if available. This will be null when at the end of result set.
     * @type {string}
     * @memberof ProductRecommendationsByTheme
     */
    nextCursor?: string;
    /**
     * Optional parameter that links to the previous result set served to the requester.
     * @type {string}
     * @memberof ProductRecommendationsByTheme
     */
    previousCursor?: string;
    /**
     * An array of `ThemeRecommendation` objects
     * @type {Array<ThemeRecommendation>}
     * @memberof ProductRecommendationsByTheme
     */
    recommendations?: Array<ThemeRecommendation>;
}
/**
 * 
 * @export
 * @interface Profile
 */
export interface Profile {
    /**
     * 
     * @type {ProfileAccountInfo}
     * @memberof Profile
     */
    accountInfo?: ProfileAccountInfo;
    /**
     * Note that this field applies to Sponsored Product campaigns for seller type accounts only. Not supported for vendor type accounts.
     * @type {number}
     * @memberof Profile
     */
    dailyBudget?: number;
    /**
     * 
     * @type {number}
     * @memberof Profile
     */
    profileId?: number;
    /**
     * 
     * @type {ProfileCountryCode}
     * @memberof Profile
     */
    countryCode?: ProfileCountryCode;
    /**
     * The time zone used for all date-based campaign management and reporting. |Region|`countryCode`|Country Name|`timezone`| |------|-----|-----|------| |NA|US|United States|America/Los_Angeles| |NA|CA|Canada|America/Los_Angeles| |EU|UK|United Kingdom|Europe/London| |EU|DE|Germany|Europe/Paris| |EU|FR|France|Europe/Paris| |EU|ES|Spain|Europe/Paris| |EU|IT|Italy|Europe/Paris| |FE|JP|Japan|Asia/Tokyo| |FE|AU|Australia|Australia/Sydney| |EU|AE|United Arab Emirates|Asia/Dubai|
     * @type {string}
     * @memberof Profile
     */
    timezone?: ProfileTimezoneEnum;
    /**
     * The currency used for all monetary values for entities under this profile. |Region|`countryCode`|Country Name|`currencyCode`| |-----|------|------|------| |NA|US|United States|USD| |NA|CA|Canada|CAD| |EU|UK|United Kingdom|GBP| |EU|DE|Germany|EUR| |EU|FR|France|EUR| |EU|ES|Spain|EUR| |EU|IT|Italy|EUR| |FE|JP|Japan|JPY| |FE|AU|Australia|AUD| |EU|AE|United Arab Emirates|AED|
     * @type {string}
     * @memberof Profile
     */
    currencyCode?: ProfileCurrencyCodeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum ProfileTimezoneEnum {
    AmericaLosAngeles = 'America/Los_Angeles',
    EuropeLondon = 'Europe/London',
    EuropeParis = 'Europe/Paris',
    AsiaTokyo = 'Asia/Tokyo',
    AustraliaSydney = 'Australia/Sydney',
    AsiaDubai = 'Asia/Dubai'
}
/**
    * @export
    * @enum {string}
    */
export enum ProfileCurrencyCodeEnum {
    Usd = 'USD',
    Cad = 'CAD',
    Gbp = 'GBP',
    Jpy = 'JPY',
    Eur = 'EUR',
    Aud = 'AUD',
    Aed = 'AED'
}

/**
 * 
 * @export
 * @interface ProfileAccountInfo
 */
export interface ProfileAccountInfo {
    /**
     * Account Name. Not currently populated for sellers.
     * @type {string}
     * @memberof ProfileAccountInfo
     */
    name?: string;
    /**
     * The account subtype.
     * @type {string}
     * @memberof ProfileAccountInfo
     */
    subType?: ProfileAccountInfoSubTypeEnum;
    /**
     * Identifier for sellers and vendors. Note that this value is not unique and may be the same across marketplace.
     * @type {string}
     * @memberof ProfileAccountInfo
     */
    id?: string;
    /**
     * 
     * @type {ProfileAccountType}
     * @memberof ProfileAccountInfo
     */
    type?: ProfileAccountType;
    /**
     * The identifier of the marketplace to which the account is associated.
     * @type {string}
     * @memberof ProfileAccountInfo
     */
    marketplaceStringId?: string;
    /**
     * Only present for Vendors, this returns whether the Advertiser has set up a valid payment method or not.
     * @type {boolean}
     * @memberof ProfileAccountInfo
     */
    validPaymentMethod?: boolean;
}

/**
    * @export
    * @enum {string}
    */
export enum ProfileAccountInfoSubTypeEnum {
    KdpAuthor = 'KDP_AUTHOR',
    AmazonAttribution = 'AMAZON_ATTRIBUTION'
}

/**
 * The `seller` and `vendor` account types are associated with Sponsored Ads APIs. The `agency` account type is associated with DSP and Data Provider APIs.
 * @export
 * @enum {string}
 */

export enum ProfileAccountType {
    Vendor = 'vendor',
    Seller = 'seller',
    Agency = 'agency'
}

/**
 * The countryCode for a given country |Region|`countryCode`|Country Name| |------|-----|-------| |NA|US|United States| |NA|CA|Canada| |EU|UK|United Kingdom| |EU|DE|Germany| |EU|FR|France| |EU|ES|Spain| |EU|IT|Italy| |EU|AE|United Arab Emirates| |FE|JP|Japan| |FE|AU|Australia|
 * @export
 * @enum {string}
 */

export enum ProfileCountryCode {
    Us = 'US',
    Ca = 'CA',
    Uk = 'UK',
    De = 'DE',
    Fr = 'FR',
    Es = 'ES',
    It = 'IT',
    Jp = 'JP',
    Au = 'AU',
    Ae = 'AE'
}

/**
 * 
 * @export
 * @interface Range
 */
export interface Range {
    /**
     * 
     * @type {number}
     * @memberof Range
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof Range
     */
    max?: number;
}
/**
 * Describes lower and upper bounds of the range.
 * @export
 * @interface RangeMetricValue
 */
export interface RangeMetricValue {
    /**
     * 
     * @type {number}
     * @memberof RangeMetricValue
     */
    lower?: number;
    /**
     * 
     * @type {number}
     * @memberof RangeMetricValue
     */
    upper?: number;
}
/**
 * 
 * @export
 * @interface RankedTargetResponse
 */
export interface RankedTargetResponse {
    /**
     * A list of ranked keyword targets
     * @type {Array<RecKeywordTarget>}
     * @memberof RankedTargetResponse
     */
    keywordTargetList?: Array<RecKeywordTarget>;
}
/**
 * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
 * @export
 * @interface RatingRange
 */
export interface RatingRange {
    /**
     * 
     * @type {number}
     * @memberof RatingRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof RatingRange
     */
    max?: number;
}
/**
 * 
 * @export
 * @interface RecKeywordTarget
 */
export interface RecKeywordTarget {
    /**
     * The account-level ad-attributed impression share for the search-term/keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 30 days. This metric helps advertisers identify potential opportunities based on their share on relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions.
     * @type {number}
     * @memberof RecKeywordTarget
     */
    searchTermImpressionShare?: number;
    /**
     * The translation of keyword if a locale is passed in
     * @type {string}
     * @memberof RecKeywordTarget
     */
    translation?: string;
    /**
     * A list of keyword bid info
     * @type {Array<KeywordBidInfo>}
     * @memberof RecKeywordTarget
     */
    bidInfo?: Array<KeywordBidInfo>;
    /**
     * The account-level ad-attributed impression rank for the search-term/keyword. Provides [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 30 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions.
     * @type {number}
     * @memberof RecKeywordTarget
     */
    searchTermImpressionRank?: number;
    /**
     * The keyword value
     * @type {string}
     * @memberof RecKeywordTarget
     */
    keyword?: string;
    /**
     * Flag that tells if keyword was selected by the user or was recommended by KRS
     * @type {boolean}
     * @memberof RecKeywordTarget
     */
    userSelectedKeyword?: boolean;
    /**
     * The recommended keyword target id
     * @type {string}
     * @memberof RecKeywordTarget
     */
    recId?: string;
}
/**
 * 
 * @export
 * @interface RecommendationOptions
 */
export interface RecommendationOptions {
    /**
     * The max size of recommended target. Set it to 0 if you only want to rank user-defined keywords.
     * @type {number}
     * @memberof RecommendationOptions
     */
    maxRecommendations?: number;
    /**
     * The ranking metric value. Supported values: CLICKS, CONVERSIONS, DEFAULT. DEFAULT will be applied if no value passed in.
     * @type {string}
     * @memberof RecommendationOptions
     */
    sortDimension?: RecommendationOptionsSortDimensionEnum;
    /**
     * Translations are for readability and do not affect the targeting of ads. zh_CN is supported in US, UK, CA. en_GB is supported in DE, FR, IT, ES. Note: Translations will be null if locale is unsupported
     * @type {string}
     * @memberof RecommendationOptions
     */
    locale?: RecommendationOptionsLocaleEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum RecommendationOptionsSortDimensionEnum {
    Clicks = 'CLICKS',
    Conversions = 'CONVERSIONS',
    Default = 'DEFAULT'
}
/**
    * @export
    * @enum {string}
    */
export enum RecommendationOptionsLocaleEnum {
    ZhCn = 'zh_CN',
    EnGb = 'en_GB'
}

/**
 * 
 * @export
 * @interface Recurrence
 */
export interface Recurrence {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof Recurrence
     */
    type?: RecurrenceType;
    /**
     * Object representing days of the week for weekly type rule. It is not required for daily recurrence type
     * @type {Array<DayOfWeek>}
     * @memberof Recurrence
     */
    daysOfWeek?: Array<DayOfWeek>;
}
/**
 * The frequency of the rule application.
 * @export
 * @enum {string}
 */

export enum RecurrenceType {
    Daily = 'DAILY'
}

/**
 * Response object for the GetRefinementsForCategory API, containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.
 * @export
 * @interface Refinements
 */
export interface Refinements {
    /**
     * List of Age Ranges. Use the GetRefinementsForCategory to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
     * @type {Array<AgeRange>}
     * @memberof Refinements
     */
    ageRanges?: Array<AgeRange>;
    /**
     * List of Brands.
     * @type {Array<Brand>}
     * @memberof Refinements
     */
    brands?: Array<Brand>;
    /**
     * List of Genres. Use the GetRefinementsForCategory to retrieve Genre Node IDs. Genres are only available for categories related to books.
     * @type {Array<Genre>}
     * @memberof Refinements
     */
    genres?: Array<Genre>;
}
/**
 * The action taken when the campaign optimization rule is enabled. Defaults to adopt
 * @export
 * @enum {string}
 */

export enum RuleAction {
    Adopt = 'ADOPT'
}

/**
 * 
 * @export
 * @interface RuleCondition
 */
export interface RuleCondition {
    /**
     * 
     * @type {RuleConditionMetric}
     * @memberof RuleCondition
     */
    metricName: RuleConditionMetric;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof RuleCondition
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof RuleCondition
     */
    threshold: number;
}
/**
 * The advertising performance metric. ROAS is the only supported metric.
 * @export
 * @enum {string}
 */

export enum RuleConditionMetric {
    Roas = 'ROAS',
    AverageBid = 'AVERAGE_BID'
}

/**
 * 
 * @export
 * @interface RuleDuration
 */
export interface RuleDuration {
    /**
     * 
     * @type {EventTypeRuleDuration}
     * @memberof RuleDuration
     */
    eventTypeRuleDuration?: EventTypeRuleDuration;
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof RuleDuration
     */
    dateRangeTypeRuleDuration?: DateRangeTypeRuleDuration;
}
/**
 * 
 * @export
 * @interface RuleNotification
 */
export interface RuleNotification {
    /**
     * 
     * @type {RuleState}
     * @memberof RuleNotification
     */
    ruleState?: RuleState;
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof RuleNotification
     */
    campaignOptimizationId?: string;
    /**
     * campaignId
     * @type {string}
     * @memberof RuleNotification
     */
    campaignId?: string;
    /**
     * Explains why the rule state is disabled
     * @type {string}
     * @memberof RuleNotification
     */
    notificationString?: string;
}
/**
 * 
 * @export
 * @interface RuleNotificationError
 */
export interface RuleNotificationError {
    /**
     * campaignId
     * @type {string}
     * @memberof RuleNotificationError
     */
    campaignId?: string;
    /**
     * 
     * @type {CampaignOptimizationRuleError}
     * @memberof RuleNotificationError
     */
    Error?: CampaignOptimizationRuleError;
}
/**
 * 
 * @export
 * @interface RuleRecommendation
 */
export interface RuleRecommendation {
    /**
     * campaignId
     * @type {string}
     * @memberof RuleRecommendation
     */
    campaignId?: string;
    /**
     * 
     * @type {RuleRecommendationMetrics}
     * @memberof RuleRecommendation
     */
    performanceMetrics?: RuleRecommendationMetrics;
}
/**
 * 
 * @export
 * @interface RuleRecommendationError
 */
export interface RuleRecommendationError {
    /**
     * campaignId
     * @type {string}
     * @memberof RuleRecommendationError
     */
    campaignId?: string;
    /**
     * 
     * @type {CampaignOptimizationRuleError}
     * @memberof RuleRecommendationError
     */
    Error?: CampaignOptimizationRuleError;
}
/**
 * Performance Metrics supported by the rule recommendation
 * @export
 * @interface RuleRecommendationMetrics
 */
export interface RuleRecommendationMetrics {
    /**
     * return on ad spend value
     * @type {number}
     * @memberof RuleRecommendationMetrics
     */
    roas?: number;
}
/**
 * The campaign optimization rule state.
 * @export
 * @enum {string}
 */

export enum RuleState {
    Enabled = 'ENABLED',
    Disabled = 'DISABLED'
}

/**
 * The campaign optimization rule status. Read-Only
 * @export
 * @enum {string}
 */

export enum RuleStatus {
    Active = 'ACTIVE',
    Archived = 'ARCHIVED'
}

/**
 * The type of the campaign optimization rule. Only Support BID as of now
 * @export
 * @enum {string}
 */

export enum RuleType {
    Bid = 'BID',
    Keyword = 'KEYWORD',
    Product = 'PRODUCT'
}

/**
 * 
 * @export
 * @interface SBBudgetHistory
 */
export interface SBBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SBRuleBasedBudget>}
     * @memberof SBBudgetHistory
     */
    history?: Array<SBRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SBBudgetRule
 */
export interface SBBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRuleDetails
 */
export interface SBBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SBBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SBBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SBRuleType}
     * @memberof SBBudgetRuleDetails
     */
    ruleType?: SBRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SBBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SBBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SBBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SBCampaignBudgetRule
 */
export interface SBCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBCampaignBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBGetAssociatedCampaignsResponse
 */
export interface SBGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SBListAssociatedBudgetRulesResponse
 */
export interface SBListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SBCampaignBudgetRule>}
     * @memberof SBListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SBCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SBRuleBasedBudget
 */
export interface SBRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof SBRuleBasedBudget
     */
    appliedRule?: SBBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SBRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * 
 * @export
 * @interface SBRuleDuration
 */
export interface SBRuleDuration {
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof SBRuleDuration
     */
    dateRangeTypeRuleDuration: DateRangeTypeRuleDuration;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date.
 * @export
 * @enum {string}
 */

export enum SBRuleType {
    Schedule = 'SCHEDULE'
}

/**
 * 
 * @export
 * @interface SDBudgetHistory
 */
export interface SDBudgetHistory {
    /**
     * 
     * @type {Array<SDRuleBasedBudget>}
     * @memberof SDBudgetHistory
     */
    history?: Array<SDRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SDBudgetRule
 */
export interface SDBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SDBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SDBudgetRuleDetails}
     * @memberof SDBudgetRule
     */
    ruleDetails?: SDBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SD campaign
 * @export
 * @interface SDBudgetRuleDetails
 */
export interface SDBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SDBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SDBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SDRuleType}
     * @memberof SDBudgetRuleDetails
     */
    ruleType?: SDRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SDBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SDBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SDBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SDGetAssociatedCampaignsResponse
 */
export interface SDGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SDListAssociatedBudgetRulesResponse
 */
export interface SDListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SDBudgetRule>}
     * @memberof SDListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SDBudgetRule>;
}
/**
 * 
 * @export
 * @interface SDRuleBasedBudget
 */
export interface SDRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof SDRuleBasedBudget
     */
    appliedRule?: SDBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SDRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SDRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SPBudgetHistory
 */
export interface SPBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SPRuleBasedBudget>}
     * @memberof SPBudgetHistory
     */
    history?: Array<SPRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SPBudgetRule
 */
export interface SPBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SP campaign
 * @export
 * @interface SPBudgetRuleDetails
 */
export interface SPBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SPBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SPBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SPRuleType}
     * @memberof SPBudgetRuleDetails
     */
    ruleType?: SPRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SPBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SPBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SPBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * The Error Response Object.
 * @export
 * @interface SPBudgetRulesRecommendationError
 */
export interface SPBudgetRulesRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SPBudgetRulesRecommendationEvent
 */
export interface SPBudgetRulesRecommendationEvent {
    /**
     * The event identifier.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    eventId?: string;
    /**
     * The end date in YYYYMMDD format.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    endDate?: string;
    /**
     * The suggested budget increase expressed as a percent.
     * @type {number}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    suggestedBudgetIncreasePercent?: number;
    /**
     * The event name.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    eventName?: string;
    /**
     * The start date in YYYYMMDD format.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEvent
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface SPBudgetRulesRecommendationEventRequest
 */
export interface SPBudgetRulesRecommendationEventRequest {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SPBudgetRulesRecommendationEventRequest
     */
    campaignId: string;
}
/**
 * Special events with date range and suggested budget increase.
 * @export
 * @interface SPBudgetRulesRecommendationEventResponse
 */
export interface SPBudgetRulesRecommendationEventResponse {
    /**
     * A list of recommended special events with date range and suggested budget increase.
     * @type {Array<SPBudgetRulesRecommendationEvent>}
     * @memberof SPBudgetRulesRecommendationEventResponse
     */
    recommendedBudgetRuleEvents?: Array<SPBudgetRulesRecommendationEvent>;
}
/**
 * 
 * @export
 * @interface SPCampaignBudgetRule
 */
export interface SPCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPCampaignBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationNotificationAPIRequest
 */
export interface SPCampaignOptimizationNotificationAPIRequest {
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof SPCampaignOptimizationNotificationAPIRequest
     */
    campaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationNotificationAPIResponse
 */
export interface SPCampaignOptimizationNotificationAPIResponse {
    /**
     * List of errors that occured when generating campaign optimization notifications.
     * @type {Array<RuleNotificationError>}
     * @memberof SPCampaignOptimizationNotificationAPIResponse
     */
    CampaignOptimizationRecommendationsError?: Array<RuleNotificationError>;
    /**
     * List of successful campaign optimization notifications for campaigns.
     * @type {Array<RuleNotification>}
     * @memberof SPCampaignOptimizationNotificationAPIResponse
     */
    CampaignOptimizationNotifications?: Array<RuleNotification>;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationRecommendationAPIResponse
 */
export interface SPCampaignOptimizationRecommendationAPIResponse {
    /**
     * List of successful campaign optimization recomendation for campaigns.
     * @type {Array<RuleRecommendation>}
     * @memberof SPCampaignOptimizationRecommendationAPIResponse
     */
    CampaignOptimizationRecommendations?: Array<RuleRecommendation>;
    /**
     * List of errors that occured when generating campaign optimization recommendation.
     * @type {Array<RuleRecommendationError>}
     * @memberof SPCampaignOptimizationRecommendationAPIResponse
     */
    CampaignOptimizationRecommendationsError?: Array<RuleRecommendationError>;
}
/**
 * 
 * @export
 * @interface SPCampaignOptimizationRecommendationsAPIRequest
 */
export interface SPCampaignOptimizationRecommendationsAPIRequest {
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof SPCampaignOptimizationRecommendationsAPIRequest
     */
    campaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface SPError
 */
export interface SPError {
    /**
     * An enumerated error for machine use.
     * @type {string}
     * @memberof SPError
     */
    code?: string;
    /**
     * A human-readable description of the error.
     * @type {string}
     * @memberof SPError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SPGetAssociatedCampaignsResponse
 */
export interface SPGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SPKeyword
 */
export interface SPKeyword {
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof SPKeyword
     */
    keywordId?: string;
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof SPKeyword
     */
    campaignId?: string;
    /**
     * The type of match, \'exact\', \'phrase\', \'broad\'.
     * @type {string}
     * @memberof SPKeyword
     */
    matchType?: string;
    /**
     * The current resource state, \'enabled\', \'archived\', \'paused\'.
     * @type {string}
     * @memberof SPKeyword
     */
    state?: string;
    /**
     * Bid associated with this keyword. Applicable to biddable match types only.
     * @type {number}
     * @memberof SPKeyword
     */
    bid?: number;
    /**
     * The identifier of the ad group to which this keyword is associated.
     * @type {string}
     * @memberof SPKeyword
     */
    adGroupId?: string;
    /**
     * The keyword text.
     * @type {string}
     * @memberof SPKeyword
     */
    keywordText?: string;
}
/**
 * 
 * @export
 * @interface SPKeywordText
 */
export interface SPKeywordText {
    /**
     * Restricts results to keywords that match the specified text exactly.
     * @type {string}
     * @memberof SPKeywordText
     */
    keywordText?: string;
}
/**
 * 
 * @export
 * @interface SPKeywordsListRequest
 */
export interface SPKeywordsListRequest {
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPKeywordsListRequest
     */
    nextToken?: string;
    /**
     * Sets a limit on the number of results returned by an operation.
     * @type {number}
     * @memberof SPKeywordsListRequest
     */
    maxResults?: number;
    /**
     * 
     * @type {SPKeywordsListRequestFilters}
     * @memberof SPKeywordsListRequest
     */
    filters?: SPKeywordsListRequestFilters;
}
/**
 * 
 * @export
 * @interface SPKeywordsListRequestFilters
 */
export interface SPKeywordsListRequestFilters {
    /**
     * 
     * @type {Array<string>}
     * @memberof SPKeywordsListRequestFilters
     */
    campaignIdFilter?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPKeywordsListRequestFilters
     */
    stateFilter?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPKeywordsListRequestFilters
     */
    adGroupIdFilter?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPKeywordsListRequestFilters
     */
    matchTypeFilter?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPKeywordsListRequestFilters
     */
    keywordText?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPKeywordsListRequestFilters
     */
    keywordIdFilter?: Array<string>;
}
/**
 * 
 * @export
 * @interface SPKeywordsListResponseObject
 */
export interface SPKeywordsListResponseObject {
    /**
     * 
     * @type {Array<SPKeyword>}
     * @memberof SPKeywordsListResponseObject
     */
    keywords?: Array<SPKeyword>;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPKeywordsListResponseObject
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SPListAssociatedBudgetRulesResponse
 */
export interface SPListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SPCampaignBudgetRule>}
     * @memberof SPListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SPCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SPNegativeKeyword
 */
export interface SPNegativeKeyword {
    /**
     * The identifier of the negative keyword.
     * @type {string}
     * @memberof SPNegativeKeyword
     */
    keywordId?: string;
    /**
     * The identifier of the campaign to which the negative keyword is associated.
     * @type {string}
     * @memberof SPNegativeKeyword
     */
    campaignId?: string;
    /**
     * The type of match, \'negativeExact\' or \'negativePhrase\'.
     * @type {string}
     * @memberof SPNegativeKeyword
     */
    matchType?: string;
    /**
     * The current resource state, \'enabled\', \'archived\', \'paused\'.
     * @type {string}
     * @memberof SPNegativeKeyword
     */
    state?: string;
    /**
     * The identifier of the ad group to which the negative keyword is associated.
     * @type {string}
     * @memberof SPNegativeKeyword
     */
    adGroupId?: string;
    /**
     * The text of the expression to match against a search query.
     * @type {string}
     * @memberof SPNegativeKeyword
     */
    keywordText?: string;
}
/**
 * 
 * @export
 * @interface SPNegativeKeywordsListResponseObject
 */
export interface SPNegativeKeywordsListResponseObject {
    /**
     * 
     * @type {Array<SPNegativeKeyword>}
     * @memberof SPNegativeKeywordsListResponseObject
     */
    negativeKeywords?: Array<SPNegativeKeyword>;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPNegativeKeywordsListResponseObject
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SPNegativeTargetingClause
 */
export interface SPNegativeTargetingClause {
    /**
     * The negative targeting expression.
     * @type {Array<SPTargetingExpressionPredicate>}
     * @memberof SPNegativeTargetingClause
     */
    expression?: Array<SPTargetingExpressionPredicate>;
    /**
     * The negative target identifier.
     * @type {string}
     * @memberof SPNegativeTargetingClause
     */
    targetId?: string;
    /**
     * The resolved targeting expression, translating the ids in the expression into their string values.
     * @type {Array<SPTargetingExpressionPredicate>}
     * @memberof SPNegativeTargetingClause
     */
    resolvedExpression?: Array<SPTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this negative target is associated.
     * @type {string}
     * @memberof SPNegativeTargetingClause
     */
    campaignId?: string;
    /**
     * The type of expression, \'auto\', \'manual\'.
     * @type {string}
     * @memberof SPNegativeTargetingClause
     */
    expressionType?: string;
    /**
     * The current resource state, \'enabled\', \'archived\', \'paused\'.
     * @type {string}
     * @memberof SPNegativeTargetingClause
     */
    state?: string;
    /**
     * The identifier of the ad group to which this negative target is associated.
     * @type {string}
     * @memberof SPNegativeTargetingClause
     */
    adGroupId?: string;
}
/**
 * 
 * @export
 * @interface SPNegativeTargetsListResponseObject
 */
export interface SPNegativeTargetsListResponseObject {
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPNegativeTargetsListResponseObject
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SPNegativeTargetingClause>}
     * @memberof SPNegativeTargetsListResponseObject
     */
    negativeTargets?: Array<SPNegativeTargetingClause>;
}
/**
 * 
 * @export
 * @interface SPRuleBasedBudget
 */
export interface SPRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof SPRuleBasedBudget
     */
    appliedRule?: SPBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SPRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SPRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SPTORBudgetRecommendationError
 */
export interface SPTORBudgetRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SPTORBudgetRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SPTORBudgetRecommendationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SPTargetingClause
 */
export interface SPTargetingClause {
    /**
     * The targeting expression.
     * @type {Array<SPTargetingExpressionPredicate>}
     * @memberof SPTargetingClause
     */
    expression?: Array<SPTargetingExpressionPredicate>;
    /**
     * The target identifier.
     * @type {string}
     * @memberof SPTargetingClause
     */
    targetId?: string;
    /**
     * The resolved targeting expression, translating the ids in the expression into their string values.
     * @type {Array<SPTargetingExpressionPredicate>}
     * @memberof SPTargetingClause
     */
    resolvedExpression?: Array<SPTargetingExpressionPredicate>;
    /**
     * The identifier of the campaign to which this target is associated.
     * @type {string}
     * @memberof SPTargetingClause
     */
    campaignId?: string;
    /**
     * The type of expression, \'auto\', \'manual\'.
     * @type {string}
     * @memberof SPTargetingClause
     */
    expressionType?: string;
    /**
     * The current resource state, \'enabled\', \'archived\', \'paused\'.
     * @type {string}
     * @memberof SPTargetingClause
     */
    state?: string;
    /**
     * The bid for ads sourced using the target. Targets that do not have bid values in listTargetingClauses will inherit the defaultBid from the adGroup level. This table details the maximum allowable bid (in local currency) for keywords by marketplace: | Marketplace | Currency | Min / Max bid for SP | | --- | --- | --- | | US | USD | 0.02 / 1000 | | CA | CAD | 0.02 / 1000 | | UK | GBP | 0.02 / 1000 | | DE | EUR | 0.02 / 1000 | | FR | EUR | 0.02 / 1000 | | ES | EUR | 0.02 / 1000 | | IT | EUR | 0.02 / 1000 | | JP | JPY | 2.0 / 100000 | | AU | AUD | 0.10 / 1410 | | AE | AED | 0.24 / 184.0 |
     * @type {number}
     * @memberof SPTargetingClause
     */
    bid?: number;
    /**
     * The identifier of the ad group to which this target is associated.
     * @type {string}
     * @memberof SPTargetingClause
     */
    adGroupId?: string;
}
/**
 * The Error Response Object.
 * @export
 * @interface SPTargetingError
 */
export interface SPTargetingError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SPTargetingError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SPTargetingError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SPTargetingExpressionPredicate
 */
export interface SPTargetingExpressionPredicate {
    /**
     * The targeting type. These are the supported values: \'queryBroadMatches\', \'queryPhraseMatches\', \'queryExactMatches\', \'asinCategorySameAs\', \'asinBrandSameAs\', \'asinPriceLessThan\', \'asinPriceBetween\', \'asinPriceGreaterThan\', \'asinReviewRatingLessThan\', \'asinReviewRatingBetween\', \'asinReviewRatingGreaterThan\', \'asinSameAs\', \'queryBroadRelMatches\', \'queryHighRelMatches\', \'asinSubstituteRelated\', \'asinAccessoryRelated\', \'asinAgeRangeSameAs\', \'asinGenreSameAs, \'asinIsPrimeShippingEligible\'.
     * @type {string}
     * @memberof SPTargetingExpressionPredicate
     */
    type?: string;
    /**
     * The expression value
     * @type {string}
     * @memberof SPTargetingExpressionPredicate
     */
    value?: string;
}
/**
 * 
 * @export
 * @interface SPTargetsListRequest
 */
export interface SPTargetsListRequest {
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPTargetsListRequest
     */
    nextToken?: string;
    /**
     * Sets a limit on the number of results returned by an operation.
     * @type {number}
     * @memberof SPTargetsListRequest
     */
    maxResults?: number;
    /**
     * 
     * @type {SPTargetsListRequestFilters}
     * @memberof SPTargetsListRequest
     */
    filters?: SPTargetsListRequestFilters;
}
/**
 * 
 * @export
 * @interface SPTargetsListRequestFilters
 */
export interface SPTargetsListRequestFilters {
    /**
     * 
     * @type {Array<string>}
     * @memberof SPTargetsListRequestFilters
     */
    campaignIdFilter?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPTargetsListRequestFilters
     */
    stateFilter?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPTargetsListRequestFilters
     */
    targetIdFilter?: Array<string>;
    /**
     * 
     * @type {Array<Array<SPTargetingExpressionPredicate>>}
     * @memberof SPTargetsListRequestFilters
     */
    expressionFilter?: Array<Array<SPTargetingExpressionPredicate>>;
    /**
     * 
     * @type {Array<string>}
     * @memberof SPTargetsListRequestFilters
     */
    adGroupIdFilter?: Array<string>;
}
/**
 * 
 * @export
 * @interface SPTargetsListResponseObject
 */
export interface SPTargetsListResponseObject {
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPTargetsListResponseObject
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SPTargetingClause>}
     * @memberof SPTargetsListResponseObject
     */
    targets?: Array<SPTargetingClause>;
}
/**
 * Request object for SearchBrands API.
 * @export
 * @interface SearchBrandsRequest
 */
export interface SearchBrandsRequest {
    /**
     * 
     * @type {string}
     * @memberof SearchBrandsRequest
     */
    keyword: string;
}
/**
 * 
 * @export
 * @interface SevenDaysMissedOpportunities
 */
export interface SevenDaysMissedOpportunities {
    /**
     * Lower bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedSalesLower?: number;
    /**
     * Upper bound estimate of the additional sales the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period. Provided in local currency.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedSalesUpper?: number;
    /**
     * End date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time
     * @type {string}
     * @memberof SevenDaysMissedOpportunities
     */
    endDate?: string;
    /**
     * Lower bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedImpressionsLower?: number;
    /**
     * Lower bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedClicksLower?: number;
    /**
     * Upper bound estimate of the additional clicks the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedClicksUpper?: number;
    /**
     * Upper bound estimate of the additional impressions the campaign might have generated if it had not run out of budget during the {startDate} to {endDate} period.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedImpressionsUpper?: number;
    /**
     * Starting date of the date range for which missed opportunity metrics are provided (YYYYMMDD). Local time
     * @type {string}
     * @memberof SevenDaysMissedOpportunities
     */
    startDate?: string;
    /**
     * percentage of time the campaign is active with a budget. Provided as a decimal ranging from 0 to 1 (e.g. 0.76 means the campaign was in budget for 76% of the time between the startDate and endDate period)
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    percentTimeInBudget?: number;
}
/**
 * The budget rule state.
 * @export
 * @enum {string}
 */

export enum State {
    Active = 'ACTIVE',
    Paused = 'PAUSED'
}

/**
 * Response object to get number of targetable asins for refinements provided by the user
 * @export
 * @interface TargetableAsinCounts
 */
export interface TargetableAsinCounts {
    /**
     * 
     * @type {IntegerRange}
     * @memberof TargetableAsinCounts
     */
    asinCounts?: IntegerRange;
}
/**
 * Response object containing all targetable categories for the advertiser\'s marketplace. ID is the category ID. NA is the name. CH is the list of child categories. TA is if the category is targetable. AsinCountRange is the AsinCounts of the node. Version 4 adds the number of targetable ASINs to each category.
 * @export
 * @interface TargetableCategories
 */
export interface TargetableCategories {
    /**
     * 
     * @type {string}
     * @memberof TargetableCategories
     */
    categoryTree?: string;
}
/**
 * The targeting expression. The `type` property specifies the targeting option. Use `CLOSE_MATCH` to match your auto targeting ads closely to the specified value. Use `LOOSE_MATCH` to match your auto targeting ads broadly to the specified value. Use `SUBSTITUTES` to display your auto targeting ads along with substitutable products. Use `COMPLEMENTS` to display your auto targeting ads along with affiliated products. Use `KEYWORD_BROAD_MATCH` to broadly match your keyword targeting ads with search queries. Use `KEYWORD_EXACT_MATCH` to exactly match your keyword targeting ads with search queries. Use `KEYWORD_PHRASE_MATCH` to match your keyword targeting ads with search phrases.
 * @export
 * @interface TargetingExpression
 */
export interface TargetingExpression {
    /**
     * 
     * @type {string}
     * @memberof TargetingExpression
     */
    type: TargetingExpressionTypeEnum;
    /**
     * The targeting expression value.
     * @type {string}
     * @memberof TargetingExpression
     */
    value?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TargetingExpressionTypeEnum {
    CloseMatch = 'CLOSE_MATCH',
    LooseMatch = 'LOOSE_MATCH',
    Substitutes = 'SUBSTITUTES',
    Complements = 'COMPLEMENTS',
    KeywordBroadMatch = 'KEYWORD_BROAD_MATCH',
    KeywordExactMatch = 'KEYWORD_EXACT_MATCH',
    KeywordPhraseMatch = 'KEYWORD_PHRASE_MATCH'
}

/**
 * 
 * @export
 * @interface ThemeBasedBidRecommendation
 */
export interface ThemeBasedBidRecommendation {
    /**
     * The bid recommendation theme.
     * @type {string}
     * @memberof ThemeBasedBidRecommendation
     */
    theme: ThemeBasedBidRecommendationThemeEnum;
    /**
     * The bid recommendations for targeting expressions listed in the request.
     * @type {Array<BidRecommendationPerTargetingExpression>}
     * @memberof ThemeBasedBidRecommendation
     */
    bidRecommendationsForTargetingExpressions: Array<BidRecommendationPerTargetingExpression>;
    /**
     * 
     * @type {ImpactMetrics}
     * @memberof ThemeBasedBidRecommendation
     */
    impactMetrics?: ImpactMetrics;
}

/**
    * @export
    * @enum {string}
    */
export enum ThemeBasedBidRecommendationThemeEnum {
    ConversionOpportunities = 'CONVERSION_OPPORTUNITIES'
}

/**
 * A list of bid recommendation themes and associated bid recommendations.
 * @export
 * @interface ThemeBasedBidRecommendationResponse
 */
export interface ThemeBasedBidRecommendationResponse {
    /**
     * 
     * @type {Array<ThemeBasedBidRecommendation>}
     * @memberof ThemeBasedBidRecommendationResponse
     */
    bidRecommendations: Array<ThemeBasedBidRecommendation>;
}
/**
 * Recommended asins grouped by theme attribute.
 * @export
 * @interface ThemeRecommendation
 */
export interface ThemeRecommendation {
    /**
     * A theme name representing the context around the recommended list of ASINs.
     * @type {string}
     * @memberof ThemeRecommendation
     */
    description?: string;
    /**
     * List of recommended ASINs under current theme.
     * @type {Array<string>}
     * @memberof ThemeRecommendation
     */
    recommendedAsins?: Array<string>;
    /**
     * A theme name representing the context around the recommended list of ASINs.
     * @type {string}
     * @memberof ThemeRecommendation
     */
    theme?: string;
}
/**
 * Returns information about a ThrottlingException.
 * @export
 * @interface ThrottlingException
 */
export interface ThrottlingException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof ThrottlingException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof ThrottlingException
     */
    details?: string;
}
/**
 * Returns information about an UnauthorizedException.
 * @export
 * @interface UnauthorizedException
 */
export interface UnauthorizedException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof UnauthorizedException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof UnauthorizedException
     */
    details?: string;
}
/**
 * Returns information about UnprocessableEntityException.
 * @export
 * @interface UnprocessableEntityException
 */
export interface UnprocessableEntityException {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof UnprocessableEntityException
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof UnprocessableEntityException
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface UpdateBudgetRulesResponse
 */
export interface UpdateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof UpdateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface UpdateSBBudgetRulesRequest
 */
export interface UpdateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRule>}
     * @memberof UpdateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRule>;
}
/**
 * Request object for updating budget rule for SD campaign
 * @export
 * @interface UpdateSDBudgetRulesRequest
 */
export interface UpdateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRule>}
     * @memberof UpdateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRule>;
}
/**
 * Request object for updating budget rule for SP campaign
 * @export
 * @interface UpdateSPBudgetRulesRequest
 */
export interface UpdateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRule>}
     * @memberof UpdateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRule>;
}
/**
 * 
 * @export
 * @interface UpdateSPCampaignOptimizationRuleResponse
 */
export interface UpdateSPCampaignOptimizationRuleResponse {
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRuleResponse
     */
    campaignOptimizationId?: string;
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRuleResponse
     */
    details?: string;
}
/**
 * Request object for updating campaign optimization rule
 * @export
 * @interface UpdateSPCampaignOptimizationRulesRequest
 */
export interface UpdateSPCampaignOptimizationRulesRequest {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    recurrence?: RecurrenceType;
    /**
     * 
     * @type {RuleAction}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleAction?: RuleAction;
    /**
     * The persistent rule identifier.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    campaignOptimizationId: string;
    /**
     * 
     * @type {Array<RuleCondition>}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleCondition?: Array<RuleCondition>;
    /**
     * 
     * @type {RuleType}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleType?: RuleType;
    /**
     * The campaign optimization rule name.
     * @type {string}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    ruleName?: string;
    /**
     * A list of campaign ids
     * @type {Array<string>}
     * @memberof UpdateSPCampaignOptimizationRulesRequest
     */
    campaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface V2SPAdGroup
 */
export interface V2SPAdGroup {
    /**
     * The identifier of the campaign that the ad group is associated with.
     * @type {string}
     * @memberof V2SPAdGroup
     */
    campaignId?: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof V2SPAdGroup
     */
    name?: string;
    /**
     * The current resource state.
     * @type {string}
     * @memberof V2SPAdGroup
     */
    state?: V2SPAdGroupStateEnum;
    /**
     * The identifier of the ad group.
     * @type {string}
     * @memberof V2SPAdGroup
     */
    adGroupId?: string;
    /**
     * The bid value used when no bid is specified for keywords in the ad group.
     * @type {number}
     * @memberof V2SPAdGroup
     */
    defaultBid?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum V2SPAdGroupStateEnum {
    Enabled = 'enabled',
    Paused = 'paused',
    Archived = 'archived'
}

/**
 * 
 * @export
 * @interface V2SPCampaign
 */
export interface V2SPCampaign {
    /**
     * The advertising product managed by this campaign.
     * @type {string}
     * @memberof V2SPCampaign
     */
    campaignType?: string;
    /**
     * The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof V2SPCampaign
     */
    portfolioId?: string;
    /**
     * 
     * @type {V2SPCampaignBidding}
     * @memberof V2SPCampaign
     */
    bidding?: V2SPCampaignBidding;
    /**
     * The ending date of the campaign. The format of the date is YYYYMMDD
     * @type {string}
     * @memberof V2SPCampaign
     */
    endDate?: string;
    /**
     * The daily budget of the campaign.
     * @type {number}
     * @memberof V2SPCampaign
     */
    dailyBudget?: number;
    /**
     * The identifier of the campaign.
     * @type {string}
     * @memberof V2SPCampaign
     */
    campaignId?: string;
    /**
     * The type of targeting of the campaign.
     * @type {string}
     * @memberof V2SPCampaign
     */
    targetingType?: string;
    /**
     * The current resource state.
     * @type {string}
     * @memberof V2SPCampaign
     */
    state?: V2SPCampaignStateEnum;
    /**
     * If set to true, Amazon increases the default bid for ads that are eligible to appear in this placement.
     * @type {boolean}
     * @memberof V2SPCampaign
     */
    premiumBidAdjustment?: boolean;
    /**
     * The starting date of the campaign. The format of the date is YYYYMMDD
     * @type {string}
     * @memberof V2SPCampaign
     */
    startDate?: string;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {object}
     * @memberof V2SPCampaign
     */
    tags?: object;
}

/**
    * @export
    * @enum {string}
    */
export enum V2SPCampaignStateEnum {
    Enabled = 'enabled',
    Paused = 'paused',
    Archived = 'archived'
}

/**
 * Specifies bidding controls.
 * @export
 * @interface V2SPCampaignBidding
 */
export interface V2SPCampaignBidding {
    /**
     * 
     * @type {Array<V2SPCampaignBiddingAdjustment>}
     * @memberof V2SPCampaignBidding
     */
    adjustments?: Array<V2SPCampaignBiddingAdjustment>;
    /**
     * The bidding strategy.
     * @type {string}
     * @memberof V2SPCampaignBidding
     */
    strategy?: V2SPCampaignBiddingStrategyEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum V2SPCampaignBiddingStrategyEnum {
    LegacyForSales = 'legacyForSales',
    AutoForSales = 'autoForSales',
    Manual = 'manual'
}

/**
 * 
 * @export
 * @interface V2SPCampaignBiddingAdjustment
 */
export interface V2SPCampaignBiddingAdjustment {
    /**
     * You can enable controls to adjust your bid based on the placement location. Specify a location where you want to use bid controls. The percentage value set is the percentage of the original bid for which you want to have your bid adjustment increased. For example, a 50% adjustment on a $1.00 bid would increase the bid to $1.50 for the opportunity to win a specified placement.
     * @type {string}
     * @memberof V2SPCampaignBiddingAdjustment
     */
    predicate?: V2SPCampaignBiddingAdjustmentPredicateEnum;
    /**
     * The bid adjustment percentage value.
     * @type {string}
     * @memberof V2SPCampaignBiddingAdjustment
     */
    percentage?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum V2SPCampaignBiddingAdjustmentPredicateEnum {
    PlacementTop = 'placementTop',
    PlacementProductPage = 'placementProductPage'
}

/**
 * 
 * @export
 * @interface V2SPCampaignExtended
 */
export interface V2SPCampaignExtended {
    /**
     * The date that any value associated with the campaign was last changed, in epoch time.
     * @type {number}
     * @memberof V2SPCampaignExtended
     */
    lastUpdatedDate?: number;
    /**
     * The computed status of the campaign. See developer notes for more information.
     * @type {string}
     * @memberof V2SPCampaignExtended
     */
    servingStatus?: V2SPCampaignExtendedServingStatusEnum;
    /**
     * The creation date of the campaign, in epoch time.
     * @type {number}
     * @memberof V2SPCampaignExtended
     */
    creationDate?: number;
}

/**
    * @export
    * @enum {string}
    */
export enum V2SPCampaignExtendedServingStatusEnum {
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    AdvertiserPaymentFailed = 'ADVERTISER_PAYMENT_FAILED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    PendingStartDate = 'PENDING_START_DATE',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    Ended = 'ENDED'
}

/**
 * 
 * @export
 * @interface V2SPProductAd
 */
export interface V2SPProductAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof V2SPProductAd
     */
    adId?: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof V2SPProductAd
     */
    campaignId?: string;
    /**
     * The ASIN associated with the product. Defined for vendors only.
     * @type {string}
     * @memberof V2SPProductAd
     */
    asin?: string;
    /**
     * The current resource state.
     * @type {string}
     * @memberof V2SPProductAd
     */
    state?: V2SPProductAdStateEnum;
    /**
     * The SKU associated with the product. Defined for seller accounts only.
     * @type {string}
     * @memberof V2SPProductAd
     */
    sku?: string;
    /**
     * The ad group identifier.
     * @type {string}
     * @memberof V2SPProductAd
     */
    adGroupId?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum V2SPProductAdStateEnum {
    Enabled = 'enabled',
    Paused = 'paused',
    Archived = 'archived'
}


/**
 * AdGroupsApi - axios parameter creator
 * @export
 */
export const AdGroupsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Public api for listing sponsored products for ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAdGroupsV2: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, name?: string, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', campaignIdFilter?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listAdGroupsV2', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listAdGroupsV2', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/v2/sp/adGroups`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startIndex !== undefined) {
                localVarQueryParameter['startIndex'] = startIndex;
            }

            if (count !== undefined) {
                localVarQueryParameter['count'] = count;
            }

            if (name !== undefined) {
                localVarQueryParameter['name'] = name;
            }

            if (stateFilter !== undefined) {
                localVarQueryParameter['stateFilter'] = stateFilter;
            }

            if (campaignIdFilter !== undefined) {
                localVarQueryParameter['campaignIdFilter'] = campaignIdFilter;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AdGroupsApi - functional programming interface
 * @export
 */
export const AdGroupsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AdGroupsApiAxiosParamCreator(configuration)
    return {
        /**
         * Public api for listing sponsored products for ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAdGroupsV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, name?: string, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', campaignIdFilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<V2SPAdGroup>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listAdGroupsV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, name, stateFilter, campaignIdFilter, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AdGroupsApi - factory interface
 * @export
 */
export const AdGroupsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AdGroupsApiFp(configuration)
    return {
        /**
         * Public api for listing sponsored products for ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAdGroupsV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, name?: string, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', campaignIdFilter?: string, options?: any): AxiosPromise<Array<V2SPAdGroup>> {
            return localVarFp.listAdGroupsV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, name, stateFilter, campaignIdFilter, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for listAdGroupsV2 operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiListAdGroupsV2Request
 */
export interface AdGroupsApiListAdGroupsV2Request {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
     * @type {string}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 0-indexed record offset for the result set. Defaults to 0.
     * @type {number}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly startIndex?: number

    /**
     * Number of records to include in the paged response. Defaults to max page size
     * @type {number}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly count?: number

    /**
     * Restricts results to campaigns with the specified name.
     * @type {string}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly name?: string

    /**
     * Comma delimited list of states to filter on
     * @type {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'

    /**
     * Comma delimited list of campaign ids to filter on
     * @type {string}
     * @memberof AdGroupsApiListAdGroupsV2
     */
    readonly campaignIdFilter?: string
}

/**
 * AdGroupsApi - object-oriented interface
 * @export
 * @class AdGroupsApi
 * @extends {BaseAPI}
 */
export class AdGroupsApi extends BaseAPI {
    /**
     * Public api for listing sponsored products for ad groups  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {AdGroupsApiListAdGroupsV2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public listAdGroupsV2(requestParameters: AdGroupsApiListAdGroupsV2Request, options?: any) {
        return AdGroupsApiFp(this.configuration).listAdGroupsV2(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.startIndex, requestParameters.count, requestParameters.name, requestParameters.stateFilter, requestParameters.campaignIdFilter, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - axios parameter creator
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {BudgetRecommendationRequest} budgetRecommendationRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRecommendationRequest: BudgetRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRecommendationRequest' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'budgetRecommendationRequest', budgetRecommendationRequest)
            const localVarPath = `/sp/campaigns/budgetRecommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.budgetrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(budgetRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - functional programming interface
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRecommendationsAndMissedOpportunitiesApiAxiosParamCreator(configuration)
    return {
        /**
         * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {BudgetRecommendationRequest} budgetRecommendationRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRecommendationRequest: BudgetRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BudgetRecommendationResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - factory interface
 * @export
 */
export const BudgetRecommendationsAndMissedOpportunitiesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRecommendationsAndMissedOpportunitiesApiFp(configuration)
    return {
        /**
         * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {BudgetRecommendationRequest} budgetRecommendationRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRecommendationRequest: BudgetRecommendationRequest, options?: any): AxiosPromise<BudgetRecommendationResponse> {
            return localVarFp.getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getBudgetRecommendations operation in BudgetRecommendationsAndMissedOpportunitiesApi.
 * @export
 * @interface BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest
 */
export interface BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {BudgetRecommendationRequest}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendations
     */
    readonly budgetRecommendationRequest: BudgetRecommendationRequest
}

/**
 * BudgetRecommendationsAndMissedOpportunitiesApi - object-oriented interface
 * @export
 * @class BudgetRecommendationsAndMissedOpportunitiesApi
 * @extends {BaseAPI}
 */
export class BudgetRecommendationsAndMissedOpportunitiesApi extends BaseAPI {
    /**
     * Given a list of campaigns as input, this API provides the following metrics -  <br> <b>1. Recommended daily budget - </b> Estimated budget needed to keep the campaign in budget for the full 24-hour period. Consider this budget to minimize your campaign\'s chances of running out of budget. <br> <b>2. Percent time in budget </b> - The share of time the campaign was in budget during the past 7 days. <br> <b>3. Estimated missed impressions, clicks and sales </b> - for all campaigns. These are the estimated additional impressions, clicks and sales the campaign might have generated had it adopt the recommended budget. These are estimates based on previous website traffic and campaign\'s historical performance - and not a guarantee of actual impressions, clicks and sales. Consider using these metrics to further inform your budget allocation decisions. Note: the API only supports NA region currently and when you send the requst, please make sure the campaign belongs to the corresponding marketplace.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get recommended daily budget and estimated missed opportunities for campaigns.
     * @param {BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRecommendationsAndMissedOpportunitiesApi
     */
    public getBudgetRecommendations(requestParameters: BudgetRecommendationsAndMissedOpportunitiesApiGetBudgetRecommendationsRequest, options?: any) {
        return BudgetRecommendationsAndMissedOpportunitiesApiFp(this.configuration).getBudgetRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesApi - axios parameter creator
 * @export
 */
export const BudgetRulesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'campaignId', campaignId)
            // verify required parameter 'createAssociatedBudgetRulesRequest' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSPCampaigns', 'createAssociatedBudgetRulesRequest', createAssociatedBudgetRulesRequest)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createAssociatedBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPBudgetRulesRequest: CreateSPBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSPBudgetRulesRequest' is not null or undefined
            assertParamExists('createBudgetRulesForSPCampaigns', 'createSPBudgetRulesRequest', createSPBudgetRulesRequest)
            const localVarPath = `/sp/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSPBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'campaignId', campaignId)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSPCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules/{budgetRuleId}`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)))
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSPCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sp/budgetRules/{budgetRuleId}`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSPBudgetRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'budgetRuleId', budgetRuleId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSPBudgetRule', 'pageSize', pageSize)
            const localVarPath = `/sp/budgetRules/{budgetRuleId}/campaigns`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'campaignId', campaignId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'pageSize', pageSize)
            // verify required parameter 'startDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'startDate', startDate)
            // verify required parameter 'endDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSPCampaigns', 'endDate', endDate)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules/budgetHistory`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (startDate !== undefined) {
                localVarQueryParameter['startDate'] = startDate;
            }

            if (endDate !== undefined) {
                localVarQueryParameter['endDate'] = endDate;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSPBudgetRulesForAdvertiser: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getSPBudgetRulesForAdvertiser', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getSPBudgetRulesForAdvertiser', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getSPBudgetRulesForAdvertiser', 'pageSize', pageSize)
            const localVarPath = `/sp/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSPCampaigns', 'campaignId', campaignId)
            const localVarPath = `/sp/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSPCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateBudgetRulesForSPCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSPBudgetRulesRequest' is not null or undefined
            assertParamExists('updateBudgetRulesForSPCampaigns', 'updateSPBudgetRulesRequest', updateSPBudgetRulesRequest)
            const localVarPath = `/sp/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSPBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesApi - functional programming interface
 * @export
 */
export const BudgetRulesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesApiAxiosParamCreator(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPBudgetRulesRequest: CreateSPBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPBudgetRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPGetAssociatedCampaignsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPBudgetHistory>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPBudgetRulesForAdvertiserResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPListAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesApi - factory interface
 * @export
 */
export const BudgetRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesApiFp(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): AxiosPromise<CreateAssociatedBudgetRulesResponse> {
            return localVarFp.createAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPBudgetRulesRequest} createSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPBudgetRulesRequest: CreateSPBudgetRulesRequest, options?: any): AxiosPromise<CreateBudgetRulesResponse> {
            return localVarFp.createBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): AxiosPromise<object> {
            return localVarFp.disassociateAssociatedBudgetRuleForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): AxiosPromise<GetSPBudgetRuleResponse> {
            return localVarFp.getBudgetRuleByRuleIdForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<SPGetAssociatedCampaignsResponse> {
            return localVarFp.getCampaignsAssociatedWithSPBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): AxiosPromise<SPBudgetHistory> {
            return localVarFp.getRuleBasedBudgetHistoryForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<GetSPBudgetRulesForAdvertiserResponse> {
            return localVarFp.getSPBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): AxiosPromise<SPListAssociatedBudgetRulesResponse> {
            return localVarFp.listAssociatedBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPBudgetRulesRequest} updateSPBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest, options?: any): AxiosPromise<UpdateBudgetRulesResponse> {
            return localVarFp.updateBudgetRulesForSPCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createAssociatedBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly campaignId: number

    /**
     * 
     * @type {CreateAssociatedBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaigns
     */
    readonly createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest
}

/**
 * Request parameters for createBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSPBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateBudgetRulesForSPCampaigns
     */
    readonly createSPBudgetRulesRequest: CreateSPBudgetRulesRequest
}

/**
 * Request parameters for disassociateAssociatedBudgetRuleForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest
 */
export interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly campaignId: number

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getBudgetRuleByRuleIdForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest
 */
export interface BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getCampaignsAssociatedWithSPBudgetRule operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest
 */
export interface BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly budgetRuleId: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRule
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getRuleBasedBudgetHistoryForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest
 */
export interface BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly campaignId: number

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly pageSize: number

    /**
     * The start date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly startDate: string

    /**
     * The end date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly endDate: string

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaigns
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getSPBudgetRulesForAdvertiser operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest
 */
export interface BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetSPBudgetRulesForAdvertiser
     */
    readonly nextToken?: string
}

/**
 * Request parameters for listAssociatedBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSPCampaigns
     */
    readonly campaignId: number
}

/**
 * Request parameters for updateBudgetRulesForSPCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest
 */
export interface BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSPCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSPBudgetRulesRequest}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSPCampaigns
     */
    readonly updateSPBudgetRulesRequest: UpdateSPBudgetRulesRequest
}

/**
 * BudgetRulesApi - object-oriented interface
 * @export
 * @class BudgetRulesApi
 * @extends {BaseAPI}
 */
export class BudgetRulesApi extends BaseAPI {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createAssociatedBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiCreateAssociatedBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createAssociatedBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.createAssociatedBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiCreateBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSPBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public disassociateAssociatedBudgetRuleForSPCampaigns(requestParameters: BudgetRulesApiDisassociateAssociatedBudgetRuleForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).disassociateAssociatedBudgetRuleForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getBudgetRuleByRuleIdForSPCampaigns(requestParameters: BudgetRulesApiGetBudgetRuleByRuleIdForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getBudgetRuleByRuleIdForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets all the campaigns associated with a budget rule
     * @param {BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getCampaignsAssociatedWithSPBudgetRule(requestParameters: BudgetRulesApiGetCampaignsAssociatedWithSPBudgetRuleRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getCampaignsAssociatedWithSPBudgetRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets the budget history for a campaign specified by identifier.
     * @param {BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getRuleBasedBudgetHistoryForSPCampaigns(requestParameters: BudgetRulesApiGetRuleBasedBudgetHistoryForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getRuleBasedBudgetHistoryForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.pageSize, requestParameters.startDate, requestParameters.endDate, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Get all budget rules created by an advertiser
     * @param {BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getSPBudgetRulesForAdvertiser(requestParameters: BudgetRulesApiGetSPBudgetRulesForAdvertiserRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getSPBudgetRulesForAdvertiser(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public listAssociatedBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiListAssociatedBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).listAssociatedBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates one or more budget rules.
     * @param {BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public updateBudgetRulesForSPCampaigns(requestParameters: BudgetRulesApiUpdateBudgetRulesForSPCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).updateBudgetRulesForSPCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSPBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesRecommendationApi - axios parameter creator
 * @export
 */
export const BudgetRulesRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sPGetBudgetRulesRecommendation: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sPGetBudgetRulesRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sPGetBudgetRulesRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/campaigns/budgetRules/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spbudgetrulesrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(uNKNOWNBASETYPE, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesRecommendationApi - functional programming interface
 * @export
 */
export const BudgetRulesRecommendationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesRecommendationApiAxiosParamCreator(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPBudgetRulesRecommendationEventResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesRecommendationApi - factory interface
 * @export
 */
export const BudgetRulesRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesRecommendationApiFp(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): AxiosPromise<SPBudgetRulesRecommendationEventResponse> {
            return localVarFp.sPGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sPGetBudgetRulesRecommendation operation in BudgetRulesRecommendationApi.
 * @export
 * @interface BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest
 */
export interface BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSPGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSPGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {any}
     * @memberof BudgetRulesRecommendationApiSPGetBudgetRulesRecommendation
     */
    readonly uNKNOWNBASETYPE?: any
}

/**
 * BudgetRulesRecommendationApi - object-oriented interface
 * @export
 * @class BudgetRulesRecommendationApi
 * @extends {BaseAPI}
 */
export class BudgetRulesRecommendationApi extends BaseAPI {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesRecommendationApi
     */
    public sPGetBudgetRulesRecommendation(requestParameters: BudgetRulesRecommendationApiSPGetBudgetRulesRecommendationRequest, options?: any) {
        return BudgetRulesRecommendationApiFp(this.configuration).sPGetBudgetRulesRecommendation(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.uNKNOWNBASETYPE, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignOptimizationRulesApi - axios parameter creator
 * @export
 */
export const CampaignOptimizationRulesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSPCampaignOptimizationRulesRequest' is not null or undefined
            assertParamExists('createOptimizationRule', 'createSPCampaignOptimizationRulesRequest', createSPCampaignOptimizationRulesRequest)
            const localVarPath = `/sp/rules/campaignOptimization`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSPCampaignOptimizationRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCampaignOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteCampaignOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteCampaignOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignOptimizationId' is not null or undefined
            assertParamExists('deleteCampaignOptimizationRule', 'campaignOptimizationId', campaignOptimizationId)
            const localVarPath = `/sp/rules/campaignOptimization/{campaignOptimizationId}`
                .replace(`{${"campaignOptimizationId"}}`, encodeURIComponent(String(campaignOptimizationId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignOptimizationId' is not null or undefined
            assertParamExists('getCampaignOptimizationRule', 'campaignOptimizationId', campaignOptimizationId)
            const localVarPath = `/sp/rules/campaignOptimization/{campaignOptimizationId}`
                .replace(`{${"campaignOptimizationId"}}`, encodeURIComponent(String(campaignOptimizationId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule recommendation for SP campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOptimizationRuleEligibility: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getOptimizationRuleEligibility', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getOptimizationRuleEligibility', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sPCampaignOptimizationRecommendationsAPIRequest' is not null or undefined
            assertParamExists('getOptimizationRuleEligibility', 'sPCampaignOptimizationRecommendationsAPIRequest', sPCampaignOptimizationRecommendationsAPIRequest)
            const localVarPath = `/sp/rules/campaignOptimization/eligibility`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sPCampaignOptimizationRecommendationsAPIRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleNotification: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRuleNotification', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRuleNotification', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sPCampaignOptimizationNotificationAPIRequest' is not null or undefined
            assertParamExists('getRuleNotification', 'sPCampaignOptimizationNotificationAPIRequest', sPCampaignOptimizationNotificationAPIRequest)
            const localVarPath = `/sp/rules/campaignOptimization/state`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sPCampaignOptimizationNotificationAPIRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOptimizationRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateOptimizationRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateOptimizationRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSPCampaignOptimizationRulesRequest' is not null or undefined
            assertParamExists('updateOptimizationRule', 'updateSPCampaignOptimizationRulesRequest', updateSPCampaignOptimizationRulesRequest)
            const localVarPath = `/sp/rules/campaignOptimization`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.optimizationrules.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSPCampaignOptimizationRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignOptimizationRulesApi - functional programming interface
 * @export
 */
export const CampaignOptimizationRulesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignOptimizationRulesApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSPCampaignOptimizationRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPCampaignOptimizationRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteSPCampaignOptimizationRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSPCampaignOptimizationRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule recommendation for SP campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getOptimizationRuleEligibility(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPCampaignOptimizationRecommendationAPIResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getOptimizationRuleEligibility(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationRecommendationsAPIRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRuleNotification(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SPCampaignOptimizationNotificationAPIResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleNotification(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationNotificationAPIRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateSPCampaignOptimizationRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPCampaignOptimizationRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignOptimizationRulesApi - factory interface
 * @export
 */
export const CampaignOptimizationRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignOptimizationRulesApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSPCampaignOptimizationRulesRequest} createSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest, options?: any): AxiosPromise<CreateSPCampaignOptimizationRulesResponse> {
            return localVarFp.createOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSPCampaignOptimizationRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): AxiosPromise<DeleteSPCampaignOptimizationRuleResponse> {
            return localVarFp.deleteCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} campaignOptimizationId The sp campaign optimization rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignOptimizationId: string, options?: any): AxiosPromise<GetSPCampaignOptimizationRuleResponse> {
            return localVarFp.getCampaignOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignOptimizationId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a campaign optimization rule recommendation for SP campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationRecommendationsAPIRequest} sPCampaignOptimizationRecommendationsAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getOptimizationRuleEligibility(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest, options?: any): AxiosPromise<SPCampaignOptimizationRecommendationAPIResponse> {
            return localVarFp.getOptimizationRuleEligibility(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationRecommendationsAPIRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {SPCampaignOptimizationNotificationAPIRequest} sPCampaignOptimizationNotificationAPIRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleNotification(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest, options?: any): AxiosPromise<SPCampaignOptimizationNotificationAPIResponse> {
            return localVarFp.getRuleNotification(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sPCampaignOptimizationNotificationAPIRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates a campaign optimization rule.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSPCampaignOptimizationRulesRequest} updateSPCampaignOptimizationRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateOptimizationRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest, options?: any): AxiosPromise<UpdateSPCampaignOptimizationRuleResponse> {
            return localVarFp.updateOptimizationRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSPCampaignOptimizationRulesRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiCreateOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiCreateOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiCreateOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiCreateOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSPCampaignOptimizationRulesRequest}
     * @memberof CampaignOptimizationRulesApiCreateOptimizationRule
     */
    readonly createSPCampaignOptimizationRulesRequest: CreateSPCampaignOptimizationRulesRequest
}

/**
 * Request parameters for deleteCampaignOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiDeleteCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiDeleteCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The sp campaign optimization rule identifier.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiDeleteCampaignOptimizationRule
     */
    readonly campaignOptimizationId: string
}

/**
 * Request parameters for getCampaignOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetCampaignOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The sp campaign optimization rule identifier.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetCampaignOptimizationRule
     */
    readonly campaignOptimizationId: string
}

/**
 * Request parameters for getOptimizationRuleEligibility operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest
 */
export interface CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetOptimizationRuleEligibility
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetOptimizationRuleEligibility
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SPCampaignOptimizationRecommendationsAPIRequest}
     * @memberof CampaignOptimizationRulesApiGetOptimizationRuleEligibility
     */
    readonly sPCampaignOptimizationRecommendationsAPIRequest: SPCampaignOptimizationRecommendationsAPIRequest
}

/**
 * Request parameters for getRuleNotification operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiGetRuleNotificationRequest
 */
export interface CampaignOptimizationRulesApiGetRuleNotificationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetRuleNotification
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiGetRuleNotification
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SPCampaignOptimizationNotificationAPIRequest}
     * @memberof CampaignOptimizationRulesApiGetRuleNotification
     */
    readonly sPCampaignOptimizationNotificationAPIRequest: SPCampaignOptimizationNotificationAPIRequest
}

/**
 * Request parameters for updateOptimizationRule operation in CampaignOptimizationRulesApi.
 * @export
 * @interface CampaignOptimizationRulesApiUpdateOptimizationRuleRequest
 */
export interface CampaignOptimizationRulesApiUpdateOptimizationRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiUpdateOptimizationRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof CampaignOptimizationRulesApiUpdateOptimizationRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSPCampaignOptimizationRulesRequest}
     * @memberof CampaignOptimizationRulesApiUpdateOptimizationRule
     */
    readonly updateSPCampaignOptimizationRulesRequest: UpdateSPCampaignOptimizationRulesRequest
}

/**
 * CampaignOptimizationRulesApi - object-oriented interface
 * @export
 * @class CampaignOptimizationRulesApi
 * @extends {BaseAPI}
 */
export class CampaignOptimizationRulesApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates a campaign optimization rule.
     * @param {CampaignOptimizationRulesApiCreateOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public createOptimizationRule(requestParameters: CampaignOptimizationRulesApiCreateOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).createOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSPCampaignOptimizationRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes a campaign optimization rule specified by identifier.
     * @param {CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public deleteCampaignOptimizationRule(requestParameters: CampaignOptimizationRulesApiDeleteCampaignOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).deleteCampaignOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignOptimizationId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule specified by identifier.
     * @param {CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public getCampaignOptimizationRule(requestParameters: CampaignOptimizationRulesApiGetCampaignOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).getCampaignOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignOptimizationId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a campaign optimization rule recommendation for SP campaigns.
     * @param {CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public getOptimizationRuleEligibility(requestParameters: CampaignOptimizationRulesApiGetOptimizationRuleEligibilityRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).getOptimizationRuleEligibility(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sPCampaignOptimizationRecommendationsAPIRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets campaign optimization rule state. Recommended refresh frequency is once a day.
     * @param {CampaignOptimizationRulesApiGetRuleNotificationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public getRuleNotification(requestParameters: CampaignOptimizationRulesApiGetRuleNotificationRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).getRuleNotification(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sPCampaignOptimizationNotificationAPIRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates a campaign optimization rule.
     * @param {CampaignOptimizationRulesApiUpdateOptimizationRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignOptimizationRulesApi
     */
    public updateOptimizationRule(requestParameters: CampaignOptimizationRulesApiUpdateOptimizationRuleRequest, options?: any) {
        return CampaignOptimizationRulesApiFp(this.configuration).updateOptimizationRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSPCampaignOptimizationRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignsApi - axios parameter creator
 * @export
 */
export const CampaignsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Public api for listing sponsored products for campaigns
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [portfolioIdFilter] Comma delimited list of portfolio ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCampaignsExV2: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', name?: string, campaignIdFilter?: string, portfolioIdFilter?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listCampaignsExV2', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listCampaignsExV2', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/v2/sp/campaigns/extended`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startIndex !== undefined) {
                localVarQueryParameter['startIndex'] = startIndex;
            }

            if (count !== undefined) {
                localVarQueryParameter['count'] = count;
            }

            if (stateFilter !== undefined) {
                localVarQueryParameter['stateFilter'] = stateFilter;
            }

            if (name !== undefined) {
                localVarQueryParameter['name'] = name;
            }

            if (campaignIdFilter !== undefined) {
                localVarQueryParameter['campaignIdFilter'] = campaignIdFilter;
            }

            if (portfolioIdFilter !== undefined) {
                localVarQueryParameter['portfolioIdFilter'] = portfolioIdFilter;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Public api for listing sponsored products for campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [portfolioIdFilter] Comma delimited list of portfolio ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCampaignsV2: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', name?: string, campaignIdFilter?: string, portfolioIdFilter?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listCampaignsV2', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listCampaignsV2', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/v2/sp/campaigns`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startIndex !== undefined) {
                localVarQueryParameter['startIndex'] = startIndex;
            }

            if (count !== undefined) {
                localVarQueryParameter['count'] = count;
            }

            if (stateFilter !== undefined) {
                localVarQueryParameter['stateFilter'] = stateFilter;
            }

            if (name !== undefined) {
                localVarQueryParameter['name'] = name;
            }

            if (campaignIdFilter !== undefined) {
                localVarQueryParameter['campaignIdFilter'] = campaignIdFilter;
            }

            if (portfolioIdFilter !== undefined) {
                localVarQueryParameter['portfolioIdFilter'] = portfolioIdFilter;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignsApi - functional programming interface
 * @export
 */
export const CampaignsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignsApiAxiosParamCreator(configuration)
    return {
        /**
         * Public api for listing sponsored products for campaigns
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [portfolioIdFilter] Comma delimited list of portfolio ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listCampaignsExV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', name?: string, campaignIdFilter?: string, portfolioIdFilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<V2SPCampaign & V2SPCampaignExtended>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listCampaignsExV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, stateFilter, name, campaignIdFilter, portfolioIdFilter, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Public api for listing sponsored products for campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [portfolioIdFilter] Comma delimited list of portfolio ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listCampaignsV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', name?: string, campaignIdFilter?: string, portfolioIdFilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<V2SPCampaign>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listCampaignsV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, stateFilter, name, campaignIdFilter, portfolioIdFilter, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignsApi - factory interface
 * @export
 */
export const CampaignsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignsApiFp(configuration)
    return {
        /**
         * Public api for listing sponsored products for campaigns
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [portfolioIdFilter] Comma delimited list of portfolio ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCampaignsExV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', name?: string, campaignIdFilter?: string, portfolioIdFilter?: string, options?: any): AxiosPromise<Array<V2SPCampaign & V2SPCampaignExtended>> {
            return localVarFp.listCampaignsExV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, stateFilter, name, campaignIdFilter, portfolioIdFilter, options).then((request) => request(axios, basePath));
        },
        /**
         * Public api for listing sponsored products for campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [name] Restricts results to campaigns with the specified name.
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [portfolioIdFilter] Comma delimited list of portfolio ids to filter on
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCampaignsV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', name?: string, campaignIdFilter?: string, portfolioIdFilter?: string, options?: any): AxiosPromise<Array<V2SPCampaign>> {
            return localVarFp.listCampaignsV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, stateFilter, name, campaignIdFilter, portfolioIdFilter, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for listCampaignsExV2 operation in CampaignsApi.
 * @export
 * @interface CampaignsApiListCampaignsExV2Request
 */
export interface CampaignsApiListCampaignsExV2Request {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
     * @type {string}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 0-indexed record offset for the result set. Defaults to 0.
     * @type {number}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly startIndex?: number

    /**
     * Number of records to include in the paged response. Defaults to max page size
     * @type {number}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly count?: number

    /**
     * Comma delimited list of states to filter on
     * @type {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'

    /**
     * Restricts results to campaigns with the specified name.
     * @type {string}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly name?: string

    /**
     * Comma delimited list of campaign ids to filter on
     * @type {string}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly campaignIdFilter?: string

    /**
     * Comma delimited list of portfolio ids to filter on
     * @type {string}
     * @memberof CampaignsApiListCampaignsExV2
     */
    readonly portfolioIdFilter?: string
}

/**
 * Request parameters for listCampaignsV2 operation in CampaignsApi.
 * @export
 * @interface CampaignsApiListCampaignsV2Request
 */
export interface CampaignsApiListCampaignsV2Request {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
     * @type {string}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 0-indexed record offset for the result set. Defaults to 0.
     * @type {number}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly startIndex?: number

    /**
     * Number of records to include in the paged response. Defaults to max page size
     * @type {number}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly count?: number

    /**
     * Comma delimited list of states to filter on
     * @type {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'

    /**
     * Restricts results to campaigns with the specified name.
     * @type {string}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly name?: string

    /**
     * Comma delimited list of campaign ids to filter on
     * @type {string}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly campaignIdFilter?: string

    /**
     * Comma delimited list of portfolio ids to filter on
     * @type {string}
     * @memberof CampaignsApiListCampaignsV2
     */
    readonly portfolioIdFilter?: string
}

/**
 * CampaignsApi - object-oriented interface
 * @export
 * @class CampaignsApi
 * @extends {BaseAPI}
 */
export class CampaignsApi extends BaseAPI {
    /**
     * Public api for listing sponsored products for campaigns
     * @param {CampaignsApiListCampaignsExV2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public listCampaignsExV2(requestParameters: CampaignsApiListCampaignsExV2Request, options?: any) {
        return CampaignsApiFp(this.configuration).listCampaignsExV2(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.startIndex, requestParameters.count, requestParameters.stateFilter, requestParameters.name, requestParameters.campaignIdFilter, requestParameters.portfolioIdFilter, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Public api for listing sponsored products for campaigns  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {CampaignsApiListCampaignsV2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public listCampaignsV2(requestParameters: CampaignsApiListCampaignsV2Request, options?: any) {
        return CampaignsApiFp(this.configuration).listCampaignsV2(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.startIndex, requestParameters.count, requestParameters.stateFilter, requestParameters.name, requestParameters.campaignIdFilter, requestParameters.portfolioIdFilter, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * GetRankedKeywordsRecommendationsApi - axios parameter creator
 * @export
 */
export const GetRankedKeywordsRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Get keyword recommendations ranked by user-provided metric  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get ranked keywords recommendations
         * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIClientId] The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest} [adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRankedKeywordRecommendation: async (amazonAdvertisingAPIMarketplaceId?: string, amazonAdvertisingAPIAdvertiserId?: string, amazonAdvertisingAPIClientId?: string, amazonAdvertisingAPIScope?: string, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            const localVarPath = `/sp/targets/keywords/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIMarketplaceId !== undefined && amazonAdvertisingAPIMarketplaceId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-MarketplaceId'] = String(amazonAdvertisingAPIMarketplaceId);
            }

            if (amazonAdvertisingAPIAdvertiserId !== undefined && amazonAdvertisingAPIAdvertiserId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spkeywordsrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * GetRankedKeywordsRecommendationsApi - functional programming interface
 * @export
 */
export const GetRankedKeywordsRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = GetRankedKeywordsRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * Get keyword recommendations ranked by user-provided metric  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get ranked keywords recommendations
         * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIClientId] The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest} [adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRankedKeywordRecommendation(amazonAdvertisingAPIMarketplaceId?: string, amazonAdvertisingAPIAdvertiserId?: string, amazonAdvertisingAPIClientId?: string, amazonAdvertisingAPIScope?: string, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<KeywordTargetResponse>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRankedKeywordRecommendation(amazonAdvertisingAPIMarketplaceId, amazonAdvertisingAPIAdvertiserId, amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * GetRankedKeywordsRecommendationsApi - factory interface
 * @export
 */
export const GetRankedKeywordsRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = GetRankedKeywordsRecommendationsApiFp(configuration)
    return {
        /**
         * Get keyword recommendations ranked by user-provided metric  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get ranked keywords recommendations
         * @param {string} [amazonAdvertisingAPIMarketplaceId] The advertiser\&#39;s Marketplace ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The advertiser\&#39;s ID associated with the advertiser account.
         * @param {string} [amazonAdvertisingAPIClientId] The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIScope] The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest} [adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRankedKeywordRecommendation(amazonAdvertisingAPIMarketplaceId?: string, amazonAdvertisingAPIAdvertiserId?: string, amazonAdvertisingAPIClientId?: string, amazonAdvertisingAPIScope?: string, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest, options?: any): AxiosPromise<Array<KeywordTargetResponse>> {
            return localVarFp.getRankedKeywordRecommendation(amazonAdvertisingAPIMarketplaceId, amazonAdvertisingAPIAdvertiserId, amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getRankedKeywordRecommendation operation in GetRankedKeywordsRecommendationsApi.
 * @export
 * @interface GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendationRequest
 */
export interface GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendationRequest {
    /**
     * The advertiser\&#39;s Marketplace ID associated with the advertiser account.
     * @type {string}
     * @memberof GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIMarketplaceId?: string

    /**
     * The advertiser\&#39;s ID associated with the advertiser account.
     * @type {string}
     * @memberof GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIAdvertiserId?: string

    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIClientId?: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly amazonAdvertisingAPIScope?: string

    /**
     * 
     * @type {AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest}
     * @memberof GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendation
     */
    readonly adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest?: AdGroupKeywordTargetRankRecommendationRequest | AsinsKeywordTargetRankRecommendationRequest
}

/**
 * GetRankedKeywordsRecommendationsApi - object-oriented interface
 * @export
 * @class GetRankedKeywordsRecommendationsApi
 * @extends {BaseAPI}
 */
export class GetRankedKeywordsRecommendationsApi extends BaseAPI {
    /**
     * Get keyword recommendations ranked by user-provided metric  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get ranked keywords recommendations
     * @param {GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof GetRankedKeywordsRecommendationsApi
     */
    public getRankedKeywordRecommendation(requestParameters: GetRankedKeywordsRecommendationsApiGetRankedKeywordRecommendationRequest = {}, options?: any) {
        return GetRankedKeywordsRecommendationsApiFp(this.configuration).getRankedKeywordRecommendation(requestParameters.amazonAdvertisingAPIMarketplaceId, requestParameters.amazonAdvertisingAPIAdvertiserId, requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.adGroupKeywordTargetRankRecommendationRequestAsinsKeywordTargetRankRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductAdsApi - axios parameter creator
 * @export
 */
export const ProductAdsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Public api for listing sponsored products for productAds  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [adGroupIdFilter] Restricts results to keywords associated with ad groups specified by identifier in the comma-delimited list.
         * @param {string} [adIdFilter] Restricts results to product ads associated with the product ad identifiers specified in the comma-delimited list.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listProductAdsV2: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', campaignIdFilter?: string, adGroupIdFilter?: string, adIdFilter?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listProductAdsV2', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listProductAdsV2', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/v2/sp/productAds`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (startIndex !== undefined) {
                localVarQueryParameter['startIndex'] = startIndex;
            }

            if (count !== undefined) {
                localVarQueryParameter['count'] = count;
            }

            if (stateFilter !== undefined) {
                localVarQueryParameter['stateFilter'] = stateFilter;
            }

            if (campaignIdFilter !== undefined) {
                localVarQueryParameter['campaignIdFilter'] = campaignIdFilter;
            }

            if (adGroupIdFilter !== undefined) {
                localVarQueryParameter['adGroupIdFilter'] = adGroupIdFilter;
            }

            if (adIdFilter !== undefined) {
                localVarQueryParameter['adIdFilter'] = adIdFilter;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductAdsApi - functional programming interface
 * @export
 */
export const ProductAdsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductAdsApiAxiosParamCreator(configuration)
    return {
        /**
         * Public api for listing sponsored products for productAds  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [adGroupIdFilter] Restricts results to keywords associated with ad groups specified by identifier in the comma-delimited list.
         * @param {string} [adIdFilter] Restricts results to product ads associated with the product ad identifiers specified in the comma-delimited list.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listProductAdsV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', campaignIdFilter?: string, adGroupIdFilter?: string, adIdFilter?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<V2SPProductAd>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listProductAdsV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, stateFilter, campaignIdFilter, adGroupIdFilter, adIdFilter, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductAdsApi - factory interface
 * @export
 */
export const ProductAdsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductAdsApiFp(configuration)
    return {
        /**
         * Public api for listing sponsored products for productAds  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {number} [startIndex] 0-indexed record offset for the result set. Defaults to 0.
         * @param {number} [count] Number of records to include in the paged response. Defaults to max page size
         * @param {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'} [stateFilter] Comma delimited list of states to filter on
         * @param {string} [campaignIdFilter] Comma delimited list of campaign ids to filter on
         * @param {string} [adGroupIdFilter] Restricts results to keywords associated with ad groups specified by identifier in the comma-delimited list.
         * @param {string} [adIdFilter] Restricts results to product ads associated with the product ad identifiers specified in the comma-delimited list.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listProductAdsV2(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, startIndex?: number, count?: number, stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived', campaignIdFilter?: string, adGroupIdFilter?: string, adIdFilter?: string, options?: any): AxiosPromise<Array<V2SPProductAd>> {
            return localVarFp.listProductAdsV2(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, startIndex, count, stateFilter, campaignIdFilter, adGroupIdFilter, adIdFilter, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for listProductAdsV2 operation in ProductAdsApi.
 * @export
 * @interface ProductAdsApiListProductAdsV2Request
 */
export interface ProductAdsApiListProductAdsV2Request {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; developer account.
     * @type {string}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 0-indexed record offset for the result set. Defaults to 0.
     * @type {number}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly startIndex?: number

    /**
     * Number of records to include in the paged response. Defaults to max page size
     * @type {number}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly count?: number

    /**
     * Comma delimited list of states to filter on
     * @type {'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly stateFilter?: 'enabled' | 'paused' | 'archived' | 'enabled,paused' | 'enabled,archived' | 'paused,archived' | 'enabled,paused,archived'

    /**
     * Comma delimited list of campaign ids to filter on
     * @type {string}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly campaignIdFilter?: string

    /**
     * Restricts results to keywords associated with ad groups specified by identifier in the comma-delimited list.
     * @type {string}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly adGroupIdFilter?: string

    /**
     * Restricts results to product ads associated with the product ad identifiers specified in the comma-delimited list.
     * @type {string}
     * @memberof ProductAdsApiListProductAdsV2
     */
    readonly adIdFilter?: string
}

/**
 * ProductAdsApi - object-oriented interface
 * @export
 * @class ProductAdsApi
 * @extends {BaseAPI}
 */
export class ProductAdsApi extends BaseAPI {
    /**
     * Public api for listing sponsored products for productAds  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {ProductAdsApiListProductAdsV2Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductAdsApi
     */
    public listProductAdsV2(requestParameters: ProductAdsApiListProductAdsV2Request, options?: any) {
        return ProductAdsApiFp(this.configuration).listProductAdsV2(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.startIndex, requestParameters.count, requestParameters.stateFilter, requestParameters.campaignIdFilter, requestParameters.adGroupIdFilter, requestParameters.adIdFilter, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductRecommendationServiceApi - axios parameter creator
 * @export
 */
export const ProductRecommendationServiceApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
         * @summary Suggested target ASINs for your advertised product
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
         * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProductRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIAdvertiserId?: string, getProductRecommendationsRequest?: GetProductRecommendationsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getProductRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getProductRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/products/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIAdvertiserId !== undefined && amazonAdvertisingAPIAdvertiserId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-AdvertiserId'] = String(amazonAdvertisingAPIAdvertiserId);
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproductrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getProductRecommendationsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductRecommendationServiceApi - functional programming interface
 * @export
 */
export const ProductRecommendationServiceApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductRecommendationServiceApiAxiosParamCreator(configuration)
    return {
        /**
         * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
         * @summary Suggested target ASINs for your advertised product
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
         * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getProductRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIAdvertiserId?: string, getProductRecommendationsRequest?: GetProductRecommendationsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ProductRecommendationsByTheme>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getProductRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, amazonAdvertisingAPIAdvertiserId, getProductRecommendationsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductRecommendationServiceApi - factory interface
 * @export
 */
export const ProductRecommendationServiceApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductRecommendationServiceApiFp(configuration)
    return {
        /**
         * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
         * @summary Suggested target ASINs for your advertised product
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [amazonAdvertisingAPIAdvertiserId] The Advertiser ID associated with the advertiser account.
         * @param {GetProductRecommendationsRequest} [getProductRecommendationsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getProductRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, amazonAdvertisingAPIAdvertiserId?: string, getProductRecommendationsRequest?: GetProductRecommendationsRequest, options?: any): AxiosPromise<ProductRecommendationsByTheme> {
            return localVarFp.getProductRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, amazonAdvertisingAPIAdvertiserId, getProductRecommendationsRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getProductRecommendations operation in ProductRecommendationServiceApi.
 * @export
 * @interface ProductRecommendationServiceApiGetProductRecommendationsRequest
 */
export interface ProductRecommendationServiceApiGetProductRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The Advertiser ID associated with the advertiser account.
     * @type {string}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly amazonAdvertisingAPIAdvertiserId?: string

    /**
     * 
     * @type {GetProductRecommendationsRequest}
     * @memberof ProductRecommendationServiceApiGetProductRecommendations
     */
    readonly getProductRecommendationsRequest?: GetProductRecommendationsRequest
}

/**
 * ProductRecommendationServiceApi - object-oriented interface
 * @export
 * @class ProductRecommendationServiceApi
 * @extends {BaseAPI}
 */
export class ProductRecommendationServiceApi extends BaseAPI {
    /**
     * Given an advertised ASIN as input, this API returns suggested ASINs to target in a product targeting campaign. We use various methods to generate these suggestions. These include using historical performance of your ad, items that shoppers they frequently view and purchase together, etc. The suggested targets can be retrieved either as a single list, or grouped by ‘theme\' – i.e. an accompanying context for why we recommend the items. You can pick the desired format using the Accepts header, please see the response mediaTypes for more information. </br> <h4>Pagination Behavior</h4> The API supports cursor based pagination using encoded cursor values to return next set of records or previously served records. The <b>count</b> parameter in the request body will be used to determine the size of results when requesting the previous page or next page. If no value for <b>count</b> is passed in the request, a default value is assumed. Please refer the range and defaults for these values in the request schema under GetProductRecommendationsRequest. </br> <i><b>Note:</b> The clients should never cache pagination cursor values locally as these values will expire after a certain time period. However a cursor value can be reused to perform retries in case of failures as long as the value has not expired. </br></br> <h4>Themes </h4> Themes provide additional context for why we are recommending a product as a target. See below for an overall list of themes currently available –  </br><b>- Top converting targets</b> – These ASINs generated conversions for the input ASIN in the past 30 days (e.g. your product appeared as an ad on the detail page of these items, and a shopper clicked and purchased your item). The suggested ASINs under this theme are sorted in decreasing order of sales generated for your promoted item. </br><b>- Similar items (frequently viewed together)</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br><b>- Complements</b> – Items that are frequently purchased together as complements. For example, if you are promoting a tennis racquet, you may see tennis balls recommended under this theme. </br><b>- Similar items with low ratings and reviews</b> – Subset of the ‘similar items’ theme containing items that are rated lower than 3 stars and/or with fewer than 5 reviews. </br><b>- Other books read by your readers</b> – Items that shoppers frequently view and click along with your advertised item during a shopping session. </br></br><i><b>Note:</b> Availability of themes differs by input ASIN - some ASINs may not have all above themes available</i> 
     * @summary Suggested target ASINs for your advertised product
     * @param {ProductRecommendationServiceApiGetProductRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductRecommendationServiceApi
     */
    public getProductRecommendations(requestParameters: ProductRecommendationServiceApiGetProductRecommendationsRequest, options?: any) {
        return ProductRecommendationServiceApiFp(this.configuration).getProductRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.amazonAdvertisingAPIAdvertiserId, requestParameters.getProductRecommendationsRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductTargetingApi - axios parameter creator
 * @export
 */
export const ProductTargetingApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns a list of category recommendations for the input list of ASINs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCategoryRecommendationsForASINs: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCategoryRecommendationsForASINs', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCategoryRecommendationsForASINs', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/categories/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getCategoryRecommendationsForAsinsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands recommended for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNegativeBrands: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getNegativeBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getNegativeBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/negativeTargets/brands/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns refinements according to category input.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRefinementsForCategory: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, categoryId: string, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRefinementsForCategory', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRefinementsForCategory', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'categoryId' is not null or undefined
            assertParamExists('getRefinementsForCategory', 'categoryId', categoryId)
            const localVarPath = `/sp/targets/category/{categoryId}/refinements`
                .replace(`{${"categoryId"}}`, encodeURIComponent(String(categoryId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get number of targetable asins based on refinements provided by the user.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableASINCounts: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getTargetableASINCounts', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getTargetableASINCounts', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/products/count`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getTargetableAsinCountsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns all targetable categories.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableCategories: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getTargetableCategories', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getTargetableCategories', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/categories`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands related to keyword input for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {SearchBrandsRequest} [searchBrandsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchBrands: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, searchBrandsRequest?: SearchBrandsRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('searchBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('searchBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/negativeTargets/brands/search`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }

            if (prefer !== undefined && prefer !== null) {
                localVarHeaderParameter['Prefer'] = String(prefer);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spproducttargeting.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(searchBrandsRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductTargetingApi - functional programming interface
 * @export
 */
export const ProductTargetingApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductTargetingApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns a list of category recommendations for the input list of ASINs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CategoryRecommendations>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getCategoryRecommendationsForAsinsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands recommended for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getNegativeBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Brand>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns refinements according to category input.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRefinementsForCategory(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, categoryId: string, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Refinements>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRefinementsForCategory(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get number of targetable asins based on refinements provided by the user.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTargetableASINCounts(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TargetableAsinCounts>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns all targetable categories.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getTargetableCategories(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<TargetableCategories>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getTargetableCategories(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands related to keyword input for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {SearchBrandsRequest} [searchBrandsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async searchBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, searchBrandsRequest?: SearchBrandsRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<Brand>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.searchBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductTargetingApi - factory interface
 * @export
 */
export const ProductTargetingApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductTargetingApiFp(configuration)
    return {
        /**
         * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns a list of category recommendations for the input list of ASINs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetCategoryRecommendationsForAsinsRequest} [getCategoryRecommendationsForAsinsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest, options?: any): AxiosPromise<CategoryRecommendations> {
            return localVarFp.getCategoryRecommendationsForASINs(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getCategoryRecommendationsForAsinsRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands recommended for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getNegativeBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options?: any): AxiosPromise<Array<Brand>> {
            return localVarFp.getNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns refinements according to category input.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} categoryId The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRefinementsForCategory(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, categoryId: string, prefer?: string, options?: any): AxiosPromise<Refinements> {
            return localVarFp.getRefinementsForCategory(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, categoryId, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Get number of targetable asins based on refinements provided by the user.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {GetTargetableAsinCountsRequest} [getTargetableAsinCountsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableASINCounts(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest, options?: any): AxiosPromise<TargetableAsinCounts> {
            return localVarFp.getTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, getTargetableAsinCountsRequest, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns all targetable categories.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getTargetableCategories(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, options?: any): AxiosPromise<TargetableCategories> {
            return localVarFp.getTargetableCategories(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Returns brands related to keyword input for negative targeting.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} [prefer] Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
         * @param {SearchBrandsRequest} [searchBrandsRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        searchBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, prefer?: string, searchBrandsRequest?: SearchBrandsRequest, options?: any): AxiosPromise<Array<Brand>> {
            return localVarFp.searchBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, prefer, searchBrandsRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getCategoryRecommendationsForASINs operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetCategoryRecommendationsForASINsRequest
 */
export interface ProductTargetingApiGetCategoryRecommendationsForASINsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly prefer?: string

    /**
     * 
     * @type {GetCategoryRecommendationsForAsinsRequest}
     * @memberof ProductTargetingApiGetCategoryRecommendationsForASINs
     */
    readonly getCategoryRecommendationsForAsinsRequest?: GetCategoryRecommendationsForAsinsRequest
}

/**
 * Request parameters for getNegativeBrands operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetNegativeBrandsRequest
 */
export interface ProductTargetingApiGetNegativeBrandsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetNegativeBrands
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetNegativeBrands
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetNegativeBrands
     */
    readonly prefer?: string
}

/**
 * Request parameters for getRefinementsForCategory operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetRefinementsForCategoryRequest
 */
export interface ProductTargetingApiGetRefinementsForCategoryRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The category ID. Please use the GetTargetableCategories API or the GetCategoriesForASINs API to retrieve categories IDs. This API does not check if the category is a valid category.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly categoryId: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetRefinementsForCategory
     */
    readonly prefer?: string
}

/**
 * Request parameters for getTargetableASINCounts operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetTargetableASINCountsRequest
 */
export interface ProductTargetingApiGetTargetableASINCountsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly prefer?: string

    /**
     * 
     * @type {GetTargetableAsinCountsRequest}
     * @memberof ProductTargetingApiGetTargetableASINCounts
     */
    readonly getTargetableAsinCountsRequest?: GetTargetableAsinCountsRequest
}

/**
 * Request parameters for getTargetableCategories operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiGetTargetableCategoriesRequest
 */
export interface ProductTargetingApiGetTargetableCategoriesRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiGetTargetableCategories
     */
    readonly prefer?: string
}

/**
 * Request parameters for searchBrands operation in ProductTargetingApi.
 * @export
 * @interface ProductTargetingApiSearchBrandsRequest
 */
export interface ProductTargetingApiSearchBrandsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Used to indicate the behavior preferred by the client but is not required for successful completion of the request. Supported values will be updated in the future.
     * @type {string}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly prefer?: string

    /**
     * 
     * @type {SearchBrandsRequest}
     * @memberof ProductTargetingApiSearchBrands
     */
    readonly searchBrandsRequest?: SearchBrandsRequest
}

/**
 * ProductTargetingApi - object-oriented interface
 * @export
 * @class ProductTargetingApi
 * @extends {BaseAPI}
 */
export class ProductTargetingApi extends BaseAPI {
    /**
     * Returns a list of category recommendations for the input list of ASINs. Use this API to discover relevant categories to target. To find ASINs, either use the Product Metadata API or browse the Amazon Retail Website. <br> <ul><li>Response can be requested in different versions with the help of accept header. Please review the response mediaTypes for more information.</li><ul>  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns a list of category recommendations for the input list of ASINs.
     * @param {ProductTargetingApiGetCategoryRecommendationsForASINsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getCategoryRecommendationsForASINs(requestParameters: ProductTargetingApiGetCategoryRecommendationsForASINsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getCategoryRecommendationsForASINs(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.getCategoryRecommendationsForAsinsRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands recommended for negative targeting.
     * @param {ProductTargetingApiGetNegativeBrandsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getNegativeBrands(requestParameters: ProductTargetingApiGetNegativeBrandsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getNegativeBrands(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns refinements according to category input.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns refinements according to category input.
     * @param {ProductTargetingApiGetRefinementsForCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getRefinementsForCategory(requestParameters: ProductTargetingApiGetRefinementsForCategoryRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getRefinementsForCategory(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.categoryId, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get number of targetable asins based on refinements provided by the user. Please use the GetTargetableCategories API or the GetCategoryRecommendationsForASINs API to retrieve the category ID. Please use the GetRefinementsByCategory API to retrieve refinements data for a category.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Get number of targetable asins based on refinements provided by the user.
     * @param {ProductTargetingApiGetTargetableASINCountsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getTargetableASINCounts(requestParameters: ProductTargetingApiGetTargetableASINCountsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getTargetableASINCounts(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.getTargetableAsinCountsRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns all targetable categories. This API returns a large JSON string containing a tree of category nodes. Each category node has the fields - category id, category name, and child categories.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns all targetable categories.
     * @param {ProductTargetingApiGetTargetableCategoriesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public getTargetableCategories(requestParameters: ProductTargetingApiGetTargetableCategoriesRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).getTargetableCategories(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns up to 100 brands related to keyword input for negative targeting.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Returns brands related to keyword input for negative targeting.
     * @param {ProductTargetingApiSearchBrandsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingApi
     */
    public searchBrands(requestParameters: ProductTargetingApiSearchBrandsRequest, options?: any) {
        return ProductTargetingApiFp(this.configuration).searchBrands(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.prefer, requestParameters.searchBrandsRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ThemeBasedBidRecommendationApi - axios parameter creator
 * @export
 */
export const ThemeBasedBidRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary The current version of the theme-based bid recommendation service supports auto-targeting and keyword targeting expressions only. Note that the currency for bid recommendations are in local currency units.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest} [adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getThemeBasedBidRecommendationForAdGroupV1: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getThemeBasedBidRecommendationForAdGroupV1', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sp/targets/bid/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.spthemebasedbidrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ThemeBasedBidRecommendationApi - functional programming interface
 * @export
 */
export const ThemeBasedBidRecommendationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ThemeBasedBidRecommendationApiAxiosParamCreator(configuration)
    return {
        /**
         * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary The current version of the theme-based bid recommendation service supports auto-targeting and keyword targeting expressions only. Note that the currency for bid recommendations are in local currency units.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest} [adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ThemeBasedBidRecommendationResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ThemeBasedBidRecommendationApi - factory interface
 * @export
 */
export const ThemeBasedBidRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ThemeBasedBidRecommendationApiFp(configuration)
    return {
        /**
         * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary The current version of the theme-based bid recommendation service supports auto-targeting and keyword targeting expressions only. Note that the currency for bid recommendations are in local currency units.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest} [adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest, options?: any): AxiosPromise<ThemeBasedBidRecommendationResponse> {
            return localVarFp.getThemeBasedBidRecommendationForAdGroupV1(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getThemeBasedBidRecommendationForAdGroupV1 operation in ThemeBasedBidRecommendationApi.
 * @export
 * @interface ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request
 */
export interface ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest}
     * @memberof ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1
     */
    readonly adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest?: AdGroupThemeBasedBidRecommendationRequest | AsinsThemeBasedBidRecommendationRequest
}

/**
 * ThemeBasedBidRecommendationApi - object-oriented interface
 * @export
 * @class ThemeBasedBidRecommendationApi
 * @extends {BaseAPI}
 */
export class ThemeBasedBidRecommendationApi extends BaseAPI {
    /**
     * Gets theme-based bid recommendations for new or existing ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary The current version of the theme-based bid recommendation service supports auto-targeting and keyword targeting expressions only. Note that the currency for bid recommendations are in local currency units.
     * @param {ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ThemeBasedBidRecommendationApi
     */
    public getThemeBasedBidRecommendationForAdGroupV1(requestParameters: ThemeBasedBidRecommendationApiGetThemeBasedBidRecommendationForAdGroupV1Request, options?: any) {
        return ThemeBasedBidRecommendationApiFp(this.configuration).getThemeBasedBidRecommendationForAdGroupV1(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.adGroupThemeBasedBidRecommendationRequestAsinsThemeBasedBidRecommendationRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


