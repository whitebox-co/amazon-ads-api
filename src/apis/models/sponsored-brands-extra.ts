/* tslint:disable */
/* eslint-disable */
/**
 * Sponsored Brands
 * Use the Amazon Advertising API for Sponsored Brands for campaign, ad group, keyword, negative keyword, drafts, Stores, landing pages, and Brands management operations.
 *
 * The version of the OpenAPI document: 3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { Configuration } from './configuration';
import globalAxios, { AxiosPromise, AxiosInstance } from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString } from './common';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, RequestArgs, BaseAPI, RequiredError } from './base';
import { createRequestFunction } from "../../helpers";

/**
 * Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
 * @export
 * @enum {string}
 */

export enum AcceptHeader {
    SbAdCreativeResourceV4json = 'application/vnd.sbAdCreativeResource.v4+json',
    SbCreativeImageRecommendationResourceV4json = 'application/vnd.sbCreativeImageRecommendationResource.v4+json',
    SbCreativeRecommendationResourceV4json = 'application/vnd.sbCreativeRecommendationResource.v4+json'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum AccessDeniedErrorCode {
    AccessDenied = 'ACCESS_DENIED'
}

/**
 * 
 * @export
 * @interface AccessDeniedErrorResponseContent
 */
export interface AccessDeniedErrorResponseContent {
    /**
     * 
     * @type {AccessDeniedErrorCode}
     * @memberof AccessDeniedErrorResponseContent
     */
    code: AccessDeniedErrorCode;
    /**
     * 
     * @type {string}
     * @memberof AccessDeniedErrorResponseContent
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof AccessDeniedErrorResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface AccessDeniedExceptionResponseContent
 */
export interface AccessDeniedExceptionResponseContent {
    /**
     * 
     * @type {AccessDeniedErrorCode}
     * @memberof AccessDeniedExceptionResponseContent
     */
    code: AccessDeniedErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof AccessDeniedExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface Ad
 */
export interface Ad {
    /**
     * The ad identifier. Note: Ads created using version 3/non-multi ad group campaigns do not have an associated adId. [Learn more](https://advertising.amazon.com/API/docs/en-us/sponsored-brands/campaigns/managing-multi-ad-group-campaigns#ads).
     * @type {string}
     * @memberof Ad
     */
    adId?: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof Ad
     */
    campaignId: string;
    /**
     * 
     * @type {LandingPage}
     * @memberof Ad
     */
    landingPage?: LandingPage;
    /**
     * The name of the ad. Note: Ads created using version 3/non-multi ad group campaigns do not have an associated name. [Learn more](https://advertising.amazon.com/API/docs/en-us/sponsored-brands/campaigns/managing-multi-ad-group-campaigns#ads).
     * @type {string}
     * @memberof Ad
     */
    name?: string;
    /**
     * 
     * @type {EntityState}
     * @memberof Ad
     */
    state: EntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof Ad
     */
    adGroupId: string;
    /**
     * 
     * @type {Creative}
     * @memberof Ad
     */
    creative?: Creative;
    /**
     * 
     * @type {AdExtendedData}
     * @memberof Ad
     */
    extendedData?: AdExtendedData;
}
/**
 * 
 * @export
 * @interface AdExtendedData
 */
export interface AdExtendedData {
    /**
     * 
     * @type {AdServingStatus}
     * @memberof AdExtendedData
     */
    servingStatus?: AdServingStatus;
    /**
     * Date of last update in epoch time.
     * @type {number}
     * @memberof AdExtendedData
     */
    lastUpdateDate?: number;
    /**
     * The serving status reasons of the Ad.
     * @type {Array<string>}
     * @memberof AdExtendedData
     */
    servingStatusDetails?: Array<string>;
    /**
     * Creation date in epoch time.
     * @type {number}
     * @memberof AdExtendedData
     */
    creationDate?: number;
}
/**
 * 
 * @export
 * @interface AdFailureResponseItem
 */
export interface AdFailureResponseItem {
    /**
     * the index of the ad in the array from the request body.
     * @type {number}
     * @memberof AdFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors.
     * @type {Array<AdMutationError>}
     * @memberof AdFailureResponseItem
     */
    errors?: Array<AdMutationError>;
}
/**
 * 
 * @export
 * @interface AdGroup
 */
export interface AdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof AdGroup
     */
    campaignId: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof AdGroup
     */
    name: string;
    /**
     * 
     * @type {EntityState}
     * @memberof AdGroup
     */
    state: EntityState;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof AdGroup
     */
    adGroupId: string;
    /**
     * 
     * @type {AdGroupExtendedData}
     * @memberof AdGroup
     */
    extendedData?: AdGroupExtendedData;
}
/**
 * 
 * @export
 * @interface AdGroupExtendedData
 */
export interface AdGroupExtendedData {
    /**
     * 
     * @type {AdGroupServingStatus}
     * @memberof AdGroupExtendedData
     */
    servingStatus?: AdGroupServingStatus;
    /**
     * Date of last update in epoch time.
     * @type {number}
     * @memberof AdGroupExtendedData
     */
    lastUpdateDate?: number;
    /**
     * The serving status reasons of the Ad Group.
     * @type {Array<string>}
     * @memberof AdGroupExtendedData
     */
    servingStatusDetails?: Array<string>;
    /**
     * Creation date in epoch time.
     * @type {number}
     * @memberof AdGroupExtendedData
     */
    creationDate?: number;
}
/**
 * 
 * @export
 * @interface AdGroupFailureResponseItem
 */
export interface AdGroupFailureResponseItem {
    /**
     * the index of the adGroup in the array from the request body.
     * @type {number}
     * @memberof AdGroupFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors.
     * @type {Array<AdGroupMutationError>}
     * @memberof AdGroupFailureResponseItem
     */
    errors?: Array<AdGroupMutationError>;
}
/**
 * 
 * @export
 * @interface AdGroupMutationError
 */
export interface AdGroupMutationError {
    /**
     * The type of the error.
     * @type {string}
     * @memberof AdGroupMutationError
     */
    errorType: string;
    /**
     * 
     * @type {AdGroupMutationErrorSelector}
     * @memberof AdGroupMutationError
     */
    errorValue: AdGroupMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface AdGroupMutationErrorSelector
 */
export interface AdGroupMutationErrorSelector {
    /**
     * 
     * @type {DateError}
     * @memberof AdGroupMutationErrorSelector
     */
    dateError?: DateError;
    /**
     * 
     * @type {BiddingError}
     * @memberof AdGroupMutationErrorSelector
     */
    biddingError?: BiddingError;
    /**
     * 
     * @type {RangeError}
     * @memberof AdGroupMutationErrorSelector
     */
    rangeError?: RangeError;
    /**
     * 
     * @type {OtherError}
     * @memberof AdGroupMutationErrorSelector
     */
    otherError?: OtherError;
}
/**
 * `Notice: the servingStatus enums have not been finalized yet.` The ad group serving status determined by system. - AD_GROUP_STATUS_ENABLED - Ad group\'s status is enabled. - AD_GROUP_PAUSED - Ad group\'s status is paused. - AD_GROUP_ARCHIVED - Ad group\'s status is archived. - AD_GROUP_INCOMPLETE - Ad group does not contain any ads or targeting clauses. - AD_GROUP_POLICING_PENDING_REVIEW - Ad group is pending review because of policing reason - AD_GROUP_POLICING_CREATIVE_REJECTED - Ad group is rejected due to creative because of policing reason - AD_GROUP_LOW_BID - Ad group is less than the minimum allowed bid in its marketplace  - ADVERTISER_STATUS_ENABLED - Advertiser\'s status is enabled - ADVERTISER_POLICING_PENDING_REVIEW - Avertiser is pending review because of policing reason - ADVERTISER_POLICING_SUSPENDED - Advertiser\'s status is suspended because of policing reason - ADVERTISER_PAUSED - Advertiser\'s status is paused - ADVERTISER_ARCHIVED - Advertiser\'s status is archived - ADVERTISER_PAYMENT_FAILURE - Advertiser\'s internal status is suspended - ADVERTISER_ACCOUNT_OUT_OF_BUDGET - Advertiser is out of budget for all Sponsored Ads campaigns - ADVERTISER_OUT_OF_PREPAY_BALANCE - Advertiser is out of prepay balance for all Sponsored Ads campaigns - ADVERTISER_EXCEED_SPENDS_LIMIT - Advertiser spends over the daily limit  - CAMPAIGN_STATUS_ENABLED - Campaign\'s (parent) status is enabled. - CAMPAIGN_PAUSED - Campaign\'s (parent) status is paused. - CAMPAIGN_ARCHIVED - Campaign\'s (parent) status is archived. - CAMPAIGN_INCOMPLETE - Campaign (parent) does not contain any ads or targeting clauses. - CAMPAIGN_OUT_OF_BUDGET - Campaign (parent) is out of budget.  - PORTFOLIO_STATUS_ENABLED - Portfolio\'s (parent) status is enabled - PORTFOLIO_PAUSED - Portfolio\'s (parent) status is paused - PORTFOLIO_ARCHIVED - Portfolio\'s (parent) status is archived - PORTFOLIO_OUT_OF_BUDGET - Portfolio (parent) is out of budget - PORTFOLIO_PENDING_START_DATE - Portfolio\'s (parent) start date is in the future - PORTFOLIO_ENDED - Portfolio\'s (parent) end date is in the past.  - INELIGIBLE - Ad group is ineligible. - ELIGIBLE - Ad group is eligible. - ENDED - Campaign\'s (parent) end date is in the past. - PENDING_REVIEW - Campaign (parent) is pending review. - PENDING_START_DATE - Campaign\'s (parent) start date is in the future. - REJECTED - Campaign (parent) is rejected by moderation process. - UNKNOWN - Serving status is unknown. Please contact us for support.
 * @export
 * @enum {string}
 */

export enum AdGroupServingStatus {
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    AdvertiserStatusEnabled = 'ADVERTISER_STATUS_ENABLED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AdvertiserAccountOutOfBudget = 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET',
    AdvertiserOutOfPrepayBalance = 'ADVERTISER_OUT_OF_PREPAY_BALANCE',
    AdvertiserExceedSpendsLimit = 'ADVERTISER_EXCEED_SPENDS_LIMIT',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    Ineligible = 'INELIGIBLE',
    Eligible = 'ELIGIBLE',
    Ended = 'ENDED',
    PendingReview = 'PENDING_REVIEW',
    PendingStartDate = 'PENDING_START_DATE',
    Rejected = 'REJECTED',
    Unknown = 'UNKNOWN'
}

/**
 * 
 * @export
 * @interface AdGroupSuccessResponseItem
 */
export interface AdGroupSuccessResponseItem {
    /**
     * 
     * @type {AdGroup}
     * @memberof AdGroupSuccessResponseItem
     */
    adGroup?: AdGroup;
    /**
     * the index of the adGroup in the array from the request body.
     * @type {number}
     * @memberof AdGroupSuccessResponseItem
     */
    index: number;
    /**
     * the adGroup ID.
     * @type {string}
     * @memberof AdGroupSuccessResponseItem
     */
    adGroupId?: string;
}
/**
 * 
 * @export
 * @interface AdMutationError
 */
export interface AdMutationError {
    /**
     * The type of the error.
     * @type {string}
     * @memberof AdMutationError
     */
    errorType: string;
    /**
     * 
     * @type {AdMutationErrorSelector}
     * @memberof AdMutationError
     */
    errorValue: AdMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface AdMutationErrorSelector
 */
export interface AdMutationErrorSelector {
    /**
     * 
     * @type {RangeError}
     * @memberof AdMutationErrorSelector
     */
    rangeError?: RangeError;
    /**
     * 
     * @type {OtherError}
     * @memberof AdMutationErrorSelector
     */
    otherError?: OtherError;
}
/**
 * The ad serving status determined by system. - AD_STATUS_LIVE - Ad\'s status is enabled. - AD_POLICING_PENDING_REVIEW - Ad is pending review because of policing reason. - AD_POLICING_SUSPENDED - Ad is suspended review because of policing reason. - AD_PAUSED - Ad\'s status is paused. - AD_ARCHIVED - Ad\'s status is archived.  - AD_GROUP_STATUS_ENABLED - Ad group\'s (parent) status is enabled. - AD_GROUP_PAUSED - Ad group\'s (parent) status is paused. - AD_GROUP_ARCHIVED - Ad group\'s (parent) status is archived. - AD_GROUP_INCOMPLETE - Ad group (parent) does not contain any ads or targeting clauses. - AD_GROUP_POLICING_PENDING_REVIEW - Ad group is pending review because of policing reason - AD_GROUP_POLICING_CREATIVE_REJECTED - Ad group is rejected due to creative because of policing reason - AD_GROUP_LOW_BID - Ad group is less than the minimum allowed bid in its marketplace  - ADVERTISER_STATUS_ENABLED - Advertiser\'s status is enabled - ADVERTISER_POLICING_PENDING_REVIEW - Avertiser is pending review because of policing reason - ADVERTISER_POLICING_SUSPENDED - Advertiser\'s status is suspended because of policing reason - ADVERTISER_PAUSED - Advertiser\'s status is paused - ADVERTISER_ARCHIVED - Advertiser\'s status is archived - ADVERTISER_PAYMENT_FAILURE - Advertiser\'s internal status is suspended - ADVERTISER_ACCOUNT_OUT_OF_BUDGET - Advertiser is out of budget for all Sponsored Ads campaigns - ADVERTISER_OUT_OF_PREPAY_BALANCE - Advertiser is out of prepay balance for all Sponsored Ads campaigns - ADVERTISER_EXCEED_SPENDS_LIMIT - Advertiser spends over the daily limit  - CAMPAIGN_STATUS_ENABLED - Campaign\'s (parent) status is enabled. - CAMPAIGN_PAUSED - Campaign\'s (parent) status is paused. - CAMPAIGN_ARCHIVED - Campaign\'s (parent) status is archived. - CAMPAIGN_INCOMPLETE - Campaign (parent) does not contain any ads or targeting clauses. - CAMPAIGN_OUT_OF_BUDGET - Campaign (parent) is out of budget.  - PORTFOLIO_STATUS_ENABLED - Portfolio\'s (parent) status is enabled - PORTFOLIO_PAUSED - Portfolio\'s (parent) status is paused - PORTFOLIO_ARCHIVED - Portfolio\'s (parent) status is archived - PORTFOLIO_OUT_OF_BUDGET - Portfolio (parent) is out of budget - PORTFOLIO_PENDING_START_DATE - Portfolio\'s (parent) start date is in the future - PORTFOLIO_ENDED - Portfolio\'s (parent) end date is in the past.  - INELIGIBLE - Ad is ineligible. - ELIGIBLE  - Ad is eligible. - ENDED - Campaign\'s (parent) end date is in the past. - PENDING_REVIEW - Campaign (parent) is pending review. - PENDING_START_DATE - Campaign\'s (parent) start date is in the future. - REJECTED - Campaign (parent) is rejected by moderation process. - UNKNOWN - Serving status is unknown. Please contact us for support.
 * @export
 * @enum {string}
 */

export enum AdServingStatus {
    AdStatusLive = 'AD_STATUS_LIVE',
    AdPolicingPendingReview = 'AD_POLICING_PENDING_REVIEW',
    AdPolicingSuspended = 'AD_POLICING_SUSPENDED',
    AdPaused = 'AD_PAUSED',
    AdArchived = 'AD_ARCHIVED',
    AdGroupStatusEnabled = 'AD_GROUP_STATUS_ENABLED',
    AdGroupPaused = 'AD_GROUP_PAUSED',
    AdGroupArchived = 'AD_GROUP_ARCHIVED',
    AdGroupIncomplete = 'AD_GROUP_INCOMPLETE',
    AdGroupPolicingPendingReview = 'AD_GROUP_POLICING_PENDING_REVIEW',
    AdGroupPolicingCreativeRejected = 'AD_GROUP_POLICING_CREATIVE_REJECTED',
    AdGroupLowBid = 'AD_GROUP_LOW_BID',
    AdvertiserStatusEnabled = 'ADVERTISER_STATUS_ENABLED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AdvertiserAccountOutOfBudget = 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET',
    AdvertiserOutOfPrepayBalance = 'ADVERTISER_OUT_OF_PREPAY_BALANCE',
    AdvertiserExceedSpendsLimit = 'ADVERTISER_EXCEED_SPENDS_LIMIT',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    Ineligible = 'INELIGIBLE',
    Eligible = 'ELIGIBLE',
    Ended = 'ENDED',
    PendingReview = 'PENDING_REVIEW',
    PendingStartDate = 'PENDING_START_DATE',
    Rejected = 'REJECTED',
    Unknown = 'UNKNOWN'
}

/**
 * 
 * @export
 * @interface AdSuccessResponseItem
 */
export interface AdSuccessResponseItem {
    /**
     * the Ad ID.
     * @type {string}
     * @memberof AdSuccessResponseItem
     */
    adId?: string;
    /**
     * 
     * @type {MultiAdGroupAd}
     * @memberof AdSuccessResponseItem
     */
    ad?: MultiAdGroupAd;
    /**
     * The index in the original list from the request.
     * @type {number}
     * @memberof AdSuccessResponseItem
     */
    index: number;
}
/**
 * Asin component which needs to be pre moderated.
 * @export
 * @interface AsinComponent
 */
export interface AsinComponent {
    /**
     * Type of the asin component.
     * @type {string}
     * @memberof AsinComponent
     */
    componentType: AsinComponentComponentTypeEnum;
    /**
     * Asin id to be pre moderated.
     * @type {string}
     * @memberof AsinComponent
     */
    asin: string;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof AsinComponent
     */
    id: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinComponentComponentTypeEnum {
    LandingAsin = 'LANDING_ASIN',
    ProductAsin = 'PRODUCT_ASIN'
}

/**
 * Pre-moderation result for an Asin component
 * @export
 * @interface AsinComponentResponse
 */
export interface AsinComponentResponse {
    /**
     * The pre-moderation status of the component.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    preModerationStatus?: AsinComponentResponsePreModerationStatusEnum;
    /**
     * Type of Asin component.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    componentType?: AsinComponentResponseComponentTypeEnum;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<AsinPolicyViolation>}
     * @memberof AsinComponentResponse
     */
    policyViolations?: Array<AsinPolicyViolation>;
    /**
     * Pre-moderated Asin Id.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    asin?: string;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof AsinComponentResponse
     */
    id?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum AsinComponentResponseComponentTypeEnum {
    LandingAsin = 'LANDING_ASIN',
    ProductAsin = 'PRODUCT_ASIN'
}

/**
 * 
 * @export
 * @interface AsinPolicyViolation
 */
export interface AsinPolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    policyDescription?: string;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    type?: AsinPolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof AsinPolicyViolation
     */
    policyLinkUrl?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum AsinPolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * Asset cropping attributes
 * @export
 * @interface AssetCrop
 */
export interface AssetCrop {
    /**
     * The highest pixel from which to begin cropping
     * @type {number}
     * @memberof AssetCrop
     */
    top?: number;
    /**
     * The leftmost pixel from which to begin cropping
     * @type {number}
     * @memberof AssetCrop
     */
    left?: number;
    /**
     * The number of pixels to crop rightwards from the value specified as left
     * @type {number}
     * @memberof AssetCrop
     */
    width?: number;
    /**
     * The number of pixels to crop down from the value specified as top
     * @type {number}
     * @memberof AssetCrop
     */
    height?: number;
}
/**
 * Asset subtype from Asset Library which you are looking to get recommendations for. Asset Library documentation can be found here: https://advertising.amazon.com/API/docs/en-us/creative-asset-library
 * @export
 * @enum {string}
 */

export enum AssetSubType {
    CustomImage = 'CUSTOM_IMAGE',
    Logo = 'LOGO',
    ProductImage = 'PRODUCT_IMAGE',
    AuthorImage = 'AUTHOR_IMAGE'
}

/**
 * 
 * @export
 * @interface AssociatedBudgetRuleResponse
 */
export interface AssociatedBudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    details?: string;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof AssociatedBudgetRuleResponse
     */
    ruleId?: string;
}
/**
 * 
 * @export
 * @interface AssociatedCampaign
 */
export interface AssociatedCampaign {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignId: string;
    /**
     * The budget rule evaluation status for this campaign. Read-only.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    ruleStatus: string;
    /**
     * The campaign name.
     * @type {string}
     * @memberof AssociatedCampaign
     */
    campaignName: string;
}
/**
 * 
 * @export
 * @interface BidAdjustmentByPlacement
 */
export interface BidAdjustmentByPlacement {
    /**
     * 
     * @type {number}
     * @memberof BidAdjustmentByPlacement
     */
    percentage?: number;
    /**
     * 
     * @type {Placement}
     * @memberof BidAdjustmentByPlacement
     */
    placement?: Placement;
}
/**
 * 
 * @export
 * @interface BidAdjustmentByShopperSegment
 */
export interface BidAdjustmentByShopperSegment {
    /**
     * 
     * @type {number}
     * @memberof BidAdjustmentByShopperSegment
     */
    percentage?: number;
    /**
     * 
     * @type {ShopperSegment}
     * @memberof BidAdjustmentByShopperSegment
     */
    shopperSegment?: ShopperSegment;
}
/**
 * The bid optimization strategy. - MAXIMIZE_IMMEDIATE_SALES - The default bidding strategy. The campaign is optimized to maximize sale. - MAXIMIZE_NEW_TO_BRAND_CUSTOMERS - The campaign is optimized to acquire more new-to-brand customers.
 * @export
 * @enum {string}
 */

export enum BidOptimizationStrategy {
    ImmediateSales = 'MAXIMIZE_IMMEDIATE_SALES',
    NewToBrandCustomers = 'MAXIMIZE_NEW_TO_BRAND_CUSTOMERS'
}

/**
 * 
 * @export
 * @interface Bidding
 */
export interface Bidding {
    /**
     * Whether to use automatic placement level bid optimization. If set to true, Amazon will automatically set the right placement adjustment and the bidAdjustmentsByPlacement field is ignored. If set to false, the bidAdjustmentsByPlacement field will be used to adjust bid on different placements. If this field is changed from false to true, the bidAdjustmentsByPlacement field will be reset to null.
     * @type {boolean}
     * @memberof Bidding
     */
    bidOptimization?: boolean;
    /**
     * Shopper segment level bid adjustment. When both bidAdjustmentsByPlacement and bidAdjustmentsByShopperSegment are specified, the adjustment will be multiplicative.
     * @type {Array<BidAdjustmentByShopperSegment>}
     * @memberof Bidding
     */
    bidAdjustmentsByShopperSegment?: Array<BidAdjustmentByShopperSegment>;
    /**
     * Placement level bid adjustment. Note that this field can only be set when \'bidOptimization\' is set to false.
     * @type {Array<BidAdjustmentByPlacement>}
     * @memberof Bidding
     */
    bidAdjustmentsByPlacement?: Array<BidAdjustmentByPlacement>;
    /**
     * 
     * @type {BidOptimizationStrategy}
     * @memberof Bidding
     */
    bidOptimizationStrategy?: BidOptimizationStrategy;
}
/**
 * Errors related to bids.
 * @export
 * @interface BiddingError
 */
export interface BiddingError {
    /**
     * Exact error reason.
     * @type {string}
     * @memberof BiddingError
     */
    reason: string;
    /**
     * 
     * @type {ErrorCause}
     * @memberof BiddingError
     */
    cause: ErrorCause;
    /**
     * 
     * @type {string}
     * @memberof BiddingError
     */
    upperLimit?: string;
    /**
     * 
     * @type {string}
     * @memberof BiddingError
     */
    lowerLimit?: string;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof BiddingError
     */
    message: string;
}
/**
 * Errors related to billing.
 * @export
 * @interface BillingError
 */
export interface BillingError {
    /**
     * Exact error reason.
     * @type {string}
     * @memberof BillingError
     */
    reason: string;
    /**
     * 
     * @type {ErrorCause}
     * @memberof BillingError
     */
    cause: ErrorCause;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof BillingError
     */
    message: string;
}
/**
 * Properties associated with Brand Logo.
 * @export
 * @interface BrandLogo
 */
export interface BrandLogo {
    /**
     * 
     * @type {AssetCrop}
     * @memberof BrandLogo
     */
    brandLogoCrop?: AssetCrop;
    /**
     * 
     * @type {string}
     * @memberof BrandLogo
     */
    brandLogoUrl?: string;
    /**
     * The identifier of image/video asset from the store\'s asset library
     * @type {string}
     * @memberof BrandLogo
     */
    brandLogoAssetId?: string;
}
/**
 * The crop to apply to the selected Brand logo. A Brand logo must have minimum dimensions of 400x400. If a brandLogoAssetID is supplied but a crop is not, the crop will be defaulted to the whole image.
 * @export
 * @interface BrandLogoCrop
 */
export interface BrandLogoCrop {
    /**
     * 
     * @type {number}
     * @memberof BrandLogoCrop
     */
    top?: number;
    /**
     * 
     * @type {number}
     * @memberof BrandLogoCrop
     */
    left?: number;
    /**
     * 
     * @type {number}
     * @memberof BrandLogoCrop
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof BrandLogoCrop
     */
    height?: number;
}
/**
 * 
 * @export
 * @interface BrandVideoCreative
 */
export interface BrandVideoCreative {
    /**
     * An array of ASINs associated with the creative.
     * @type {Array<string>}
     * @memberof BrandVideoCreative
     */
    asins: Array<string>;
    /**
     * 
     * @type {AssetCrop}
     * @memberof BrandVideoCreative
     */
    brandLogoCrop?: AssetCrop;
    /**
     * The displayed brand name in the ad headline. Maximum length is 30 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof BrandVideoCreative
     */
    brandName: string;
    /**
     * If set to true and video asset is not in the marketplace\'s default language, Amazon will attempt to translate the video to the marketplace\'s default language. If Amazon is unable to translate it, the ad will be rejected by moderation. We only support translating videos from English to German, French, Italian, and Spanish. See developer notes for more information.
     * @type {boolean}
     * @memberof BrandVideoCreative
     */
    consentToTranslate?: boolean;
    /**
     * The assetIds of the original videos submitted by the advertiser. If \'consentToTranslate\' is set to true and translation is SUCCESSFUL then \'videoAssetIds\' will return translated video assetId whereas `originalVideoAssetIds` will return the original video assetId. In all other cases, `videoAssetIds` will return original video assetId.
     * @type {Array<string>}
     * @memberof BrandVideoCreative
     */
    videoAssetIds: Array<string>;
    /**
     * The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store\'s asset library. Note that for campaigns created in the Amazon Advertising console prior to release of the brand store\'s assets library, responses will not include a value for this field.
     * @type {string}
     * @memberof BrandVideoCreative
     */
    brandLogoAssetId: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof BrandVideoCreative
     */
    headline: string;
}
/**
 * The value by which to update the budget of the budget rule.
 * @export
 * @enum {string}
 */

export enum BudgetChangeType {
    Percent = 'PERCENT'
}

/**
 * 
 * @export
 * @interface BudgetError
 */
export interface BudgetError {
    /**
     * 
     * @type {string}
     * @memberof BudgetError
     */
    reason: string;
    /**
     * 
     * @type {ErrorCause}
     * @memberof BudgetError
     */
    cause: ErrorCause;
    /**
     * 
     * @type {string}
     * @memberof BudgetError
     */
    upperLimit?: string;
    /**
     * 
     * @type {string}
     * @memberof BudgetError
     */
    lowerLimit?: string;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof BudgetError
     */
    message: string;
}
/**
 * 
 * @export
 * @interface BudgetIncreaseBy
 */
export interface BudgetIncreaseBy {
    /**
     * 
     * @type {BudgetChangeType}
     * @memberof BudgetIncreaseBy
     */
    type: BudgetChangeType;
    /**
     * The budget value.
     * @type {number}
     * @memberof BudgetIncreaseBy
     */
    value: number;
}
/**
 * Budget recomendation for campagins.
 * @export
 * @interface BudgetRecommendation
 */
export interface BudgetRecommendation {
    /**
     * The identifier of a campaign.
     * @type {string}
     * @memberof BudgetRecommendation
     */
    campaignId: string;
    /**
     * Recommended budget for the campaign.
     * @type {number}
     * @memberof BudgetRecommendation
     */
    suggestedBudget: number;
    /**
     * Correlate the recommendation to the campaign index in the request. Zero-based.
     * @type {number}
     * @memberof BudgetRecommendation
     */
    index: number;
    /**
     * 
     * @type {SevenDaysMissedOpportunities}
     * @memberof BudgetRecommendation
     */
    sevenDaysMissedOpportunities: SevenDaysMissedOpportunities;
}
/**
 * Error that occurred when generating budget recommendations.
 * @export
 * @interface BudgetRecommendationError
 */
export interface BudgetRecommendationError {
    /**
     * A human-readable description of the enumerated response code in the `code` field.
     * @type {string}
     * @memberof BudgetRecommendationError
     */
    code: string;
    /**
     * The identifier of a campaign.
     * @type {string}
     * @memberof BudgetRecommendationError
     */
    campaignId: string;
    /**
     * Correlate the recommendation to the campaign index in the request. Zero-based.
     * @type {number}
     * @memberof BudgetRecommendationError
     */
    index: number;
    /**
     * An enumerated response code.
     * @type {string}
     * @memberof BudgetRecommendationError
     */
    details: string;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetRuleError
 */
export interface BudgetRuleError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetRuleError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetRuleError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetRuleResponse
 */
export interface BudgetRuleResponse {
    /**
     * An enumerated success or error code for machine use.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    code?: string;
    /**
     * A human-readable description of the error, if unsuccessful
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    details?: string;
    /**
     * The rule identifier.
     * @type {string}
     * @memberof BudgetRuleResponse
     */
    ruleId?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof BudgetRuleResponse
     */
    associatedCampaignIds?: Array<string>;
}
/**
 * For the lifetime budget type, `startDate` and `endDate` must be specified.
 * @export
 * @enum {string}
 */

export enum BudgetType {
    Daily = 'DAILY',
    Lifetime = 'LIFETIME'
}

/**
 * 
 * @export
 * @interface BudgetUsageCampaign
 */
export interface BudgetUsageCampaign {
    /**
     * Budget usage percentage (spend / available budget) for the given budget policy.
     * @type {number}
     * @memberof BudgetUsageCampaign
     */
    budgetUsagePercent?: number;
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsageCampaign
     */
    campaignId?: string;
    /**
     * Last evaluation time for budget usage
     * @type {string}
     * @memberof BudgetUsageCampaign
     */
    usageUpdatedTimestamp?: string;
    /**
     * An index to maintain order of the campaignIds
     * @type {number}
     * @memberof BudgetUsageCampaign
     */
    index?: number;
    /**
     * Budget amount of resource requested
     * @type {number}
     * @memberof BudgetUsageCampaign
     */
    budget?: number;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaignBatchError
 */
export interface BudgetUsageCampaignBatchError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetUsageCampaignBatchError
     */
    code?: string;
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsageCampaignBatchError
     */
    campaignId?: string;
    /**
     * An index to maintain order of the campaignIds
     * @type {number}
     * @memberof BudgetUsageCampaignBatchError
     */
    index?: number;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetUsageCampaignBatchError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaignRequest
 */
export interface BudgetUsageCampaignRequest {
    /**
     * A list of campaign IDs
     * @type {Array<string>}
     * @memberof BudgetUsageCampaignRequest
     */
    campaignIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetUsageCampaignResponse
 */
export interface BudgetUsageCampaignResponse {
    /**
     * List of budget usage percentages that were successfully pulled
     * @type {Array<BudgetUsageCampaign>}
     * @memberof BudgetUsageCampaignResponse
     */
    success?: Array<BudgetUsageCampaign>;
    /**
     * List of budget usage percentages that failed to pull
     * @type {Array<BudgetUsageCampaignBatchError>}
     * @memberof BudgetUsageCampaignResponse
     */
    error?: Array<BudgetUsageCampaignBatchError>;
}
/**
 * The Error Response Object.
 * @export
 * @interface BudgetUsageError
 */
export interface BudgetUsageError {
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetUsageError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetUsageError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolio
 */
export interface BudgetUsagePortfolio {
    /**
     * Budget usage percentage (spend / available budget) for the given budget policy.
     * @type {number}
     * @memberof BudgetUsagePortfolio
     */
    budgetUsagePercent?: number;
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsagePortfolio
     */
    portfolioId?: string;
    /**
     * Last evaluation time for budget usage
     * @type {string}
     * @memberof BudgetUsagePortfolio
     */
    usageUpdatedTimestamp?: string;
    /**
     * An index to maintain order of the portfolioIds
     * @type {number}
     * @memberof BudgetUsagePortfolio
     */
    index?: number;
    /**
     * Budget amount of resource requested
     * @type {number}
     * @memberof BudgetUsagePortfolio
     */
    budget?: number;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolioBatchError
 */
export interface BudgetUsagePortfolioBatchError {
    /**
     * ID of requested resource
     * @type {string}
     * @memberof BudgetUsagePortfolioBatchError
     */
    portfolioId?: string;
    /**
     * An enumerated error code for machine use.
     * @type {string}
     * @memberof BudgetUsagePortfolioBatchError
     */
    code?: string;
    /**
     * An index to maintain order of the portfolioIds
     * @type {number}
     * @memberof BudgetUsagePortfolioBatchError
     */
    index?: number;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof BudgetUsagePortfolioBatchError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolioRequest
 */
export interface BudgetUsagePortfolioRequest {
    /**
     * A list of portfolio IDs.
     * @type {Array<string>}
     * @memberof BudgetUsagePortfolioRequest
     */
    portfolioIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface BudgetUsagePortfolioResponse
 */
export interface BudgetUsagePortfolioResponse {
    /**
     * List of budget usage percentages that were successfully pulled
     * @type {Array<BudgetUsagePortfolio>}
     * @memberof BudgetUsagePortfolioResponse
     */
    success?: Array<BudgetUsagePortfolio>;
    /**
     * List of budget usage percentages that failed to pull
     * @type {Array<BudgetUsagePortfolioBatchError>}
     * @memberof BudgetUsagePortfolioResponse
     */
    error?: Array<BudgetUsagePortfolioBatchError>;
}
/**
 * 
 * @export
 * @interface BulkAdGroupOperationResponse
 */
export interface BulkAdGroupOperationResponse {
    /**
     * 
     * @type {Array<AdGroupSuccessResponseItem>}
     * @memberof BulkAdGroupOperationResponse
     */
    success?: Array<AdGroupSuccessResponseItem>;
    /**
     * 
     * @type {Array<AdGroupFailureResponseItem>}
     * @memberof BulkAdGroupOperationResponse
     */
    error?: Array<AdGroupFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface BulkAdOperationResponse
 */
export interface BulkAdOperationResponse {
    /**
     * 
     * @type {Array<AdSuccessResponseItem>}
     * @memberof BulkAdOperationResponse
     */
    success?: Array<AdSuccessResponseItem>;
    /**
     * 
     * @type {Array<AdFailureResponseItem>}
     * @memberof BulkAdOperationResponse
     */
    error?: Array<AdFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface BulkCampaignOperationResponse
 */
export interface BulkCampaignOperationResponse {
    /**
     * 
     * @type {Array<CampaignMutationSuccessResponseItem>}
     * @memberof BulkCampaignOperationResponse
     */
    success?: Array<CampaignMutationSuccessResponseItem>;
    /**
     * 
     * @type {Array<CampaignMutationFailureResponseItem>}
     * @memberof BulkCampaignOperationResponse
     */
    error?: Array<CampaignMutationFailureResponseItem>;
}
/**
 * 
 * @export
 * @interface Campaign
 */
export interface Campaign {
    /**
     * 
     * @type {BudgetType}
     * @memberof Campaign
     */
    budgetType: BudgetType;
    /**
     * 
     * @type {RuleBasedBudget}
     * @memberof Campaign
     */
    ruleBasedBudget?: RuleBasedBudget;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    brandEntityId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Campaign
     */
    isMultiAdGroupsEnabled?: boolean;
    /**
     * 
     * @type {Bidding}
     * @memberof Campaign
     */
    bidding?: Bidding;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof Campaign
     */
    endDate?: string;
    /**
     * Entity object identifier.
     * @type {string}
     * @memberof Campaign
     */
    campaignId: string;
    /**
     * 
     * @type {ProductLocation}
     * @memberof Campaign
     */
    productLocation?: ProductLocation;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof Campaign
     */
    tags?: { [key: string]: string; };
    /**
     * The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof Campaign
     */
    portfolioId?: string;
    /**
     * This parameter is a PREVIEW ONLY and cannot be used as part of a request. The costType can be set to determines how the campaign will bid and charge. To view the bid maximums and minimums by geography and costType, see https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace - CPC [Default] - Cost per click. The performance of this campaign is measured by the clicks triggered by the ad. - VCPM - Cost per 1000 viewable impressions. The performance of this campaign is measured by the viewable impressions triggered by the ad.
     * @type {string}
     * @memberof Campaign
     */
    costType?: string;
    /**
     * This parameter is a PREVIEW ONLY and cannot be used as part of a request. The smartDefault specifies a list of the smart default options for the campaign.  `smartDefault` is optional for create campaign requests. `smartDefault` are applicable to all applicable child entities of the campaign and are not editable once the campaign is created. When using [\"TARGETING\"], targets will be automatically added based on the outcome selected.  When [\"MANUAL\"] is selected, you will still be required to manually add targets.  If you don\'t specify `smartDefault`, default value will be applied based on `outcome` . If campaign\'s `outcome` is selected, `smartDefault` will be set to [\"TARGETING\"].  Otherwise, a campaign\'s `smartDefault` will be set to [\"MANUAL\"].  Each element in smartDefault can be set to determines which default strategy to be used - MANUAL - Manual settings, no smart default be applied to the campaign, if MANUAL is added in the list, no other items are allowed in the list (the list must contains only one item) - TARGETING - Smart Default Targeting creation, will automatically creating targetings when create ad group  Example: [\"TARGETING\"]
     * @type {Array<string>}
     * @memberof Campaign
     */
    smartDefault?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Campaign
     */
    name: string;
    /**
     * 
     * @type {EntityState}
     * @memberof Campaign
     */
    state: EntityState;
    /**
     * The format of the date is YYYY-MM-DD.
     * @type {string}
     * @memberof Campaign
     */
    startDate?: string;
    /**
     * The name of the campaign. The type of budget. This parameter is a PREVIEW ONLY and cannot be used as part of a request. Outcome will allow you to set outcome type to help drive your campaign performance. If no outcome is selected then it will default to PAGE_VISIT. The outcome type of the campaign. - BRAND_IMPRESSION_SHARE - This outcome will allow you grown your brand impression share on top of search placements - PAGE_VISIT [DEFAULT] - This outcome drives traffic to your landing and detail pages through all placements.
     * @type {string}
     * @memberof Campaign
     */
    outcome?: string;
    /**
     * 
     * @type {number}
     * @memberof Campaign
     */
    budget: number;
    /**
     * 
     * @type {CampaignExtendedData}
     * @memberof Campaign
     */
    extendedData?: CampaignExtendedData;
}
/**
 * CampaignExtendedData can only be retrieved via the list API. It won\'t be available in the response during update/create.
 * @export
 * @interface CampaignExtendedData
 */
export interface CampaignExtendedData {
    /**
     * 
     * @type {CampaignServingStatus}
     * @memberof CampaignExtendedData
     */
    servingStatus?: CampaignServingStatus;
    /**
     * Date of last update in epoch time.
     * @type {number}
     * @memberof CampaignExtendedData
     */
    lastUpdateDate?: number;
    /**
     * The serving status reasons of the Campaign.
     * @type {Array<string>}
     * @memberof CampaignExtendedData
     */
    servingStatusDetails?: Array<string>;
    /**
     * Creation date in epoch time.
     * @type {number}
     * @memberof CampaignExtendedData
     */
    creationDate?: number;
}
/**
 * 
 * @export
 * @interface CampaignMutationError
 */
export interface CampaignMutationError {
    /**
     * The type of the error.
     * @type {string}
     * @memberof CampaignMutationError
     */
    errorType: string;
    /**
     * 
     * @type {CampaignMutationErrorSelector}
     * @memberof CampaignMutationError
     */
    errorValue: CampaignMutationErrorSelector;
}
/**
 * 
 * @export
 * @interface CampaignMutationErrorSelector
 */
export interface CampaignMutationErrorSelector {
    /**
     * 
     * @type {DateError}
     * @memberof CampaignMutationErrorSelector
     */
    dateError?: DateError;
    /**
     * 
     * @type {BiddingError}
     * @memberof CampaignMutationErrorSelector
     */
    biddingError?: BiddingError;
    /**
     * 
     * @type {BudgetError}
     * @memberof CampaignMutationErrorSelector
     */
    budgetError?: BudgetError;
    /**
     * 
     * @type {BillingError}
     * @memberof CampaignMutationErrorSelector
     */
    billingError?: BillingError;
    /**
     * 
     * @type {RangeError}
     * @memberof CampaignMutationErrorSelector
     */
    rangeError?: RangeError;
    /**
     * 
     * @type {OtherError}
     * @memberof CampaignMutationErrorSelector
     */
    otherError?: OtherError;
}
/**
 * 
 * @export
 * @interface CampaignMutationFailureResponseItem
 */
export interface CampaignMutationFailureResponseItem {
    /**
     * the index of the campaign in the array from the request body.
     * @type {number}
     * @memberof CampaignMutationFailureResponseItem
     */
    index: number;
    /**
     * A list of validation errors.
     * @type {Array<CampaignMutationError>}
     * @memberof CampaignMutationFailureResponseItem
     */
    errors?: Array<CampaignMutationError>;
}
/**
 * 
 * @export
 * @interface CampaignMutationSuccessResponseItem
 */
export interface CampaignMutationSuccessResponseItem {
    /**
     * The campaign ID.
     * @type {string}
     * @memberof CampaignMutationSuccessResponseItem
     */
    campaignId?: string;
    /**
     * The index of the campaign in the array from the request body.
     * @type {number}
     * @memberof CampaignMutationSuccessResponseItem
     */
    index: number;
    /**
     * 
     * @type {Campaign}
     * @memberof CampaignMutationSuccessResponseItem
     */
    campaign?: Campaign;
}
/**
 * `Notice: the servingStatus enums have not been finalized yet.` The campaign serving status determined by system. - ADVERTISER_STATUS_ENABLED - Advertiser\'s status is enabled - ADVERTISER_POLICING_PENDING_REVIEW - Avertiser is pending review because of policing reason - ADVERTISER_POLICING_SUSPENDED - Advertiser\'s status is suspended because of policing reason - ADVERTISER_PAUSED - Advertiser\'s status is paused - ADVERTISER_ARCHIVED - Advertiser\'s status is archived - ADVERTISER_PAYMENT_FAILURE - Advertiser\'s internal status is suspended - ADVERTISER_ACCOUNT_OUT_OF_BUDGET - Advertiser is out of budget for all Sponsored Ads campaigns - ADVERTISER_OUT_OF_PREPAY_BALANCE - Advertiser is out of prepay balance for all Sponsored Ads campaigns - ADVERTISER_EXCEED_SPENDS_LIMIT - Advertiser spends over the daily limit  - CAMPAIGN_STATUS_ENABLED - Campaign\'s status is enabled. - CAMPAIGN_PAUSED - Campaign\'s status is paused. - CAMPAIGN_ARCHIVED - Campaign\'s status is archived. - CAMPAIGN_INCOMPLETE - Campaign does not contain any ads or targeting clauses. - CAMPAIGN_OUT_OF_BUDGET - Campaign is out of budget.  - PORTFOLIO_STATUS_ENABLED - Portfolio\'s status is enabled - PORTFOLIO_PAUSED - Portfolio\'s status is paused - PORTFOLIO_ARCHIVED - Portfolio\'s status is archived - PORTFOLIO_OUT_OF_BUDGET - Portfolio is out of budget - PORTFOLIO_PENDING_START_DATE - Portfolio\'s start date is in the future - PORTFOLIO_ENDED - Portfolio\'s end date is in the past.  - INELIGIBLE - Ad Offer is ineligible - ELIGIBLE - Ad Offer is eligible - ENDED - Campaign\'s end date is in the past. - PENDING_REVIEW - Campaign is pending review. - PENDING_START_DATE - Campaign\'s start date is in the future. - REJECTED - Campaign is rejected by moderation process. - UNKNOWN - Serving status is unknown. Please contact us for support.
 * @export
 * @enum {string}
 */

export enum CampaignServingStatus {
    AdvertiserStatusEnabled = 'ADVERTISER_STATUS_ENABLED',
    AdvertiserPolicingPendingReview = 'ADVERTISER_POLICING_PENDING_REVIEW',
    AdvertiserPolicingSuspended = 'ADVERTISER_POLICING_SUSPENDED',
    AdvertiserPaused = 'ADVERTISER_PAUSED',
    AdvertiserArchived = 'ADVERTISER_ARCHIVED',
    AdvertiserPaymentFailure = 'ADVERTISER_PAYMENT_FAILURE',
    AdvertiserAccountOutOfBudget = 'ADVERTISER_ACCOUNT_OUT_OF_BUDGET',
    AdvertiserOutOfPrepayBalance = 'ADVERTISER_OUT_OF_PREPAY_BALANCE',
    AdvertiserExceedSpendsLimit = 'ADVERTISER_EXCEED_SPENDS_LIMIT',
    CampaignStatusEnabled = 'CAMPAIGN_STATUS_ENABLED',
    CampaignPaused = 'CAMPAIGN_PAUSED',
    CampaignArchived = 'CAMPAIGN_ARCHIVED',
    CampaignIncomplete = 'CAMPAIGN_INCOMPLETE',
    CampaignOutOfBudget = 'CAMPAIGN_OUT_OF_BUDGET',
    PortfolioStatusEnabled = 'PORTFOLIO_STATUS_ENABLED',
    PortfolioPaused = 'PORTFOLIO_PAUSED',
    PortfolioArchived = 'PORTFOLIO_ARCHIVED',
    PortfolioOutOfBudget = 'PORTFOLIO_OUT_OF_BUDGET',
    PortfolioPendingStartDate = 'PORTFOLIO_PENDING_START_DATE',
    PortfolioEnded = 'PORTFOLIO_ENDED',
    Ineligible = 'INELIGIBLE',
    Eligible = 'ELIGIBLE',
    Ended = 'ENDED',
    PendingReview = 'PENDING_REVIEW',
    PendingStartDate = 'PENDING_START_DATE',
    Rejected = 'REJECTED',
    Unknown = 'UNKNOWN'
}

/**
 * The comparison operator.
 * @export
 * @enum {string}
 */

export enum ComparisonOperator {
    GreaterThan = 'GREATER_THAN',
    LessThan = 'LESS_THAN',
    LessThanOrEqualTo = 'LESS_THAN_OR_EQUAL_TO',
    GreaterThanOrEqualTo = 'GREATER_THAN_OR_EQUAL_TO'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum ConflictStateErrorCode {
    ConflictState = 'CONFLICT_STATE'
}

/**
 * 
 * @export
 * @interface ConflictStateExceptionResponseContent
 */
export interface ConflictStateExceptionResponseContent {
    /**
     * 
     * @type {ConflictStateErrorCode}
     * @memberof ConflictStateExceptionResponseContent
     */
    code: ConflictStateErrorCode;
    /**
     * 
     * @type {string}
     * @memberof ConflictStateExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface CreateAdGroup
 */
export interface CreateAdGroup {
    /**
     * The identifier of the campaign to which the keyword is associated.
     * @type {string}
     * @memberof CreateAdGroup
     */
    campaignId: string;
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof CreateAdGroup
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateAdGroup
     */
    state: CreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesRequest
 */
export interface CreateAssociatedBudgetRulesRequest {
    /**
     * A list of budget rule identifiers.
     * @type {Array<string>}
     * @memberof CreateAssociatedBudgetRulesRequest
     */
    budgetRuleIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateAssociatedBudgetRulesResponse
 */
export interface CreateAssociatedBudgetRulesResponse {
    /**
     * 
     * @type {Array<AssociatedBudgetRuleResponse>}
     * @memberof CreateAssociatedBudgetRulesResponse
     */
    responses?: Array<AssociatedBudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateBrandVideoAd
 */
export interface CreateBrandVideoAd {
    /**
     * 
     * @type {LandingPage}
     * @memberof CreateBrandVideoAd
     */
    landingPage: LandingPage;
    /**
     * The name of the ad.
     * @type {string}
     * @memberof CreateBrandVideoAd
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateBrandVideoAd
     */
    state: CreateOrUpdateEntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof CreateBrandVideoAd
     */
    adGroupId: string;
    /**
     * 
     * @type {CreateBrandVideoCreative}
     * @memberof CreateBrandVideoAd
     */
    creative: CreateBrandVideoCreative;
}
/**
 * 
 * @export
 * @interface CreateBrandVideoCreative
 */
export interface CreateBrandVideoCreative {
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateBrandVideoCreative
     */
    asins?: Array<string>;
    /**
     * 
     * @type {BrandLogoCrop}
     * @memberof CreateBrandVideoCreative
     */
    brandLogoCrop?: BrandLogoCrop;
    /**
     * 
     * @type {string}
     * @memberof CreateBrandVideoCreative
     */
    brandName?: string;
    /**
     * If set to true and video asset is not in the marketplace\'s default language, Amazon will attempt to translate the video to the marketplace\'s default language. If Amazon is unable to translate it, the ad will be rejected by moderation. We only support translating videos from English to German, French, Italian, and Spanish. See developer notes for more information.
     * @type {boolean}
     * @memberof CreateBrandVideoCreative
     */
    consentToTranslate?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateBrandVideoCreative
     */
    videoAssetIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateBrandVideoCreative
     */
    brandLogoAssetID?: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.
     * @type {string}
     * @memberof CreateBrandVideoCreative
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface CreateBrandVideoCreativeRequestContent
 */
export interface CreateBrandVideoCreativeRequestContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateBrandVideoCreativeRequestContent
     */
    adId: string;
    /**
     * 
     * @type {BrandVideoCreative}
     * @memberof CreateBrandVideoCreativeRequestContent
     */
    creative: BrandVideoCreative;
}
/**
 * Create creative response
 * @export
 * @interface CreateBrandVideoCreativeResponseContent
 */
export interface CreateBrandVideoCreativeResponseContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateBrandVideoCreativeResponseContent
     */
    adId?: string;
    /**
     * The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.
     * @type {string}
     * @memberof CreateBrandVideoCreativeResponseContent
     */
    creativeVersion?: string;
}
/**
 * 
 * @export
 * @interface CreateBudgetRulesResponse
 */
export interface CreateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof CreateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface CreateCampaign
 */
export interface CreateCampaign {
    /**
     * 
     * @type {BudgetType}
     * @memberof CreateCampaign
     */
    budgetType: BudgetType;
    /**
     * 
     * @type {string}
     * @memberof CreateCampaign
     */
    brandEntityId?: string;
    /**
     * 
     * @type {Bidding}
     * @memberof CreateCampaign
     */
    bidding?: Bidding;
    /**
     * endDate is optional. If endDate is specified, startDate must be specified as well.
     * @type {string}
     * @memberof CreateCampaign
     */
    endDate?: string;
    /**
     * 
     * @type {ProductLocation}
     * @memberof CreateCampaign
     */
    productLocation?: ProductLocation;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof CreateCampaign
     */
    tags?: { [key: string]: string; };
    /**
     * The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof CreateCampaign
     */
    portfolioId?: string;
    /**
     * This parameter is a PREVIEW ONLY and cannot be used as part of a request. The costType can be set to determines how the campaign will bid and charge. To view the bid maximums and minimums by geography and costType, see https://advertising.amazon.com/API/docs/en-us/concepts/limits#bid-constraints-by-marketplace - CPC [Default] - Cost per click. The performance of this campaign is measured by the clicks triggered by the ad. - VCPM - Cost per 1000 viewable impressions. The performance of this campaign is measured by the viewable impressions triggered by the ad.
     * @type {string}
     * @memberof CreateCampaign
     */
    costType?: string;
    /**
     * This parameter is a PREVIEW ONLY and cannot be used as part of a request. The smartDefault specifies a list of the smart default options for the campaign.  `smartDefault` is optional for create campaign requests. `smartDefault` are applicable to all applicable child entities of the campaign and are not editable once the campaign is created. When using [\"TARGETING\"], targets will be automatically added based on the outcome selected.  When [\"MANUAL\"] is selected, you will still be required to manually add targets.  If you don\'t specify `smartDefault`, default value will be applied based on `outcome` . If campaign\'s `outcome` is selected, `smartDefault` will be set to [\"TARGETING\"].  Otherwise, a campaign\'s `smartDefault` will be set to [\"MANUAL\"].  Each element in smartDefault can be set to determines which default strategy to be used - MANUAL - Manual settings, no smart default be applied to the campaign, if MANUAL is added in the list, no other items are allowed in the list (the list must contains only one item) - TARGETING - Smart Default Targeting creation, will automatically creating targetings when create ad group  Example: [\"TARGETING\"]
     * @type {Array<string>}
     * @memberof CreateCampaign
     */
    smartDefault?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateCampaign
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateCampaign
     */
    state: CreateOrUpdateEntityState;
    /**
     * The name of the campaign. The budget of the campaign. The type of budget. startDate is optional. If startDate is not specified, current date will be used.
     * @type {string}
     * @memberof CreateCampaign
     */
    startDate?: string;
    /**
     * This parameter is a PREVIEW ONLY and cannot be used as part of a request. Outcome will allow you to set outcome type to help drive your campaign performance. If no outcome is selected then it will default to PAGE_VISIT. The outcome type of the campaign. - BRAND_IMPRESSION_SHARE - This outcome will allow you grown your brand impression share on top of search placement - PAGE_VISIT [DEFAULT] - This outcome drives traffic to your landing and detail pages through all placements.
     * @type {string}
     * @memberof CreateCampaign
     */
    outcome?: string;
    /**
     * 
     * @type {number}
     * @memberof CreateCampaign
     */
    budget: number;
}
/**
 * 
 * @export
 * @interface CreateExtendedProductCollectionAd
 */
export interface CreateExtendedProductCollectionAd {
    /**
     * 
     * @type {LandingPage}
     * @memberof CreateExtendedProductCollectionAd
     */
    landingPage: LandingPage;
    /**
     * The name of the ad.
     * @type {string}
     * @memberof CreateExtendedProductCollectionAd
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateExtendedProductCollectionAd
     */
    state: CreateOrUpdateEntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof CreateExtendedProductCollectionAd
     */
    adGroupId: string;
    /**
     * 
     * @type {CreateExtendedProductCollectionCreative}
     * @memberof CreateExtendedProductCollectionAd
     */
    creative: CreateExtendedProductCollectionCreative;
}
/**
 * 
 * @export
 * @interface CreateExtendedProductCollectionCreative
 */
export interface CreateExtendedProductCollectionCreative {
    /**
     * 
     * @type {BrandLogoCrop}
     * @memberof CreateExtendedProductCollectionCreative
     */
    brandLogoCrop?: BrandLogoCrop;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateExtendedProductCollectionCreative
     */
    asins?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateExtendedProductCollectionCreative
     */
    brandName?: string;
    /**
     * 
     * @type {Array<CustomImage>}
     * @memberof CreateExtendedProductCollectionCreative
     */
    customImages?: Array<CustomImage>;
    /**
     * 
     * @type {string}
     * @memberof CreateExtendedProductCollectionCreative
     */
    brandLogoAssetID?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateExtendedProductCollectionCreative
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface CreateExtendedProductCollectionCreativeRequestContent
 */
export interface CreateExtendedProductCollectionCreativeRequestContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateExtendedProductCollectionCreativeRequestContent
     */
    adId: string;
    /**
     * 
     * @type {ExtendedProductCollectionCreative}
     * @memberof CreateExtendedProductCollectionCreativeRequestContent
     */
    creative: ExtendedProductCollectionCreative;
}
/**
 * Create creative response
 * @export
 * @interface CreateExtendedProductCollectionCreativeResponseContent
 */
export interface CreateExtendedProductCollectionCreativeResponseContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateExtendedProductCollectionCreativeResponseContent
     */
    adId?: string;
    /**
     * The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.
     * @type {string}
     * @memberof CreateExtendedProductCollectionCreativeResponseContent
     */
    creativeVersion?: string;
}
/**
 * Entity state for create or update operation.
 * @export
 * @enum {string}
 */

export enum CreateOrUpdateEntityState {
    Enabled = 'ENABLED',
    Paused = 'PAUSED'
}

/**
 * 
 * @export
 * @interface CreateProductCollectionAd
 */
export interface CreateProductCollectionAd {
    /**
     * 
     * @type {LandingPage}
     * @memberof CreateProductCollectionAd
     */
    landingPage: LandingPage;
    /**
     * The name of the ad.
     * @type {string}
     * @memberof CreateProductCollectionAd
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateProductCollectionAd
     */
    state: CreateOrUpdateEntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof CreateProductCollectionAd
     */
    adGroupId: string;
    /**
     * 
     * @type {CreateProductCollectionCreative}
     * @memberof CreateProductCollectionAd
     */
    creative: CreateProductCollectionCreative;
}
/**
 * 
 * @export
 * @interface CreateProductCollectionCreative
 */
export interface CreateProductCollectionCreative {
    /**
     * 
     * @type {BrandLogoCrop}
     * @memberof CreateProductCollectionCreative
     */
    brandLogoCrop?: BrandLogoCrop;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateProductCollectionCreative
     */
    asins?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreateProductCollectionCreative
     */
    brandName?: string;
    /**
     * 
     * @type {string}
     * @memberof CreateProductCollectionCreative
     */
    customImageAssetId?: string;
    /**
     * 
     * @type {CustomImageCrop}
     * @memberof CreateProductCollectionCreative
     */
    customImageCrop?: CustomImageCrop;
    /**
     * 
     * @type {string}
     * @memberof CreateProductCollectionCreative
     */
    brandLogoAssetID?: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.
     * @type {string}
     * @memberof CreateProductCollectionCreative
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface CreateProductCollectionCreativeRequestContent
 */
export interface CreateProductCollectionCreativeRequestContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateProductCollectionCreativeRequestContent
     */
    adId: string;
    /**
     * 
     * @type {ProductCollectionCreative}
     * @memberof CreateProductCollectionCreativeRequestContent
     */
    creative: ProductCollectionCreative;
}
/**
 * Create creative response
 * @export
 * @interface CreateProductCollectionCreativeResponseContent
 */
export interface CreateProductCollectionCreativeResponseContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateProductCollectionCreativeResponseContent
     */
    adId?: string;
    /**
     * The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.
     * @type {string}
     * @memberof CreateProductCollectionCreativeResponseContent
     */
    creativeVersion?: string;
}
/**
 * 
 * @export
 * @interface CreateSBBudgetRulesRequest
 */
export interface CreateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRuleDetails>}
     * @memberof CreateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSDBudgetRulesRequest
 */
export interface CreateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRuleDetails>}
     * @memberof CreateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSPBudgetRulesRequest
 */
export interface CreateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRuleDetails>}
     * @memberof CreateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRuleDetails>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandStoreSpotlightAdsBetaRequestContent
 */
export interface CreateSponsoredBrandStoreSpotlightAdsBetaRequestContent {
    /**
     * 
     * @type {Array<CreateStoreSpotlightAd>}
     * @memberof CreateSponsoredBrandStoreSpotlightAdsBetaRequestContent
     */
    ads: Array<CreateStoreSpotlightAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandStoreSpotlightAdsBetaResponseContent
 */
export interface CreateSponsoredBrandStoreSpotlightAdsBetaResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandStoreSpotlightAdsBetaResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandStoreSpotlightAdsRequestContent
 */
export interface CreateSponsoredBrandStoreSpotlightAdsRequestContent {
    /**
     * 
     * @type {Array<CreateStoreSpotlightAd>}
     * @memberof CreateSponsoredBrandStoreSpotlightAdsRequestContent
     */
    ads: Array<CreateStoreSpotlightAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandStoreSpotlightAdsResponseContent
 */
export interface CreateSponsoredBrandStoreSpotlightAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandStoreSpotlightAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsAdGroupsBetaRequestContent
 */
export interface CreateSponsoredBrandsAdGroupsBetaRequestContent {
    /**
     * 
     * @type {Array<CreateAdGroup>}
     * @memberof CreateSponsoredBrandsAdGroupsBetaRequestContent
     */
    adGroups: Array<CreateAdGroup>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsAdGroupsBetaResponseContent
 */
export interface CreateSponsoredBrandsAdGroupsBetaResponseContent {
    /**
     * 
     * @type {BulkAdGroupOperationResponse}
     * @memberof CreateSponsoredBrandsAdGroupsBetaResponseContent
     */
    adGroups?: BulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsAdGroupsRequestContent
 */
export interface CreateSponsoredBrandsAdGroupsRequestContent {
    /**
     * 
     * @type {Array<CreateAdGroup>}
     * @memberof CreateSponsoredBrandsAdGroupsRequestContent
     */
    adGroups: Array<CreateAdGroup>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsAdGroupsResponseContent
 */
export interface CreateSponsoredBrandsAdGroupsResponseContent {
    /**
     * 
     * @type {BulkAdGroupOperationResponse}
     * @memberof CreateSponsoredBrandsAdGroupsResponseContent
     */
    adGroups?: BulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsBrandVideoAdsBetaRequestContent
 */
export interface CreateSponsoredBrandsBrandVideoAdsBetaRequestContent {
    /**
     * 
     * @type {Array<CreateBrandVideoAd>}
     * @memberof CreateSponsoredBrandsBrandVideoAdsBetaRequestContent
     */
    ads: Array<CreateBrandVideoAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsBrandVideoAdsBetaResponseContent
 */
export interface CreateSponsoredBrandsBrandVideoAdsBetaResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsBrandVideoAdsBetaResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsBrandVideoAdsRequestContent
 */
export interface CreateSponsoredBrandsBrandVideoAdsRequestContent {
    /**
     * 
     * @type {Array<CreateBrandVideoAd>}
     * @memberof CreateSponsoredBrandsBrandVideoAdsRequestContent
     */
    ads: Array<CreateBrandVideoAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsBrandVideoAdsResponseContent
 */
export interface CreateSponsoredBrandsBrandVideoAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsBrandVideoAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsCampaignsBetaRequestContent
 */
export interface CreateSponsoredBrandsCampaignsBetaRequestContent {
    /**
     * 
     * @type {Array<CreateCampaign>}
     * @memberof CreateSponsoredBrandsCampaignsBetaRequestContent
     */
    campaigns: Array<CreateCampaign>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsCampaignsBetaResponseContent
 */
export interface CreateSponsoredBrandsCampaignsBetaResponseContent {
    /**
     * 
     * @type {BulkCampaignOperationResponse}
     * @memberof CreateSponsoredBrandsCampaignsBetaResponseContent
     */
    campaigns?: BulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsCampaignsRequestContent
 */
export interface CreateSponsoredBrandsCampaignsRequestContent {
    /**
     * 
     * @type {Array<CreateCampaign>}
     * @memberof CreateSponsoredBrandsCampaignsRequestContent
     */
    campaigns: Array<CreateCampaign>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsCampaignsResponseContent
 */
export interface CreateSponsoredBrandsCampaignsResponseContent {
    /**
     * 
     * @type {BulkCampaignOperationResponse}
     * @memberof CreateSponsoredBrandsCampaignsResponseContent
     */
    campaigns?: BulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsExtendedProductCollectionAdsRequestContent
 */
export interface CreateSponsoredBrandsExtendedProductCollectionAdsRequestContent {
    /**
     * 
     * @type {Array<CreateExtendedProductCollectionAd>}
     * @memberof CreateSponsoredBrandsExtendedProductCollectionAdsRequestContent
     */
    ads: Array<CreateExtendedProductCollectionAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsExtendedProductCollectionAdsResponseContent
 */
export interface CreateSponsoredBrandsExtendedProductCollectionAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsExtendedProductCollectionAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsProductCollectionAdsBetaRequestContent
 */
export interface CreateSponsoredBrandsProductCollectionAdsBetaRequestContent {
    /**
     * 
     * @type {Array<CreateProductCollectionAd>}
     * @memberof CreateSponsoredBrandsProductCollectionAdsBetaRequestContent
     */
    ads: Array<CreateProductCollectionAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsProductCollectionAdsBetaResponseContent
 */
export interface CreateSponsoredBrandsProductCollectionAdsBetaResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsProductCollectionAdsBetaResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsProductCollectionAdsRequestContent
 */
export interface CreateSponsoredBrandsProductCollectionAdsRequestContent {
    /**
     * 
     * @type {Array<CreateProductCollectionAd>}
     * @memberof CreateSponsoredBrandsProductCollectionAdsRequestContent
     */
    ads: Array<CreateProductCollectionAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsProductCollectionAdsResponseContent
 */
export interface CreateSponsoredBrandsProductCollectionAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsProductCollectionAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsVideoAdsBetaRequestContent
 */
export interface CreateSponsoredBrandsVideoAdsBetaRequestContent {
    /**
     * 
     * @type {Array<CreateVideoAd>}
     * @memberof CreateSponsoredBrandsVideoAdsBetaRequestContent
     */
    ads: Array<CreateVideoAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsVideoAdsBetaResponseContent
 */
export interface CreateSponsoredBrandsVideoAdsBetaResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsVideoAdsBetaResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsVideoAdsRequestContent
 */
export interface CreateSponsoredBrandsVideoAdsRequestContent {
    /**
     * 
     * @type {Array<CreateVideoAd>}
     * @memberof CreateSponsoredBrandsVideoAdsRequestContent
     */
    ads: Array<CreateVideoAd>;
}
/**
 * 
 * @export
 * @interface CreateSponsoredBrandsVideoAdsResponseContent
 */
export interface CreateSponsoredBrandsVideoAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof CreateSponsoredBrandsVideoAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface CreateStoreSpotlightAd
 */
export interface CreateStoreSpotlightAd {
    /**
     * 
     * @type {LandingPage}
     * @memberof CreateStoreSpotlightAd
     */
    landingPage: LandingPage;
    /**
     * The name of the ad.
     * @type {string}
     * @memberof CreateStoreSpotlightAd
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateStoreSpotlightAd
     */
    state: CreateOrUpdateEntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof CreateStoreSpotlightAd
     */
    adGroupId: string;
    /**
     * 
     * @type {CreateStoreSpotlightCreative}
     * @memberof CreateStoreSpotlightAd
     */
    creative: CreateStoreSpotlightCreative;
}
/**
 * 
 * @export
 * @interface CreateStoreSpotlightCreative
 */
export interface CreateStoreSpotlightCreative {
    /**
     * 
     * @type {BrandLogoCrop}
     * @memberof CreateStoreSpotlightCreative
     */
    brandLogoCrop?: BrandLogoCrop;
    /**
     * 
     * @type {string}
     * @memberof CreateStoreSpotlightCreative
     */
    brandName?: string;
    /**
     * 
     * @type {Array<Subpage>}
     * @memberof CreateStoreSpotlightCreative
     */
    subpages?: Array<Subpage>;
    /**
     * 
     * @type {string}
     * @memberof CreateStoreSpotlightCreative
     */
    brandLogoAssetID?: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.
     * @type {string}
     * @memberof CreateStoreSpotlightCreative
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface CreateStoreSpotlightCreativeRequestContent
 */
export interface CreateStoreSpotlightCreativeRequestContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateStoreSpotlightCreativeRequestContent
     */
    adId: string;
    /**
     * 
     * @type {StoreSpotlightCreative}
     * @memberof CreateStoreSpotlightCreativeRequestContent
     */
    creative: StoreSpotlightCreative;
}
/**
 * Create creative response
 * @export
 * @interface CreateStoreSpotlightCreativeResponseContent
 */
export interface CreateStoreSpotlightCreativeResponseContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateStoreSpotlightCreativeResponseContent
     */
    adId?: string;
    /**
     * The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.
     * @type {string}
     * @memberof CreateStoreSpotlightCreativeResponseContent
     */
    creativeVersion?: string;
}
/**
 * 
 * @export
 * @interface CreateVideoAd
 */
export interface CreateVideoAd {
    /**
     * The name of the ad.
     * @type {string}
     * @memberof CreateVideoAd
     */
    name: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof CreateVideoAd
     */
    state: CreateOrUpdateEntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof CreateVideoAd
     */
    adGroupId: string;
    /**
     * 
     * @type {CreateVideoCreative}
     * @memberof CreateVideoAd
     */
    creative: CreateVideoCreative;
}
/**
 * 
 * @export
 * @interface CreateVideoCreative
 */
export interface CreateVideoCreative {
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateVideoCreative
     */
    asins?: Array<string>;
    /**
     * If set to true and video asset is not in the marketplace\'s default language, Amazon will attempt to translate the video to the marketplace\'s default language. If Amazon is unable to translate it, the ad will be rejected by moderation. We only support translating videos from English to German, French, Italian, and Spanish. See developer notes for more information.
     * @type {boolean}
     * @memberof CreateVideoCreative
     */
    consentToTranslate?: boolean;
    /**
     * In SB API V4, `videoMediaIds` is replaced by `videoAssetIds`. `videoAssetIds` will only allow Asset Library identifiers for ad creation, but responses can include mediaIds for v1 campaigns and API V3 operations. At a future state, existing mediaIds will be added to Asset library for use in SB campaigns.
     * @type {Array<string>}
     * @memberof CreateVideoCreative
     */
    videoAssetIds?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreateVideoCreativeRequestContent
 */
export interface CreateVideoCreativeRequestContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateVideoCreativeRequestContent
     */
    adId: string;
    /**
     * 
     * @type {VideoCreative}
     * @memberof CreateVideoCreativeRequestContent
     */
    creative: VideoCreative;
}
/**
 * Create creative response
 * @export
 * @interface CreateVideoCreativeResponseContent
 */
export interface CreateVideoCreativeResponseContent {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof CreateVideoCreativeResponseContent
     */
    adId?: string;
    /**
     * The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.
     * @type {string}
     * @memberof CreateVideoCreativeResponseContent
     */
    creativeVersion?: string;
}
/**
 * 
 * @export
 * @interface Creative
 */
export interface Creative {
    /**
     * 
     * @type {BrandLogoCrop}
     * @memberof Creative
     */
    brandLogoCrop?: BrandLogoCrop;
    /**
     * 
     * @type {string}
     * @memberof Creative
     */
    brandName?: string;
    /**
     * 
     * @type {string}
     * @memberof Creative
     */
    customImageAssetId?: string;
    /**
     * If set to true and video asset is not in the marketplace\'s default language, Amazon will attempt to translate the video to the marketplace\'s default language. If Amazon is unable to translate it, the ad will be rejected by moderation. We only support translating videos from English to German, French, Italian, and Spanish. See developer notes for more information.
     * @type {boolean}
     * @memberof Creative
     */
    consentToTranslate?: boolean;
    /**
     * 
     * @type {Array<CustomImage>}
     * @memberof Creative
     */
    customImages?: Array<CustomImage>;
    /**
     * 
     * @type {CustomImageCrop}
     * @memberof Creative
     */
    customImageCrop?: CustomImageCrop;
    /**
     * 
     * @type {string}
     * @memberof Creative
     */
    customImageUrl?: string;
    /**
     * 
     * @type {CreativeType}
     * @memberof Creative
     */
    type?: CreativeType;
    /**
     * The assetIds of the original videos submitted by the advertiser. If \'consentToTranslate\' is set to true and translation is SUCCESSFUL then `originalVideoAssetIds` will return the original video assetId whereas `videoAssetIds` will return translated video assetId. In all other cases, \'originalVideoAssetIds\' and `videoAssetIds` both will return original video assetId.
     * @type {Array<string>}
     * @memberof Creative
     */
    originalVideoAssetIds?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof Creative
     */
    asins?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Creative
     */
    brandLogoUrl?: string;
    /**
     * 
     * @type {Array<Subpage>}
     * @memberof Creative
     */
    subpages?: Array<Subpage>;
    /**
     * In SB API V4, `videoMediaIds` is replaced by `videoAssetIds`. `videoAssetIds` will only allow Asset Library identifiers for ad creation, but responses can include mediaIds for v1 campaigns and API V3 operations. At a future state, existing mediaIds will be added to Asset library for use in SB campaigns.
     * @type {Array<string>}
     * @memberof Creative
     */
    videoAssetIds?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof Creative
     */
    brandLogoAssetID?: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters.
     * @type {string}
     * @memberof Creative
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface CreativeImageRecommendationEntry
 */
export interface CreativeImageRecommendationEntry {
    /**
     * Recommendations with higher values are more relevant
     * @type {number}
     * @memberof CreativeImageRecommendationEntry
     */
    score?: number;
    /**
     * The asset size in bytes
     * @type {number}
     * @memberof CreativeImageRecommendationEntry
     */
    sizeInBytes?: number;
    /**
     * The identifier of image/video asset from the store\'s asset library
     * @type {string}
     * @memberof CreativeImageRecommendationEntry
     */
    assetId?: string;
    /**
     * The URL of the asset
     * @type {string}
     * @memberof CreativeImageRecommendationEntry
     */
    imageUrl?: string;
    /**
     * The width of the asset in pixels
     * @type {number}
     * @memberof CreativeImageRecommendationEntry
     */
    width?: number;
    /**
     * The fileName of the asset
     * @type {string}
     * @memberof CreativeImageRecommendationEntry
     */
    name?: string;
    /**
     * 
     * @type {MediaType}
     * @memberof CreativeImageRecommendationEntry
     */
    contentType?: MediaType;
    /**
     * The height of the asset in pixels
     * @type {number}
     * @memberof CreativeImageRecommendationEntry
     */
    height?: number;
}
/**
 * 
 * @export
 * @interface CreativeImageRecommendationRequestContent
 */
export interface CreativeImageRecommendationRequestContent {
    /**
     * ----------------------------------------------- List types ----------------------------------------------- A list of ASINs
     * @type {Array<string>}
     * @memberof CreativeImageRecommendationRequestContent
     */
    asins: Array<string>;
    /**
     * 
     * @type {AssetSubType}
     * @memberof CreativeImageRecommendationRequestContent
     */
    assetSubType?: AssetSubType;
    /**
     * Maximum number of recommendations that API should return. Response will [0, recommendations] recommendations (recommendations are not guaranteed).
     * @type {number}
     * @memberof CreativeImageRecommendationRequestContent
     */
    maxNumRecommendations?: number;
    /**
     * Filter assets by program types. For example, if only [A_PLUS] assets are requested then only assets that were used as A+ content will be recommended. If no program type is provided, recommend assets from all programs
     * @type {Array<ProgramType>}
     * @memberof CreativeImageRecommendationRequestContent
     */
    assetPrograms?: Array<ProgramType>;
    /**
     * (Optional) locale of creative headline and ASIN titles. If locale is not provided, default locale of marketplace is used. Currently, only en_US and en_CA are supported.
     * @type {string}
     * @memberof CreativeImageRecommendationRequestContent
     */
    locale?: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof CreativeImageRecommendationRequestContent
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface CreativeImageRecommendationResponseContent
 */
export interface CreativeImageRecommendationResponseContent {
    /**
     * The total number of results returned by an operation.
     * @type {number}
     * @memberof CreativeImageRecommendationResponseContent
     */
    totalResults?: number;
    /**
     * Recommendations are sorted on relevancy score, i.e. more relevant image has lesser array index value
     * @type {Array<CreativeImageRecommendationEntry>}
     * @memberof CreativeImageRecommendationResponseContent
     */
    recommendations?: Array<CreativeImageRecommendationEntry>;
}
/**
 * Landing page.
 * @export
 * @interface CreativeLandingPage
 */
export interface CreativeLandingPage {
    /**
     * 
     * @type {CreativeLandingPageType}
     * @memberof CreativeLandingPage
     */
    type?: CreativeLandingPageType;
    /**
     * 
     * @type {string}
     * @memberof CreativeLandingPage
     */
    value?: string;
}
/**
 * Landing page type
 * @export
 * @enum {string}
 */

export enum CreativeLandingPageType {
    ProductList = 'PRODUCT_LIST',
    Store = 'STORE',
    DetailPage = 'DETAIL_PAGE',
    CustomUrl = 'CUSTOM_URL',
    AdLandingPreview = 'AD_LANDING_PREVIEW',
    Search = 'SEARCH',
    Browse = 'BROWSE',
    AdvertisingLandingPage = 'ADVERTISING_LANDING_PAGE',
    Unknown = 'UNKNOWN'
}

/**
 * Landing page V2, where type is String with allowed values listed, and url of that type.
 * @export
 * @interface CreativeLandingPageV2
 */
export interface CreativeLandingPageV2 {
    /**
     * Supported types are PRODUCT_LIST, STORE, DETAIL_PAGE, CUSTOM_URL. More could be added in future.
     * @type {string}
     * @memberof CreativeLandingPageV2
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof CreativeLandingPageV2
     */
    url?: string;
}
/**
 * Creative properties
 * @export
 * @interface CreativeProperties
 */
export interface CreativeProperties {
    /**
     * 
     * @type {AssetCrop}
     * @memberof CreativeProperties
     */
    brandLogoCrop?: AssetCrop;
    /**
     * The displayed brand name in the ad headline. Maximum length is 30 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof CreativeProperties
     */
    brandName?: string;
    /**
     * The identifier of image/video asset from the store\'s asset library
     * @type {string}
     * @memberof CreativeProperties
     */
    customImageAssetId?: string;
    /**
     * 
     * @type {CreativeLandingPage}
     * @memberof CreativeProperties
     */
    landingPage?: CreativeLandingPage;
    /**
     * An array of customImages associated with the creative.
     * @type {Array<CustomImage>}
     * @memberof CreativeProperties
     */
    customImages?: Array<CustomImage>;
    /**
     * If set to true and video asset is not in the marketplace\'s default language, Amazon will attempt to translate the video to the marketplace\'s default language. If Amazon is unable to translate it, the ad will be rejected by moderation. We only support translating videos from English to German, French, Italian, and Spanish. See developer notes for more information.
     * @type {boolean}
     * @memberof CreativeProperties
     */
    consentToTranslate?: boolean;
    /**
     * 
     * @type {AssetCrop}
     * @memberof CreativeProperties
     */
    customImageCrop?: AssetCrop;
    /**
     * 
     * @type {string}
     * @memberof CreativeProperties
     */
    customImageUrl?: string;
    /**
     * The assetIds of the original videos submitted by the advertiser. If \'consentToTranslate\' is set to true and translation is SUCCESSFUL then `originalVideoAssetIds` will return the original video assetId whereas `videoAssetIds` will return translated video assetId. In all other cases, \'originalVideoAssetIds\' and `videoAssetIds` both will return original video assetId.
     * @type {Array<string>}
     * @memberof CreativeProperties
     */
    originalVideoAssetIds?: Array<string>;
    /**
     * ----------------------------------------------- List types ----------------------------------------------- A list of ASINs
     * @type {Array<string>}
     * @memberof CreativeProperties
     */
    asins?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof CreativeProperties
     */
    brandLogoUrl?: string;
    /**
     * An array of subpages
     * @type {Array<Subpage>}
     * @memberof CreativeProperties
     */
    subpages?: Array<Subpage>;
    /**
     * The assetIds of the original videos submitted by the advertiser. If \'consentToTranslate\' is set to true and translation is SUCCESSFUL then \'videoAssetIds\' will return translated video assetId whereas `originalVideoAssetIds` will return the original video assetId. In all other cases, `videoAssetIds` will return original video assetId.
     * @type {Array<string>}
     * @memberof CreativeProperties
     */
    videoAssetIds?: Array<string>;
    /**
     * The identifier of image/video asset from the store\'s asset library
     * @type {string}
     * @memberof CreativeProperties
     */
    brandLogoAssetId?: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof CreativeProperties
     */
    headline?: string;
}
/**
 * Creative Recommendation by Id Response.
 * @export
 * @interface CreativeRecommendationByIdResponseContent
 */
export interface CreativeRecommendationByIdResponseContent {
    /**
     * Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.
     * @type {string}
     * @memberof CreativeRecommendationByIdResponseContent
     */
    creativeType?: string;
    /**
     * 
     * @type {CreativeRecommendationProperties}
     * @memberof CreativeRecommendationByIdResponseContent
     */
    creativeProperties?: CreativeRecommendationProperties;
}
/**
 * Nested Creative Properties Structure for fetching Creative Recommendations.
 * @export
 * @interface CreativeRecommendationProperties
 */
export interface CreativeRecommendationProperties {
    /**
     * ----------------------------------------------- List types ----------------------------------------------- A list of ASINs
     * @type {Array<string>}
     * @memberof CreativeRecommendationProperties
     */
    asins?: Array<string>;
    /**
     * The displayed brand name in the ad headline. Maximum length is 30 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof CreativeRecommendationProperties
     */
    brandName?: string;
    /**
     * An array of subpages
     * @type {Array<Subpage>}
     * @memberof CreativeRecommendationProperties
     */
    subpages?: Array<Subpage>;
    /**
     * 
     * @type {CreativeLandingPageV2}
     * @memberof CreativeRecommendationProperties
     */
    landingPage?: CreativeLandingPageV2;
    /**
     * An array of customImages associated with the creative.
     * @type {Array<CustomImage>}
     * @memberof CreativeRecommendationProperties
     */
    customImages?: Array<CustomImage>;
    /**
     * An array of videoAssetIds associated with the creative. Advertisers can get video assetIds from Asset Library /assets/search API.
     * @type {Array<string>}
     * @memberof CreativeRecommendationProperties
     */
    videoAssetIds?: Array<string>;
    /**
     * a Unique Id identifying the creative Recommendation
     * @type {string}
     * @memberof CreativeRecommendationProperties
     */
    recommendedCreativeId?: string;
    /**
     * 
     * @type {BrandLogo}
     * @memberof CreativeRecommendationProperties
     */
    brandLogo?: BrandLogo;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof CreativeRecommendationProperties
     */
    headline?: string;
}
/**
 * Creative Recommendation Result.
 * @export
 * @interface CreativeRecommendationResultEntry
 */
export interface CreativeRecommendationResultEntry {
    /**
     * Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.
     * @type {string}
     * @memberof CreativeRecommendationResultEntry
     */
    creativeType?: string;
    /**
     * 
     * @type {CreativeRecommendationProperties}
     * @memberof CreativeRecommendationResultEntry
     */
    creativeProperties?: CreativeRecommendationProperties;
}
/**
 * 
 * @export
 * @interface CreativeRecommendationsAccessDeniedError
 */
export interface CreativeRecommendationsAccessDeniedError {
    /**
     * Access denied error code.
     * @type {string}
     * @memberof CreativeRecommendationsAccessDeniedError
     */
    code?: CreativeRecommendationsAccessDeniedErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof CreativeRecommendationsAccessDeniedError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum CreativeRecommendationsAccessDeniedErrorCodeEnum {
    AccessDenied = 'ACCESS_DENIED'
}

/**
 * 
 * @export
 * @interface CreativeRecommendationsBadRequestError
 */
export interface CreativeRecommendationsBadRequestError {
    /**
     * Bad request error code.
     * @type {string}
     * @memberof CreativeRecommendationsBadRequestError
     */
    code?: CreativeRecommendationsBadRequestErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof CreativeRecommendationsBadRequestError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum CreativeRecommendationsBadRequestErrorCodeEnum {
    BadRequest = 'BAD_REQUEST'
}

/**
 * 
 * @export
 * @interface CreativeRecommendationsEligibilityRequestContent
 */
export interface CreativeRecommendationsEligibilityRequestContent {
    /**
     * URL that is intended to be landing page for the sponsored ad.
     * @type {string}
     * @memberof CreativeRecommendationsEligibilityRequestContent
     */
    landingPageUrl: string;
}
/**
 * 
 * @export
 * @interface CreativeRecommendationsEligibilityResponseContent
 */
export interface CreativeRecommendationsEligibilityResponseContent {
    /**
     * Returns false if there is no creative recommendation possible with the given landing page.
     * @type {boolean}
     * @memberof CreativeRecommendationsEligibilityResponseContent
     */
    isEligible?: boolean;
    /**
     * Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.
     * @type {Array<string>}
     * @memberof CreativeRecommendationsEligibilityResponseContent
     */
    creativeTypes?: Array<string>;
}
/**
 * 
 * @export
 * @interface CreativeRecommendationsInternalServerError
 */
export interface CreativeRecommendationsInternalServerError {
    /**
     * Internal error code.
     * @type {string}
     * @memberof CreativeRecommendationsInternalServerError
     */
    code?: CreativeRecommendationsInternalServerErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof CreativeRecommendationsInternalServerError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum CreativeRecommendationsInternalServerErrorCodeEnum {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @interface CreativeRecommendationsNotFoundError
 */
export interface CreativeRecommendationsNotFoundError {
    /**
     * Not found error code.
     * @type {string}
     * @memberof CreativeRecommendationsNotFoundError
     */
    code?: CreativeRecommendationsNotFoundErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof CreativeRecommendationsNotFoundError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum CreativeRecommendationsNotFoundErrorCodeEnum {
    NotFound = 'NOT_FOUND'
}

/**
 * Request structure of creative recommendations API.
 * @export
 * @interface CreativeRecommendationsRequest
 */
export interface CreativeRecommendationsRequest {
    /**
     * An array of ASINs associated with the creative. Note, do not pass an empty array, this results in an error.
     * @type {Array<string>}
     * @memberof CreativeRecommendationsRequest
     */
    asins: Array<string>;
    /**
     * Ad format of the creative.
     * @type {string}
     * @memberof CreativeRecommendationsRequest
     */
    adFormat: CreativeRecommendationsRequestAdFormatEnum;
    /**
     * Required recommendations details.
     * @type {Array<RequiredRecommendations>}
     * @memberof CreativeRecommendationsRequest
     */
    requiredRecommendations: Array<RequiredRecommendations>;
}

/**
    * @export
    * @enum {string}
    */
export enum CreativeRecommendationsRequestAdFormatEnum {
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO'
}

/**
 * 
 * @export
 * @interface CreativeRecommendationsRequestContent
 */
export interface CreativeRecommendationsRequestContent {
    /**
     * Supported are PRODUCT_COLLECTION, STORE_SPOTLIGHT, VIDEO, BRAND_VIDEO. More could be added in future.
     * @type {string}
     * @memberof CreativeRecommendationsRequestContent
     */
    creativeType: string;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof CreativeRecommendationsRequestContent
     */
    nextToken?: string;
    /**
     * Set a limit on the number of results returned by an operation.
     * @type {number}
     * @memberof CreativeRecommendationsRequestContent
     */
    maxResults?: number;
    /**
     * URL that is intended to be landing page for the sponsored ad.
     * @type {string}
     * @memberof CreativeRecommendationsRequestContent
     */
    landingPageUrl: string;
}
/**
 * 
 * @export
 * @interface CreativeRecommendationsResponse
 */
export interface CreativeRecommendationsResponse {
    /**
     * Ordered list of Primary Headline recommendation groups.
     * @type {Array<Array<TextRecommendation>>}
     * @memberof CreativeRecommendationsResponse
     */
    primaryHeadlines?: Array<Array<TextRecommendation>>;
    /**
     * Ordered list of Secondary Headline recommendation groups.
     * @type {Array<Array<TextRecommendation>>}
     * @memberof CreativeRecommendationsResponse
     */
    secondaryHeadlines?: Array<Array<TextRecommendation>>;
}
/**
 * 
 * @export
 * @interface CreativeRecommendationsResponseContent
 */
export interface CreativeRecommendationsResponseContent {
    /**
     * The total number of results returned by an operation.
     * @type {number}
     * @memberof CreativeRecommendationsResponseContent
     */
    totalResults?: number;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof CreativeRecommendationsResponseContent
     */
    nextToken?: string;
    /**
     * A list of creatives
     * @type {Array<CreativeRecommendationResultEntry>}
     * @memberof CreativeRecommendationsResponseContent
     */
    creatives?: Array<CreativeRecommendationResultEntry>;
}
/**
 * 
 * @export
 * @interface CreativeRecommendationsThrottlingError
 */
export interface CreativeRecommendationsThrottlingError {
    /**
     * Throttled error code.
     * @type {string}
     * @memberof CreativeRecommendationsThrottlingError
     */
    code?: CreativeRecommendationsThrottlingErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof CreativeRecommendationsThrottlingError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum CreativeRecommendationsThrottlingErrorCodeEnum {
    Throttled = 'THROTTLED'
}

/**
 * The lifecycle status of a creative
 * @export
 * @enum {string}
 */

export enum CreativeStatus {
    SubmittedForModeration = 'SUBMITTED_FOR_MODERATION',
    PendingTranslation = 'PENDING_TRANSLATION',
    PendingModerationReview = 'PENDING_MODERATION_REVIEW',
    ApprovedByModeration = 'APPROVED_BY_MODERATION',
    RejectedByModeration = 'REJECTED_BY_MODERATION',
    Published = 'PUBLISHED'
}

/**
 * The creative type of SB ad.
 * @export
 * @enum {string}
 */

export enum CreativeType {
    ProductCollection = 'PRODUCT_COLLECTION',
    StoreSpotlight = 'STORE_SPOTLIGHT',
    Video = 'VIDEO',
    BrandVideo = 'BRAND_VIDEO'
}

/**
 * 
 * @export
 * @interface CustomImage
 */
export interface CustomImage {
    /**
     * 
     * @type {string}
     * @memberof CustomImage
     */
    assetId?: string;
    /**
     * 
     * @type {CustomImageCrop}
     * @memberof CustomImage
     */
    crop?: CustomImageCrop;
    /**
     * 
     * @type {string}
     * @memberof CustomImage
     */
    url?: string;
}
/**
 * The crop to apply to the selected Custom image. A Custom image must have a 1200x628 aspect ratio, with a .01 delta for floating point precision. If a customImageAssetId is supplied but a crop is not, the crop will be defaulted to the whole image.
 * @export
 * @interface CustomImageCrop
 */
export interface CustomImageCrop {
    /**
     * 
     * @type {number}
     * @memberof CustomImageCrop
     */
    top?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomImageCrop
     */
    left?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomImageCrop
     */
    width?: number;
    /**
     * 
     * @type {number}
     * @memberof CustomImageCrop
     */
    height?: number;
}
/**
 * Date component which needs to be pre moderated. Either startDate or endDate must be populated, or both can be populated.
 * @export
 * @interface DateComponent
 */
export interface DateComponent {
    /**
     * Type of the date component.
     * @type {string}
     * @memberof DateComponent
     */
    componentType: DateComponentComponentTypeEnum;
    /**
     * End date of the component in yyyy-MM-dd HH:mm:ss format
     * @type {string}
     * @memberof DateComponent
     */
    endDate?: string;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof DateComponent
     */
    id: string;
    /**
     * Start date of the component in yyyy-MM-dd HH:mm:ss format
     * @type {string}
     * @memberof DateComponent
     */
    startDate?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum DateComponentComponentTypeEnum {
    CampaignDate = 'CAMPAIGN_DATE'
}

/**
 * Pre-moderation result for a date component
 * @export
 * @interface DateComponentResponse
 */
export interface DateComponentResponse {
    /**
     * The pre-moderation status of the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    preModerationStatus?: DateComponentResponsePreModerationStatusEnum;
    /**
     * Type of the date component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    componentType?: DateComponentResponseComponentTypeEnum;
    /**
     * End date of the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    endDate?: string;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<DatePolicyViolation>}
     * @memberof DateComponentResponse
     */
    policyViolations?: Array<DatePolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    id?: string;
    /**
     * Start date of the component.
     * @type {string}
     * @memberof DateComponentResponse
     */
    startDate?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum DateComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum DateComponentResponseComponentTypeEnum {
    CampaignDates = 'CAMPAIGN_DATES'
}

/**
 * Errors related to dates.
 * @export
 * @interface DateError
 */
export interface DateError {
    /**
     * Exact error reason..
     * @type {string}
     * @memberof DateError
     */
    reason: string;
    /**
     * 
     * @type {ErrorCause}
     * @memberof DateError
     */
    cause: ErrorCause;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof DateError
     */
    message: string;
}
/**
 * 
 * @export
 * @interface DatePolicyViolation
 */
export interface DatePolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    policyDescription?: string;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    type?: DatePolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof DatePolicyViolation
     */
    policyLinkUrl?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum DatePolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * Object representing date range type rule duration.
 * @export
 * @interface DateRangeTypeRuleDuration
 */
export interface DateRangeTypeRuleDuration {
    /**
     * The end date of the budget rule in YYYYMMDD format. The end date is inclusive. Required to be equal or greater than `startDate`.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    endDate?: string;
    /**
     * The start date of the budget rule in YYYYMMDD format. The start date is inclusive. Required to be greater than or equal to current date.
     * @type {string}
     * @memberof DateRangeTypeRuleDuration
     */
    startDate: string;
}
/**
 * The day of the week.
 * @export
 * @enum {string}
 */

export enum DayOfWeek {
    Monday = 'MONDAY',
    Tuesday = 'TUESDAY',
    Wednesday = 'WEDNESDAY',
    Thursday = 'THURSDAY',
    Friday = 'FRIDAY',
    Saturday = 'SATURDAY',
    Sunday = 'SUNDAY'
}

/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdGroupsBetaRequestContent
 */
export interface DeleteSponsoredBrandsAdGroupsBetaRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof DeleteSponsoredBrandsAdGroupsBetaRequestContent
     */
    adGroupIdFilter?: ObjectIdFilter;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdGroupsBetaResponseContent
 */
export interface DeleteSponsoredBrandsAdGroupsBetaResponseContent {
    /**
     * 
     * @type {BulkAdGroupOperationResponse}
     * @memberof DeleteSponsoredBrandsAdGroupsBetaResponseContent
     */
    adGroups?: BulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdGroupsRequestContent
 */
export interface DeleteSponsoredBrandsAdGroupsRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof DeleteSponsoredBrandsAdGroupsRequestContent
     */
    adGroupIdFilter?: ObjectIdFilter;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdGroupsResponseContent
 */
export interface DeleteSponsoredBrandsAdGroupsResponseContent {
    /**
     * 
     * @type {BulkAdGroupOperationResponse}
     * @memberof DeleteSponsoredBrandsAdGroupsResponseContent
     */
    adGroups?: BulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdsBetaRequestContent
 */
export interface DeleteSponsoredBrandsAdsBetaRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof DeleteSponsoredBrandsAdsBetaRequestContent
     */
    adIdFilter?: ObjectIdFilter;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdsBetaResponseContent
 */
export interface DeleteSponsoredBrandsAdsBetaResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof DeleteSponsoredBrandsAdsBetaResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdsRequestContent
 */
export interface DeleteSponsoredBrandsAdsRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof DeleteSponsoredBrandsAdsRequestContent
     */
    adIdFilter?: ObjectIdFilter;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsAdsResponseContent
 */
export interface DeleteSponsoredBrandsAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof DeleteSponsoredBrandsAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsCampaignsBetaRequestContent
 */
export interface DeleteSponsoredBrandsCampaignsBetaRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof DeleteSponsoredBrandsCampaignsBetaRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsCampaignsBetaResponseContent
 */
export interface DeleteSponsoredBrandsCampaignsBetaResponseContent {
    /**
     * 
     * @type {BulkCampaignOperationResponse}
     * @memberof DeleteSponsoredBrandsCampaignsBetaResponseContent
     */
    campaigns?: BulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsCampaignsRequestContent
 */
export interface DeleteSponsoredBrandsCampaignsRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof DeleteSponsoredBrandsCampaignsRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
}
/**
 * 
 * @export
 * @interface DeleteSponsoredBrandsCampaignsResponseContent
 */
export interface DeleteSponsoredBrandsCampaignsResponseContent {
    /**
     * 
     * @type {BulkCampaignOperationResponse}
     * @memberof DeleteSponsoredBrandsCampaignsResponseContent
     */
    campaigns?: BulkCampaignOperationResponse;
}
/**
 * The current resource state.
 * @export
 * @enum {string}
 */

export enum EntityState {
    Enabled = 'ENABLED',
    Paused = 'PAUSED',
    Archived = 'ARCHIVED'
}

/**
 * Filter entities by state.
 * @export
 * @interface EntityStateFilter
 */
export interface EntityStateFilter {
    /**
     * 
     * @type {Array<EntityState>}
     * @memberof EntityStateFilter
     */
    include?: Array<EntityState>;
}
/**
 * Structure describing error cause - location in the payload and data causing error.
 * @export
 * @interface ErrorCause
 */
export interface ErrorCause {
    /**
     * Error location, JSON Path expression specifying element of API payload causing error.
     * @type {string}
     * @memberof ErrorCause
     */
    location: string;
    /**
     * Optional value causing error.
     * @type {string}
     * @memberof ErrorCause
     */
    trigger?: string;
}
/**
 * 
 * @export
 * @interface ErrorDetails
 */
export interface ErrorDetails {
    /**
     * 
     * @type {string}
     * @memberof ErrorDetails
     */
    errorMessage?: string;
    /**
     * The index of the image task in the array from the request body
     * @type {number}
     * @memberof ErrorDetails
     */
    index?: number;
    /**
     * 
     * @type {string}
     * @memberof ErrorDetails
     */
    errorCode?: string;
}
/**
 * Object representing event type rule duration.
 * @export
 * @interface EventTypeRuleDuration
 */
export interface EventTypeRuleDuration {
    /**
     * The event identifier. This value is available from the budget rules recommendation API.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventId: string;
    /**
     * The event end date in YYYYMMDD format. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    endDate?: string;
    /**
     * The event name. Read-only.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    eventName?: string;
    /**
     * The event start date in YYYYMMDD format. Read-only. Note that this field is present only for announced events.
     * @type {string}
     * @memberof EventTypeRuleDuration
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface ExtendedProductCollectionCreative
 */
export interface ExtendedProductCollectionCreative {
    /**
     * An array of ASINs associated with the creative.
     * @type {Array<string>}
     * @memberof ExtendedProductCollectionCreative
     */
    asins: Array<string>;
    /**
     * 
     * @type {AssetCrop}
     * @memberof ExtendedProductCollectionCreative
     */
    brandLogoCrop?: AssetCrop;
    /**
     * The displayed brand name in the ad headline. Maximum length is 30 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof ExtendedProductCollectionCreative
     */
    brandName: string;
    /**
     * An array of customImages associated with the creative.
     * @type {Array<CustomImage>}
     * @memberof ExtendedProductCollectionCreative
     */
    customImages?: Array<CustomImage>;
    /**
     * The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store\'s asset library. Note that for campaigns created in the Amazon Advertising console prior to release of the brand store\'s assets library, responses will not include a value for this field.
     * @type {string}
     * @memberof ExtendedProductCollectionCreative
     */
    brandLogoAssetId: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof ExtendedProductCollectionCreative
     */
    headline: string;
}
/**
 * 
 * @export
 * @interface GetBudgetRecommendationsRequestContent
 */
export interface GetBudgetRecommendationsRequestContent {
    /**
     * List of CampaignIds
     * @type {Array<string>}
     * @memberof GetBudgetRecommendationsRequestContent
     */
    campaignIds: Array<string>;
}
/**
 * 
 * @export
 * @interface GetBudgetRecommendationsResponseContent
 */
export interface GetBudgetRecommendationsResponseContent {
    /**
     * List of successful budget recommendations for campaigns.
     * @type {Array<BudgetRecommendation>}
     * @memberof GetBudgetRecommendationsResponseContent
     */
    success: Array<BudgetRecommendation>;
    /**
     * List of errors that occurred when generating budget recommendations.
     * @type {Array<BudgetRecommendationError>}
     * @memberof GetBudgetRecommendationsResponseContent
     */
    error: Array<BudgetRecommendationError>;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRuleResponse
 */
export interface GetSBBudgetRuleResponse {
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof GetSBBudgetRuleResponse
     */
    budgetRule?: SBBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSBBudgetRulesForAdvertiserResponse
 */
export interface GetSBBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SBBudgetRule>}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SBBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSBBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRuleResponse
 */
export interface GetSDBudgetRuleResponse {
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof GetSDBudgetRuleResponse
     */
    budgetRule?: SDBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSDBudgetRulesForAdvertiserResponse
 */
export interface GetSDBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SDBudgetRule>}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SDBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSDBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRuleResponse
 */
export interface GetSPBudgetRuleResponse {
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof GetSPBudgetRuleResponse
     */
    budgetRule?: SPBudgetRule;
}
/**
 * 
 * @export
 * @interface GetSPBudgetRulesForAdvertiserResponse
 */
export interface GetSPBudgetRulesForAdvertiserResponse {
    /**
     * A list of rules created by the advertiser.
     * @type {Array<SPBudgetRule>}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    budgetRulesForAdvertiserResponse?: Array<SPBudgetRule>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof GetSPBudgetRulesForAdvertiserResponse
     */
    nextToken?: string;
}
/**
 * Request structure of headline suggestion API.
 * @export
 * @interface HeadlineSuggestionRequest
 */
export interface HeadlineSuggestionRequest {
    /**
     * An array of ASINs associated with the creative. Note do not pass an empty array, this results in an error. 
     * @type {Array<string>}
     * @memberof HeadlineSuggestionRequest
     */
    asins?: Array<string>;
    /**
     * An array of Store Pages associated with SB Spotlight Creative.
     * @type {Array<StorePage>}
     * @memberof HeadlineSuggestionRequest
     */
    storePages?: Array<StorePage>;
    /**
     * Maximum number of suggestions that API should return. Response will [0, maxNumSuggestions] suggestions (suggestions are not guaranteed).
     * @type {number}
     * @memberof HeadlineSuggestionRequest
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {string}
     * @memberof HeadlineSuggestionRequest
     */
    adFormat?: HeadlineSuggestionRequestAdFormatEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum HeadlineSuggestionRequestAdFormatEnum {
    Brands = 'SPONSORED_BRANDS',
    BrandsSpotlight = 'SPONSORED_BRANDS_SPOTLIGHT'
}

/**
 * Response structure of headline suggestion API.
 * @export
 * @interface HeadlineSuggestionResponse
 */
export interface HeadlineSuggestionResponse {
    /**
     * An identifier for request made which is generated by server.
     * @type {string}
     * @memberof HeadlineSuggestionResponse
     */
    requestId?: string;
    /**
     * Suggestions are sorted, i.e., more suitable headline has lesser array index value
     * @type {Array<SuggestedHeadline>}
     * @memberof HeadlineSuggestionResponse
     */
    suggestions?: Array<SuggestedHeadline>;
}
/**
 * The unique identifiers type based on the adProgram of the ad.
 * @export
 * @enum {string}
 */

export enum IdType {
    AdId = 'AD_ID'
}

/**
 * Image component which needs to be pre moderated. A publicly accessible imageUrl must be sent.
 * @export
 * @interface ImageComponent
 */
export interface ImageComponent {
    /**
     * Type of the image component.
     * @type {string}
     * @memberof ImageComponent
     */
    componentType: ImageComponentComponentTypeEnum;
    /**
     * 
     * @type {LandingPage}
     * @memberof ImageComponent
     */
    landingPage?: LandingPage;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof ImageComponent
     */
    id: string;
    /**
     * Url of the image to be pre moderated. The url must be publicly accessible.
     * @type {string}
     * @memberof ImageComponent
     */
    url: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ImageComponentComponentTypeEnum {
    BrandLogo = 'BRAND_LOGO',
    CustomImage = 'CUSTOM_IMAGE',
    OtherImage = 'OTHER_IMAGE'
}

/**
 * Pre moderation result for a image component
 * @export
 * @interface ImageComponentResponse
 */
export interface ImageComponentResponse {
    /**
     * The pre moderation status of the component.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    preModerationStatus?: ImageComponentResponsePreModerationStatusEnum;
    /**
     * Type of the image component.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    componentType?: ImageComponentResponseComponentTypeEnum;
    /**
     * 
     * @type {LandingPage}
     * @memberof ImageComponentResponse
     */
    landingPage?: LandingPage;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<ImagePolicyViolation>}
     * @memberof ImageComponentResponse
     */
    policyViolations?: Array<ImagePolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    id?: string;
    /**
     * Publicly accessible url of the image that got pre moderated.
     * @type {string}
     * @memberof ImageComponentResponse
     */
    url?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ImageComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum ImageComponentResponseComponentTypeEnum {
    BrandLogo = 'BRAND_LOGO',
    CustomImage = 'CUSTOM_IMAGE',
    OtherImage = 'OTHER_IMAGE'
}

/**
 * 
 * @export
 * @interface ImageCrop
 */
export interface ImageCrop {
    /**
     * Policy violated region\'s top left Y-axis pixel value.
     * @type {number}
     * @memberof ImageCrop
     */
    topLeftY?: number;
    /**
     * Policy violated region\'s top left X-axis pixel value.
     * @type {number}
     * @memberof ImageCrop
     */
    topLeftX?: number;
    /**
     * Policy violated region\'s width in pixel.
     * @type {number}
     * @memberof ImageCrop
     */
    width?: number;
    /**
     * Policy violated region\'s height in pixel.
     * @type {number}
     * @memberof ImageCrop
     */
    height?: number;
}
/**
 * Structure of a image evidence
 * @export
 * @interface ImageEvidence
 */
export interface ImageEvidence {
    /**
     * The top left Y-coordinate of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    topLeftY?: number;
    /**
     * The top left X-coordinate of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    topLeftX?: number;
    /**
     * The width of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    width?: number;
    /**
     * The height of the content that violates the specfied policy within the image.
     * @type {number}
     * @memberof ImageEvidence
     */
    height?: number;
}
/**
 * Structure of policy violation for a image component
 * @export
 * @interface ImagePolicyViolation
 */
export interface ImagePolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    policyDescription?: string;
    /**
     * List of evidences for the policy violations detected on the image component.
     * @type {Array<ImageEvidence>}
     * @memberof ImagePolicyViolation
     */
    imageEvidences?: Array<ImageEvidence>;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    type?: ImagePolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof ImagePolicyViolation
     */
    policyLinkUrl?: string;
    /**
     * Policy violation on an image can be detected on the ocr detected text on the image as well. This list of text evidences will have the policy violations detected on the text on top of the image.
     * @type {Array<TextEvidence>}
     * @memberof ImagePolicyViolation
     */
    textEvidences?: Array<TextEvidence>;
}

/**
    * @export
    * @enum {string}
    */
export enum ImagePolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * 
 * @export
 * @interface ImageResult
 */
export interface ImageResult {
    /**
     * Alt text for this image
     * @type {string}
     * @memberof ImageResult
     */
    imageAltText?: string;
    /**
     * 
     * @type {string}
     * @memberof ImageResult
     */
    imageUrl?: string;
}
/**
 * Structure for Image specification
 * @export
 * @interface ImageSpec
 */
export interface ImageSpec {
    /**
     * Image resolution, default is 1200 x 628. New values will be added later. |   Resolution  |   Value       | |---------------|---------------| |   1200 x 628  |   1200 x 628  |
     * @type {string}
     * @memberof ImageSpec
     */
    resolution?: string;
    /**
     * Valid values are PNG and JPEG, default is PNG. New values will be added later. |   File Format  |   Value       | |---------------|---------------| |   PNG          |   PNG         | |   JPEG         |   JPEG        |
     * @type {string}
     * @memberof ImageSpec
     */
    fileFormat?: string;
}
/**
 * 
 * @export
 * @interface ImageTask
 */
export interface ImageTask {
    /**
     * The timestamp after which the imageUrl will be invalid. The number represents Unix epoch seconds with optional millisecond precision.
     * @type {number}
     * @memberof ImageTask
     */
    imageUrlExpiration?: number;
    /**
     * 
     * @type {Array<ImageResult>}
     * @memberof ImageTask
     */
    imageResults?: Array<ImageResult>;
    /**
     * 
     * @type {string}
     * @memberof ImageTask
     */
    taskId?: string;
    /**
     * Image task status. Valid values are PENDING, COMPLETED and FAILED
     * @type {string}
     * @memberof ImageTask
     */
    status?: string;
}
/**
 * 
 * @export
 * @interface ImageTaskMetadata
 */
export interface ImageTaskMetadata {
    /**
     * 
     * @type {ImageSpec}
     * @memberof ImageTaskMetadata
     */
    imageSpec?: ImageSpec;
    /**
     * Optional. An upper bound for number of image results for this set of metadata. Default value is 4.
     * @type {number}
     * @memberof ImageTaskMetadata
     */
    maxResults?: number;
    /**
     * Optional.
     * @type {string}
     * @memberof ImageTaskMetadata
     */
    themeId?: string;
    /**
     * Required. The product that is shown in AI image.
     * @type {string}
     * @memberof ImageTaskMetadata
     */
    asin: string;
    /**
     * Optional. Open text prompt
     * @type {string}
     * @memberof ImageTaskMetadata
     */
    prompt?: string;
    /**
     * Optional. Source image provided by advertiser and they are registered in Asset Library
     * @type {string}
     * @memberof ImageTaskMetadata
     */
    productImageAssetId?: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum InternalErrorErrorCode {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum InternalServerErrorCode {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @interface InternalServerErrorResponseContent
 */
export interface InternalServerErrorResponseContent {
    /**
     * 
     * @type {InternalServerErrorCode}
     * @memberof InternalServerErrorResponseContent
     */
    code: InternalServerErrorCode;
    /**
     * 
     * @type {string}
     * @memberof InternalServerErrorResponseContent
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof InternalServerErrorResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface InternalServerExceptionResponseContent
 */
export interface InternalServerExceptionResponseContent {
    /**
     * 
     * @type {InternalErrorErrorCode}
     * @memberof InternalServerExceptionResponseContent
     */
    code: InternalErrorErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof InternalServerExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface InvalidArgumentError
 */
export interface InvalidArgumentError {
    /**
     * The type of the error
     * @type {string}
     * @memberof InvalidArgumentError
     */
    errorType: string;
    /**
     * 
     * @type {InvalidArgumentErrorSelector}
     * @memberof InvalidArgumentError
     */
    errorValue: InvalidArgumentErrorSelector;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum InvalidArgumentErrorCode {
    InvalidArgument = 'INVALID_ARGUMENT'
}

/**
 * 
 * @export
 * @interface InvalidArgumentErrorResponseContent
 */
export interface InvalidArgumentErrorResponseContent {
    /**
     * 
     * @type {InvalidArgumentErrorCode}
     * @memberof InvalidArgumentErrorResponseContent
     */
    code: InvalidArgumentErrorCode;
    /**
     * 
     * @type {string}
     * @memberof InvalidArgumentErrorResponseContent
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof InvalidArgumentErrorResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface InvalidArgumentErrorSelector
 */
export interface InvalidArgumentErrorSelector {
    /**
     * 
     * @type {RangeError}
     * @memberof InvalidArgumentErrorSelector
     */
    rangeError?: RangeError;
    /**
     * 
     * @type {OtherError}
     * @memberof InvalidArgumentErrorSelector
     */
    otherError?: OtherError;
}
/**
 * 
 * @export
 * @interface InvalidArgumentExceptionResponseContent
 */
export interface InvalidArgumentExceptionResponseContent {
    /**
     * 
     * @type {InvalidArgumentErrorCode}
     * @memberof InvalidArgumentExceptionResponseContent
     */
    code: InvalidArgumentErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof InvalidArgumentExceptionResponseContent
     */
    message: string;
    /**
     * 
     * @type {Array<InvalidArgumentError>}
     * @memberof InvalidArgumentExceptionResponseContent
     */
    errors?: Array<InvalidArgumentError>;
}
/**
 * 
 * @export
 * @interface KeywordInsight
 */
export interface KeywordInsight {
    /**
     * 
     * @type {SBInsightsKeywordInsight}
     * @memberof KeywordInsight
     */
    keywordInsight: SBInsightsKeywordInsight;
}
/**
 * 
 * @export
 * @interface LandingPage
 */
export interface LandingPage {
    /**
     * 
     * @type {Array<string>}
     * @memberof LandingPage
     */
    asins?: Array<string>;
    /**
     * 
     * @type {LandingPageType}
     * @memberof LandingPage
     */
    pageType?: LandingPageType;
    /**
     * URL of an existing simple landing page or Store page. Vendors may also specify the URL of a custom landing page. If a custom URL is specified, the landing page must include the ASINs of at least three products that are advertised as part of the campaign. Do not include this property in the request if the asins property is also included, these properties are mutually exclusive. Note that brandVideo ads only support Store page as landing page and does not allow asins property.
     * @type {string}
     * @memberof LandingPage
     */
    url?: string;
}
/**
 * The type of landing page, such as store page, product list (simple landing page), custom url.
 * @export
 * @enum {string}
 */

export enum LandingPageType {
    ProductList = 'PRODUCT_LIST',
    Store = 'STORE',
    CustomUrl = 'CUSTOM_URL',
    DetailPage = 'DETAIL_PAGE'
}

/**
 * 
 * @export
 * @interface ListCreativesRequestContent
 */
export interface ListCreativesRequestContent {
    /**
     * Filters creatives by optional creative type. By default, you can list all creative versions regardless of creative type.
     * @type {Array<CreativeType>}
     * @memberof ListCreativesRequestContent
     */
    creativeTypeFilter?: Array<CreativeType>;
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof ListCreativesRequestContent
     */
    adId: string;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof ListCreativesRequestContent
     */
    nextToken?: string;
    /**
     * Set a limit on the number of results returned by an operation.
     * @type {number}
     * @memberof ListCreativesRequestContent
     */
    maxResults?: number;
    /**
     * Filters creatives by optional creative version. This means you can either list all creative versions without specific creative version filter, all just retrieve a single creative version by providing a specific version identifier.
     * @type {Array<string>}
     * @memberof ListCreativesRequestContent
     */
    creativeVersionFilter?: Array<string>;
    /**
     * Filters creatives by optional creative status. By default, you can list all creative versions regardless of creative status.
     * @type {Array<CreativeStatus>}
     * @memberof ListCreativesRequestContent
     */
    creativeStatusFilter?: Array<CreativeStatus>;
}
/**
 * 
 * @export
 * @interface ListCreativesResponseContent
 */
export interface ListCreativesResponseContent {
    /**
     * The total number of results returned by an operation.
     * @type {number}
     * @memberof ListCreativesResponseContent
     */
    totalResults?: number;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof ListCreativesResponseContent
     */
    nextToken?: string;
    /**
     * A list of creatives
     * @type {Array<ListCreativesResultEntry>}
     * @memberof ListCreativesResponseContent
     */
    creatives?: Array<ListCreativesResultEntry>;
}
/**
 * ----------------------------------------------- Structure types ----------------------------------------------- Creative
 * @export
 * @interface ListCreativesResultEntry
 */
export interface ListCreativesResultEntry {
    /**
     * The unique ID of a Sponsored Brands ad.
     * @type {string}
     * @memberof ListCreativesResultEntry
     */
    adId?: string;
    /**
     * 
     * @type {number}
     * @memberof ListCreativesResultEntry
     */
    creationTime?: number;
    /**
     * 
     * @type {CreativeType}
     * @memberof ListCreativesResultEntry
     */
    creativeType?: CreativeType;
    /**
     * The version identifier that helps you keep track of multiple versions of a submitted (non-draft) Sponsored Brands creative.
     * @type {string}
     * @memberof ListCreativesResultEntry
     */
    creativeVersion?: string;
    /**
     * 
     * @type {CreativeStatus}
     * @memberof ListCreativesResultEntry
     */
    creativeStatus?: CreativeStatus;
    /**
     * 
     * @type {CreativeProperties}
     * @memberof ListCreativesResultEntry
     */
    creativeProperties?: CreativeProperties;
    /**
     * 
     * @type {number}
     * @memberof ListCreativesResultEntry
     */
    lastUpdateTime?: number;
}
/**
 * 
 * @export
 * @interface ListImageTasksRequestContent
 */
export interface ListImageTasksRequestContent {
    /**
     * 
     * @type {StatusFilter}
     * @memberof ListImageTasksRequestContent
     */
    statusFilter?: StatusFilter;
    /**
     * 
     * @type {number}
     * @memberof ListImageTasksRequestContent
     */
    maxResults?: number;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof ListImageTasksRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {TaskIdFilter}
     * @memberof ListImageTasksRequestContent
     */
    taskIdFilter?: TaskIdFilter;
    /**
     * 
     * @type {string}
     * @memberof ListImageTasksRequestContent
     */
    batchId: string;
}
/**
 * 
 * @export
 * @interface ListImageTasksResponseContent
 */
export interface ListImageTasksResponseContent {
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof ListImageTasksResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<ImageTask>}
     * @memberof ListImageTasksResponseContent
     */
    imageTaskList?: Array<ImageTask>;
    /**
     * 
     * @type {string}
     * @memberof ListImageTasksResponseContent
     */
    batchId?: string;
    /**
     * 
     * @type {number}
     * @memberof ListImageTasksResponseContent
     */
    totalCount?: number;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdGroupsBetaRequestContent
 */
export interface ListSponsoredBrandsAdGroupsBetaRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {EntityStateFilter}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    stateFilter?: EntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API.
     * @type {number}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    maxResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    adGroupIdFilter?: ObjectIdFilter;
    /**
     * Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.
     * @type {boolean}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {NameFilter}
     * @memberof ListSponsoredBrandsAdGroupsBetaRequestContent
     */
    nameFilter?: NameFilter;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdGroupsBetaResponseContent
 */
export interface ListSponsoredBrandsAdGroupsBetaResponseContent {
    /**
     * The total number of entities.
     * @type {number}
     * @memberof ListSponsoredBrandsAdGroupsBetaResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<AdGroup>}
     * @memberof ListSponsoredBrandsAdGroupsBetaResponseContent
     */
    adGroups?: Array<AdGroup>;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdGroupsBetaResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdGroupsRequestContent
 */
export interface ListSponsoredBrandsAdGroupsRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {EntityStateFilter}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    stateFilter?: EntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API.
     * @type {number}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    maxResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    adGroupIdFilter?: ObjectIdFilter;
    /**
     * Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.
     * @type {boolean}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {NameFilter}
     * @memberof ListSponsoredBrandsAdGroupsRequestContent
     */
    nameFilter?: NameFilter;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdGroupsResponseContent
 */
export interface ListSponsoredBrandsAdGroupsResponseContent {
    /**
     * The total number of entities.
     * @type {number}
     * @memberof ListSponsoredBrandsAdGroupsResponseContent
     */
    totalResults?: number;
    /**
     * 
     * @type {Array<AdGroup>}
     * @memberof ListSponsoredBrandsAdGroupsResponseContent
     */
    adGroups?: Array<AdGroup>;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdGroupsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdsBetaRequestContent
 */
export interface ListSponsoredBrandsAdsBetaRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {EntityStateFilter}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    stateFilter?: EntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API.
     * @type {number}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    maxResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    adIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    adGroupIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {NameFilter}
     * @memberof ListSponsoredBrandsAdsBetaRequestContent
     */
    nameFilter?: NameFilter;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdsBetaResponseContent
 */
export interface ListSponsoredBrandsAdsBetaResponseContent {
    /**
     * 
     * @type {Array<Ad>}
     * @memberof ListSponsoredBrandsAdsBetaResponseContent
     */
    ads?: Array<Ad>;
    /**
     * The total number of entities.
     * @type {number}
     * @memberof ListSponsoredBrandsAdsBetaResponseContent
     */
    totalResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdsBetaResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdsRequestContent
 */
export interface ListSponsoredBrandsAdsRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {EntityStateFilter}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    stateFilter?: EntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API.
     * @type {number}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    maxResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    nextToken?: string;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    adIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    adGroupIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {NameFilter}
     * @memberof ListSponsoredBrandsAdsRequestContent
     */
    nameFilter?: NameFilter;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsAdsResponseContent
 */
export interface ListSponsoredBrandsAdsResponseContent {
    /**
     * 
     * @type {Array<Ad>}
     * @memberof ListSponsoredBrandsAdsResponseContent
     */
    ads?: Array<Ad>;
    /**
     * The total number of entities.
     * @type {number}
     * @memberof ListSponsoredBrandsAdsResponseContent
     */
    totalResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsAdsResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsCampaignsBetaRequestContent
 */
export interface ListSponsoredBrandsCampaignsBetaRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    portfolioIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {EntityStateFilter}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    stateFilter?: EntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API.
     * @type {number}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    maxResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    nextToken?: string;
    /**
     * Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.
     * @type {boolean}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {NameFilter}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    nameFilter?: NameFilter;
    /**
     * 
     * @type {OutcomeTypeFilter}
     * @memberof ListSponsoredBrandsCampaignsBetaRequestContent
     */
    outcomeTypeFilter?: OutcomeTypeFilter;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsCampaignsBetaResponseContent
 */
export interface ListSponsoredBrandsCampaignsBetaResponseContent {
    /**
     * 
     * @type {Array<Campaign>}
     * @memberof ListSponsoredBrandsCampaignsBetaResponseContent
     */
    campaigns?: Array<Campaign>;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsCampaignsBetaResponseContent
     */
    nextToken?: string;
    /**
     * The total number of entities.
     * @type {number}
     * @memberof ListSponsoredBrandsCampaignsBetaResponseContent
     */
    totalCount?: number;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsCampaignsRequestContent
 */
export interface ListSponsoredBrandsCampaignsRequestContent {
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    campaignIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {ObjectIdFilter}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    portfolioIdFilter?: ObjectIdFilter;
    /**
     * 
     * @type {EntityStateFilter}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    stateFilter?: EntityStateFilter;
    /**
     * Number of records to include in the paginated response. Defaults to max page size for given API.
     * @type {number}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    maxResults?: number;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    nextToken?: string;
    /**
     * Setting to true will slow down performance because the API needs to retrieve extra information for each campaign.
     * @type {boolean}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    includeExtendedDataFields?: boolean;
    /**
     * 
     * @type {NameFilter}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    nameFilter?: NameFilter;
    /**
     * 
     * @type {OutcomeTypeFilter}
     * @memberof ListSponsoredBrandsCampaignsRequestContent
     */
    outcomeTypeFilter?: OutcomeTypeFilter;
}
/**
 * 
 * @export
 * @interface ListSponsoredBrandsCampaignsResponseContent
 */
export interface ListSponsoredBrandsCampaignsResponseContent {
    /**
     * 
     * @type {Array<Campaign>}
     * @memberof ListSponsoredBrandsCampaignsResponseContent
     */
    campaigns?: Array<Campaign>;
    /**
     * Token value allowing to navigate to the next response page.
     * @type {string}
     * @memberof ListSponsoredBrandsCampaignsResponseContent
     */
    nextToken?: string;
    /**
     * The total number of entities.
     * @type {number}
     * @memberof ListSponsoredBrandsCampaignsResponseContent
     */
    totalCount?: number;
}
/**
 * 
 * @export
 * @interface ListThemesRequestContent
 */
export interface ListThemesRequestContent {
    /**
     * Optional. The max limit for the number of themes it can return.
     * @type {number}
     * @memberof ListThemesRequestContent
     */
    maxResults?: number;
    /**
     * Optional. The pagination token to retrieve the next page of results.
     * @type {string}
     * @memberof ListThemesRequestContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface ListThemesResponseContent
 */
export interface ListThemesResponseContent {
    /**
     * List of themes
     * @type {Array<Theme>}
     * @memberof ListThemesResponseContent
     */
    themes?: Array<Theme>;
    /**
     * If nextToken is not null, it means there are more results.
     * @type {string}
     * @memberof ListThemesResponseContent
     */
    nextToken?: string;
    /**
     * 
     * @type {number}
     * @memberof ListThemesResponseContent
     */
    totalCount?: number;
}
/**
 * Media type for assets from Asset Library
 * @export
 * @enum {string}
 */

export enum MediaType {
    Jpeg = 'image/jpeg',
    Png = 'image/png',
    Gif = 'image/gif'
}

/**
 * The Error Response Object.
 * @export
 * @interface ModerationError
 */
export interface ModerationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof ModerationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof ModerationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface ModerationResult
 */
export interface ModerationResult {
    /**
     * The version identifier that helps to keep track of multiple versions of a submitted ad. In case of Sponsored Brands this is the creative version id.
     * @type {string}
     * @memberof ModerationResult
     */
    versionId?: string;
    /**
     * 
     * @type {IdType}
     * @memberof ModerationResult
     */
    idType?: IdType;
    /**
     * 
     * @type {ModerationStatus}
     * @memberof ModerationResult
     */
    moderationStatus?: ModerationStatus;
    /**
     * A list of policy violations for a campaign that has failed moderation. Note that this field is present in the response only when moderationStatus is set to REJECTED.
     * @type {Array<PolicyViolation>}
     * @memberof ModerationResult
     */
    policyViolations?: Array<PolicyViolation>;
    /**
     * Expected date and time by which moderation will be complete. The format is ISO 8601 in UTC time zone. Note that this field is present in the response only when moderationStatus is set to IN_PROGRESS.
     * @type {string}
     * @memberof ModerationResult
     */
    etaForModeration?: string;
    /**
     * The unique identifier of the ad which can be obtained after the ad is created using create APIs.
     * @type {string}
     * @memberof ModerationResult
     */
    id?: string;
}
/**
 * 
 * @export
 * @interface ModerationResultsAccessDeniedError
 */
export interface ModerationResultsAccessDeniedError {
    /**
     * Access denied error code.
     * @type {string}
     * @memberof ModerationResultsAccessDeniedError
     */
    code?: ModerationResultsAccessDeniedErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof ModerationResultsAccessDeniedError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ModerationResultsAccessDeniedErrorCodeEnum {
    AccessDenied = 'ACCESS_DENIED'
}

/**
 * The program type of the ad.
 * @export
 * @enum {string}
 */

export enum ModerationResultsAdProgramType {
    SbProductCollection = 'SB_PRODUCT_COLLECTION',
    SbStoreSpotlight = 'SB_STORE_SPOTLIGHT',
    SbVideo = 'SB_VIDEO',
    SponsoredProducts = 'SPONSORED_PRODUCTS'
}

/**
 * 
 * @export
 * @interface ModerationResultsBadRequestError
 */
export interface ModerationResultsBadRequestError {
    /**
     * Bad request error code.
     * @type {string}
     * @memberof ModerationResultsBadRequestError
     */
    code?: ModerationResultsBadRequestErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof ModerationResultsBadRequestError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ModerationResultsBadRequestErrorCodeEnum {
    BadRequest = 'BAD_REQUEST'
}

/**
 * 
 * @export
 * @interface ModerationResultsInternalServerError
 */
export interface ModerationResultsInternalServerError {
    /**
     * Internal error code.
     * @type {string}
     * @memberof ModerationResultsInternalServerError
     */
    code?: ModerationResultsInternalServerErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof ModerationResultsInternalServerError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ModerationResultsInternalServerErrorCodeEnum {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @interface ModerationResultsNotFoundError
 */
export interface ModerationResultsNotFoundError {
    /**
     * Not found error code.
     * @type {string}
     * @memberof ModerationResultsNotFoundError
     */
    code?: ModerationResultsNotFoundErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof ModerationResultsNotFoundError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ModerationResultsNotFoundErrorCodeEnum {
    NotFound = 'NOT_FOUND'
}

/**
 * 
 * @export
 * @interface ModerationResultsRequest
 */
export interface ModerationResultsRequest {
    /**
     * Filter by specific version id of the ad. The API will return the ad\'s all versions moderation status if this field is empty.
     * @type {Array<string>}
     * @memberof ModerationResultsRequest
     */
    versionIdFilter?: Array<string>;
    /**
     * 
     * @type {IdType}
     * @memberof ModerationResultsRequest
     */
    idType: IdType;
    /**
     * 
     * @type {ModerationResultsAdProgramType}
     * @memberof ModerationResultsRequest
     */
    adProgramType: ModerationResultsAdProgramType;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof ModerationResultsRequest
     */
    nextToken?: string;
    /**
     * Sets a limit on the number of results returned by an operation.
     * @type {number}
     * @memberof ModerationResultsRequest
     */
    maxResults: number;
    /**
     * Filter by specific moderation status.
     * @type {Array<ModerationStatus>}
     * @memberof ModerationResultsRequest
     */
    moderationStatusFilter?: Array<ModerationStatus>;
    /**
     * The unique identifier of the ad which can be obtained after the ad is created using create APIs.
     * @type {string}
     * @memberof ModerationResultsRequest
     */
    id: string;
}
/**
 * 
 * @export
 * @interface ModerationResultsResponse
 */
export interface ModerationResultsResponse {
    /**
     * 
     * @type {Array<ModerationResult>}
     * @memberof ModerationResultsResponse
     */
    moderationResults?: Array<ModerationResult>;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof ModerationResultsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface ModerationResultsThrottlingError
 */
export interface ModerationResultsThrottlingError {
    /**
     * Throttled error code.
     * @type {string}
     * @memberof ModerationResultsThrottlingError
     */
    code?: ModerationResultsThrottlingErrorCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof ModerationResultsThrottlingError
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ModerationResultsThrottlingErrorCodeEnum {
    Throttled = 'THROTTLED'
}

/**
 * The moderation status of the ad.
 * @export
 * @enum {string}
 */

export enum ModerationStatus {
    Approved = 'APPROVED',
    InProgress = 'IN_PROGRESS',
    Rejected = 'REJECTED',
    Failed = 'FAILED'
}

/**
 * 
 * @export
 * @interface MultiAdGroupAd
 */
export interface MultiAdGroupAd {
    /**
     * The ad identifier.
     * @type {string}
     * @memberof MultiAdGroupAd
     */
    adId: string;
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof MultiAdGroupAd
     */
    campaignId: string;
    /**
     * 
     * @type {LandingPage}
     * @memberof MultiAdGroupAd
     */
    landingPage?: LandingPage;
    /**
     * The name of the ad.
     * @type {string}
     * @memberof MultiAdGroupAd
     */
    name: string;
    /**
     * 
     * @type {EntityState}
     * @memberof MultiAdGroupAd
     */
    state: EntityState;
    /**
     * The adGroup identifier.
     * @type {string}
     * @memberof MultiAdGroupAd
     */
    adGroupId: string;
    /**
     * 
     * @type {Creative}
     * @memberof MultiAdGroupAd
     */
    creative?: Creative;
    /**
     * 
     * @type {AdExtendedData}
     * @memberof MultiAdGroupAd
     */
    extendedData?: AdExtendedData;
}
/**
 * Filter entities by name.
 * @export
 * @interface NameFilter
 */
export interface NameFilter {
    /**
     * 
     * @type {QueryTermMatchType}
     * @memberof NameFilter
     */
    queryTermMatchType?: QueryTermMatchType;
    /**
     * 
     * @type {Array<string>}
     * @memberof NameFilter
     */
    include?: Array<string>;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum NotFoundErrorCode {
    NotFound = 'NOT_FOUND'
}

/**
 * 
 * @export
 * @interface NotFoundErrorResponseContent
 */
export interface NotFoundErrorResponseContent {
    /**
     * 
     * @type {NotFoundErrorCode}
     * @memberof NotFoundErrorResponseContent
     */
    code: NotFoundErrorCode;
    /**
     * 
     * @type {string}
     * @memberof NotFoundErrorResponseContent
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof NotFoundErrorResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface NotFoundExceptionResponseContent
 */
export interface NotFoundExceptionResponseContent {
    /**
     * 
     * @type {NotFoundErrorCode}
     * @memberof NotFoundExceptionResponseContent
     */
    code: NotFoundErrorCode;
    /**
     * 
     * @type {string}
     * @memberof NotFoundExceptionResponseContent
     */
    message: string;
}
/**
 * Filter entities by the list of objectIds.
 * @export
 * @interface ObjectIdFilter
 */
export interface ObjectIdFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof ObjectIdFilter
     */
    include?: Array<string>;
}
/**
 * Errors not related to any of the other error types.
 * @export
 * @interface OtherError
 */
export interface OtherError {
    /**
     * 
     * @type {string}
     * @memberof OtherError
     */
    reason: string;
    /**
     * 
     * @type {ErrorCause}
     * @memberof OtherError
     */
    cause: ErrorCause;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof OtherError
     */
    message: string;
}
/**
 * Filter entities by outcome type.
 * @export
 * @interface OutcomeTypeFilter
 */
export interface OutcomeTypeFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof OutcomeTypeFilter
     */
    include?: Array<string>;
}
/**
 * 
 * @export
 * @interface PerformanceMeasureCondition
 */
export interface PerformanceMeasureCondition {
    /**
     * 
     * @type {PerformanceMetric}
     * @memberof PerformanceMeasureCondition
     */
    metricName: PerformanceMetric;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof PerformanceMeasureCondition
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof PerformanceMeasureCondition
     */
    threshold: number;
}
/**
 * 
 * @export
 * @interface PerformanceMeasureConditionForSB
 */
export interface PerformanceMeasureConditionForSB {
    /**
     * 
     * @type {PerformanceMetricForSB}
     * @memberof PerformanceMeasureConditionForSB
     */
    metricName: PerformanceMetricForSB;
    /**
     * 
     * @type {ComparisonOperator}
     * @memberof PerformanceMeasureConditionForSB
     */
    comparisonOperator: ComparisonOperator;
    /**
     * The performance threshold value.
     * @type {number}
     * @memberof PerformanceMeasureConditionForSB
     */
    threshold: number;
}
/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export enum PerformanceMetric {
    Acos = 'ACOS',
    Ctr = 'CTR',
    Cvr = 'CVR',
    Roas = 'ROAS'
}

/**
 * The advertising performance metric.
 * @export
 * @enum {string}
 */

export enum PerformanceMetricForSB {
    Is = 'IS',
    Ntb = 'NTB',
    Roas = 'ROAS'
}

/**
 * An object giving the name of the performance metric and its value when the rule was evaluated
 * @export
 * @interface PerformanceMetricValue
 */
export interface PerformanceMetricValue {
    /**
     * Name of the performance metric
     * @type {string}
     * @memberof PerformanceMetricValue
     */
    name?: string;
    /**
     * Value of the performance metric
     * @type {number}
     * @memberof PerformanceMetricValue
     */
    value?: number;
}
/**
 * List of bid adjustments for placements. - HOME - The Amazon home page https://www.amazon.com. - PAGE - A product detail page is where a customer discovers a unique product sold on Amazon. - OTHER - Other placement groups. Such as search page.
 * @export
 * @enum {string}
 */

export enum Placement {
    Home = 'HOME',
    DetailPage = 'DETAIL_PAGE',
    Other = 'OTHER'
}

/**
 * 
 * @export
 * @interface PolicyViolation
 */
export interface PolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof PolicyViolation
     */
    policyDescription?: string;
    /**
     * 
     * @type {Array<ViolatingTextContent>}
     * @memberof PolicyViolation
     */
    violatingTextContents?: Array<ViolatingTextContent>;
    /**
     * 
     * @type {Array<ViolatingImageContent>}
     * @memberof PolicyViolation
     */
    violatingImageContents?: Array<ViolatingImageContent>;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof PolicyViolation
     */
    policyLinkUrl?: string;
    /**
     * 
     * @type {Array<ViolatingVideoContent>}
     * @memberof PolicyViolation
     */
    violatingVideoContents?: Array<ViolatingVideoContent>;
    /**
     * 
     * @type {Array<ViolatingAsinContent>}
     * @memberof PolicyViolation
     */
    violatingAsinContents?: Array<ViolatingAsinContent>;
}
/**
 * Components details that needs to be sent for pre moderation.
 * @export
 * @interface PreModerationRequest
 */
export interface PreModerationRequest {
    /**
     * Id of the brand/advertiser.
     * @type {string}
     * @memberof PreModerationRequest
     */
    recordId?: string;
    /**
     * Asin components which needs to be pre moderated.
     * @type {Array<AsinComponent>}
     * @memberof PreModerationRequest
     */
    asinComponents?: Array<AsinComponent>;
    /**
     * Type of Ad program to which this pre moderation components belong to.
     * @type {string}
     * @memberof PreModerationRequest
     */
    adProgram: PreModerationRequestAdProgramEnum;
    /**
     * Specifying locale will translate the premoderation message into that locale\'s associated language.     | Locale | Language (ISO 639) | Country (ISO 3166) |   |-----|-----|-------|   | ar-AE | Arabic (ar) | United Arab Emirates (AE) |   | zh-CN | Chinese (zh) | China (CN) |   | nl-NL | Dutch (nl) | Netherlands (NL) |   | en-AU | English (en) | Australia (AU) |   | en-CA | English (en) | Canada (CA) |   | en-IN | English (en) | India (IN) |   | en-GB | English (en) | United Kingdom (GB) |   | en-US | English (en) | United States (US) |   | fr-CA | French (fr) | Canada (CA) |   | fr-FR | French (fr) | France (FR) |   | de-DE | German (de) | Germany (DE) |   | it-IT | Italian (it) | Italy (IT) |   | ja-JP | Japanese (ja) | Japan (JP) |   | ko-KR | Korean (ko) | South Korea (KR) |   | pt-BR | Portuguese (pt) | Brazil (BR) |   | es-ES | Spanish (es) | Spain (ES) |   | es-US | Spanish (es) | United States (US) |   | es-MX | Spanish (es) | Mexico (MX) |   | tr-TR | Turkish (tr) | Turkey (TR) |   
     * @type {string}
     * @memberof PreModerationRequest
     */
    locale: PreModerationRequestLocaleEnum;
    /**
     * Image components which needs to be pre moderated.
     * @type {Array<ImageComponent>}
     * @memberof PreModerationRequest
     */
    imageComponents?: Array<ImageComponent>;
    /**
     * Date components which needs to be pre moderated.
     * @type {Array<DateComponent>}
     * @memberof PreModerationRequest
     */
    dateComponents?: Array<DateComponent>;
    /**
     * Text components which needs to be pre moderated.
     * @type {Array<TextComponent>}
     * @memberof PreModerationRequest
     */
    textComponents?: Array<TextComponent>;
    /**
     * Video components which needs to be pre moderated.
     * @type {Array<VideoComponent>}
     * @memberof PreModerationRequest
     */
    videoComponents?: Array<VideoComponent>;
}

/**
    * @export
    * @enum {string}
    */
export enum PreModerationRequestAdProgramEnum {
    SponsoredBrands = 'SPONSORED_BRANDS',
    SponsoredBrandsSpotlight = 'SPONSORED_BRANDS_SPOTLIGHT',
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    Stores = 'STORES',
    SponsoredDisplay = 'SPONSORED_DISPLAY',
    Dsp = 'DSP',
    DspRec = 'DSP_REC',
    DspImage = 'DSP_IMAGE',
    DspThirdParty = 'DSP_THIRD_PARTY'
}
/**
    * @export
    * @enum {string}
    */
export enum PreModerationRequestLocaleEnum {
    ArAe = 'ar-AE',
    ZhCn = 'zh-CN',
    NlNl = 'nl-NL',
    EnAu = 'en-AU',
    EnCa = 'en-CA',
    EnIn = 'en-IN',
    EnGb = 'en-GB',
    EnUs = 'en-US',
    FrCa = 'fr-CA',
    FrFr = 'fr-FR',
    DeDe = 'de-DE',
    ItIt = 'it-IT',
    JaJp = 'ja-JP',
    KoKr = 'ko-KR',
    PtBr = 'pt-BR',
    EsEs = 'es-ES',
    EsUs = 'es-US',
    EsMx = 'es-MX',
    TrTr = 'tr-TR'
}

/**
 * Information regarding the policy violations if present for the components, sent for pre moderation.
 * @export
 * @interface PreModerationResponse
 */
export interface PreModerationResponse {
    /**
     * Id of the brand/advertiser.
     * @type {string}
     * @memberof PreModerationResponse
     */
    recordId?: string;
    /**
     * Pre moderation result of the asin components. It will have information regarding the policy violations present if any.
     * @type {Array<AsinComponentResponse>}
     * @memberof PreModerationResponse
     */
    asinComponents?: Array<AsinComponentResponse>;
    /**
     * Unique Id for the moderation Request.
     * @type {string}
     * @memberof PreModerationResponse
     */
    preModerationId?: string;
    /**
     * Type of Ad program to which the pre moderation components belong to.
     * @type {string}
     * @memberof PreModerationResponse
     */
    adProgram?: PreModerationResponseAdProgramEnum;
    /**
     * Locale value that was passed in request.
     * @type {string}
     * @memberof PreModerationResponse
     */
    locale?: PreModerationResponseLocaleEnum;
    /**
     * Pre moderation result of the image components. It will have information regarding the policy violations present if any.
     * @type {Array<ImageComponentResponse>}
     * @memberof PreModerationResponse
     */
    imageComponents?: Array<ImageComponentResponse>;
    /**
     * Pre moderation result of the date components. It will have information regarding the policy violations present if any.
     * @type {Array<DateComponentResponse>}
     * @memberof PreModerationResponse
     */
    dateComponents?: Array<DateComponentResponse>;
    /**
     * Pre moderation result of the text components. It will have information regarding the policy violations present if any.
     * @type {Array<TextComponentResponse>}
     * @memberof PreModerationResponse
     */
    textComponents?: Array<TextComponentResponse>;
    /**
     * Pre moderation result of the video components. It will have information regarding the policy violations present if any.
     * @type {Array<VideoComponentResponse>}
     * @memberof PreModerationResponse
     */
    videoComponents?: Array<VideoComponentResponse>;
}

/**
    * @export
    * @enum {string}
    */
export enum PreModerationResponseAdProgramEnum {
    SponsoredBrands = 'SPONSORED_BRANDS',
    SponsoredBrandsSpotlight = 'SPONSORED_BRANDS_SPOTLIGHT',
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    Stores = 'STORES',
    SponsoredDisplay = 'SPONSORED_DISPLAY',
    Dsp = 'DSP',
    DspRec = 'DSP_REC',
    DspImage = 'DSP_IMAGE',
    DspThirdParty = 'DSP_THIRD_PARTY'
}
/**
    * @export
    * @enum {string}
    */
export enum PreModerationResponseLocaleEnum {
    ArAe = 'ar-AE',
    ZhCn = 'zh-CN',
    NlNl = 'nl-NL',
    EnAu = 'en-AU',
    EnCa = 'en-CA',
    EnIn = 'en-IN',
    EnGb = 'en-GB',
    EnUs = 'en-US',
    FrCa = 'fr-CA',
    FrFr = 'fr-FR',
    DeDe = 'de-DE',
    ItIt = 'it-IT',
    JaJp = 'ja-JP',
    KoKr = 'ko-KR',
    PtBr = 'pt-BR',
    EsEs = 'es-ES',
    EsUs = 'es-US',
    EsMx = 'es-MX',
    TrTr = 'tr-TR'
}

/**
 * 
 * @export
 * @interface ProductCollectionCreative
 */
export interface ProductCollectionCreative {
    /**
     * An array of ASINs associated with the creative.
     * @type {Array<string>}
     * @memberof ProductCollectionCreative
     */
    asins: Array<string>;
    /**
     * 
     * @type {AssetCrop}
     * @memberof ProductCollectionCreative
     */
    brandLogoCrop?: AssetCrop;
    /**
     * The displayed brand name in the ad headline. Maximum length is 30 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof ProductCollectionCreative
     */
    brandName: string;
    /**
     * The identifier of the Custom image from the Store assets library. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#customimage) for more information on what constitutes a valid Custom image.
     * @type {string}
     * @memberof ProductCollectionCreative
     */
    customImageAssetId?: string;
    /**
     * 
     * @type {AssetCrop}
     * @memberof ProductCollectionCreative
     */
    customImageCrop?: AssetCrop;
    /**
     * The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store\'s asset library. Note that for campaigns created in the Amazon Advertising console prior to release of the brand store\'s assets library, responses will not include a value for this field.
     * @type {string}
     * @memberof ProductCollectionCreative
     */
    brandLogoAssetId: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof ProductCollectionCreative
     */
    headline: string;
}
/**
 * The product location of the campaign. - SOLD_ON_AMAZON - For products sold on Amazon websites. - NOT_SOLD_ON_AMAZON - For products not sold on Amazon websites. - SOLD_ON_DTC - Deprecated (For products sold on DTC websites).
 * @export
 * @enum {string}
 */

export enum ProductLocation {
    SoldOnAmazon = 'SOLD_ON_AMAZON',
    NotSoldOnAmazon = 'NOT_SOLD_ON_AMAZON',
    SoldOnDtc = 'SOLD_ON_DTC'
}

/**
 * Asset program type
 * @export
 * @enum {string}
 */

export enum ProgramType {
    APlus = 'A_PLUS',
    Sb = 'SB',
    Posts = 'POSTS',
    Stores = 'STORES',
    BbbStores = 'BBB_STORES',
    AmazonDsp = 'AMAZON_DSP',
    AmazonCreativeServices = 'AMAZON_CREATIVE_SERVICES'
}

/**
 * Defines how would the string resource field (e.g. campaign name, ad group name) be matched with the query term in filter.
 * @export
 * @enum {string}
 */

export enum QueryTermMatchType {
    BroadMatch = 'BROAD_MATCH',
    ExactMatch = 'EXACT_MATCH'
}

/**
 * Errors related to range constraints violations.
 * @export
 * @interface RangeError
 */
export interface RangeError {
    /**
     * 
     * @type {string}
     * @memberof RangeError
     */
    reason: string;
    /**
     * Allowed values.
     * @type {Array<string>}
     * @memberof RangeError
     */
    allowed?: Array<string>;
    /**
     * 
     * @type {ErrorCause}
     * @memberof RangeError
     */
    cause: ErrorCause;
    /**
     * Optional upper limit.
     * @type {string}
     * @memberof RangeError
     */
    upperLimit?: string;
    /**
     * Optional lower limit.
     * @type {string}
     * @memberof RangeError
     */
    lowerLimit?: string;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof RangeError
     */
    message: string;
}
/**
 * Recommended Headline in response object. Recommended headline will be locale specific, i.e. for an asin input in ES, Recommended headline will be in ES.
 * @export
 * @interface RecommendedHeadline
 */
export interface RecommendedHeadline {
    /**
     * Unique Id of Recommended headline.
     * @type {string}
     * @memberof RecommendedHeadline
     */
    headlineId?: string;
    /**
     * String that contains Recommended headline.
     * @type {string}
     * @memberof RecommendedHeadline
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface Recurrence
 */
export interface Recurrence {
    /**
     * 
     * @type {RecurrenceType}
     * @memberof Recurrence
     */
    type?: RecurrenceType;
    /**
     * Object representing days of the week for weekly type rule. It is not required for daily recurrence type
     * @type {Array<DayOfWeek>}
     * @memberof Recurrence
     */
    daysOfWeek?: Array<DayOfWeek>;
}
/**
 * depicts the type of recurrence
 * @export
 * @enum {string}
 */

export enum RecurrenceType {
    Daily = 'DAILY',
    Weekly = 'WEEKLY'
}

/**
 * 
 * @export
 * @interface RequiredRecommendations
 */
export interface RequiredRecommendations {
    /**
     * Maximum number of recommendations groups that API should return for given type. (recommendations are not guaranteed).
     * @type {number}
     * @memberof RequiredRecommendations
     */
    maxRecommendationGroups?: number;
    /**
     * Type of recommendations.
     * @type {string}
     * @memberof RequiredRecommendations
     */
    type: RequiredRecommendationsTypeEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum RequiredRecommendationsTypeEnum {
    PrimaryHeadline = 'PRIMARY_HEADLINE',
    SecondaryHeadline = 'SECONDARY_HEADLINE'
}

/**
 * 
 * @export
 * @interface RuleBasedBudget
 */
export interface RuleBasedBudget {
    /**
     * 
     * @type {boolean}
     * @memberof RuleBasedBudget
     */
    isProcessing?: boolean;
    /**
     * 
     * @type {string}
     * @memberof RuleBasedBudget
     */
    applicableRuleName?: string;
    /**
     * 
     * @type {number}
     * @memberof RuleBasedBudget
     */
    value?: number;
    /**
     * 
     * @type {string}
     * @memberof RuleBasedBudget
     */
    applicableRuleId?: string;
}
/**
 * 
 * @export
 * @interface RuleDuration
 */
export interface RuleDuration {
    /**
     * 
     * @type {EventTypeRuleDuration}
     * @memberof RuleDuration
     */
    eventTypeRuleDuration?: EventTypeRuleDuration;
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof RuleDuration
     */
    dateRangeTypeRuleDuration?: DateRangeTypeRuleDuration;
}
/**
 * 
 * @export
 * @interface SBBudgetHistory
 */
export interface SBBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SBRuleBasedBudget>}
     * @memberof SBBudgetHistory
     */
    history?: Array<SBRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SBBudgetRule
 */
export interface SBBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SBBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRuleDetails
 */
export interface SBBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SBBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SBBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SBRuleType}
     * @memberof SBBudgetRuleDetails
     */
    ruleType?: SBRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SBBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SBBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureConditionForSB}
     * @memberof SBBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureConditionForSB;
}
/**
 * The Error Response Object.
 * @export
 * @interface SBBudgetRulesRecommendationError
 */
export interface SBBudgetRulesRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRulesRecommendationEvent
 */
export interface SBBudgetRulesRecommendationEvent {
    /**
     * The event identifier.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    eventId?: string;
    /**
     * The end date in YYYYMMDD format.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    endDate?: string;
    /**
     * The suggested budget increase expressed as a percent.
     * @type {number}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    suggestedBudgetIncreasePercent?: number;
    /**
     * The event name.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    eventName?: string;
    /**
     * The start date in YYYYMMDD format.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEvent
     */
    startDate?: string;
}
/**
 * 
 * @export
 * @interface SBBudgetRulesRecommendationEventRequest
 */
export interface SBBudgetRulesRecommendationEventRequest {
    /**
     * The campaign identifier.
     * @type {string}
     * @memberof SBBudgetRulesRecommendationEventRequest
     */
    campaignId: string;
}
/**
 * Special events with date range and suggested budget increase.
 * @export
 * @interface SBBudgetRulesRecommendationEventResponse
 */
export interface SBBudgetRulesRecommendationEventResponse {
    /**
     * A list of recommended special events with date range and suggested budget increase.
     * @type {Array<SBBudgetRulesRecommendationEvent>}
     * @memberof SBBudgetRulesRecommendationEventResponse
     */
    recommendedBudgetRuleEvents?: Array<SBBudgetRulesRecommendationEvent>;
}
/**
 * 
 * @export
 * @interface SBCampaignBudgetRule
 */
export interface SBCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SBCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SBCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SBBudgetRuleDetails}
     * @memberof SBCampaignBudgetRule
     */
    ruleDetails?: SBBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SBCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SBGetAssociatedCampaignsResponse
 */
export interface SBGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * Type of Ad format.
 * @export
 * @enum {string}
 */

export enum SBInsightsAdFormat {
    ProductCollection = 'PRODUCT_COLLECTION',
    StoreSpotlight = 'STORE_SPOTLIGHT',
    Video = 'VIDEO',
    BrandVideo = 'BRAND_VIDEO'
}

/**
 * The ad group settings.
 * @export
 * @interface SBInsightsAdGroup
 */
export interface SBInsightsAdGroup {
    /**
     * 
     * @type {Array<SBInsightsKeyword>}
     * @memberof SBInsightsAdGroup
     */
    keywords?: Array<SBInsightsKeyword>;
    /**
     * 
     * @type {SBInsightsAdFormat}
     * @memberof SBInsightsAdGroup
     */
    adFormat: SBInsightsAdFormat;
}
/**
 * Returns information about a BadRequestException.
 * @export
 * @interface SBInsightsBadRequestExceptionResponseContent
 */
export interface SBInsightsBadRequestExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBInsightsBadRequestExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBInsightsBadRequestExceptionResponseContent
     */
    details: string;
}
/**
 * 
 * @export
 * @interface SBInsightsCampaignInsightsRequestContent
 */
export interface SBInsightsCampaignInsightsRequestContent {
    /**
     * 
     * @type {Array<SBInsightsAdGroup>}
     * @memberof SBInsightsCampaignInsightsRequestContent
     */
    adGroups: Array<SBInsightsAdGroup>;
}
/**
 * Response object for /sb/campaigns/insights containing a list of insights for the campaign.
 * @export
 * @interface SBInsightsCampaignInsightsResponseContent
 */
export interface SBInsightsCampaignInsightsResponseContent {
    /**
     * 
     * @type {Array<SBInsightsObject>}
     * @memberof SBInsightsCampaignInsightsResponseContent
     */
    insights?: Array<SBInsightsObject>;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBInsightsCampaignInsightsResponseContent
     */
    nextToken?: string;
}
/**
 * Returns information about an InternalServerException.
 * @export
 * @interface SBInsightsInternalServerExceptionResponseContent
 */
export interface SBInsightsInternalServerExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBInsightsInternalServerExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBInsightsInternalServerExceptionResponseContent
     */
    details: string;
}
/**
 * Keyword associated with the campaign.
 * @export
 * @interface SBInsightsKeyword
 */
export interface SBInsightsKeyword {
    /**
     * 
     * @type {SBInsightsMatchType}
     * @memberof SBInsightsKeyword
     */
    matchType: SBInsightsMatchType;
    /**
     * The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).
     * @type {number}
     * @memberof SBInsightsKeyword
     */
    bid: number;
    /**
     * The keyword text. Maximum of 10 words.
     * @type {string}
     * @memberof SBInsightsKeyword
     */
    keywordText: string;
}
/**
 * Keyword alert insights associated with the selected keyword targets and bids. LOW_KEYWORD_TRAFFIC is provided if the keyword has very low traffic and is available in all marketplaces. LOW_BID is provided if the selected bid is low compared to the historical bids for this keyword and is only available in the following marketplaces: US, CA, MX, BR, UK, DE, FR, ES, IT, IN, AE, NL, SE, JP, AU, SG.
 * @export
 * @enum {string}
 */

export enum SBInsightsKeywordAlertType {
    KeywordTraffic = 'LOW_KEYWORD_TRAFFIC',
    Bid = 'LOW_BID'
}

/**
 * Insights for keywords selected for targeting.
 * @export
 * @interface SBInsightsKeywordInsight
 */
export interface SBInsightsKeywordInsight {
    /**
     * 
     * @type {Array<SBInsightsKeywordAlertType>}
     * @memberof SBInsightsKeywordInsight
     */
    alerts?: Array<SBInsightsKeywordAlertType>;
    /**
     * The account-level ad-attributed impression share for the search-term / keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 7 days. This metric helps advertisers identify potential opportunities based on their share of relevant keywords. This information is only available for keywords the advertiser targeted with ad impressions. Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP.
     * @type {number}
     * @memberof SBInsightsKeywordInsight
     */
    searchTermImpressionShare?: number;
    /**
     * 
     * @type {SBInsightsMatchType}
     * @memberof SBInsightsKeywordInsight
     */
    matchType?: SBInsightsMatchType;
    /**
     * Correlates the ad group to the ad group array index specified in the request. Zero-based.
     * @type {number}
     * @memberof SBInsightsKeywordInsight
     */
    adGroupIndex?: number;
    /**
     * The account-level ad-attributed impression rank for the search-term / keyword. Provides the [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 7 days. It tells an advertiser how many advertisers had higher share of ad impressions. This information is only available for keywords the advertiser targeted with ad impressions. Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP.
     * @type {number}
     * @memberof SBInsightsKeywordInsight
     */
    searchTermImpressionRank?: number;
    /**
     * The associated bid. Note that this value must be less than the budget associated with the Advertiser account. For more information, see [supported features](https://advertising.amazon.com/API/docs/v2/guides/supported_features).
     * @type {number}
     * @memberof SBInsightsKeywordInsight
     */
    bid?: number;
    /**
     * Correlates the keyword to the keyword array index specified in the request. Zero-based.
     * @type {number}
     * @memberof SBInsightsKeywordInsight
     */
    keywordIndex?: number;
    /**
     * The keyword text. Maximum of 10 words.
     * @type {string}
     * @memberof SBInsightsKeywordInsight
     */
    keywordText?: string;
}
/**
 * The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.
 * @export
 * @enum {string}
 */

export enum SBInsightsMatchType {
    Exact = 'EXACT',
    Phrase = 'PHRASE',
    Broad = 'BROAD'
}

/**
 * @type SBInsightsObject
 * @export
 */
export type SBInsightsObject = KeywordInsight;

/**
 * Returns information about a ThrottlingException.
 * @export
 * @interface SBInsightsThrottlingExceptionResponseContent
 */
export interface SBInsightsThrottlingExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBInsightsThrottlingExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBInsightsThrottlingExceptionResponseContent
     */
    details: string;
}
/**
 * Returns information about an UnauthorizedException.
 * @export
 * @interface SBInsightsUnauthorizedExceptionResponseContent
 */
export interface SBInsightsUnauthorizedExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBInsightsUnauthorizedExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBInsightsUnauthorizedExceptionResponseContent
     */
    details: string;
}
/**
 * Returns information about an UnprocessableEntityException.
 * @export
 * @interface SBInsightsUnprocessableEntityExceptionResponseContent
 */
export interface SBInsightsUnprocessableEntityExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBInsightsUnprocessableEntityExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBInsightsUnprocessableEntityExceptionResponseContent
     */
    details: string;
}
/**
 * Optional SB creative type used for generating static or video generated keyword recommendations.  Inferred by asins if not included. |Identifier|Description|Recommendations| |----------|-----------|-----------| |PRODUCT_COLLECTION| Showcase multiple products within a branded shopping experience|Static| |AUTHOR_COLLECTION| Showcase books under your name that direct to your Book Brand landing page|Static| |STORE_SPOTLIGHT| Showcase your brand logo, headline, and up to 3 product categories or sub-pages|Static| |VIDEO| Display a video ad promoting a product that redirects to its landing page|Video| |BRAND_VIDEO| Display a branded video ad that redirects shoppers to your Brand Store landing page|Video| <br/>
 * @export
 * @enum {string}
 */

export enum SBKeywordRecommendationCreativeType {
    ProductCollection = 'PRODUCT_COLLECTION',
    AuthorCollection = 'AUTHOR_COLLECTION',
    StoreSpotlight = 'STORE_SPOTLIGHT',
    Video = 'VIDEO',
    BrandVideo = 'BRAND_VIDEO'
}

/**
 * The Error Response Object.
 * @export
 * @interface SBKeywordRecommendationError
 */
export interface SBKeywordRecommendationError {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBKeywordRecommendationError
     */
    code?: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBKeywordRecommendationError
     */
    details?: string;
}
/**
 * 
 * @export
 * @interface SBKeywordRecommendationLandingPage
 */
export interface SBKeywordRecommendationLandingPage {
    /**
     * The URL of the Stores page, or, Vendors may also specify the URL of a custom landing page.
     * @type {string}
     * @memberof SBKeywordRecommendationLandingPage
     */
    url?: string;
}
/**
 * The match type. For more information, see [match types](https://advertising.amazon.com/help#GHTRFDZRJPW6764R) in the Amazon Advertising support center.
 * @export
 * @enum {string}
 */

export enum SBKeywordRecommendationMatchType {
    Broad = 'broad',
    Exact = 'exact',
    Phrase = 'phrase'
}

/**
 * 
 * @export
 * @interface SBKeywordRecommendationRequestAsin
 */
export interface SBKeywordRecommendationRequestAsin {
    /**
     * 
     * @type {Array<string>}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    asins: Array<string>;
    /**
     * 
     * @type {SBKeywordRecommendationCreativeType}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    creativeType?: SBKeywordRecommendationCreativeType;
    /**
     * Maximum number of suggestions to return. Max value is 1000. If not provided, default to 100.
     * @type {number}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    creativeAsins?: Array<string>;
    /**
     * Optional locale to request keyword suggestion translations. For example, to request Simplified Chinese translations in US, provide locale “zh_CN”. Response will include both keyword suggestions and their translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale: “en_GB”) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SBKeywordRecommendationRequestAsin
     */
    locale?: string;
}
/**
 * 
 * @export
 * @interface SBKeywordRecommendationRequestUrl
 */
export interface SBKeywordRecommendationRequestUrl {
    /**
     * 
     * @type {SBKeywordRecommendationCreativeType}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    creativeType?: SBKeywordRecommendationCreativeType;
    /**
     * Maximum number of suggestions to return. Max value is 1000. If not provided, default to 100.
     * @type {number}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    creativeAsins?: Array<string>;
    /**
     * Optional locale to request keyword suggestion translations. For example, to request Simplified Chinese translations in US, provide locale “zh_CN”. Response will include both keyword suggestions and their translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale: “en_GB”) for DE, FR, IT and ES.
     * @type {string}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    locale?: string;
    /**
     * The URL of the Stores page, or, Vendors may also specify the URL of a custom landing page.
     * @type {string}
     * @memberof SBKeywordRecommendationRequestUrl
     */
    url: string;
}
/**
 * 
 * @export
 * @interface SBKeywordRecommendationThemeKeyword
 */
export interface SBKeywordRecommendationThemeKeyword {
    /**
     * Unique ID for each recommendation.
     * @type {string}
     * @memberof SBKeywordRecommendationThemeKeyword
     */
    recommendationId?: string;
    /**
     * Recommended keyword value.
     * @type {string}
     * @memberof SBKeywordRecommendationThemeKeyword
     */
    value?: string;
}
/**
 * 
 * @export
 * @interface SBKeywordRecommendationThemeRequest
 */
export interface SBKeywordRecommendationThemeRequest {
    /**
     * 
     * @type {Array<SBKeywordRecommendationThemes>}
     * @memberof SBKeywordRecommendationThemeRequest
     */
    themes?: Array<SBKeywordRecommendationThemes>;
    /**
     * Maximum number of suggestions to return for each theme. Max value is 1000. If not provided, default to 100.
     * @type {number}
     * @memberof SBKeywordRecommendationThemeRequest
     */
    maxNumSuggestions?: number;
    /**
     * 
     * @type {Array<SBKeywordRecommendationLandingPage>}
     * @memberof SBKeywordRecommendationThemeRequest
     */
    landingPages?: Array<SBKeywordRecommendationLandingPage>;
}
/**
 * 
 * @export
 * @interface SBKeywordRecommendationThemeSuggestion
 */
export interface SBKeywordRecommendationThemeSuggestion {
    /**
     * 
     * @type {Array<SBKeywordRecommendationThemeKeyword>}
     * @memberof SBKeywordRecommendationThemeSuggestion
     */
    keywords?: Array<SBKeywordRecommendationThemeKeyword>;
    /**
     * 
     * @type {SBKeywordRecommendationThemeType}
     * @memberof SBKeywordRecommendationThemeSuggestion
     */
    type?: SBKeywordRecommendationThemeType;
}
/**
 * Theme type for targeting. Used to get keyword recommendations for theme.
 * @export
 * @enum {string}
 */

export enum SBKeywordRecommendationThemeType {
    Brand = 'KEYWORDS_RELATED_TO_YOUR_BRAND',
    LandingPages = 'KEYWORDS_RELATED_TO_YOUR_LANDING_PAGES'
}

/**
 * 
 * @export
 * @interface SBKeywordRecommendationThemes
 */
export interface SBKeywordRecommendationThemes {
    /**
     * 
     * @type {SBKeywordRecommendationThemeType}
     * @memberof SBKeywordRecommendationThemes
     */
    themeType?: SBKeywordRecommendationThemeType;
}
/**
 * A recommendation identifier that describes the suggested action for the recommendation. |Identifier|Description| |----------|-----------| |addKeyword|The suggested action is to add the keyword.| <br/>
 * @export
 * @enum {string}
 */

export enum SBKeywordRecommendationType {
    AddKeyword = 'addKeyword'
}

/**
 * 
 * @export
 * @interface SBKeywordSuggestion
 */
export interface SBKeywordSuggestion {
    /**
     * The account-level ad-attributed impression share for the search-term / keyword. Provides percentage share of all ad impressions the advertiser has for the keyword in the last 7 days. This metric helps advertisers identify potential opportunities based on their share of relevant keywords.
     * @type {number}
     * @memberof SBKeywordSuggestion
     */
    searchTermImpressionShare?: number;
    /**
     * 
     * @type {SBKeywordRecommendationMatchType}
     * @memberof SBKeywordSuggestion
     */
    matchType?: SBKeywordRecommendationMatchType;
    /**
     * Localized keyword value if locale was specified.
     * @type {string}
     * @memberof SBKeywordSuggestion
     */
    translation?: string;
    /**
     * The account-level ad-attributed impression rank for the search-term / keyword. Provides the [1:N] place the advertiser ranks among all advertisers for the keyword by ad impressions in a marketplace in the last 7 days. It tells an advertiser how many advertisers had higher share of ad impressions.
     * @type {number}
     * @memberof SBKeywordSuggestion
     */
    searchTermImpressionRank?: number;
    /**
     * Unique ID for each recommendation.
     * @type {string}
     * @memberof SBKeywordSuggestion
     */
    recommendationId?: string;
    /**
     * 
     * @type {SBKeywordRecommendationType}
     * @memberof SBKeywordSuggestion
     */
    type?: SBKeywordRecommendationType;
    /**
     * Recommended keyword value.
     * @type {string}
     * @memberof SBKeywordSuggestion
     */
    value?: string;
}
/**
 * 
 * @export
 * @interface SBListAssociatedBudgetRulesResponse
 */
export interface SBListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SBCampaignBudgetRule>}
     * @memberof SBListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SBCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SBRuleBasedBudget
 */
export interface SBRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SBBudgetRule}
     * @memberof SBRuleBasedBudget
     */
    appliedRule?: SBBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SBRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SBRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * 
 * @export
 * @interface SBRuleDuration
 */
export interface SBRuleDuration {
    /**
     * 
     * @type {DateRangeTypeRuleDuration}
     * @memberof SBRuleDuration
     */
    dateRangeTypeRuleDuration: DateRangeTypeRuleDuration;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SBRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * Returns information about an AccessDeniedException.
 * @export
 * @interface SBTargetingAccessDeniedExceptionResponseContent
 */
export interface SBTargetingAccessDeniedExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBTargetingAccessDeniedExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBTargetingAccessDeniedExceptionResponseContent
     */
    details: string;
}
/**
 * 
 * @export
 * @interface SBTargetingAgeRange
 */
export interface SBTargetingAgeRange {
    /**
     * Id of Age Range. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Age Range Refinement IDs.
     * @type {string}
     * @memberof SBTargetingAgeRange
     */
    ageRangeRefinementId: string;
    /**
     * Name of Age Range.
     * @type {string}
     * @memberof SBTargetingAgeRange
     */
    name?: string;
    /**
     * Translated name of Age Range based off locale sent in request.
     * @type {string}
     * @memberof SBTargetingAgeRange
     */
    translatedName?: string;
}
/**
 * Returns information about a BadRequestException.
 * @export
 * @interface SBTargetingBadRequestExceptionResponseContent
 */
export interface SBTargetingBadRequestExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBTargetingBadRequestExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBTargetingBadRequestExceptionResponseContent
     */
    details: string;
}
/**
 * 
 * @export
 * @interface SBTargetingBrand
 */
export interface SBTargetingBrand {
    /**
     * Id of brand. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Brand Refinement IDs.
     * @type {string}
     * @memberof SBTargetingBrand
     */
    brandRefinementId: string;
    /**
     * Name of brand.
     * @type {string}
     * @memberof SBTargetingBrand
     */
    name?: string;
}
/**
 * Category details.
 * @export
 * @interface SBTargetingCategory
 */
export interface SBTargetingCategory {
    /**
     * 
     * @type {SBTargetingIntegerRange}
     * @memberof SBTargetingCategory
     */
    asinCountRange?: SBTargetingIntegerRange;
    /**
     * If the category is targetable or not.
     * @type {boolean}
     * @memberof SBTargetingCategory
     */
    isTargetable?: boolean;
    /**
     * The category refinement id of the parent category. Missing parentCategoryRefinementId signifies this is a root category.
     * @type {string}
     * @memberof SBTargetingCategory
     */
    parentCategoryRefinementId?: string;
    /**
     * 
     * @type {SBTargetingEstimatedReachRange}
     * @memberof SBTargetingCategory
     */
    estimatedReach?: SBTargetingEstimatedReachRange;
    /**
     * Name of category.
     * @type {string}
     * @memberof SBTargetingCategory
     */
    name?: string;
    /**
     * Translated name of the category.
     * @type {string}
     * @memberof SBTargetingCategory
     */
    translatedName?: string;
    /**
     * The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.
     * @type {string}
     * @memberof SBTargetingCategory
     */
    categoryRefinementId?: string;
}
/**
 * 
 * @export
 * @interface SBTargetingEstimatedReachRange
 */
export interface SBTargetingEstimatedReachRange {
    /**
     * 
     * @type {number}
     * @memberof SBTargetingEstimatedReachRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof SBTargetingEstimatedReachRange
     */
    max?: number;
}
/**
 * 
 * @export
 * @interface SBTargetingGenre
 */
export interface SBTargetingGenre {
    /**
     * Id of Genre. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Genre Refinement IDs.
     * @type {string}
     * @memberof SBTargetingGenre
     */
    genreRefinementId: string;
    /**
     * Name of Genre.
     * @type {string}
     * @memberof SBTargetingGenre
     */
    name?: string;
    /**
     * Translated name of Genre based off locale sent in request.
     * @type {string}
     * @memberof SBTargetingGenre
     */
    translatedName?: string;
}
/**
 * Response object for /sb/negativeTargets/brands/recommendations containing list of brands for negative targeting.
 * @export
 * @interface SBTargetingGetNegativeBrandsResponseContent
 */
export interface SBTargetingGetNegativeBrandsResponseContent {
    /**
     * List of Brands.
     * @type {Array<SBTargetingBrand>}
     * @memberof SBTargetingGetNegativeBrandsResponseContent
     */
    brands?: Array<SBTargetingBrand>;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBTargetingGetNegativeBrandsResponseContent
     */
    nextToken?: string;
}
/**
 * Response object for /sb/targets/categories/{categoryRefinementId}/refinements containing information on Brand Nodes, Age Range Nodes, and Genre Nodes.     Response is paginated with pagination occurring for all three arrays at once.     Example: If there are 800 brands, 5 age ranges, and 600 genres, the first response will return 500 brands, 5 age ranges, and 500 genres. The next paginated response will return 300 brands, 0 age ranges, and 100 genres.
 * @export
 * @interface SBTargetingGetRefinementsForCategoryResponseContent
 */
export interface SBTargetingGetRefinementsForCategoryResponseContent {
    /**
     * List of Age Ranges. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Age Ranges. Age Ranges are only available for categories related to children\'s toys and games.
     * @type {Array<SBTargetingAgeRange>}
     * @memberof SBTargetingGetRefinementsForCategoryResponseContent
     */
    ageRanges?: Array<SBTargetingAgeRange>;
    /**
     * List of Brands.
     * @type {Array<SBTargetingBrand>}
     * @memberof SBTargetingGetRefinementsForCategoryResponseContent
     */
    brands?: Array<SBTargetingBrand>;
    /**
     * List of Genres. Use /sb/targets/categories/{categoryRefinementId}/refinements to retrieve Genre Node IDs. Genres are only available for categories related to books.
     * @type {Array<SBTargetingGenre>}
     * @memberof SBTargetingGetRefinementsForCategoryResponseContent
     */
    genres?: Array<SBTargetingGenre>;
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBTargetingGetRefinementsForCategoryResponseContent
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SBTargetingGetTargetableASINCountsRequestContent
 */
export interface SBTargetingGetTargetableASINCountsRequestContent {
    /**
     * List of Age Range Refinement Ids.
     * @type {Array<string>}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    ageRanges?: Array<string>;
    /**
     * List of Brand Refinement Ids.
     * @type {Array<string>}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    brands?: Array<string>;
    /**
     * List of Genre Refinement Ids.
     * @type {Array<string>}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    genres?: Array<string>;
    /**
     * Indicates if products have prime shipping. Leave empty to include both prime shipping and non-prime shipping products.
     * @type {boolean}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    isPrimeShipping?: boolean;
    /**
     * 
     * @type {SBTargetingRatingRange}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    ratingRange?: SBTargetingRatingRange;
    /**
     * The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.
     * @type {string}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    category: string;
    /**
     * 
     * @type {SBTargetingPriceRange}
     * @memberof SBTargetingGetTargetableASINCountsRequestContent
     */
    priceRange?: SBTargetingPriceRange;
}
/**
 * Response object for /sb/targets/products/count to get number of targetable asins for refinements provided by the user
 * @export
 * @interface SBTargetingGetTargetableASINCountsResponseContent
 */
export interface SBTargetingGetTargetableASINCountsResponseContent {
    /**
     * 
     * @type {SBTargetingIntegerRange}
     * @memberof SBTargetingGetTargetableASINCountsResponseContent
     */
    asinCounts?: SBTargetingIntegerRange;
}
/**
 * Response object for /sb/targets/categories containing all targetable categories for the advertiser\'s marketplace.
 * @export
 * @interface SBTargetingGetTargetableCategoriesResponseContent
 */
export interface SBTargetingGetTargetableCategoriesResponseContent {
    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the `NextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SBTargetingGetTargetableCategoriesResponseContent
     */
    nextToken?: string;
    /**
     * List of categories.
     * @type {Array<SBTargetingCategory>}
     * @memberof SBTargetingGetTargetableCategoriesResponseContent
     */
    categoryTree?: Array<SBTargetingCategory>;
}
/**
 * 
 * @export
 * @interface SBTargetingIntegerRange
 */
export interface SBTargetingIntegerRange {
    /**
     * 
     * @type {number}
     * @memberof SBTargetingIntegerRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof SBTargetingIntegerRange
     */
    max?: number;
}
/**
 * Returns information about an InternalServerException.
 * @export
 * @interface SBTargetingInternalServerExceptionResponseContent
 */
export interface SBTargetingInternalServerExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBTargetingInternalServerExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBTargetingInternalServerExceptionResponseContent
     */
    details: string;
}
/**
 * The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
 * @export
 * @enum {string}
 */

export enum SBTargetingLocale {
    ArAe = 'ar_AE',
    DeDe = 'de_DE',
    EnAe = 'en_AE',
    EnAu = 'en_AU',
    EnCa = 'en_CA',
    EnGb = 'en_GB',
    EnIn = 'en_IN',
    EnSg = 'en_SG',
    EnUs = 'en_US',
    EsEs = 'es_ES',
    EsMx = 'es_MX',
    FrCa = 'fr_CA',
    FrFr = 'fr_FR',
    HiIn = 'hi_IN',
    ItIt = 'it_IT',
    JaJp = 'ja_JP',
    KoKr = 'ko_KR',
    NlNl = 'nl_NL',
    PlPl = 'pl_PL',
    PtBr = 'pt_BR',
    SvSe = 'sv_SE',
    TaIn = 'ta_IN',
    ThTh = 'th_TH',
    TrTr = 'tr_TR',
    ViVn = 'vi_VN',
    ZhCn = 'zh_CN'
}

/**
 * A range of prices. We use this to retrieve the number of targetable ASINs that falls within this price range.
 * @export
 * @interface SBTargetingPriceRange
 */
export interface SBTargetingPriceRange {
    /**
     * 
     * @type {number}
     * @memberof SBTargetingPriceRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof SBTargetingPriceRange
     */
    max?: number;
}
/**
 * Rating range is restricted to integers between 0 and 5, inclusive. Min must be less than or equal to max. We use this to retrieve the number of targetable ASINs that falls within this rating range.
 * @export
 * @interface SBTargetingRatingRange
 */
export interface SBTargetingRatingRange {
    /**
     * 
     * @type {number}
     * @memberof SBTargetingRatingRange
     */
    min?: number;
    /**
     * 
     * @type {number}
     * @memberof SBTargetingRatingRange
     */
    max?: number;
}
/**
 * The supply source where the target will be used. Use `AMAZON` for placements on Amazon website. Use `STREAMING_VIDEO` for off-site video placements such as IMDb TV.
 * @export
 * @enum {string}
 */

export enum SBTargetingSupplySource {
    Amazon = 'AMAZON',
    StreamingVideo = 'STREAMING_VIDEO'
}

/**
 * Returns information about a ThrottlingException.
 * @export
 * @interface SBTargetingThrottlingExceptionResponseContent
 */
export interface SBTargetingThrottlingExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBTargetingThrottlingExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBTargetingThrottlingExceptionResponseContent
     */
    details: string;
}
/**
 * Returns information about an UnauthorizedException.
 * @export
 * @interface SBTargetingUnauthorizedExceptionResponseContent
 */
export interface SBTargetingUnauthorizedExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBTargetingUnauthorizedExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBTargetingUnauthorizedExceptionResponseContent
     */
    details: string;
}
/**
 * Returns information about an UnprocessableEntityException.
 * @export
 * @interface SBTargetingUnprocessableEntityExceptionResponseContent
 */
export interface SBTargetingUnprocessableEntityExceptionResponseContent {
    /**
     * The HTTP status code of the response.
     * @type {string}
     * @memberof SBTargetingUnprocessableEntityExceptionResponseContent
     */
    code: string;
    /**
     * A human-readable description of the response.
     * @type {string}
     * @memberof SBTargetingUnprocessableEntityExceptionResponseContent
     */
    details: string;
}
/**
 * 
 * @export
 * @interface SDBudgetHistory
 */
export interface SDBudgetHistory {
    /**
     * 
     * @type {Array<SDRuleBasedBudget>}
     * @memberof SDBudgetHistory
     */
    history?: Array<SDRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SDBudgetRule
 */
export interface SDBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SDBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SDBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SDBudgetRuleDetails}
     * @memberof SDBudgetRule
     */
    ruleDetails?: SDBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SDBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SD campaign
 * @export
 * @interface SDBudgetRuleDetails
 */
export interface SDBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SDBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SDBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SDRuleType}
     * @memberof SDBudgetRuleDetails
     */
    ruleType?: SDRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SDBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SDBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SDBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SDGetAssociatedCampaignsResponse
 */
export interface SDGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SDGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SDHeadlineRecommendationAccessDeniedException
 */
export interface SDHeadlineRecommendationAccessDeniedException {
    /**
     * AccessDeniedErrorCode.
     * @type {string}
     * @memberof SDHeadlineRecommendationAccessDeniedException
     */
    code?: SDHeadlineRecommendationAccessDeniedExceptionCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof SDHeadlineRecommendationAccessDeniedException
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum SDHeadlineRecommendationAccessDeniedExceptionCodeEnum {
    AccessDenied = 'ACCESS_DENIED'
}

/**
 * 
 * @export
 * @interface SDHeadlineRecommendationIdentifierNotfoundException
 */
export interface SDHeadlineRecommendationIdentifierNotfoundException {
    /**
     * IdentiferNotFoundErrorCode.
     * @type {string}
     * @memberof SDHeadlineRecommendationIdentifierNotfoundException
     */
    code?: SDHeadlineRecommendationIdentifierNotfoundExceptionCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof SDHeadlineRecommendationIdentifierNotfoundException
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum SDHeadlineRecommendationIdentifierNotfoundExceptionCodeEnum {
    IdentifierNotFound = 'IDENTIFIER_NOT_FOUND'
}

/**
 * 
 * @export
 * @interface SDHeadlineRecommendationInternalServerException
 */
export interface SDHeadlineRecommendationInternalServerException {
    /**
     * InternalErrorCode.
     * @type {string}
     * @memberof SDHeadlineRecommendationInternalServerException
     */
    code?: SDHeadlineRecommendationInternalServerExceptionCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof SDHeadlineRecommendationInternalServerException
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum SDHeadlineRecommendationInternalServerExceptionCodeEnum {
    InternalError = 'INTERNAL_ERROR'
}

/**
 * 
 * @export
 * @interface SDHeadlineRecommendationMarsThrottlingException
 */
export interface SDHeadlineRecommendationMarsThrottlingException {
    /**
     * ThrottledErrorCode.
     * @type {string}
     * @memberof SDHeadlineRecommendationMarsThrottlingException
     */
    code?: SDHeadlineRecommendationMarsThrottlingExceptionCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof SDHeadlineRecommendationMarsThrottlingException
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum SDHeadlineRecommendationMarsThrottlingExceptionCodeEnum {
    Throttled = 'THROTTLED'
}

/**
 * Request structure of SD headline recommendation API.
 * @export
 * @interface SDHeadlineRecommendationRequest
 */
export interface SDHeadlineRecommendationRequest {
    /**
     * An array of ASINs associated with the creative.
     * @type {Array<string>}
     * @memberof SDHeadlineRecommendationRequest
     */
    asins?: Array<string>;
    /**
     * Maximum number of recommendations that API should return. Response will [0, maxNumRecommendations] recommendations (recommendations are not guaranteed as there can be instances where the ML model can not generate policy compliant headlines for the given set of asins).
     * @type {number}
     * @memberof SDHeadlineRecommendationRequest
     */
    maxNumRecommendations?: number;
    /**
     * 
     * @type {string}
     * @memberof SDHeadlineRecommendationRequest
     */
    adFormat?: SDHeadlineRecommendationRequestAdFormatEnum;
}

/**
    * @export
    * @enum {string}
    */
export enum SDHeadlineRecommendationRequestAdFormatEnum {
    SponsoredDisplay = 'SPONSORED_DISPLAY'
}

/**
 * Response structure of SD headline recommendation API.
 * @export
 * @interface SDHeadlineRecommendationResponse
 */
export interface SDHeadlineRecommendationResponse {
    /**
     * An identifier for request made which is generated by server.
     * @type {string}
     * @memberof SDHeadlineRecommendationResponse
     */
    requestId?: string;
    /**
     * Recommendations are sorted, i.e., more suitable headline has lesser array index value.
     * @type {Array<RecommendedHeadline>}
     * @memberof SDHeadlineRecommendationResponse
     */
    recommendations?: Array<RecommendedHeadline>;
}
/**
 * 
 * @export
 * @interface SDHeadlineRecommendationSchemaValidationException
 */
export interface SDHeadlineRecommendationSchemaValidationException {
    /**
     * InvalidArgumentErrorCode.
     * @type {string}
     * @memberof SDHeadlineRecommendationSchemaValidationException
     */
    code?: SDHeadlineRecommendationSchemaValidationExceptionCodeEnum;
    /**
     * A human-readable description of the error response.
     * @type {string}
     * @memberof SDHeadlineRecommendationSchemaValidationException
     */
    details?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum SDHeadlineRecommendationSchemaValidationExceptionCodeEnum {
    InvalidArgument = 'INVALID_ARGUMENT'
}

/**
 * 
 * @export
 * @interface SDListAssociatedBudgetRulesResponse
 */
export interface SDListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SDBudgetRule>}
     * @memberof SDListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SDBudgetRule>;
}
/**
 * 
 * @export
 * @interface SDRuleBasedBudget
 */
export interface SDRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SDBudgetRule}
     * @memberof SDRuleBasedBudget
     */
    appliedRule?: SDBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SDRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SDRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SDRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * 
 * @export
 * @interface SPBudgetHistory
 */
export interface SPBudgetHistory {
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPBudgetHistory
     */
    nextToken?: string;
    /**
     * 
     * @type {Array<SPRuleBasedBudget>}
     * @memberof SPBudgetHistory
     */
    history?: Array<SPRuleBasedBudget>;
}
/**
 * 
 * @export
 * @interface SPBudgetRule
 */
export interface SPBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule status. Read-only.
     * @type {string}
     * @memberof SPBudgetRule
     */
    ruleStatus?: string;
}
/**
 * Object representing details of a budget rule for SP campaign
 * @export
 * @interface SPBudgetRuleDetails
 */
export interface SPBudgetRuleDetails {
    /**
     * 
     * @type {RuleDuration}
     * @memberof SPBudgetRuleDetails
     */
    duration?: RuleDuration;
    /**
     * 
     * @type {Recurrence}
     * @memberof SPBudgetRuleDetails
     */
    recurrence?: Recurrence;
    /**
     * 
     * @type {SPRuleType}
     * @memberof SPBudgetRuleDetails
     */
    ruleType?: SPRuleType;
    /**
     * 
     * @type {BudgetIncreaseBy}
     * @memberof SPBudgetRuleDetails
     */
    budgetIncreaseBy?: BudgetIncreaseBy;
    /**
     * The budget rule name. Required to be unique within a campaign.
     * @type {string}
     * @memberof SPBudgetRuleDetails
     */
    name?: string;
    /**
     * 
     * @type {PerformanceMeasureCondition}
     * @memberof SPBudgetRuleDetails
     */
    performanceMeasureCondition?: PerformanceMeasureCondition;
}
/**
 * 
 * @export
 * @interface SPCampaignBudgetRule
 */
export interface SPCampaignBudgetRule {
    /**
     * 
     * @type {State}
     * @memberof SPCampaignBudgetRule
     */
    ruleState?: State;
    /**
     * Epoch time of budget rule update. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    lastUpdatedDate?: number;
    /**
     * Epoch time of budget rule creation. Read-only.
     * @type {number}
     * @memberof SPCampaignBudgetRule
     */
    createdDate?: number;
    /**
     * 
     * @type {SPBudgetRuleDetails}
     * @memberof SPCampaignBudgetRule
     */
    ruleDetails?: SPBudgetRuleDetails;
    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleId: string;
    /**
     * The budget rule evaluation status. Read-only.
     * @type {string}
     * @memberof SPCampaignBudgetRule
     */
    ruleStatus?: string;
}
/**
 * 
 * @export
 * @interface SPGetAssociatedCampaignsResponse
 */
export interface SPGetAssociatedCampaignsResponse {
    /**
     * A list of campaigns that are associated to this budget rule.
     * @type {Array<AssociatedCampaign>}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    associatedCampaigns?: Array<AssociatedCampaign>;
    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the `nextToken` field is empty, there are no further results.
     * @type {string}
     * @memberof SPGetAssociatedCampaignsResponse
     */
    nextToken?: string;
}
/**
 * 
 * @export
 * @interface SPListAssociatedBudgetRulesResponse
 */
export interface SPListAssociatedBudgetRulesResponse {
    /**
     * A list of associated budget rules.
     * @type {Array<SPCampaignBudgetRule>}
     * @memberof SPListAssociatedBudgetRulesResponse
     */
    associatedRules?: Array<SPCampaignBudgetRule>;
}
/**
 * 
 * @export
 * @interface SPRuleBasedBudget
 */
export interface SPRuleBasedBudget {
    /**
     * Epoch time of budget rule execution.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    executionTime?: number;
    /**
     * 
     * @type {SPBudgetRule}
     * @memberof SPRuleBasedBudget
     */
    appliedRule?: SPBudgetRule;
    /**
     * The budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    ruleBasedBudgetValue?: number;
    /**
     * The daily budget value.
     * @type {number}
     * @memberof SPRuleBasedBudget
     */
    dailyBudgetValue?: number;
    /**
     * 
     * @type {PerformanceMetricValue}
     * @memberof SPRuleBasedBudget
     */
    performanceMetric?: PerformanceMetricValue;
}
/**
 * The type of budget rule. SCHEDULE: A budget rule based on a start and end date. PERFORMANCE: A budget rule based on advertising performance criteria.
 * @export
 * @enum {string}
 */

export enum SPRuleType {
    Schedule = 'SCHEDULE',
    Performance = 'PERFORMANCE'
}

/**
 * Missed Opportunities in the trailing seven days.
 * @export
 * @interface SevenDaysMissedOpportunities
 */
export interface SevenDaysMissedOpportunities {
    /**
     * Lower bound of the estimated Missed Sales. This will be in local currency.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedSalesLower?: number;
    /**
     * Upper bound of the estimated Missed Sales. This will be in local currency.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedSalesUpper?: number;
    /**
     * End date of the Missed Opportunities date range (YYYY-MM-DD) in local time.
     * @type {string}
     * @memberof SevenDaysMissedOpportunities
     */
    endDate?: string;
    /**
     * Lower bound of the estimated Missed Impressions.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedImpressionsLower?: number;
    /**
     * Lower bound of the estimated Missed Clicks.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedClicksLower?: number;
    /**
     * Upper bound of the estimated Missed Clicks.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedClicksUpper?: number;
    /**
     * Upper bound of the estimated Missed Impressions.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    estimatedMissedImpressionsUpper?: number;
    /**
     * Start date of the Missed Opportunities date range (YYYY-MM-DD) in local time.
     * @type {string}
     * @memberof SevenDaysMissedOpportunities
     */
    startDate?: string;
    /**
     * Percentage of time the campaign is active with a budget.
     * @type {number}
     * @memberof SevenDaysMissedOpportunities
     */
    percentTimeInBudget?: number;
}
/**
 * List of bid adjustments for shopper segments. - NEW_TO_BRAND_PURCHASE - The shopper segment where shopper has not purchased product from the brand.
 * @export
 * @enum {string}
 */

export enum ShopperSegment {
    NewToBrandPurchase = 'NEW_TO_BRAND_PURCHASE'
}

/**
 * The budget rule state.
 * @export
 * @enum {string}
 */

export enum State {
    Active = 'ACTIVE',
    Paused = 'PAUSED'
}

/**
 * 
 * @export
 * @interface StatusFilter
 */
export interface StatusFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof StatusFilter
     */
    include?: Array<string>;
}
/**
 * 
 * @export
 * @interface StorePage
 */
export interface StorePage {
    /**
     * Display Name of the store page shown on a store spotlight campaign.
     * @type {string}
     * @memberof StorePage
     */
    displayName?: string;
    /**
     * Selected asin from the store page which is displayed on the store spotlight campaign.
     * @type {string}
     * @memberof StorePage
     */
    primaryAsin?: string;
}
/**
 * 
 * @export
 * @interface StoreSpotlightCreative
 */
export interface StoreSpotlightCreative {
    /**
     * 
     * @type {AssetCrop}
     * @memberof StoreSpotlightCreative
     */
    brandLogoCrop?: AssetCrop;
    /**
     * The displayed brand name in the ad headline. Maximum length is 30 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof StoreSpotlightCreative
     */
    brandName: string;
    /**
     * An array of subpages
     * @type {Array<Subpage>}
     * @memberof StoreSpotlightCreative
     */
    subpages: Array<Subpage>;
    /**
     * The identifier of the [brand logo](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#brandlogo) image from the brand store\'s asset library. Note that for campaigns created in the Amazon Advertising console prior to release of the brand store\'s assets library, responses will not include a value for this field.
     * @type {string}
     * @memberof StoreSpotlightCreative
     */
    brandLogoAssetId: string;
    /**
     * The headline text. Maximum length of the string is 50 characters for all marketplaces other than Japan, which has a maximum length of 35 characters. See [the policy](https://advertising.amazon.com/resources/ad-policy/sponsored-ads-policies#headlines) for headline requirements.
     * @type {string}
     * @memberof StoreSpotlightCreative
     */
    headline: string;
}
/**
 * 
 * @export
 * @interface SubmitImageTasksRequestContent
 */
export interface SubmitImageTasksRequestContent {
    /**
     * Advertiser provided information to generate AI images. Max size of the list is 4, each element will be executed as an individual image task
     * @type {Array<ImageTaskMetadata>}
     * @memberof SubmitImageTasksRequestContent
     */
    imageTaskMetadataList?: Array<ImageTaskMetadata>;
}
/**
 * 
 * @export
 * @interface SubmitImageTasksResponseContent
 */
export interface SubmitImageTasksResponseContent {
    /**
     * 
     * @type {Array<Submitted>}
     * @memberof SubmitImageTasksResponseContent
     */
    submitted?: Array<Submitted>;
    /**
     * As per API First guidance, batch API should return a separate list for success and errors in the response. The success/submitted and error fields will indicate the status of submission, they don\'t mean the status of image generation task. Status code will be 207 for partial successful requests and all successful requests. A batchId that is used to track status multiple tasks if they are submitted in one batch request If none of the request is submitted successfully, batchId will be null
     * @type {string}
     * @memberof SubmitImageTasksResponseContent
     */
    batchId?: string;
    /**
     * 
     * @type {Array<ErrorDetails>}
     * @memberof SubmitImageTasksResponseContent
     */
    error?: Array<ErrorDetails>;
}
/**
 * 
 * @export
 * @interface Submitted
 */
export interface Submitted {
    /**
     * The index of the image task in the array from the request body
     * @type {number}
     * @memberof Submitted
     */
    index?: number;
    /**
     * The identifier of image generation task
     * @type {string}
     * @memberof Submitted
     */
    taskId?: string;
}
/**
 * 
 * @export
 * @interface Subpage
 */
export interface Subpage {
    /**
     * 
     * @type {string}
     * @memberof Subpage
     */
    pageTitle?: string;
    /**
     * 
     * @type {string}
     * @memberof Subpage
     */
    asin?: string;
    /**
     * 
     * @type {string}
     * @memberof Subpage
     */
    url?: string;
}
/**
 * Suggested Headline in response object.
 * @export
 * @interface SuggestedHeadline
 */
export interface SuggestedHeadline {
    /**
     * Unique Id of suggested headline.
     * @type {string}
     * @memberof SuggestedHeadline
     */
    headlineId?: string;
    /**
     * String that contains suggested headline.
     * @type {string}
     * @memberof SuggestedHeadline
     */
    headline?: string;
}
/**
 * 
 * @export
 * @interface TaskIdFilter
 */
export interface TaskIdFilter {
    /**
     * 
     * @type {Array<string>}
     * @memberof TaskIdFilter
     */
    include?: Array<string>;
}
/**
 * Text component which needs to be pre moderated
 * @export
 * @interface TextComponent
 */
export interface TextComponent {
    /**
     * Type of text component.
     * @type {string}
     * @memberof TextComponent
     */
    componentType: TextComponentComponentTypeEnum;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof TextComponent
     */
    id: string;
    /**
     * Text which needs to be moderated.
     * @type {string}
     * @memberof TextComponent
     */
    text: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TextComponentComponentTypeEnum {
    Headline = 'HEADLINE',
    BrandName = 'BRAND_NAME',
    OtherText = 'OTHER_TEXT'
}

/**
 * Pre moderation result for a text component
 * @export
 * @interface TextComponentResponse
 */
export interface TextComponentResponse {
    /**
     * The pre moderation status of the component.
     * @type {string}
     * @memberof TextComponentResponse
     */
    preModerationStatus?: TextComponentResponsePreModerationStatusEnum;
    /**
     * Type of the text component.
     * @type {string}
     * @memberof TextComponentResponse
     */
    componentType?: TextComponentResponseComponentTypeEnum;
    /**
     * A list of corrected text without any policy violation. You could consider replacing the component with one of the corrected texts
     * @type {Array<string>}
     * @memberof TextComponentResponse
     */
    corrections?: Array<string>;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<TextPolicyViolation>}
     * @memberof TextComponentResponse
     */
    policyViolations?: Array<TextPolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof TextComponentResponse
     */
    id?: string;
    /**
     * Text which got pre moderated.
     * @type {string}
     * @memberof TextComponentResponse
     */
    text?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum TextComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum TextComponentResponseComponentTypeEnum {
    Headline = 'HEADLINE',
    BrandName = 'BRAND_NAME',
    OtherText = 'OTHER_TEXT'
}

/**
 * Structure of a text evidence
 * @export
 * @interface TextEvidence
 */
export interface TextEvidence {
    /**
     * The specific text determined to violate the specified policy in reviewedText.
     * @type {string}
     * @memberof TextEvidence
     */
    violatingText?: string;
    /**
     * 
     * @type {TextEvidencePosition}
     * @memberof TextEvidence
     */
    position?: TextEvidencePosition;
}
/**
 * Position in the textComponent where the policy violation is detected.
 * @export
 * @interface TextEvidencePosition
 */
export interface TextEvidencePosition {
    /**
     * Zero-based index into the text in textComponent where the text specified in violatingText starts.
     * @type {number}
     * @memberof TextEvidencePosition
     */
    start?: number;
    /**
     * Zero-based index into the text in textComponent where the text specified in violatingText ends.
     * @type {number}
     * @memberof TextEvidencePosition
     */
    end?: number;
}
/**
 * Structure of policy violation for a text component
 * @export
 * @interface TextPolicyViolation
 */
export interface TextPolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    policyDescription?: string;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    type?: TextPolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof TextPolicyViolation
     */
    policyLinkUrl?: string;
    /**
     * List of text evidences
     * @type {Array<TextEvidence>}
     * @memberof TextPolicyViolation
     */
    textEvidences?: Array<TextEvidence>;
}

/**
    * @export
    * @enum {string}
    */
export enum TextPolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * 
 * @export
 * @interface TextPosition
 */
export interface TextPosition {
    /**
     * Zero-based index into the text in reviewedText where the text specified in violatingText starts.
     * @type {number}
     * @memberof TextPosition
     */
    start?: number;
    /**
     * Zero-based index into the text in reviewedText where the text specified in violatingText ends.
     * @type {number}
     * @memberof TextPosition
     */
    end?: number;
}
/**
 * 
 * @export
 * @interface TextRecommendation
 */
export interface TextRecommendation {
    /**
     * Unique ID for generated recommendation.
     * @type {string}
     * @memberof TextRecommendation
     */
    id?: string;
    /**
     * Recommendation value.
     * @type {string}
     * @memberof TextRecommendation
     */
    value?: string;
}
/**
 * Structure for theme details
 * @export
 * @interface Theme
 */
export interface Theme {
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    themeForDisplay: string;
    /**
     * 
     * @type {string}
     * @memberof Theme
     */
    themeId: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum ThrottledErrorCode {
    Throttled = 'THROTTLED'
}

/**
 * 
 * @export
 * @enum {string}
 */

export enum ThrottlingErrorCode {
    Throttled = 'THROTTLED'
}

/**
 * 
 * @export
 * @interface ThrottlingErrorResponseContent
 */
export interface ThrottlingErrorResponseContent {
    /**
     * 
     * @type {ThrottlingErrorCode}
     * @memberof ThrottlingErrorResponseContent
     */
    code: ThrottlingErrorCode;
    /**
     * 
     * @type {string}
     * @memberof ThrottlingErrorResponseContent
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof ThrottlingErrorResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface ThrottlingExceptionResponseContent
 */
export interface ThrottlingExceptionResponseContent {
    /**
     * 
     * @type {ThrottledErrorCode}
     * @memberof ThrottlingExceptionResponseContent
     */
    code: ThrottledErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof ThrottlingExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @enum {string}
 */

export enum UnauthorizedErrorCode {
    Unauthorized = 'UNAUTHORIZED'
}

/**
 * 
 * @export
 * @interface UnauthorizedErrorResponseContent
 */
export interface UnauthorizedErrorResponseContent {
    /**
     * 
     * @type {UnauthorizedErrorCode}
     * @memberof UnauthorizedErrorResponseContent
     */
    code: UnauthorizedErrorCode;
    /**
     * 
     * @type {string}
     * @memberof UnauthorizedErrorResponseContent
     */
    requestId: string;
    /**
     * 
     * @type {string}
     * @memberof UnauthorizedErrorResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface UnauthorizedExceptionResponseContent
 */
export interface UnauthorizedExceptionResponseContent {
    /**
     * 
     * @type {UnauthorizedErrorCode}
     * @memberof UnauthorizedExceptionResponseContent
     */
    code: UnauthorizedErrorCode;
    /**
     * Human readable error message.
     * @type {string}
     * @memberof UnauthorizedExceptionResponseContent
     */
    message: string;
}
/**
 * 
 * @export
 * @interface UnsupportedMediaTypeExceptionResponseContent
 */
export interface UnsupportedMediaTypeExceptionResponseContent {
    /**
     * A human-readable description of the enumerated response code in the `code` field.
     * @type {string}
     * @memberof UnsupportedMediaTypeExceptionResponseContent
     */
    code: string;
    /**
     * An enumerated response code.
     * @type {string}
     * @memberof UnsupportedMediaTypeExceptionResponseContent
     */
    details: string;
}
/**
 * 
 * @export
 * @interface UpdateAd
 */
export interface UpdateAd {
    /**
     * The product ad identifier.
     * @type {string}
     * @memberof UpdateAd
     */
    adId: string;
    /**
     * The name of the ad.
     * @type {string}
     * @memberof UpdateAd
     */
    name?: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof UpdateAd
     */
    state?: CreateOrUpdateEntityState;
}
/**
 * 
 * @export
 * @interface UpdateAdGroup
 */
export interface UpdateAdGroup {
    /**
     * The name of the ad group.
     * @type {string}
     * @memberof UpdateAdGroup
     */
    name?: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof UpdateAdGroup
     */
    state?: CreateOrUpdateEntityState;
    /**
     * The identifier of the keyword.
     * @type {string}
     * @memberof UpdateAdGroup
     */
    adGroupId: string;
}
/**
 * 
 * @export
 * @interface UpdateBudgetRulesResponse
 */
export interface UpdateBudgetRulesResponse {
    /**
     * 
     * @type {Array<BudgetRuleResponse>}
     * @memberof UpdateBudgetRulesResponse
     */
    responses?: Array<BudgetRuleResponse>;
}
/**
 * 
 * @export
 * @interface UpdateCampaign
 */
export interface UpdateCampaign {
    /**
     * The identifier of the campaign. The identifier of an existing portfolio to which the campaign is associated.
     * @type {string}
     * @memberof UpdateCampaign
     */
    portfolioId?: string | null;
    /**
     * 
     * @type {Bidding}
     * @memberof UpdateCampaign
     */
    bidding?: Bidding;
    /**
     * endDate is optional. If endDate is specified, startDate must be specified as well.
     * @type {string}
     * @memberof UpdateCampaign
     */
    endDate?: string | null;
    /**
     * Entity object identifier.
     * @type {string}
     * @memberof UpdateCampaign
     */
    campaignId: string;
    /**
     * The name of the campaign.
     * @type {string}
     * @memberof UpdateCampaign
     */
    name?: string;
    /**
     * 
     * @type {CreateOrUpdateEntityState}
     * @memberof UpdateCampaign
     */
    state?: CreateOrUpdateEntityState;
    /**
     * startDate can only be changed if the current startDate is in the future.
     * @type {string}
     * @memberof UpdateCampaign
     */
    startDate?: string;
    /**
     * The budget of the campaign. See https://advertising.amazon.com/help?entityId=ENTITYJDATFOIA05Q7#GE5QEBS6QRJJAT3A
     * @type {number}
     * @memberof UpdateCampaign
     */
    budget?: number;
    /**
     * A list of advertiser-specified custom identifiers for the campaign. Each customer identifier is a key-value pair. You can specify a maximum of 50 identifiers.
     * @type {{ [key: string]: string; }}
     * @memberof UpdateCampaign
     */
    tags?: { [key: string]: string; };
}
/**
 * 
 * @export
 * @interface UpdateSBBudgetRulesRequest
 */
export interface UpdateSBBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SBBudgetRule>}
     * @memberof UpdateSBBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SBBudgetRule>;
}
/**
 * Request object for updating budget rule for SD campaign
 * @export
 * @interface UpdateSDBudgetRulesRequest
 */
export interface UpdateSDBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SDBudgetRule>}
     * @memberof UpdateSDBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SDBudgetRule>;
}
/**
 * Request object for updating budget rule for SP campaign
 * @export
 * @interface UpdateSPBudgetRulesRequest
 */
export interface UpdateSPBudgetRulesRequest {
    /**
     * A list of budget rule details.
     * @type {Array<SPBudgetRule>}
     * @memberof UpdateSPBudgetRulesRequest
     */
    budgetRulesDetails?: Array<SPBudgetRule>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdGroupsBetaRequestContent
 */
export interface UpdateSponsoredBrandsAdGroupsBetaRequestContent {
    /**
     * 
     * @type {Array<UpdateAdGroup>}
     * @memberof UpdateSponsoredBrandsAdGroupsBetaRequestContent
     */
    adGroups: Array<UpdateAdGroup>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdGroupsBetaResponseContent
 */
export interface UpdateSponsoredBrandsAdGroupsBetaResponseContent {
    /**
     * 
     * @type {BulkAdGroupOperationResponse}
     * @memberof UpdateSponsoredBrandsAdGroupsBetaResponseContent
     */
    adGroups?: BulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdGroupsRequestContent
 */
export interface UpdateSponsoredBrandsAdGroupsRequestContent {
    /**
     * 
     * @type {Array<UpdateAdGroup>}
     * @memberof UpdateSponsoredBrandsAdGroupsRequestContent
     */
    adGroups: Array<UpdateAdGroup>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdGroupsResponseContent
 */
export interface UpdateSponsoredBrandsAdGroupsResponseContent {
    /**
     * 
     * @type {BulkAdGroupOperationResponse}
     * @memberof UpdateSponsoredBrandsAdGroupsResponseContent
     */
    adGroups?: BulkAdGroupOperationResponse;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdsBetaRequestContent
 */
export interface UpdateSponsoredBrandsAdsBetaRequestContent {
    /**
     * 
     * @type {Array<UpdateAd>}
     * @memberof UpdateSponsoredBrandsAdsBetaRequestContent
     */
    ads: Array<UpdateAd>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdsBetaResponseContent
 */
export interface UpdateSponsoredBrandsAdsBetaResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof UpdateSponsoredBrandsAdsBetaResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdsRequestContent
 */
export interface UpdateSponsoredBrandsAdsRequestContent {
    /**
     * 
     * @type {Array<UpdateAd>}
     * @memberof UpdateSponsoredBrandsAdsRequestContent
     */
    ads: Array<UpdateAd>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsAdsResponseContent
 */
export interface UpdateSponsoredBrandsAdsResponseContent {
    /**
     * 
     * @type {BulkAdOperationResponse}
     * @memberof UpdateSponsoredBrandsAdsResponseContent
     */
    ads?: BulkAdOperationResponse;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsCampaignsBetaRequestContent
 */
export interface UpdateSponsoredBrandsCampaignsBetaRequestContent {
    /**
     * 
     * @type {Array<UpdateCampaign>}
     * @memberof UpdateSponsoredBrandsCampaignsBetaRequestContent
     */
    campaigns: Array<UpdateCampaign>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsCampaignsBetaResponseContent
 */
export interface UpdateSponsoredBrandsCampaignsBetaResponseContent {
    /**
     * 
     * @type {BulkCampaignOperationResponse}
     * @memberof UpdateSponsoredBrandsCampaignsBetaResponseContent
     */
    campaigns?: BulkCampaignOperationResponse;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsCampaignsRequestContent
 */
export interface UpdateSponsoredBrandsCampaignsRequestContent {
    /**
     * 
     * @type {Array<UpdateCampaign>}
     * @memberof UpdateSponsoredBrandsCampaignsRequestContent
     */
    campaigns: Array<UpdateCampaign>;
}
/**
 * 
 * @export
 * @interface UpdateSponsoredBrandsCampaignsResponseContent
 */
export interface UpdateSponsoredBrandsCampaignsResponseContent {
    /**
     * 
     * @type {BulkCampaignOperationResponse}
     * @memberof UpdateSponsoredBrandsCampaignsResponseContent
     */
    campaigns?: BulkCampaignOperationResponse;
}
/**
 * Video component which needs to be pre moderated. A publicly accessible videoUrl must be sent.
 * @export
 * @interface VideoComponent
 */
export interface VideoComponent {
    /**
     * Type of the video component.
     * @type {string}
     * @memberof VideoComponent
     */
    componentType: VideoComponentComponentTypeEnum;
    /**
     * 
     * @type {LandingPage}
     * @memberof VideoComponent
     */
    landingPage?: LandingPage;
    /**
     * Id of the component. The same will be returned as part of the response as well. This can be used to uniquely identify the component from the pre moderation response.
     * @type {string}
     * @memberof VideoComponent
     */
    id: string;
    /**
     * Url of the video to be pre moderated. The url must be publicly accessible.
     * @type {string}
     * @memberof VideoComponent
     */
    url: string;
}

/**
    * @export
    * @enum {string}
    */
export enum VideoComponentComponentTypeEnum {
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    OtherVideo = 'OTHER_VIDEO'
}

/**
 * Pre moderation result for a video component
 * @export
 * @interface VideoComponentResponse
 */
export interface VideoComponentResponse {
    /**
     * The pre moderation status of the component.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    preModerationStatus?: VideoComponentResponsePreModerationStatusEnum;
    /**
     * Type of the video component.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    componentType?: VideoComponentResponseComponentTypeEnum;
    /**
     * 
     * @type {LandingPage}
     * @memberof VideoComponentResponse
     */
    landingPage?: LandingPage;
    /**
     * A list of policy violations for the component that were detected during pre moderation. Note that this field is present in the response only when preModerationStatus is set to REJECTED.
     * @type {Array<VideoPolicyViolation>}
     * @memberof VideoComponentResponse
     */
    policyViolations?: Array<VideoPolicyViolation>;
    /**
     * Id of the component. This is the same id sent as part of the request. This can be used to uniquely identify the component.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    id?: string;
    /**
     * Publicly accessible url of the video that got pre moderated.
     * @type {string}
     * @memberof VideoComponentResponse
     */
    url?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum VideoComponentResponsePreModerationStatusEnum {
    Rejected = 'REJECTED',
    Approved = 'APPROVED',
    Failed = 'FAILED',
    RetryableFailure = 'RETRYABLE_FAILURE'
}
/**
    * @export
    * @enum {string}
    */
export enum VideoComponentResponseComponentTypeEnum {
    SponsoredBrandsVideo = 'SPONSORED_BRANDS_VIDEO',
    OtherVideo = 'OTHER_VIDEO'
}

/**
 * 
 * @export
 * @interface VideoCreative
 */
export interface VideoCreative {
    /**
     * If set to true and video asset is not in the marketplace\'s default language, Amazon will attempt to translate the video to the marketplace\'s default language. If Amazon is unable to translate it, the ad will be rejected by moderation. We only support translating videos from English to German, French, Italian, and Spanish. See developer notes for more information.
     * @type {boolean}
     * @memberof VideoCreative
     */
    consentToTranslate?: boolean;
    /**
     * The assetIds of the original videos submitted by the advertiser. If \'consentToTranslate\' is set to true and translation is SUCCESSFUL then \'videoAssetIds\' will return translated video assetId whereas `originalVideoAssetIds` will return the original video assetId. In all other cases, `videoAssetIds` will return original video assetId.
     * @type {Array<string>}
     * @memberof VideoCreative
     */
    videoAssetIds: Array<string>;
}
/**
 * Structure of a video evidence
 * @export
 * @interface VideoEvidence
 */
export interface VideoEvidence {
    /**
     * The start position (in seconds) of the content that violates the specified policy within the video.
     * @type {number}
     * @memberof VideoEvidence
     */
    start?: number;
    /**
     * The end position (in seconds) of the content that violates the specified policy within the video.
     * @type {number}
     * @memberof VideoEvidence
     */
    end?: number;
}
/**
 * Structure of policy violation for a video component
 * @export
 * @interface VideoPolicyViolation
 */
export interface VideoPolicyViolation {
    /**
     * A human-readable description of the policy.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    policyDescription?: string;
    /**
     * List of evidences for the policy violations detected on the video component.
     * @type {Array<VideoEvidence>}
     * @memberof VideoPolicyViolation
     */
    videoEvidences?: Array<VideoEvidence>;
    /**
     * A policy violation code.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    name?: string;
    /**
     * Type of policy violation.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    type?: VideoPolicyViolationTypeEnum;
    /**
     * Address of the policy documentation. Follow the link to learn more about the specified policy.
     * @type {string}
     * @memberof VideoPolicyViolation
     */
    policyLinkUrl?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum VideoPolicyViolationTypeEnum {
    Warning = 'WARNING',
    Rejected = 'REJECTED'
}

/**
 * 
 * @export
 * @interface VideoPosition
 */
export interface VideoPosition {
    /**
     * Start time of the video having the policy violation.
     * @type {number}
     * @memberof VideoPosition
     */
    start?: number;
    /**
     * End time of the video having the policy violation.
     * @type {number}
     * @memberof VideoPosition
     */
    end?: number;
}
/**
 * 
 * @export
 * @interface ViolatingAsinContent
 */
export interface ViolatingAsinContent {
    /**
     * 
     * @type {Array<ViolatingAsinEvidence>}
     * @memberof ViolatingAsinContent
     */
    violatingAsinEvidences?: Array<ViolatingAsinEvidence>;
    /**
     * Moderation component which marked the policy violation.
     * @type {string}
     * @memberof ViolatingAsinContent
     */
    moderatedComponent?: string;
}
/**
 * 
 * @export
 * @interface ViolatingAsinEvidence
 */
export interface ViolatingAsinEvidence {
    /**
     * ASIN which has the ad policy violation.
     * @type {string}
     * @memberof ViolatingAsinEvidence
     */
    asin?: string;
}
/**
 * 
 * @export
 * @interface ViolatingImageContent
 */
export interface ViolatingImageContent {
    /**
     * 
     * @type {Array<ViolatingImageEvidence>}
     * @memberof ViolatingImageContent
     */
    violatingImageEvidences?: Array<ViolatingImageEvidence>;
    /**
     * Moderation component which marked the policy violation.
     * @type {string}
     * @memberof ViolatingImageContent
     */
    moderatedComponent?: string;
    /**
     * URL of the image which has the ad policy violation.
     * @type {string}
     * @memberof ViolatingImageContent
     */
    reviewedImageUrl?: string;
}
/**
 * 
 * @export
 * @interface ViolatingImageEvidence
 */
export interface ViolatingImageEvidence {
    /**
     * 
     * @type {ImageCrop}
     * @memberof ViolatingImageEvidence
     */
    violatingImageCrop?: ImageCrop;
}
/**
 * Information about the specific text that violates the specified policy in the campaign.
 * @export
 * @interface ViolatingTextContent
 */
export interface ViolatingTextContent {
    /**
     * The actual text on which the moderation was done.
     * @type {string}
     * @memberof ViolatingTextContent
     */
    reviewedText?: string;
    /**
     * 
     * @type {Array<ViolatingTextEvidence>}
     * @memberof ViolatingTextContent
     */
    violatingTextEvidences?: Array<ViolatingTextEvidence>;
    /**
     * Moderation component which marked the policy violation.
     * @type {string}
     * @memberof ViolatingTextContent
     */
    moderatedComponent?: string;
}
/**
 * 
 * @export
 * @interface ViolatingTextEvidence
 */
export interface ViolatingTextEvidence {
    /**
     * 
     * @type {TextPosition}
     * @memberof ViolatingTextEvidence
     */
    violatingTextPosition?: TextPosition;
    /**
     * The specific text determined to violate the specified policy in reviewedText.
     * @type {string}
     * @memberof ViolatingTextEvidence
     */
    violatingText?: string;
}
/**
 * 
 * @export
 * @interface ViolatingVideoContent
 */
export interface ViolatingVideoContent {
    /**
     * 
     * @type {Array<ViolatingVideoEvidence>}
     * @memberof ViolatingVideoContent
     */
    violatingVideoEvidences?: Array<ViolatingVideoEvidence>;
    /**
     * Moderation component which marked the policy violation.
     * @type {string}
     * @memberof ViolatingVideoContent
     */
    moderatedComponent?: string;
    /**
     * URL of the video which has the ad policy violation.
     * @type {string}
     * @memberof ViolatingVideoContent
     */
    reviewedVideoUrl?: string;
}
/**
 * 
 * @export
 * @interface ViolatingVideoEvidence
 */
export interface ViolatingVideoEvidence {
    /**
     * 
     * @type {VideoPosition}
     * @memberof ViolatingVideoEvidence
     */
    violatingVideoPosition?: VideoPosition;
}

/**
 * AdCreativesApi - axios parameter creator
 * @export
 */
export const AdCreativesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * This API creates a new version of an existing creative for given [Sponsored Brands Brand Video Ad](https://devportal-internal-beta.demand-tools.advertising.a2z.com/API/docs/en-us/sponsored-brands-beta-1p#/Ads/CreateSponsoredBrandsBrandVideoAds) by supplying brand video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateBrandVideoCreativeRequestContent} createBrandVideoCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBrandVideoCreative: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createBrandVideoCreativeRequestContent: CreateBrandVideoCreativeRequestContent, accept?: AcceptHeader, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createBrandVideoCreative', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createBrandVideoCreative', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createBrandVideoCreativeRequestContent' is not null or undefined
            assertParamExists('createBrandVideoCreative', 'createBrandVideoCreativeRequestContent', createBrandVideoCreativeRequestContent)
            const localVarPath = `/sb/ads/creatives/brandVideo`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(JSON.stringify(accept));
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbAdCreativeResource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createBrandVideoCreativeRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API creates a new version of creative for given Sponsored Brands ad by supplying product collection creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateProductCollectionCreativeRequestContent} createProductCollectionCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProductCollectionCreative: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createProductCollectionCreativeRequestContent: CreateProductCollectionCreativeRequestContent, accept?: AcceptHeader, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createProductCollectionCreative', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createProductCollectionCreative', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createProductCollectionCreativeRequestContent' is not null or undefined
            assertParamExists('createProductCollectionCreative', 'createProductCollectionCreativeRequestContent', createProductCollectionCreativeRequestContent)
            const localVarPath = `/sb/ads/creatives/productCollection`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(JSON.stringify(accept));
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbAdCreativeResource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createProductCollectionCreativeRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API creates a new version of creative for given Sponsored Brands ad by supplying store spotlight creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateStoreSpotlightCreativeRequestContent} createStoreSpotlightCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createStoreSpotlightCreative: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createStoreSpotlightCreativeRequestContent: CreateStoreSpotlightCreativeRequestContent, accept?: AcceptHeader, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createStoreSpotlightCreative', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createStoreSpotlightCreative', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createStoreSpotlightCreativeRequestContent' is not null or undefined
            assertParamExists('createStoreSpotlightCreative', 'createStoreSpotlightCreativeRequestContent', createStoreSpotlightCreativeRequestContent)
            const localVarPath = `/sb/ads/creatives/storeSpotlight`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(JSON.stringify(accept));
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbAdCreativeResource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createStoreSpotlightCreativeRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API creates a new version of an existing creative for given Sponsored Brands ad by supplying video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateVideoCreativeRequestContent} createVideoCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createVideoCreative: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createVideoCreativeRequestContent: CreateVideoCreativeRequestContent, accept?: AcceptHeader, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createVideoCreative', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createVideoCreative', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createVideoCreativeRequestContent' is not null or undefined
            assertParamExists('createVideoCreative', 'createVideoCreativeRequestContent', createVideoCreativeRequestContent)
            const localVarPath = `/sb/ads/creatives/video`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(JSON.stringify(accept));
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbAdCreativeResource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createVideoCreativeRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * This API gets an array of all Sponsored Brands creatives that qualify the given resource identifiers and filters  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {ListCreativesRequestContent} listCreativesRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCreatives: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listCreativesRequestContent: ListCreativesRequestContent, accept?: AcceptHeader, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listCreatives', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listCreatives', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'listCreativesRequestContent' is not null or undefined
            assertParamExists('listCreatives', 'listCreativesRequestContent', listCreativesRequestContent)
            const localVarPath = `/sb/ads/creatives/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (accept !== undefined && accept !== null) {
                localVarHeaderParameter['Accept'] = String(JSON.stringify(accept));
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbAdCreativeResource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(listCreativesRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AdCreativesApi - functional programming interface
 * @export
 */
export const AdCreativesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AdCreativesApiAxiosParamCreator(configuration)
    return {
        /**
         * This API creates a new version of an existing creative for given [Sponsored Brands Brand Video Ad](https://devportal-internal-beta.demand-tools.advertising.a2z.com/API/docs/en-us/sponsored-brands-beta-1p#/Ads/CreateSponsoredBrandsBrandVideoAds) by supplying brand video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateBrandVideoCreativeRequestContent} createBrandVideoCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createBrandVideoCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createBrandVideoCreativeRequestContent: CreateBrandVideoCreativeRequestContent, accept?: AcceptHeader, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBrandVideoCreativeResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createBrandVideoCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createBrandVideoCreativeRequestContent, accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API creates a new version of creative for given Sponsored Brands ad by supplying product collection creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateProductCollectionCreativeRequestContent} createProductCollectionCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createProductCollectionCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createProductCollectionCreativeRequestContent: CreateProductCollectionCreativeRequestContent, accept?: AcceptHeader, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateProductCollectionCreativeResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createProductCollectionCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createProductCollectionCreativeRequestContent, accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API creates a new version of creative for given Sponsored Brands ad by supplying store spotlight creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateStoreSpotlightCreativeRequestContent} createStoreSpotlightCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createStoreSpotlightCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createStoreSpotlightCreativeRequestContent: CreateStoreSpotlightCreativeRequestContent, accept?: AcceptHeader, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateStoreSpotlightCreativeResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createStoreSpotlightCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createStoreSpotlightCreativeRequestContent, accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API creates a new version of an existing creative for given Sponsored Brands ad by supplying video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateVideoCreativeRequestContent} createVideoCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createVideoCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createVideoCreativeRequestContent: CreateVideoCreativeRequestContent, accept?: AcceptHeader, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateVideoCreativeResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createVideoCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createVideoCreativeRequestContent, accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * This API gets an array of all Sponsored Brands creatives that qualify the given resource identifiers and filters  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {ListCreativesRequestContent} listCreativesRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listCreatives(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listCreativesRequestContent: ListCreativesRequestContent, accept?: AcceptHeader, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListCreativesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listCreatives(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listCreativesRequestContent, accept, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AdCreativesApi - factory interface
 * @export
 */
export const AdCreativesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AdCreativesApiFp(configuration)
    return {
        /**
         * This API creates a new version of an existing creative for given [Sponsored Brands Brand Video Ad](https://devportal-internal-beta.demand-tools.advertising.a2z.com/API/docs/en-us/sponsored-brands-beta-1p#/Ads/CreateSponsoredBrandsBrandVideoAds) by supplying brand video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateBrandVideoCreativeRequestContent} createBrandVideoCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBrandVideoCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createBrandVideoCreativeRequestContent: CreateBrandVideoCreativeRequestContent, accept?: AcceptHeader, options?: any): AxiosPromise<CreateBrandVideoCreativeResponseContent> {
            return localVarFp.createBrandVideoCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createBrandVideoCreativeRequestContent, accept, options).then((request) => request(axios, basePath));
        },
        /**
         * This API creates a new version of creative for given Sponsored Brands ad by supplying product collection creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateProductCollectionCreativeRequestContent} createProductCollectionCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createProductCollectionCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createProductCollectionCreativeRequestContent: CreateProductCollectionCreativeRequestContent, accept?: AcceptHeader, options?: any): AxiosPromise<CreateProductCollectionCreativeResponseContent> {
            return localVarFp.createProductCollectionCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createProductCollectionCreativeRequestContent, accept, options).then((request) => request(axios, basePath));
        },
        /**
         * This API creates a new version of creative for given Sponsored Brands ad by supplying store spotlight creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateStoreSpotlightCreativeRequestContent} createStoreSpotlightCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createStoreSpotlightCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createStoreSpotlightCreativeRequestContent: CreateStoreSpotlightCreativeRequestContent, accept?: AcceptHeader, options?: any): AxiosPromise<CreateStoreSpotlightCreativeResponseContent> {
            return localVarFp.createStoreSpotlightCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createStoreSpotlightCreativeRequestContent, accept, options).then((request) => request(axios, basePath));
        },
        /**
         * This API creates a new version of an existing creative for given Sponsored Brands ad by supplying video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateVideoCreativeRequestContent} createVideoCreativeRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createVideoCreative(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createVideoCreativeRequestContent: CreateVideoCreativeRequestContent, accept?: AcceptHeader, options?: any): AxiosPromise<CreateVideoCreativeResponseContent> {
            return localVarFp.createVideoCreative(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createVideoCreativeRequestContent, accept, options).then((request) => request(axios, basePath));
        },
        /**
         * This API gets an array of all Sponsored Brands creatives that qualify the given resource identifiers and filters  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
         * @param {ListCreativesRequestContent} listCreativesRequestContent 
         * @param {AcceptHeader} [accept] Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listCreatives(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listCreativesRequestContent: ListCreativesRequestContent, accept?: AcceptHeader, options?: any): AxiosPromise<ListCreativesResponseContent> {
            return localVarFp.listCreatives(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listCreativesRequestContent, accept, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createBrandVideoCreative operation in AdCreativesApi.
 * @export
 * @interface AdCreativesApiCreateBrandVideoCreativeRequest
 */
export interface AdCreativesApiCreateBrandVideoCreativeRequest {
    /**
     * ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateBrandVideoCreative
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateBrandVideoCreative
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateBrandVideoCreativeRequestContent}
     * @memberof AdCreativesApiCreateBrandVideoCreative
     */
    readonly createBrandVideoCreativeRequestContent: CreateBrandVideoCreativeRequestContent

    /**
     * Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
     * @type {AcceptHeader}
     * @memberof AdCreativesApiCreateBrandVideoCreative
     */
    readonly accept?: AcceptHeader
}

/**
 * Request parameters for createProductCollectionCreative operation in AdCreativesApi.
 * @export
 * @interface AdCreativesApiCreateProductCollectionCreativeRequest
 */
export interface AdCreativesApiCreateProductCollectionCreativeRequest {
    /**
     * ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateProductCollectionCreative
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateProductCollectionCreative
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateProductCollectionCreativeRequestContent}
     * @memberof AdCreativesApiCreateProductCollectionCreative
     */
    readonly createProductCollectionCreativeRequestContent: CreateProductCollectionCreativeRequestContent

    /**
     * Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
     * @type {AcceptHeader}
     * @memberof AdCreativesApiCreateProductCollectionCreative
     */
    readonly accept?: AcceptHeader
}

/**
 * Request parameters for createStoreSpotlightCreative operation in AdCreativesApi.
 * @export
 * @interface AdCreativesApiCreateStoreSpotlightCreativeRequest
 */
export interface AdCreativesApiCreateStoreSpotlightCreativeRequest {
    /**
     * ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateStoreSpotlightCreative
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateStoreSpotlightCreative
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateStoreSpotlightCreativeRequestContent}
     * @memberof AdCreativesApiCreateStoreSpotlightCreative
     */
    readonly createStoreSpotlightCreativeRequestContent: CreateStoreSpotlightCreativeRequestContent

    /**
     * Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
     * @type {AcceptHeader}
     * @memberof AdCreativesApiCreateStoreSpotlightCreative
     */
    readonly accept?: AcceptHeader
}

/**
 * Request parameters for createVideoCreative operation in AdCreativesApi.
 * @export
 * @interface AdCreativesApiCreateVideoCreativeRequest
 */
export interface AdCreativesApiCreateVideoCreativeRequest {
    /**
     * ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateVideoCreative
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiCreateVideoCreative
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateVideoCreativeRequestContent}
     * @memberof AdCreativesApiCreateVideoCreative
     */
    readonly createVideoCreativeRequestContent: CreateVideoCreativeRequestContent

    /**
     * Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
     * @type {AcceptHeader}
     * @memberof AdCreativesApiCreateVideoCreative
     */
    readonly accept?: AcceptHeader
}

/**
 * Request parameters for listCreatives operation in AdCreativesApi.
 * @export
 * @interface AdCreativesApiListCreativesRequest
 */
export interface AdCreativesApiListCreativesRequest {
    /**
     * ----------------------------------------------- Simple types ----------------------------------------------- The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiListCreatives
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use GET method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and use profileId from the response to pass as input. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof AdCreativesApiListCreatives
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {ListCreativesRequestContent}
     * @memberof AdCreativesApiListCreatives
     */
    readonly listCreativesRequestContent: ListCreativesRequestContent

    /**
     * Clients request a specific version of a resource using the Accept request-header field set to the value field of the desired content-type.
     * @type {AcceptHeader}
     * @memberof AdCreativesApiListCreatives
     */
    readonly accept?: AcceptHeader
}

/**
 * AdCreativesApi - object-oriented interface
 * @export
 * @class AdCreativesApi
 * @extends {BaseAPI}
 */
export class AdCreativesApi extends BaseAPI {
    /**
     * This API creates a new version of an existing creative for given [Sponsored Brands Brand Video Ad](https://devportal-internal-beta.demand-tools.advertising.a2z.com/API/docs/en-us/sponsored-brands-beta-1p#/Ads/CreateSponsoredBrandsBrandVideoAds) by supplying brand video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdCreativesApiCreateBrandVideoCreativeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdCreativesApi
     */
    public createBrandVideoCreative(requestParameters: AdCreativesApiCreateBrandVideoCreativeRequest, options?: any) {
        return AdCreativesApiFp(this.configuration).createBrandVideoCreative(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createBrandVideoCreativeRequestContent, requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API creates a new version of creative for given Sponsored Brands ad by supplying product collection creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdCreativesApiCreateProductCollectionCreativeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdCreativesApi
     */
    public createProductCollectionCreative(requestParameters: AdCreativesApiCreateProductCollectionCreativeRequest, options?: any) {
        return AdCreativesApiFp(this.configuration).createProductCollectionCreative(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createProductCollectionCreativeRequestContent, requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API creates a new version of creative for given Sponsored Brands ad by supplying store spotlight creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdCreativesApiCreateStoreSpotlightCreativeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdCreativesApi
     */
    public createStoreSpotlightCreative(requestParameters: AdCreativesApiCreateStoreSpotlightCreativeRequest, options?: any) {
        return AdCreativesApiFp(this.configuration).createStoreSpotlightCreative(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createStoreSpotlightCreativeRequestContent, requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API creates a new version of an existing creative for given Sponsored Brands ad by supplying video creative content  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @param {AdCreativesApiCreateVideoCreativeRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdCreativesApi
     */
    public createVideoCreative(requestParameters: AdCreativesApiCreateVideoCreativeRequest, options?: any) {
        return AdCreativesApiFp(this.configuration).createVideoCreative(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createVideoCreativeRequestContent, requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * This API gets an array of all Sponsored Brands creatives that qualify the given resource identifiers and filters  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {AdCreativesApiListCreativesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdCreativesApi
     */
    public listCreatives(requestParameters: AdCreativesApiListCreativesRequest, options?: any) {
        return AdCreativesApiFp(this.configuration).listCreatives(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.listCreativesRequestContent, requestParameters.accept, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * AdGroupsApi - axios parameter creator
 * @export
 */
export const AdGroupsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Creates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsAdGroupsRequestContent} createSponsoredBrandsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsAdGroupsRequestContent: CreateSponsoredBrandsAdGroupsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredBrandsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredBrandsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSponsoredBrandsAdGroupsRequestContent' is not null or undefined
            assertParamExists('createSponsoredBrandsAdGroups', 'createSponsoredBrandsAdGroupsRequestContent', createSponsoredBrandsAdGroupsRequestContent)
            const localVarPath = `/sb/v4/adGroups`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadgroupresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSponsoredBrandsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deletes Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsAdGroupsRequestContent} [deleteSponsoredBrandsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredBrandsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsAdGroupsRequestContent?: DeleteSponsoredBrandsAdGroupsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredBrandsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredBrandsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/v4/adGroups/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadgroupresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(deleteSponsoredBrandsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Lists Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsAdGroupsRequestContent} [listSponsoredBrandsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredBrandsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsAdGroupsRequestContent?: ListSponsoredBrandsAdGroupsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredBrandsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredBrandsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/v4/adGroups/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadgroupresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(listSponsoredBrandsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Updates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsAdGroupsRequestContent} updateSponsoredBrandsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredBrandsAdGroups: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsAdGroupsRequestContent: UpdateSponsoredBrandsAdGroupsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredBrandsAdGroups', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredBrandsAdGroups', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSponsoredBrandsAdGroupsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredBrandsAdGroups', 'updateSponsoredBrandsAdGroupsRequestContent', updateSponsoredBrandsAdGroupsRequestContent)
            const localVarPath = `/sb/v4/adGroups`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadgroupresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSponsoredBrandsAdGroupsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AdGroupsApi - functional programming interface
 * @export
 */
export const AdGroupsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AdGroupsApiAxiosParamCreator(configuration)
    return {
        /**
         * Creates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsAdGroupsRequestContent} createSponsoredBrandsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsAdGroupsRequestContent: CreateSponsoredBrandsAdGroupsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSponsoredBrandsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsAdGroupsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Deletes Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsAdGroupsRequestContent} [deleteSponsoredBrandsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsAdGroupsRequestContent?: DeleteSponsoredBrandsAdGroupsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteSponsoredBrandsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, deleteSponsoredBrandsAdGroupsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Lists Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsAdGroupsRequestContent} [listSponsoredBrandsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsAdGroupsRequestContent?: ListSponsoredBrandsAdGroupsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListSponsoredBrandsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listSponsoredBrandsAdGroupsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Updates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsAdGroupsRequestContent} updateSponsoredBrandsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsAdGroupsRequestContent: UpdateSponsoredBrandsAdGroupsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateSponsoredBrandsAdGroupsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSponsoredBrandsAdGroupsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AdGroupsApi - factory interface
 * @export
 */
export const AdGroupsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AdGroupsApiFp(configuration)
    return {
        /**
         * Creates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsAdGroupsRequestContent} createSponsoredBrandsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsAdGroupsRequestContent: CreateSponsoredBrandsAdGroupsRequestContent, options?: any): AxiosPromise<CreateSponsoredBrandsAdGroupsResponseContent> {
            return localVarFp.createSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Deletes Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsAdGroupsRequestContent} [deleteSponsoredBrandsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsAdGroupsRequestContent?: DeleteSponsoredBrandsAdGroupsRequestContent, options?: any): AxiosPromise<DeleteSponsoredBrandsAdGroupsResponseContent> {
            return localVarFp.deleteSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, deleteSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Lists Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsAdGroupsRequestContent} [listSponsoredBrandsAdGroupsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsAdGroupsRequestContent?: ListSponsoredBrandsAdGroupsRequestContent, options?: any): AxiosPromise<ListSponsoredBrandsAdGroupsResponseContent> {
            return localVarFp.listSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Updates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands ad groups.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsAdGroupsRequestContent} updateSponsoredBrandsAdGroupsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsAdGroupsRequestContent: UpdateSponsoredBrandsAdGroupsRequestContent, options?: any): AxiosPromise<UpdateSponsoredBrandsAdGroupsResponseContent> {
            return localVarFp.updateSponsoredBrandsAdGroups(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredBrandsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiCreateSponsoredBrandsAdGroupsRequest
 */
export interface AdGroupsApiCreateSponsoredBrandsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiCreateSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdGroupsApiCreateSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSponsoredBrandsAdGroupsRequestContent}
     * @memberof AdGroupsApiCreateSponsoredBrandsAdGroups
     */
    readonly createSponsoredBrandsAdGroupsRequestContent: CreateSponsoredBrandsAdGroupsRequestContent
}

/**
 * Request parameters for deleteSponsoredBrandsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiDeleteSponsoredBrandsAdGroupsRequest
 */
export interface AdGroupsApiDeleteSponsoredBrandsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiDeleteSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdGroupsApiDeleteSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {DeleteSponsoredBrandsAdGroupsRequestContent}
     * @memberof AdGroupsApiDeleteSponsoredBrandsAdGroups
     */
    readonly deleteSponsoredBrandsAdGroupsRequestContent?: DeleteSponsoredBrandsAdGroupsRequestContent
}

/**
 * Request parameters for listSponsoredBrandsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiListSponsoredBrandsAdGroupsRequest
 */
export interface AdGroupsApiListSponsoredBrandsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiListSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdGroupsApiListSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {ListSponsoredBrandsAdGroupsRequestContent}
     * @memberof AdGroupsApiListSponsoredBrandsAdGroups
     */
    readonly listSponsoredBrandsAdGroupsRequestContent?: ListSponsoredBrandsAdGroupsRequestContent
}

/**
 * Request parameters for updateSponsoredBrandsAdGroups operation in AdGroupsApi.
 * @export
 * @interface AdGroupsApiUpdateSponsoredBrandsAdGroupsRequest
 */
export interface AdGroupsApiUpdateSponsoredBrandsAdGroupsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdGroupsApiUpdateSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdGroupsApiUpdateSponsoredBrandsAdGroups
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSponsoredBrandsAdGroupsRequestContent}
     * @memberof AdGroupsApiUpdateSponsoredBrandsAdGroups
     */
    readonly updateSponsoredBrandsAdGroupsRequestContent: UpdateSponsoredBrandsAdGroupsRequestContent
}

/**
 * AdGroupsApi - object-oriented interface
 * @export
 * @class AdGroupsApi
 * @extends {BaseAPI}
 */
export class AdGroupsApi extends BaseAPI {
    /**
     * Creates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates Sponsored Brands ad groups.
     * @param {AdGroupsApiCreateSponsoredBrandsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public createSponsoredBrandsAdGroups(requestParameters: AdGroupsApiCreateSponsoredBrandsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).createSponsoredBrandsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Deletes Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes Sponsored Brands ad groups.
     * @param {AdGroupsApiDeleteSponsoredBrandsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public deleteSponsoredBrandsAdGroups(requestParameters: AdGroupsApiDeleteSponsoredBrandsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).deleteSponsoredBrandsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.deleteSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Lists Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Lists Sponsored Brands ad groups.
     * @param {AdGroupsApiListSponsoredBrandsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public listSponsoredBrandsAdGroups(requestParameters: AdGroupsApiListSponsoredBrandsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).listSponsoredBrandsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.listSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Updates Sponsored Brands ad groups.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates Sponsored Brands ad groups.
     * @param {AdGroupsApiUpdateSponsoredBrandsAdGroupsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdGroupsApi
     */
    public updateSponsoredBrandsAdGroups(requestParameters: AdGroupsApiUpdateSponsoredBrandsAdGroupsRequest, options?: any) {
        return AdGroupsApiFp(this.configuration).updateSponsoredBrandsAdGroups(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSponsoredBrandsAdGroupsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * AdsApi - axios parameter creator
 * @export
 */
export const AdsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Creates Sponsored Brands store spotlight ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands store spotlight ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandStoreSpotlightAdsRequestContent} createSponsoredBrandStoreSpotlightAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandStoreSpotlightAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandStoreSpotlightAdsRequestContent: CreateSponsoredBrandStoreSpotlightAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredBrandStoreSpotlightAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredBrandStoreSpotlightAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSponsoredBrandStoreSpotlightAdsRequestContent' is not null or undefined
            assertParamExists('createSponsoredBrandStoreSpotlightAds', 'createSponsoredBrandStoreSpotlightAdsRequestContent', createSponsoredBrandStoreSpotlightAdsRequestContent)
            const localVarPath = `/sb/v4/ads/storeSpotlight`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSponsoredBrandStoreSpotlightAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates Sponsored Brands brand video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands brand video ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsBrandVideoAdsRequestContent} createSponsoredBrandsBrandVideoAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsBrandVideoAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsBrandVideoAdsRequestContent: CreateSponsoredBrandsBrandVideoAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredBrandsBrandVideoAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredBrandsBrandVideoAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSponsoredBrandsBrandVideoAdsRequestContent' is not null or undefined
            assertParamExists('createSponsoredBrandsBrandVideoAds', 'createSponsoredBrandsBrandVideoAdsRequestContent', createSponsoredBrandsBrandVideoAdsRequestContent)
            const localVarPath = `/sb/v4/ads/brandVideo`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSponsoredBrandsBrandVideoAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates Sponsored Brands product collection ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands product collection ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsProductCollectionAdsRequestContent} createSponsoredBrandsProductCollectionAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsProductCollectionAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsProductCollectionAdsRequestContent: CreateSponsoredBrandsProductCollectionAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredBrandsProductCollectionAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredBrandsProductCollectionAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSponsoredBrandsProductCollectionAdsRequestContent' is not null or undefined
            assertParamExists('createSponsoredBrandsProductCollectionAds', 'createSponsoredBrandsProductCollectionAdsRequestContent', createSponsoredBrandsProductCollectionAdsRequestContent)
            const localVarPath = `/sb/v4/ads/productCollection`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSponsoredBrandsProductCollectionAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Creates Sponsored Brands video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands video ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsVideoAdsRequestContent} createSponsoredBrandsVideoAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsVideoAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsVideoAdsRequestContent: CreateSponsoredBrandsVideoAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredBrandsVideoAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredBrandsVideoAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSponsoredBrandsVideoAdsRequestContent' is not null or undefined
            assertParamExists('createSponsoredBrandsVideoAds', 'createSponsoredBrandsVideoAdsRequestContent', createSponsoredBrandsVideoAdsRequestContent)
            const localVarPath = `/sb/v4/ads/video`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSponsoredBrandsVideoAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deletes Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsAdsRequestContent} [deleteSponsoredBrandsAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredBrandsAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsAdsRequestContent?: DeleteSponsoredBrandsAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredBrandsAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredBrandsAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/v4/ads/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(deleteSponsoredBrandsAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Lists Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsAdsRequestContent} [listSponsoredBrandsAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredBrandsAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsAdsRequestContent?: ListSponsoredBrandsAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredBrandsAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredBrandsAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/v4/ads/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(listSponsoredBrandsAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Updates Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsAdsRequestContent} updateSponsoredBrandsAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredBrandsAds: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsAdsRequestContent: UpdateSponsoredBrandsAdsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredBrandsAds', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredBrandsAds', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSponsoredBrandsAdsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredBrandsAds', 'updateSponsoredBrandsAdsRequestContent', updateSponsoredBrandsAdsRequestContent)
            const localVarPath = `/sb/v4/ads`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbadresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSponsoredBrandsAdsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * AdsApi - functional programming interface
 * @export
 */
export const AdsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = AdsApiAxiosParamCreator(configuration)
    return {
        /**
         * Creates Sponsored Brands store spotlight ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands store spotlight ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandStoreSpotlightAdsRequestContent} createSponsoredBrandStoreSpotlightAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredBrandStoreSpotlightAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandStoreSpotlightAdsRequestContent: CreateSponsoredBrandStoreSpotlightAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSponsoredBrandStoreSpotlightAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredBrandStoreSpotlightAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandStoreSpotlightAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates Sponsored Brands brand video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands brand video ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsBrandVideoAdsRequestContent} createSponsoredBrandsBrandVideoAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredBrandsBrandVideoAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsBrandVideoAdsRequestContent: CreateSponsoredBrandsBrandVideoAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSponsoredBrandsBrandVideoAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredBrandsBrandVideoAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsBrandVideoAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates Sponsored Brands product collection ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands product collection ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsProductCollectionAdsRequestContent} createSponsoredBrandsProductCollectionAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredBrandsProductCollectionAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsProductCollectionAdsRequestContent: CreateSponsoredBrandsProductCollectionAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSponsoredBrandsProductCollectionAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredBrandsProductCollectionAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsProductCollectionAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Creates Sponsored Brands video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands video ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsVideoAdsRequestContent} createSponsoredBrandsVideoAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredBrandsVideoAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsVideoAdsRequestContent: CreateSponsoredBrandsVideoAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSponsoredBrandsVideoAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredBrandsVideoAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsVideoAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Deletes Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsAdsRequestContent} [deleteSponsoredBrandsAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredBrandsAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsAdsRequestContent?: DeleteSponsoredBrandsAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteSponsoredBrandsAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredBrandsAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, deleteSponsoredBrandsAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Lists Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsAdsRequestContent} [listSponsoredBrandsAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredBrandsAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsAdsRequestContent?: ListSponsoredBrandsAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListSponsoredBrandsAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredBrandsAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listSponsoredBrandsAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Updates Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsAdsRequestContent} updateSponsoredBrandsAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredBrandsAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsAdsRequestContent: UpdateSponsoredBrandsAdsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateSponsoredBrandsAdsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredBrandsAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSponsoredBrandsAdsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * AdsApi - factory interface
 * @export
 */
export const AdsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = AdsApiFp(configuration)
    return {
        /**
         * Creates Sponsored Brands store spotlight ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands store spotlight ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandStoreSpotlightAdsRequestContent} createSponsoredBrandStoreSpotlightAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandStoreSpotlightAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandStoreSpotlightAdsRequestContent: CreateSponsoredBrandStoreSpotlightAdsRequestContent, options?: any): AxiosPromise<CreateSponsoredBrandStoreSpotlightAdsResponseContent> {
            return localVarFp.createSponsoredBrandStoreSpotlightAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandStoreSpotlightAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates Sponsored Brands brand video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands brand video ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsBrandVideoAdsRequestContent} createSponsoredBrandsBrandVideoAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsBrandVideoAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsBrandVideoAdsRequestContent: CreateSponsoredBrandsBrandVideoAdsRequestContent, options?: any): AxiosPromise<CreateSponsoredBrandsBrandVideoAdsResponseContent> {
            return localVarFp.createSponsoredBrandsBrandVideoAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsBrandVideoAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates Sponsored Brands product collection ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands product collection ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsProductCollectionAdsRequestContent} createSponsoredBrandsProductCollectionAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsProductCollectionAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsProductCollectionAdsRequestContent: CreateSponsoredBrandsProductCollectionAdsRequestContent, options?: any): AxiosPromise<CreateSponsoredBrandsProductCollectionAdsResponseContent> {
            return localVarFp.createSponsoredBrandsProductCollectionAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsProductCollectionAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Creates Sponsored Brands video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands video ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsVideoAdsRequestContent} createSponsoredBrandsVideoAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsVideoAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsVideoAdsRequestContent: CreateSponsoredBrandsVideoAdsRequestContent, options?: any): AxiosPromise<CreateSponsoredBrandsVideoAdsResponseContent> {
            return localVarFp.createSponsoredBrandsVideoAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsVideoAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Deletes Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsAdsRequestContent} [deleteSponsoredBrandsAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredBrandsAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsAdsRequestContent?: DeleteSponsoredBrandsAdsRequestContent, options?: any): AxiosPromise<DeleteSponsoredBrandsAdsResponseContent> {
            return localVarFp.deleteSponsoredBrandsAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, deleteSponsoredBrandsAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Lists Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsAdsRequestContent} [listSponsoredBrandsAdsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredBrandsAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsAdsRequestContent?: ListSponsoredBrandsAdsRequestContent, options?: any): AxiosPromise<ListSponsoredBrandsAdsResponseContent> {
            return localVarFp.listSponsoredBrandsAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listSponsoredBrandsAdsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Updates Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands ads.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsAdsRequestContent} updateSponsoredBrandsAdsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredBrandsAds(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsAdsRequestContent: UpdateSponsoredBrandsAdsRequestContent, options?: any): AxiosPromise<UpdateSponsoredBrandsAdsResponseContent> {
            return localVarFp.updateSponsoredBrandsAds(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSponsoredBrandsAdsRequestContent, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredBrandStoreSpotlightAds operation in AdsApi.
 * @export
 * @interface AdsApiCreateSponsoredBrandStoreSpotlightAdsRequest
 */
export interface AdsApiCreateSponsoredBrandStoreSpotlightAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandStoreSpotlightAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandStoreSpotlightAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSponsoredBrandStoreSpotlightAdsRequestContent}
     * @memberof AdsApiCreateSponsoredBrandStoreSpotlightAds
     */
    readonly createSponsoredBrandStoreSpotlightAdsRequestContent: CreateSponsoredBrandStoreSpotlightAdsRequestContent
}

/**
 * Request parameters for createSponsoredBrandsBrandVideoAds operation in AdsApi.
 * @export
 * @interface AdsApiCreateSponsoredBrandsBrandVideoAdsRequest
 */
export interface AdsApiCreateSponsoredBrandsBrandVideoAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandsBrandVideoAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandsBrandVideoAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSponsoredBrandsBrandVideoAdsRequestContent}
     * @memberof AdsApiCreateSponsoredBrandsBrandVideoAds
     */
    readonly createSponsoredBrandsBrandVideoAdsRequestContent: CreateSponsoredBrandsBrandVideoAdsRequestContent
}

/**
 * Request parameters for createSponsoredBrandsProductCollectionAds operation in AdsApi.
 * @export
 * @interface AdsApiCreateSponsoredBrandsProductCollectionAdsRequest
 */
export interface AdsApiCreateSponsoredBrandsProductCollectionAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandsProductCollectionAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandsProductCollectionAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSponsoredBrandsProductCollectionAdsRequestContent}
     * @memberof AdsApiCreateSponsoredBrandsProductCollectionAds
     */
    readonly createSponsoredBrandsProductCollectionAdsRequestContent: CreateSponsoredBrandsProductCollectionAdsRequestContent
}

/**
 * Request parameters for createSponsoredBrandsVideoAds operation in AdsApi.
 * @export
 * @interface AdsApiCreateSponsoredBrandsVideoAdsRequest
 */
export interface AdsApiCreateSponsoredBrandsVideoAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandsVideoAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiCreateSponsoredBrandsVideoAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSponsoredBrandsVideoAdsRequestContent}
     * @memberof AdsApiCreateSponsoredBrandsVideoAds
     */
    readonly createSponsoredBrandsVideoAdsRequestContent: CreateSponsoredBrandsVideoAdsRequestContent
}

/**
 * Request parameters for deleteSponsoredBrandsAds operation in AdsApi.
 * @export
 * @interface AdsApiDeleteSponsoredBrandsAdsRequest
 */
export interface AdsApiDeleteSponsoredBrandsAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiDeleteSponsoredBrandsAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiDeleteSponsoredBrandsAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {DeleteSponsoredBrandsAdsRequestContent}
     * @memberof AdsApiDeleteSponsoredBrandsAds
     */
    readonly deleteSponsoredBrandsAdsRequestContent?: DeleteSponsoredBrandsAdsRequestContent
}

/**
 * Request parameters for listSponsoredBrandsAds operation in AdsApi.
 * @export
 * @interface AdsApiListSponsoredBrandsAdsRequest
 */
export interface AdsApiListSponsoredBrandsAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiListSponsoredBrandsAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiListSponsoredBrandsAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {ListSponsoredBrandsAdsRequestContent}
     * @memberof AdsApiListSponsoredBrandsAds
     */
    readonly listSponsoredBrandsAdsRequestContent?: ListSponsoredBrandsAdsRequestContent
}

/**
 * Request parameters for updateSponsoredBrandsAds operation in AdsApi.
 * @export
 * @interface AdsApiUpdateSponsoredBrandsAdsRequest
 */
export interface AdsApiUpdateSponsoredBrandsAdsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof AdsApiUpdateSponsoredBrandsAds
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof AdsApiUpdateSponsoredBrandsAds
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSponsoredBrandsAdsRequestContent}
     * @memberof AdsApiUpdateSponsoredBrandsAds
     */
    readonly updateSponsoredBrandsAdsRequestContent: UpdateSponsoredBrandsAdsRequestContent
}

/**
 * AdsApi - object-oriented interface
 * @export
 * @class AdsApi
 * @extends {BaseAPI}
 */
export class AdsApi extends BaseAPI {
    /**
     * Creates Sponsored Brands store spotlight ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates Sponsored Brands store spotlight ads.
     * @param {AdsApiCreateSponsoredBrandStoreSpotlightAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public createSponsoredBrandStoreSpotlightAds(requestParameters: AdsApiCreateSponsoredBrandStoreSpotlightAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).createSponsoredBrandStoreSpotlightAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSponsoredBrandStoreSpotlightAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates Sponsored Brands brand video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates Sponsored Brands brand video ads.
     * @param {AdsApiCreateSponsoredBrandsBrandVideoAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public createSponsoredBrandsBrandVideoAds(requestParameters: AdsApiCreateSponsoredBrandsBrandVideoAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).createSponsoredBrandsBrandVideoAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSponsoredBrandsBrandVideoAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates Sponsored Brands product collection ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates Sponsored Brands product collection ads.
     * @param {AdsApiCreateSponsoredBrandsProductCollectionAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public createSponsoredBrandsProductCollectionAds(requestParameters: AdsApiCreateSponsoredBrandsProductCollectionAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).createSponsoredBrandsProductCollectionAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSponsoredBrandsProductCollectionAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Creates Sponsored Brands video ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates Sponsored Brands video ads.
     * @param {AdsApiCreateSponsoredBrandsVideoAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public createSponsoredBrandsVideoAds(requestParameters: AdsApiCreateSponsoredBrandsVideoAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).createSponsoredBrandsVideoAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSponsoredBrandsVideoAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Deletes Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes Sponsored Brands ads.
     * @param {AdsApiDeleteSponsoredBrandsAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public deleteSponsoredBrandsAds(requestParameters: AdsApiDeleteSponsoredBrandsAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).deleteSponsoredBrandsAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.deleteSponsoredBrandsAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Lists Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Lists Sponsored Brands ads.
     * @param {AdsApiListSponsoredBrandsAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public listSponsoredBrandsAds(requestParameters: AdsApiListSponsoredBrandsAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).listSponsoredBrandsAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.listSponsoredBrandsAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Updates Sponsored Brands ads.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates Sponsored Brands ads.
     * @param {AdsApiUpdateSponsoredBrandsAdsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof AdsApi
     */
    public updateSponsoredBrandsAds(requestParameters: AdsApiUpdateSponsoredBrandsAdsRequest, options?: any) {
        return AdsApiFp(this.configuration).updateSponsoredBrandsAds(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSponsoredBrandsAdsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRecommendationsApi - axios parameter creator
 * @export
 */
export const BudgetRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Provides daily budget recommendations for a list of requested Sponsored Brands campaigns, with context on estimated historical missed opportunities.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets daily budget recommendations.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {GetBudgetRecommendationsRequestContent} getBudgetRecommendationsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, getBudgetRecommendationsRequestContent: GetBudgetRecommendationsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'getBudgetRecommendationsRequestContent' is not null or undefined
            assertParamExists('getBudgetRecommendations', 'getBudgetRecommendationsRequestContent', getBudgetRecommendationsRequestContent)
            const localVarPath = `/sb/campaigns/budgetRecommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbbudgetrecommendation.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(getBudgetRecommendationsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRecommendationsApi - functional programming interface
 * @export
 */
export const BudgetRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * Provides daily budget recommendations for a list of requested Sponsored Brands campaigns, with context on estimated historical missed opportunities.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets daily budget recommendations.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {GetBudgetRecommendationsRequestContent} getBudgetRecommendationsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, getBudgetRecommendationsRequestContent: GetBudgetRecommendationsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetBudgetRecommendationsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, getBudgetRecommendationsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRecommendationsApi - factory interface
 * @export
 */
export const BudgetRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRecommendationsApiFp(configuration)
    return {
        /**
         * Provides daily budget recommendations for a list of requested Sponsored Brands campaigns, with context on estimated historical missed opportunities.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets daily budget recommendations.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {GetBudgetRecommendationsRequestContent} getBudgetRecommendationsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, getBudgetRecommendationsRequestContent: GetBudgetRecommendationsRequestContent, options?: any): AxiosPromise<GetBudgetRecommendationsResponseContent> {
            return localVarFp.getBudgetRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, getBudgetRecommendationsRequestContent, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getBudgetRecommendations operation in BudgetRecommendationsApi.
 * @export
 * @interface BudgetRecommendationsApiGetBudgetRecommendationsRequest
 */
export interface BudgetRecommendationsApiGetBudgetRecommendationsRequest {
    /**
     * The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
     * @type {string}
     * @memberof BudgetRecommendationsApiGetBudgetRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRecommendationsApiGetBudgetRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {GetBudgetRecommendationsRequestContent}
     * @memberof BudgetRecommendationsApiGetBudgetRecommendations
     */
    readonly getBudgetRecommendationsRequestContent: GetBudgetRecommendationsRequestContent
}

/**
 * BudgetRecommendationsApi - object-oriented interface
 * @export
 * @class BudgetRecommendationsApi
 * @extends {BaseAPI}
 */
export class BudgetRecommendationsApi extends BaseAPI {
    /**
     * Provides daily budget recommendations for a list of requested Sponsored Brands campaigns, with context on estimated historical missed opportunities.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets daily budget recommendations.
     * @param {BudgetRecommendationsApiGetBudgetRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRecommendationsApi
     */
    public getBudgetRecommendations(requestParameters: BudgetRecommendationsApiGetBudgetRecommendationsRequest, options?: any) {
        return BudgetRecommendationsApiFp(this.configuration).getBudgetRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.getBudgetRecommendationsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesApi - axios parameter creator
 * @export
 */
export const BudgetRulesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'campaignId', campaignId)
            // verify required parameter 'createAssociatedBudgetRulesRequest' is not null or undefined
            assertParamExists('createAssociatedBudgetRulesForSBCampaigns', 'createAssociatedBudgetRulesRequest', createAssociatedBudgetRulesRequest)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createAssociatedBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSBBudgetRulesRequest} createSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSBBudgetRulesRequest: CreateSBBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSBBudgetRulesRequest' is not null or undefined
            assertParamExists('createBudgetRulesForSBCampaigns', 'createSBBudgetRulesRequest', createSBBudgetRulesRequest)
            const localVarPath = `/sb/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSBBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'campaignId', campaignId)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('disassociateAssociatedBudgetRuleForSBCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules/{budgetRuleId}`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)))
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'DELETE', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getBudgetRuleByRuleIdForSBCampaigns', 'budgetRuleId', budgetRuleId)
            const localVarPath = `/sb/budgetRules/{budgetRuleId}`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSBBudgetRule: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetRuleId' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'budgetRuleId', budgetRuleId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getCampaignsAssociatedWithSBBudgetRule', 'pageSize', pageSize)
            const localVarPath = `/sb/budgetRules/{budgetRuleId}/campaigns`
                .replace(`{${"budgetRuleId"}}`, encodeURIComponent(String(budgetRuleId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'campaignId', campaignId)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'pageSize', pageSize)
            // verify required parameter 'startDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'startDate', startDate)
            // verify required parameter 'endDate' is not null or undefined
            assertParamExists('getRuleBasedBudgetHistoryForSBCampaigns', 'endDate', endDate)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules/budgetHistory`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (startDate !== undefined) {
                localVarQueryParameter['startDate'] = startDate;
            }

            if (endDate !== undefined) {
                localVarQueryParameter['endDate'] = endDate;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSBBudgetRulesForAdvertiser: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getSBBudgetRulesForAdvertiser', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getSBBudgetRulesForAdvertiser', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'pageSize' is not null or undefined
            assertParamExists('getSBBudgetRulesForAdvertiser', 'pageSize', pageSize)
            const localVarPath = `/sb/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (pageSize !== undefined) {
                localVarQueryParameter['pageSize'] = pageSize;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'campaignId' is not null or undefined
            assertParamExists('listAssociatedBudgetRulesForSBCampaigns', 'campaignId', campaignId)
            const localVarPath = `/sb/campaigns/{campaignId}/budgetRules`
                .replace(`{${"campaignId"}}`, encodeURIComponent(String(campaignId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Update one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSBBudgetRulesRequest} updateSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSBCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateBudgetRulesForSBCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSBBudgetRulesRequest' is not null or undefined
            assertParamExists('updateBudgetRulesForSBCampaigns', 'updateSBBudgetRulesRequest', updateSBBudgetRulesRequest)
            const localVarPath = `/sb/budgetRules`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSBBudgetRulesRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesApi - functional programming interface
 * @export
 */
export const BudgetRulesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesApiAxiosParamCreator(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSBBudgetRulesRequest} createSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSBBudgetRulesRequest: CreateSBBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSBBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<object>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSBBudgetRuleResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBGetAssociatedCampaignsResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBBudgetHistory>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<GetSBBudgetRulesForAdvertiserResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBListAssociatedBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Update one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSBBudgetRulesRequest} updateSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateBudgetRulesResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSBBudgetRulesRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesApi - factory interface
 * @export
 */
export const BudgetRulesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesApiFp(configuration)
    return {
        /**
         * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Associates one or more budget rules to a campaign specified by identifer.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {CreateAssociatedBudgetRulesRequest} createAssociatedBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest, options?: any): AxiosPromise<CreateAssociatedBudgetRulesResponse> {
            return localVarFp.createAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, createAssociatedBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {CreateSBBudgetRulesRequest} createSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSBBudgetRulesRequest: CreateSBBudgetRulesRequest, options?: any): AxiosPromise<CreateBudgetRulesResponse> {
            return localVarFp.createBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSBBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, budgetRuleId: string, options?: any): AxiosPromise<object> {
            return localVarFp.disassociateAssociatedBudgetRuleForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a budget rule specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, options?: any): AxiosPromise<GetSBBudgetRuleResponse> {
            return localVarFp.getBudgetRuleByRuleIdForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Gets all the campaigns associated with a budget rule
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} budgetRuleId The budget rule identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, budgetRuleId: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<SBGetAssociatedCampaignsResponse> {
            return localVarFp.getCampaignsAssociatedWithSBBudgetRule(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetRuleId, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets the budget history for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} startDate The start date of the budget history in YYYYMMDD format.
         * @param {string} endDate The end date of the budget history in YYYYMMDD format.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, pageSize: number, startDate: string, endDate: string, nextToken?: string, options?: any): AxiosPromise<SBBudgetHistory> {
            return localVarFp.getRuleBasedBudgetHistoryForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, pageSize, startDate, endDate, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * 
         * @summary Get all budget rules created by an advertiser
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} pageSize Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
         * @param {string} [nextToken] To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, pageSize: number, nextToken?: string, options?: any): AxiosPromise<GetSBBudgetRulesForAdvertiserResponse> {
            return localVarFp.getSBBudgetRulesForAdvertiser(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, pageSize, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of budget rules associated to a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {number} campaignId The campaign identifier.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, campaignId: number, options?: any): AxiosPromise<SBListAssociatedBudgetRulesResponse> {
            return localVarFp.listAssociatedBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, campaignId, options).then((request) => request(axios, basePath));
        },
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Update one or more budget rules.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {UpdateSBBudgetRulesRequest} updateSBBudgetRulesRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest, options?: any): AxiosPromise<UpdateBudgetRulesResponse> {
            return localVarFp.updateBudgetRulesForSBCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSBBudgetRulesRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createAssociatedBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly campaignId: number

    /**
     * 
     * @type {CreateAssociatedBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaigns
     */
    readonly createAssociatedBudgetRulesRequest: CreateAssociatedBudgetRulesRequest
}

/**
 * Request parameters for createBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiCreateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSBBudgetRulesRequest}
     * @memberof BudgetRulesApiCreateBudgetRulesForSBCampaigns
     */
    readonly createSBBudgetRulesRequest: CreateSBBudgetRulesRequest
}

/**
 * Request parameters for disassociateAssociatedBudgetRuleForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest
 */
export interface BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly campaignId: number

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getBudgetRuleByRuleIdForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest
 */
export interface BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaigns
     */
    readonly budgetRuleId: string
}

/**
 * Request parameters for getCampaignsAssociatedWithSBBudgetRule operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest
 */
export interface BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The budget rule identifier.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly budgetRuleId: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRule
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getRuleBasedBudgetHistoryForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest
 */
export interface BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a Login with Amazon account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly campaignId: number

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly pageSize: number

    /**
     * The start date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly startDate: string

    /**
     * The end date of the budget history in YYYYMMDD format.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly endDate: string

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaigns
     */
    readonly nextToken?: string
}

/**
 * Request parameters for getSBBudgetRulesForAdvertiser operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest
 */
export interface BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Sets a limit on the number of results returned. Maximum limit of &#x60;pageSize&#x60; is 30.
     * @type {number}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly pageSize: number

    /**
     * To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;nextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof BudgetRulesApiGetSBBudgetRulesForAdvertiser
     */
    readonly nextToken?: string
}

/**
 * Request parameters for listAssociatedBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The campaign identifier.
     * @type {number}
     * @memberof BudgetRulesApiListAssociatedBudgetRulesForSBCampaigns
     */
    readonly campaignId: number
}

/**
 * Request parameters for updateBudgetRulesForSBCampaigns operation in BudgetRulesApi.
 * @export
 * @interface BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest
 */
export interface BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {string}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSBCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSBBudgetRulesRequest}
     * @memberof BudgetRulesApiUpdateBudgetRulesForSBCampaigns
     */
    readonly updateSBBudgetRulesRequest: UpdateSBBudgetRulesRequest
}

/**
 * BudgetRulesApi - object-oriented interface
 * @export
 * @class BudgetRulesApi
 * @extends {BaseAPI}
 */
export class BudgetRulesApi extends BaseAPI {
    /**
     * A maximum of 250 rules can be associated to a campaign. Note that the name of each rule associated to a campaign is required to be unique.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Associates one or more budget rules to a campaign specified by identifer.
     * @param {BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createAssociatedBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiCreateAssociatedBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createAssociatedBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.createAssociatedBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates one or more budget rules.
     * @param {BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public createBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiCreateBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).createBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSBBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Disassociates a budget rule specified by identifier from a campaign specified by identifier.
     * @param {BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public disassociateAssociatedBudgetRuleForSBCampaigns(requestParameters: BudgetRulesApiDisassociateAssociatedBudgetRuleForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).disassociateAssociatedBudgetRuleForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a budget rule specified by identifier.
     * @param {BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getBudgetRuleByRuleIdForSBCampaigns(requestParameters: BudgetRulesApiGetBudgetRuleByRuleIdForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getBudgetRuleByRuleIdForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Gets all the campaigns associated with a budget rule
     * @param {BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getCampaignsAssociatedWithSBBudgetRule(requestParameters: BudgetRulesApiGetCampaignsAssociatedWithSBBudgetRuleRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getCampaignsAssociatedWithSBBudgetRule(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetRuleId, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * **Deprecation notice: This endpoint will be deprecated on August 31, 2023.** The budget history is returned for the time period specified in the required startDate and endDate parameters. The maximum time period is 90 days.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets the budget history for a campaign specified by identifier.
     * @param {BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getRuleBasedBudgetHistoryForSBCampaigns(requestParameters: BudgetRulesApiGetRuleBasedBudgetHistoryForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getRuleBasedBudgetHistoryForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, requestParameters.pageSize, requestParameters.startDate, requestParameters.endDate, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * 
     * @summary Get all budget rules created by an advertiser
     * @param {BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public getSBBudgetRulesForAdvertiser(requestParameters: BudgetRulesApiGetSBBudgetRulesForAdvertiserRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).getSBBudgetRulesForAdvertiser(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.pageSize, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of budget rules associated to a campaign specified by identifier.
     * @param {BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public listAssociatedBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiListAssociatedBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).listAssociatedBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.campaignId, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Update one or more budget rules.
     * @param {BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesApi
     */
    public updateBudgetRulesForSBCampaigns(requestParameters: BudgetRulesApiUpdateBudgetRulesForSBCampaignsRequest, options?: any) {
        return BudgetRulesApiFp(this.configuration).updateBudgetRulesForSBCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSBBudgetRulesRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetRulesRecommendationApi - axios parameter creator
 * @export
 */
export const BudgetRulesRecommendationApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBGetBudgetRulesRecommendation: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBGetBudgetRulesRecommendation', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBGetBudgetRulesRecommendation', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/campaigns/budgetRules/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbbudgetrulesrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(uNKNOWNBASETYPE, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetRulesRecommendationApi - functional programming interface
 * @export
 */
export const BudgetRulesRecommendationApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetRulesRecommendationApiAxiosParamCreator(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBBudgetRulesRecommendationEventResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetRulesRecommendationApi - factory interface
 * @export
 */
export const BudgetRulesRecommendationApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetRulesRecommendationApiFp(configuration)
    return {
        /**
         * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {any} [uNKNOWNBASETYPE] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, uNKNOWNBASETYPE?: any, options?: any): AxiosPromise<SBBudgetRulesRecommendationEventResponse> {
            return localVarFp.sBGetBudgetRulesRecommendation(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, uNKNOWNBASETYPE, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sBGetBudgetRulesRecommendation operation in BudgetRulesRecommendationApi.
 * @export
 * @interface BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest
 */
export interface BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSBGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof BudgetRulesRecommendationApiSBGetBudgetRulesRecommendation
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {any}
     * @memberof BudgetRulesRecommendationApiSBGetBudgetRulesRecommendation
     */
    readonly uNKNOWNBASETYPE?: any
}

/**
 * BudgetRulesRecommendationApi - object-oriented interface
 * @export
 * @class BudgetRulesRecommendationApi
 * @extends {BaseAPI}
 */
export class BudgetRulesRecommendationApi extends BaseAPI {
    /**
     * A rule enables an automatic budget increase for a specified date range or for a special event. The response also includes a suggested budget increase for each special event.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets a list of special events with suggested date range and suggested budget increase for a campaign specified by identifier.
     * @param {BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetRulesRecommendationApi
     */
    public sBGetBudgetRulesRecommendation(requestParameters: BudgetRulesRecommendationApiSBGetBudgetRulesRecommendationRequest, options?: any) {
        return BudgetRulesRecommendationApiFp(this.configuration).sBGetBudgetRulesRecommendation(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.uNKNOWNBASETYPE, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * BudgetUsageApi - axios parameter creator
 * @export
 */
export const BudgetUsageApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Budget usage API for SB campaigns
         * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sbCampaignsBudgetUsage: async (amazonAdvertisingAPIClientId: any, amazonAdvertisingAPIScope: any, budgetUsageCampaignRequest: BudgetUsageCampaignRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sbCampaignsBudgetUsage', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sbCampaignsBudgetUsage', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'budgetUsageCampaignRequest' is not null or undefined
            assertParamExists('sbCampaignsBudgetUsage', 'budgetUsageCampaignRequest', budgetUsageCampaignRequest)
            const localVarPath = `/sb/campaigns/budget/usage`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(JSON.stringify(amazonAdvertisingAPIClientId));
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(JSON.stringify(amazonAdvertisingAPIScope));
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbcampaignbudgetusage.v1+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(budgetUsageCampaignRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * BudgetUsageApi - functional programming interface
 * @export
 */
export const BudgetUsageApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = BudgetUsageApiAxiosParamCreator(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Budget usage API for SB campaigns
         * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sbCampaignsBudgetUsage(amazonAdvertisingAPIClientId: any, amazonAdvertisingAPIScope: any, budgetUsageCampaignRequest: BudgetUsageCampaignRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<BudgetUsageCampaignResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sbCampaignsBudgetUsage(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetUsageCampaignRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * BudgetUsageApi - factory interface
 * @export
 */
export const BudgetUsageApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = BudgetUsageApiFp(configuration)
    return {
        /**
         *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Budget usage API for SB campaigns
         * @param {any} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
         * @param {any} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
         * @param {BudgetUsageCampaignRequest} budgetUsageCampaignRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sbCampaignsBudgetUsage(amazonAdvertisingAPIClientId: any, amazonAdvertisingAPIScope: any, budgetUsageCampaignRequest: BudgetUsageCampaignRequest, options?: any): AxiosPromise<BudgetUsageCampaignResponse> {
            return localVarFp.sbCampaignsBudgetUsage(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, budgetUsageCampaignRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sbCampaignsBudgetUsage operation in BudgetUsageApi.
 * @export
 * @interface BudgetUsageApiSbCampaignsBudgetUsageRequest
 */
export interface BudgetUsageApiSbCampaignsBudgetUsageRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account. This is a required header for advertisers and integrators using the Advertising API.
     * @type {any}
     * @memberof BudgetUsageApiSbCampaignsBudgetUsage
     */
    readonly amazonAdvertisingAPIClientId: any

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.
     * @type {any}
     * @memberof BudgetUsageApiSbCampaignsBudgetUsage
     */
    readonly amazonAdvertisingAPIScope: any

    /**
     * 
     * @type {BudgetUsageCampaignRequest}
     * @memberof BudgetUsageApiSbCampaignsBudgetUsage
     */
    readonly budgetUsageCampaignRequest: BudgetUsageCampaignRequest
}

/**
 * BudgetUsageApi - object-oriented interface
 * @export
 * @class BudgetUsageApi
 * @extends {BaseAPI}
 */
export class BudgetUsageApi extends BaseAPI {
    /**
     *   **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Budget usage API for SB campaigns
     * @param {BudgetUsageApiSbCampaignsBudgetUsageRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof BudgetUsageApi
     */
    public sbCampaignsBudgetUsage(requestParameters: BudgetUsageApiSbCampaignsBudgetUsageRequest, options?: any) {
        return BudgetUsageApiFp(this.configuration).sbCampaignsBudgetUsage(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.budgetUsageCampaignRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * CampaignsApi - axios parameter creator
 * @export
 */
export const CampaignsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Creates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsCampaignsRequestContent} createSponsoredBrandsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsCampaignsRequestContent: CreateSponsoredBrandsCampaignsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('createSponsoredBrandsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('createSponsoredBrandsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'createSponsoredBrandsCampaignsRequestContent' is not null or undefined
            assertParamExists('createSponsoredBrandsCampaigns', 'createSponsoredBrandsCampaignsRequestContent', createSponsoredBrandsCampaignsRequestContent)
            const localVarPath = `/sb/v4/campaigns`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbcampaignresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(createSponsoredBrandsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Deletes Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsCampaignsRequestContent} [deleteSponsoredBrandsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredBrandsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsCampaignsRequestContent?: DeleteSponsoredBrandsCampaignsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('deleteSponsoredBrandsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('deleteSponsoredBrandsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/v4/campaigns/delete`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbcampaignresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(deleteSponsoredBrandsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Lists Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsCampaignsRequestContent} [listSponsoredBrandsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredBrandsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsCampaignsRequestContent?: ListSponsoredBrandsCampaignsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('listSponsoredBrandsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('listSponsoredBrandsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/v4/campaigns/list`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbcampaignresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(listSponsoredBrandsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Updates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsCampaignsRequestContent} updateSponsoredBrandsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredBrandsCampaigns: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsCampaignsRequestContent: UpdateSponsoredBrandsCampaignsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('updateSponsoredBrandsCampaigns', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('updateSponsoredBrandsCampaigns', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'updateSponsoredBrandsCampaignsRequestContent' is not null or undefined
            assertParamExists('updateSponsoredBrandsCampaigns', 'updateSponsoredBrandsCampaignsRequestContent', updateSponsoredBrandsCampaignsRequestContent)
            const localVarPath = `/sb/v4/campaigns`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'PUT', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbcampaignresource.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(updateSponsoredBrandsCampaignsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * CampaignsApi - functional programming interface
 * @export
 */
export const CampaignsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = CampaignsApiAxiosParamCreator(configuration)
    return {
        /**
         * Creates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsCampaignsRequestContent} createSponsoredBrandsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async createSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsCampaignsRequestContent: CreateSponsoredBrandsCampaignsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<CreateSponsoredBrandsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.createSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsCampaignsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Deletes Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsCampaignsRequestContent} [deleteSponsoredBrandsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async deleteSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsCampaignsRequestContent?: DeleteSponsoredBrandsCampaignsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<DeleteSponsoredBrandsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.deleteSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, deleteSponsoredBrandsCampaignsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Lists Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsCampaignsRequestContent} [listSponsoredBrandsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async listSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsCampaignsRequestContent?: ListSponsoredBrandsCampaignsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<ListSponsoredBrandsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.listSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listSponsoredBrandsCampaignsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Updates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsCampaignsRequestContent} updateSponsoredBrandsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async updateSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsCampaignsRequestContent: UpdateSponsoredBrandsCampaignsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<UpdateSponsoredBrandsCampaignsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.updateSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSponsoredBrandsCampaignsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * CampaignsApi - factory interface
 * @export
 */
export const CampaignsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = CampaignsApiFp(configuration)
    return {
        /**
         * Creates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Creates Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {CreateSponsoredBrandsCampaignsRequestContent} createSponsoredBrandsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        createSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, createSponsoredBrandsCampaignsRequestContent: CreateSponsoredBrandsCampaignsRequestContent, options?: any): AxiosPromise<CreateSponsoredBrandsCampaignsResponseContent> {
            return localVarFp.createSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, createSponsoredBrandsCampaignsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Deletes Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Deletes Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {DeleteSponsoredBrandsCampaignsRequestContent} [deleteSponsoredBrandsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        deleteSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, deleteSponsoredBrandsCampaignsRequestContent?: DeleteSponsoredBrandsCampaignsRequestContent, options?: any): AxiosPromise<DeleteSponsoredBrandsCampaignsResponseContent> {
            return localVarFp.deleteSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, deleteSponsoredBrandsCampaignsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Lists Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Lists Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {ListSponsoredBrandsCampaignsRequestContent} [listSponsoredBrandsCampaignsRequestContent] 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        listSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, listSponsoredBrandsCampaignsRequestContent?: ListSponsoredBrandsCampaignsRequestContent, options?: any): AxiosPromise<ListSponsoredBrandsCampaignsResponseContent> {
            return localVarFp.listSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, listSponsoredBrandsCampaignsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Updates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
         * @summary Updates Sponsored Brands campaigns.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {UpdateSponsoredBrandsCampaignsRequestContent} updateSponsoredBrandsCampaignsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        updateSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, updateSponsoredBrandsCampaignsRequestContent: UpdateSponsoredBrandsCampaignsRequestContent, options?: any): AxiosPromise<UpdateSponsoredBrandsCampaignsResponseContent> {
            return localVarFp.updateSponsoredBrandsCampaigns(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, updateSponsoredBrandsCampaignsRequestContent, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for createSponsoredBrandsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiCreateSponsoredBrandsCampaignsRequest
 */
export interface CampaignsApiCreateSponsoredBrandsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiCreateSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof CampaignsApiCreateSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {CreateSponsoredBrandsCampaignsRequestContent}
     * @memberof CampaignsApiCreateSponsoredBrandsCampaigns
     */
    readonly createSponsoredBrandsCampaignsRequestContent: CreateSponsoredBrandsCampaignsRequestContent
}

/**
 * Request parameters for deleteSponsoredBrandsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiDeleteSponsoredBrandsCampaignsRequest
 */
export interface CampaignsApiDeleteSponsoredBrandsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiDeleteSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof CampaignsApiDeleteSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {DeleteSponsoredBrandsCampaignsRequestContent}
     * @memberof CampaignsApiDeleteSponsoredBrandsCampaigns
     */
    readonly deleteSponsoredBrandsCampaignsRequestContent?: DeleteSponsoredBrandsCampaignsRequestContent
}

/**
 * Request parameters for listSponsoredBrandsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiListSponsoredBrandsCampaignsRequest
 */
export interface CampaignsApiListSponsoredBrandsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiListSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof CampaignsApiListSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {ListSponsoredBrandsCampaignsRequestContent}
     * @memberof CampaignsApiListSponsoredBrandsCampaigns
     */
    readonly listSponsoredBrandsCampaignsRequestContent?: ListSponsoredBrandsCampaignsRequestContent
}

/**
 * Request parameters for updateSponsoredBrandsCampaigns operation in CampaignsApi.
 * @export
 * @interface CampaignsApiUpdateSponsoredBrandsCampaignsRequest
 */
export interface CampaignsApiUpdateSponsoredBrandsCampaignsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof CampaignsApiUpdateSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof CampaignsApiUpdateSponsoredBrandsCampaigns
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {UpdateSponsoredBrandsCampaignsRequestContent}
     * @memberof CampaignsApiUpdateSponsoredBrandsCampaigns
     */
    readonly updateSponsoredBrandsCampaignsRequestContent: UpdateSponsoredBrandsCampaignsRequestContent
}

/**
 * CampaignsApi - object-oriented interface
 * @export
 * @class CampaignsApi
 * @extends {BaseAPI}
 */
export class CampaignsApi extends BaseAPI {
    /**
     * Creates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Creates Sponsored Brands campaigns.
     * @param {CampaignsApiCreateSponsoredBrandsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public createSponsoredBrandsCampaigns(requestParameters: CampaignsApiCreateSponsoredBrandsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).createSponsoredBrandsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.createSponsoredBrandsCampaignsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Deletes Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Deletes Sponsored Brands campaigns.
     * @param {CampaignsApiDeleteSponsoredBrandsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public deleteSponsoredBrandsCampaigns(requestParameters: CampaignsApiDeleteSponsoredBrandsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).deleteSponsoredBrandsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.deleteSponsoredBrandsCampaignsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Lists Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Lists Sponsored Brands campaigns.
     * @param {CampaignsApiListSponsoredBrandsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public listSponsoredBrandsCampaigns(requestParameters: CampaignsApiListSponsoredBrandsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).listSponsoredBrandsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.listSponsoredBrandsCampaignsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Updates Sponsored Brands campaigns.  **Requires one of these permissions**: [\"advertiser_campaign_edit\"]
     * @summary Updates Sponsored Brands campaigns.
     * @param {CampaignsApiUpdateSponsoredBrandsCampaignsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof CampaignsApi
     */
    public updateSponsoredBrandsCampaigns(requestParameters: CampaignsApiUpdateSponsoredBrandsCampaignsRequest, options?: any) {
        return CampaignsApiFp(this.configuration).updateSponsoredBrandsCampaigns(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.updateSponsoredBrandsCampaignsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * InsightsApi - axios parameter creator
 * @export
 */
export const InsightsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Creates campaign level insights. Insights will be provided for passed in campaign parameters.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBInsightsCampaignInsightsRequestContent} sBInsightsCampaignInsightsRequestContent 
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBInsightsCampaignInsights: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBInsightsCampaignInsightsRequestContent: SBInsightsCampaignInsightsRequestContent, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBInsightsCampaignInsights', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBInsightsCampaignInsights', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sBInsightsCampaignInsightsRequestContent' is not null or undefined
            assertParamExists('sBInsightsCampaignInsights', 'sBInsightsCampaignInsightsRequestContent', sBInsightsCampaignInsightsRequestContent)
            const localVarPath = `/sb/campaigns/insights`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbinsights.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sBInsightsCampaignInsightsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * InsightsApi - functional programming interface
 * @export
 */
export const InsightsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = InsightsApiAxiosParamCreator(configuration)
    return {
        /**
         * Creates campaign level insights. Insights will be provided for passed in campaign parameters.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBInsightsCampaignInsightsRequestContent} sBInsightsCampaignInsightsRequestContent 
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBInsightsCampaignInsights(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBInsightsCampaignInsightsRequestContent: SBInsightsCampaignInsightsRequestContent, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBInsightsCampaignInsightsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBInsightsCampaignInsights(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBInsightsCampaignInsightsRequestContent, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * InsightsApi - factory interface
 * @export
 */
export const InsightsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = InsightsApiFp(configuration)
    return {
        /**
         * Creates campaign level insights. Insights will be provided for passed in campaign parameters.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBInsightsCampaignInsightsRequestContent} sBInsightsCampaignInsightsRequestContent 
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBInsightsCampaignInsights(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBInsightsCampaignInsightsRequestContent: SBInsightsCampaignInsightsRequestContent, nextToken?: string, options?: any): AxiosPromise<SBInsightsCampaignInsightsResponseContent> {
            return localVarFp.sBInsightsCampaignInsights(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBInsightsCampaignInsightsRequestContent, nextToken, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sBInsightsCampaignInsights operation in InsightsApi.
 * @export
 * @interface InsightsApiSBInsightsCampaignInsightsRequest
 */
export interface InsightsApiSBInsightsCampaignInsightsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof InsightsApiSBInsightsCampaignInsights
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof InsightsApiSBInsightsCampaignInsights
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SBInsightsCampaignInsightsRequestContent}
     * @memberof InsightsApiSBInsightsCampaignInsights
     */
    readonly sBInsightsCampaignInsightsRequestContent: SBInsightsCampaignInsightsRequestContent

    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof InsightsApiSBInsightsCampaignInsights
     */
    readonly nextToken?: string
}

/**
 * InsightsApi - object-oriented interface
 * @export
 * @class InsightsApi
 * @extends {BaseAPI}
 */
export class InsightsApi extends BaseAPI {
    /**
     * Creates campaign level insights. Insights will be provided for passed in campaign parameters.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {InsightsApiSBInsightsCampaignInsightsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof InsightsApi
     */
    public sBInsightsCampaignInsights(requestParameters: InsightsApiSBInsightsCampaignInsightsRequest, options?: any) {
        return InsightsApiFp(this.configuration).sBInsightsCampaignInsights(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sBInsightsCampaignInsightsRequestContent, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * KeywordRecommendationsApi - axios parameter creator
 * @export
 */
export const KeywordRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl} [sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl] **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getKeywordRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getKeywordRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getKeywordRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/recommendations/keyword`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbkeywordrecommendation.v3+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * KeywordRecommendationsApi - functional programming interface
 * @export
 */
export const KeywordRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = KeywordRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl} [sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl] **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getKeywordRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<Array<SBKeywordSuggestion>>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getKeywordRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * KeywordRecommendationsApi - factory interface
 * @export
 */
export const KeywordRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = KeywordRecommendationsApiFp(configuration)
    return {
        /**
         * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @summary Gets keyword recommendations
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl} [sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl] **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getKeywordRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl, options?: any): AxiosPromise<Array<SBKeywordSuggestion>> {
            return localVarFp.getKeywordRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getKeywordRecommendations operation in KeywordRecommendationsApi.
 * @export
 * @interface KeywordRecommendationsApiGetKeywordRecommendationsRequest
 */
export interface KeywordRecommendationsApiGetKeywordRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetKeywordRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof KeywordRecommendationsApiGetKeywordRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * **Must contain exactly only one of**     1.) An array of ASINs for which keyword recommendations are generated.     2.) The URL of a Stores page. Vendors may also specify the URL of a custom landing page. The products on the landing page are used to generate keyword recommendations.     Optional parameters include the max number of suggestions and locale for keyword translations. Supported locales include: Simplified Chinese (locale: “zh_CN”) for US, UK and CA. English (locale:  “en_GB”) for DE, FR, IT and ES. If locale is invalid or unsupported, no translations will be returned.
     * @type {SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl}
     * @memberof KeywordRecommendationsApiGetKeywordRecommendations
     */
    readonly sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl?: SBKeywordRecommendationRequestAsin | SBKeywordRecommendationRequestUrl
}

/**
 * KeywordRecommendationsApi - object-oriented interface
 * @export
 * @class KeywordRecommendationsApi
 * @extends {BaseAPI}
 */
export class KeywordRecommendationsApi extends BaseAPI {
    /**
     * Gets an array of keyword recommendation objects for a set of ASINs included either on a landing page or a Stores page. Vendors may also specify a custom landing page.  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @summary Gets keyword recommendations
     * @param {KeywordRecommendationsApiGetKeywordRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof KeywordRecommendationsApi
     */
    public getKeywordRecommendations(requestParameters: KeywordRecommendationsApiGetKeywordRecommendationsRequest, options?: any) {
        return KeywordRecommendationsApiFp(this.configuration).getKeywordRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sBKeywordRecommendationRequestAsinSBKeywordRecommendationRequestUrl, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * ProductTargetingCategoriesApi - axios parameter creator
 * @export
 */
export const ProductTargetingCategoriesApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns refinements according to category input.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} categoryRefinementId The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingLocale} [locale] The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetRefinementsForCategory: async (categoryRefinementId: string, amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, locale?: SBTargetingLocale, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'categoryRefinementId' is not null or undefined
            assertParamExists('sBTargetingGetRefinementsForCategory', 'categoryRefinementId', categoryRefinementId)
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBTargetingGetRefinementsForCategory', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBTargetingGetRefinementsForCategory', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/targets/categories/{categoryRefinementId}/refinements`
                .replace(`{${"categoryRefinementId"}}`, encodeURIComponent(String(categoryRefinementId)));
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Get number of targetable asins based on refinements provided by the user.  Use `/sb/targets/categories` or `/sb/recommendations/targets/category` to retrieve the category ID. Use `/sb/targets/categories/{categoryRefinementId}/refinements` to retrieve refinements data for a category.  Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingGetTargetableASINCountsRequestContent} sBTargetingGetTargetableASINCountsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetTargetableASINCounts: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBTargetingGetTargetableASINCountsRequestContent: SBTargetingGetTargetableASINCountsRequestContent, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBTargetingGetTargetableASINCounts', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBTargetingGetTargetableASINCounts', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'sBTargetingGetTargetableASINCountsRequestContent' is not null or undefined
            assertParamExists('sBTargetingGetTargetableASINCounts', 'sBTargetingGetTargetableASINCountsRequestContent', sBTargetingGetTargetableASINCountsRequestContent)
            const localVarPath = `/sb/targets/products/count`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/vnd.sbtargeting.v4+json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(sBTargetingGetTargetableASINCountsRequestContent, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
        /**
         * Returns all targetable categories by default in a list. List of categories can be used to build and traverse category tree. Set query parameter `includeOnlyRootCategories=true` to return only the root categories, or set `parentCategoryRefinementId` to return children of a specific parent category. Each category node has the fields - category name, category refinement id, parent category refinement id, isTargetable flag, and ASIN count range.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {SBTargetingSupplySource} supplySource The supply source where the target will be used. Use &#x60;AMAZON&#x60; for placements on Amazon website. Use &#x60;STREAMING_VIDEO&#x60; for off-site video placements such as IMDb TV.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingLocale} [locale] The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
         * @param {boolean} [includeOnlyRootCategories] Indicates whether to only retun root categories or not.
         * @param {string} [parentCategoryRefinementId] Returns child categories of category.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetTargetableCategories: async (supplySource: SBTargetingSupplySource, amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, locale?: SBTargetingLocale, includeOnlyRootCategories?: boolean, parentCategoryRefinementId?: string, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'supplySource' is not null or undefined
            assertParamExists('sBTargetingGetTargetableCategories', 'supplySource', supplySource)
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBTargetingGetTargetableCategories', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBTargetingGetTargetableCategories', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/targets/categories`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (locale !== undefined) {
                localVarQueryParameter['locale'] = locale;
            }

            if (supplySource !== undefined) {
                localVarQueryParameter['supplySource'] = supplySource;
            }

            if (includeOnlyRootCategories !== undefined) {
                localVarQueryParameter['includeOnlyRootCategories'] = includeOnlyRootCategories;
            }

            if (parentCategoryRefinementId !== undefined) {
                localVarQueryParameter['parentCategoryRefinementId'] = parentCategoryRefinementId;
            }

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * ProductTargetingCategoriesApi - functional programming interface
 * @export
 */
export const ProductTargetingCategoriesApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = ProductTargetingCategoriesApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns refinements according to category input.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} categoryRefinementId The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingLocale} [locale] The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBTargetingGetRefinementsForCategory(categoryRefinementId: string, amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, locale?: SBTargetingLocale, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBTargetingGetRefinementsForCategoryResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBTargetingGetRefinementsForCategory(categoryRefinementId, amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, locale, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Get number of targetable asins based on refinements provided by the user.  Use `/sb/targets/categories` or `/sb/recommendations/targets/category` to retrieve the category ID. Use `/sb/targets/categories/{categoryRefinementId}/refinements` to retrieve refinements data for a category.  Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingGetTargetableASINCountsRequestContent} sBTargetingGetTargetableASINCountsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBTargetingGetTargetableASINCounts(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBTargetingGetTargetableASINCountsRequestContent: SBTargetingGetTargetableASINCountsRequestContent, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBTargetingGetTargetableASINCountsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBTargetingGetTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBTargetingGetTargetableASINCountsRequestContent, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
        /**
         * Returns all targetable categories by default in a list. List of categories can be used to build and traverse category tree. Set query parameter `includeOnlyRootCategories=true` to return only the root categories, or set `parentCategoryRefinementId` to return children of a specific parent category. Each category node has the fields - category name, category refinement id, parent category refinement id, isTargetable flag, and ASIN count range.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {SBTargetingSupplySource} supplySource The supply source where the target will be used. Use &#x60;AMAZON&#x60; for placements on Amazon website. Use &#x60;STREAMING_VIDEO&#x60; for off-site video placements such as IMDb TV.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingLocale} [locale] The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
         * @param {boolean} [includeOnlyRootCategories] Indicates whether to only retun root categories or not.
         * @param {string} [parentCategoryRefinementId] Returns child categories of category.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBTargetingGetTargetableCategories(supplySource: SBTargetingSupplySource, amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, locale?: SBTargetingLocale, includeOnlyRootCategories?: boolean, parentCategoryRefinementId?: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBTargetingGetTargetableCategoriesResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBTargetingGetTargetableCategories(supplySource, amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, locale, includeOnlyRootCategories, parentCategoryRefinementId, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * ProductTargetingCategoriesApi - factory interface
 * @export
 */
export const ProductTargetingCategoriesApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = ProductTargetingCategoriesApiFp(configuration)
    return {
        /**
         * Returns refinements according to category input.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} categoryRefinementId The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingLocale} [locale] The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetRefinementsForCategory(categoryRefinementId: string, amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, locale?: SBTargetingLocale, nextToken?: string, options?: any): AxiosPromise<SBTargetingGetRefinementsForCategoryResponseContent> {
            return localVarFp.sBTargetingGetRefinementsForCategory(categoryRefinementId, amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, locale, nextToken, options).then((request) => request(axios, basePath));
        },
        /**
         * Get number of targetable asins based on refinements provided by the user.  Use `/sb/targets/categories` or `/sb/recommendations/targets/category` to retrieve the category ID. Use `/sb/targets/categories/{categoryRefinementId}/refinements` to retrieve refinements data for a category.  Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingGetTargetableASINCountsRequestContent} sBTargetingGetTargetableASINCountsRequestContent 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetTargetableASINCounts(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, sBTargetingGetTargetableASINCountsRequestContent: SBTargetingGetTargetableASINCountsRequestContent, options?: any): AxiosPromise<SBTargetingGetTargetableASINCountsResponseContent> {
            return localVarFp.sBTargetingGetTargetableASINCounts(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, sBTargetingGetTargetableASINCountsRequestContent, options).then((request) => request(axios, basePath));
        },
        /**
         * Returns all targetable categories by default in a list. List of categories can be used to build and traverse category tree. Set query parameter `includeOnlyRootCategories=true` to return only the root categories, or set `parentCategoryRefinementId` to return children of a specific parent category. Each category node has the fields - category name, category refinement id, parent category refinement id, isTargetable flag, and ASIN count range.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {SBTargetingSupplySource} supplySource The supply source where the target will be used. Use &#x60;AMAZON&#x60; for placements on Amazon website. Use &#x60;STREAMING_VIDEO&#x60; for off-site video placements such as IMDb TV.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {SBTargetingLocale} [locale] The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
         * @param {boolean} [includeOnlyRootCategories] Indicates whether to only retun root categories or not.
         * @param {string} [parentCategoryRefinementId] Returns child categories of category.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetTargetableCategories(supplySource: SBTargetingSupplySource, amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, locale?: SBTargetingLocale, includeOnlyRootCategories?: boolean, parentCategoryRefinementId?: string, nextToken?: string, options?: any): AxiosPromise<SBTargetingGetTargetableCategoriesResponseContent> {
            return localVarFp.sBTargetingGetTargetableCategories(supplySource, amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, locale, includeOnlyRootCategories, parentCategoryRefinementId, nextToken, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sBTargetingGetRefinementsForCategory operation in ProductTargetingCategoriesApi.
 * @export
 * @interface ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategoryRequest
 */
export interface ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategoryRequest {
    /**
     * The category refinement id. Please use /sb/targets/categories or /sb/recommendations/targets/category to retrieve category IDs.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategory
     */
    readonly categoryRefinementId: string

    /**
     * The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategory
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategory
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
     * @type {SBTargetingLocale}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategory
     */
    readonly locale?: SBTargetingLocale

    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategory
     */
    readonly nextToken?: string
}

/**
 * Request parameters for sBTargetingGetTargetableASINCounts operation in ProductTargetingCategoriesApi.
 * @export
 * @interface ProductTargetingCategoriesApiSBTargetingGetTargetableASINCountsRequest
 */
export interface ProductTargetingCategoriesApiSBTargetingGetTargetableASINCountsRequest {
    /**
     * The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableASINCounts
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableASINCounts
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {SBTargetingGetTargetableASINCountsRequestContent}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableASINCounts
     */
    readonly sBTargetingGetTargetableASINCountsRequestContent: SBTargetingGetTargetableASINCountsRequestContent
}

/**
 * Request parameters for sBTargetingGetTargetableCategories operation in ProductTargetingCategoriesApi.
 * @export
 * @interface ProductTargetingCategoriesApiSBTargetingGetTargetableCategoriesRequest
 */
export interface ProductTargetingCategoriesApiSBTargetingGetTargetableCategoriesRequest {
    /**
     * The supply source where the target will be used. Use &#x60;AMAZON&#x60; for placements on Amazon website. Use &#x60;STREAMING_VIDEO&#x60; for off-site video placements such as IMDb TV.
     * @type {SBTargetingSupplySource}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly supplySource: SBTargetingSupplySource

    /**
     * The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * The locale to which the caller wishes to translate the targetable categories or refinements to. For example, if the caller wishes to receive the targetable categories in Simplified Chinese, the locale parameter should be set to zh_CN. If no locale is provided, the returned tagetable categories will be in the default language of the marketplace.
     * @type {SBTargetingLocale}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly locale?: SBTargetingLocale

    /**
     * Indicates whether to only retun root categories or not.
     * @type {boolean}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly includeOnlyRootCategories?: boolean

    /**
     * Returns child categories of category.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly parentCategoryRefinementId?: string

    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof ProductTargetingCategoriesApiSBTargetingGetTargetableCategories
     */
    readonly nextToken?: string
}

/**
 * ProductTargetingCategoriesApi - object-oriented interface
 * @export
 * @class ProductTargetingCategoriesApi
 * @extends {BaseAPI}
 */
export class ProductTargetingCategoriesApi extends BaseAPI {
    /**
     * Returns refinements according to category input.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategoryRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingCategoriesApi
     */
    public sBTargetingGetRefinementsForCategory(requestParameters: ProductTargetingCategoriesApiSBTargetingGetRefinementsForCategoryRequest, options?: any) {
        return ProductTargetingCategoriesApiFp(this.configuration).sBTargetingGetRefinementsForCategory(requestParameters.categoryRefinementId, requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.locale, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Get number of targetable asins based on refinements provided by the user.  Use `/sb/targets/categories` or `/sb/recommendations/targets/category` to retrieve the category ID. Use `/sb/targets/categories/{categoryRefinementId}/refinements` to retrieve refinements data for a category.  Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {ProductTargetingCategoriesApiSBTargetingGetTargetableASINCountsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingCategoriesApi
     */
    public sBTargetingGetTargetableASINCounts(requestParameters: ProductTargetingCategoriesApiSBTargetingGetTargetableASINCountsRequest, options?: any) {
        return ProductTargetingCategoriesApiFp(this.configuration).sBTargetingGetTargetableASINCounts(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.sBTargetingGetTargetableASINCountsRequestContent, options).then((request) => request(this.axios, this.basePath));
    }

    /**
     * Returns all targetable categories by default in a list. List of categories can be used to build and traverse category tree. Set query parameter `includeOnlyRootCategories=true` to return only the root categories, or set `parentCategoryRefinementId` to return children of a specific parent category. Each category node has the fields - category name, category refinement id, parent category refinement id, isTargetable flag, and ASIN count range.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {ProductTargetingCategoriesApiSBTargetingGetTargetableCategoriesRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof ProductTargetingCategoriesApi
     */
    public sBTargetingGetTargetableCategories(requestParameters: ProductTargetingCategoriesApiSBTargetingGetTargetableCategoriesRequest, options?: any) {
        return ProductTargetingCategoriesApiFp(this.configuration).sBTargetingGetTargetableCategories(requestParameters.supplySource, requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.locale, requestParameters.includeOnlyRootCategories, requestParameters.parentCategoryRefinementId, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * RecommendationsApi - axios parameter creator
 * @export
 */
export const RecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'headlineSuggestionRequest' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'headlineSuggestionRequest', headlineSuggestionRequest)
            const localVarPath = `/sb/recommendations/creative/headline`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(headlineSuggestionRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * RecommendationsApi - functional programming interface
 * @export
 */
export const RecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = RecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HeadlineSuggestionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * RecommendationsApi - factory interface
 * @export
 */
export const RecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = RecommendationsApiFp(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): AxiosPromise<HeadlineSuggestionResponse> {
            return localVarFp.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getHeadlineRecommendations operation in RecommendationsApi.
 * @export
 * @interface RecommendationsApiGetHeadlineRecommendationsRequest
 */
export interface RecommendationsApiGetHeadlineRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof RecommendationsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof RecommendationsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {HeadlineSuggestionRequest}
     * @memberof RecommendationsApiGetHeadlineRecommendations
     */
    readonly headlineSuggestionRequest: HeadlineSuggestionRequest
}

/**
 * RecommendationsApi - object-oriented interface
 * @export
 * @class RecommendationsApi
 * @extends {BaseAPI}
 */
export class RecommendationsApi extends BaseAPI {
    /**
     * API to receive creative headline suggestions.
     * @param {RecommendationsApiGetHeadlineRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecommendationsApi
     */
    public getHeadlineRecommendations(requestParameters: RecommendationsApiGetHeadlineRecommendationsRequest, options?: any) {
        return RecommendationsApiFp(this.configuration).getHeadlineRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.headlineSuggestionRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * SuggestionsApi - axios parameter creator
 * @export
 */
export const SuggestionsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            // verify required parameter 'headlineSuggestionRequest' is not null or undefined
            assertParamExists('getHeadlineRecommendations', 'headlineSuggestionRequest', headlineSuggestionRequest)
            const localVarPath = `/sb/recommendations/creative/headline`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            localVarHeaderParameter['Content-Type'] = 'application/json';

            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};
            localVarRequestOptions.data = serializeDataIfNeeded(headlineSuggestionRequest, localVarRequestOptions, configuration)

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * SuggestionsApi - functional programming interface
 * @export
 */
export const SuggestionsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = SuggestionsApiAxiosParamCreator(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<HeadlineSuggestionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * SuggestionsApi - factory interface
 * @export
 */
export const SuggestionsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = SuggestionsApiFp(configuration)
    return {
        /**
         * API to receive creative headline suggestions.
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
         * @param {HeadlineSuggestionRequest} headlineSuggestionRequest 
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        getHeadlineRecommendations(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, headlineSuggestionRequest: HeadlineSuggestionRequest, options?: any): AxiosPromise<HeadlineSuggestionResponse> {
            return localVarFp.getHeadlineRecommendations(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, headlineSuggestionRequest, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for getHeadlineRecommendations operation in SuggestionsApi.
 * @export
 * @interface SuggestionsApiGetHeadlineRecommendationsRequest
 */
export interface SuggestionsApiGetHeadlineRecommendationsRequest {
    /**
     * The identifier of a client associated with a \&quot;Login with Amazon\&quot; account.
     * @type {string}
     * @memberof SuggestionsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header.
     * @type {string}
     * @memberof SuggestionsApiGetHeadlineRecommendations
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * 
     * @type {HeadlineSuggestionRequest}
     * @memberof SuggestionsApiGetHeadlineRecommendations
     */
    readonly headlineSuggestionRequest: HeadlineSuggestionRequest
}

/**
 * SuggestionsApi - object-oriented interface
 * @export
 * @class SuggestionsApi
 * @extends {BaseAPI}
 */
export class SuggestionsApi extends BaseAPI {
    /**
     * API to receive creative headline suggestions.
     * @param {SuggestionsApiGetHeadlineRecommendationsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof SuggestionsApi
     */
    public getHeadlineRecommendations(requestParameters: SuggestionsApiGetHeadlineRecommendationsRequest, options?: any) {
        return SuggestionsApiFp(this.configuration).getHeadlineRecommendations(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.headlineSuggestionRequest, options).then((request) => request(this.axios, this.basePath));
    }
}


/**
 * TargetingRecommendationsApi - axios parameter creator
 * @export
 */
export const TargetingRecommendationsApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetNegativeBrands: async (amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, nextToken?: string, options: any = {}): Promise<RequestArgs> => {
            // verify required parameter 'amazonAdvertisingAPIClientId' is not null or undefined
            assertParamExists('sBTargetingGetNegativeBrands', 'amazonAdvertisingAPIClientId', amazonAdvertisingAPIClientId)
            // verify required parameter 'amazonAdvertisingAPIScope' is not null or undefined
            assertParamExists('sBTargetingGetNegativeBrands', 'amazonAdvertisingAPIScope', amazonAdvertisingAPIScope)
            const localVarPath = `/sb/negativeTargets/brands/recommendations`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'GET', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (nextToken !== undefined) {
                localVarQueryParameter['nextToken'] = nextToken;
            }

            if (amazonAdvertisingAPIClientId !== undefined && amazonAdvertisingAPIClientId !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-ClientId'] = String(amazonAdvertisingAPIClientId);
            }

            if (amazonAdvertisingAPIScope !== undefined && amazonAdvertisingAPIScope !== null) {
                localVarHeaderParameter['Amazon-Advertising-API-Scope'] = String(amazonAdvertisingAPIScope);
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter, options.query);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * TargetingRecommendationsApi - functional programming interface
 * @export
 */
export const TargetingRecommendationsApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = TargetingRecommendationsApiAxiosParamCreator(configuration)
    return {
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async sBTargetingGetNegativeBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, nextToken?: string, options?: any): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<SBTargetingGetNegativeBrandsResponseContent>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.sBTargetingGetNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, nextToken, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * TargetingRecommendationsApi - factory interface
 * @export
 */
export const TargetingRecommendationsApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = TargetingRecommendationsApiFp(configuration)
    return {
        /**
         * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
         * @param {string} amazonAdvertisingAPIClientId The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
         * @param {string} amazonAdvertisingAPIScope The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
         * @param {string} [nextToken] Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        sBTargetingGetNegativeBrands(amazonAdvertisingAPIClientId: string, amazonAdvertisingAPIScope: string, nextToken?: string, options?: any): AxiosPromise<SBTargetingGetNegativeBrandsResponseContent> {
            return localVarFp.sBTargetingGetNegativeBrands(amazonAdvertisingAPIClientId, amazonAdvertisingAPIScope, nextToken, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * Request parameters for sBTargetingGetNegativeBrands operation in TargetingRecommendationsApi.
 * @export
 * @interface TargetingRecommendationsApiSBTargetingGetNegativeBrandsRequest
 */
export interface TargetingRecommendationsApiSBTargetingGetNegativeBrandsRequest {
    /**
     * The identifier of a client associated with a &#x60;Login with Amazon&#x60; account.
     * @type {string}
     * @memberof TargetingRecommendationsApiSBTargetingGetNegativeBrands
     */
    readonly amazonAdvertisingAPIClientId: string

    /**
     * The identifier of a profile associated with the advertiser account. Use &#x60;GET&#x60; method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header and choose profile id &#x60;profileId&#x60; from the response to pass it as input.
     * @type {string}
     * @memberof TargetingRecommendationsApiSBTargetingGetNegativeBrands
     */
    readonly amazonAdvertisingAPIScope: string

    /**
     * Operations that return paginated results include a pagination token in this field. To retrieve the next page of results, call the same operation and specify this token in the request. If the &#x60;NextToken&#x60; field is empty, there are no further results.
     * @type {string}
     * @memberof TargetingRecommendationsApiSBTargetingGetNegativeBrands
     */
    readonly nextToken?: string
}

/**
 * TargetingRecommendationsApi - object-oriented interface
 * @export
 * @class TargetingRecommendationsApi
 * @extends {BaseAPI}
 */
export class TargetingRecommendationsApi extends BaseAPI {
    /**
     * Returns brands recommended for negative targeting. Only available for Sellers and Vendors. These recommendations include your own brands because targeting your own brands usually results in lower performance than targeting competitors\' brands.   Only available in the following marketplaces: US, CA, MX, UK, DE, FR, ES, IT, IN, JP  **Requires one of these permissions**: [\"advertiser_campaign_edit\",\"advertiser_campaign_view\"]
     * @param {TargetingRecommendationsApiSBTargetingGetNegativeBrandsRequest} requestParameters Request parameters.
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof TargetingRecommendationsApi
     */
    public sBTargetingGetNegativeBrands(requestParameters: TargetingRecommendationsApiSBTargetingGetNegativeBrandsRequest, options?: any) {
        return TargetingRecommendationsApiFp(this.configuration).sBTargetingGetNegativeBrands(requestParameters.amazonAdvertisingAPIClientId, requestParameters.amazonAdvertisingAPIScope, requestParameters.nextToken, options).then((request) => request(this.axios, this.basePath));
    }
}


