{
  "info": {
    "description": "This API provides operations to localize data used when creating advertising campaigns. Depending on the type of data, localization may entail translating text, converting monetary amounts, or mapping an entity in a source marketplace to an analogous entity in one or more target marketplaces.",
    "title": "Localization",
    "version": "3.0"
  },
  "paths": {
    "/currencies/localize": {
      "post": {
        "summary": "Gets an array of localized currencies in their target marketplaces using advertiser identifier in header, and source marketplace ID (via marketplaceId or countryCode) in the body",
        "requestBody": {
          "description": "Contains a list of amounts and a list of target marketplace IDs (via marketplaceId or countryCode), to convert the passed values into the respective marketplace currency.",
          "content": {
            "application/vnd.currencylocalization.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/currencyLocalizationRequest"
              }
            },
            "application/vnd.currencylocalization.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/currencyLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "getLocalizedCurrencies",
        "description": "Returns localized currencies within specified marketplaces.",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/vnd.currencylocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationResponse"
                }
              },
              "application/vnd.currencylocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationResponseV2"
                },
                "example": {
                  "localizedCurrencyResponses": [
                    {
                      "errorCode": "MULTIPLE_REASONS",
                      "sourceCurrency": {
                        "amount": "1"
                      },
                      "localizedCurrencyResults": {
                        "KR": {
                          "localizedCurrency": {},
                          "messages": [
                            "Currency conversion failed due to an unsupported marketplace arc. Please consult the documentation for supported marketplace arcs."
                          ],
                          "errorCode": "UNSUPPORTED_MARKETPLACE_ARC",
                          "status": "FAILURE"
                        },
                        "MX": {
                          "localizedCurrency": {
                            "amount": "1"
                          },
                          "status": "SUCCESS"
                        },
                        "CA": {
                          "localizedCurrency": {},
                          "messages": [
                            "Currency conversion failed due to a dependency error. Please try again later."
                          ],
                          "errorCode": "DEPENDENCY_ERROR",
                          "status": "ERROR"
                        }
                      },
                      "status": "PARTIAL_SUCCESS"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/vnd.currencylocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              },
              "application/vnd.currencylocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.currencylocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              },
              "application/vnd.currencylocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.currencylocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              },
              "application/vnd.currencylocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.currencylocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              },
              "application/vnd.currencylocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/currencyLocalizationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Currency Localization"
        ]
      }
    },
    "/products/localize": {
      "post": {
        "summary": "Returns localized products.",
        "requestBody": {
          "description": "Contains list of target details and products to localize.",
          "content": {
            "application/vnd.productlocalization.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/productLocalizationRequest"
              }
            },
            "application/vnd.productlocalization.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/productLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "getLocalizedProducts",
        "description": "Localizes (maps) products from a source marketplace to one or more target marketplaces. The localization process succeeds for a given target marketplace if a product matching the source product can be found there and the advertiser is eligible to advertise it. Seller requests have an additional condition: the SKU of a localized product must match the SKU of the source product.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.productlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationResponse"
                }
              },
              "application/vnd.productlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationResponseV2"
                },
                "example": {
                  "localizedProductResponses": [
                    {
                      "sourceProduct": {
                        "sku": "sku1"
                      },
                      "localizedProductResults": {
                        "EU": {
                          "localizedProduct": {},
                          "messages": [
                            "Error occurred during localization due to a dependency. Please try again later."
                          ],
                          "errorCode": "DEPENDENCY_ERROR",
                          "status": "ERROR"
                        },
                        "KR": {
                          "localizedProduct": {},
                          "messages": [
                            "A failure occurred due to an unsupported marketplace arc. Please consult the documentation for supported arcs."
                          ],
                          "errorCode": "UNSUPPORTED_MARKETPLACE_ARC",
                          "status": "FAILURE"
                        },
                        "US": {
                          "localizedProduct": {
                            "sku": "sku1"
                          },
                          "status": "SUCCESS"
                        }
                      },
                      "errorCode": "MULTIPLE_REASONS",
                      "status": "PARTIAL_SUCCESS"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.productlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              },
              "application/vnd.productlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.productlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              },
              "application/vnd.productlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - The request was rate-limited. Retry later.",
            "content": {
              "application/vnd.productlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              },
              "application/vnd.productlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.productlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              },
              "application/vnd.productlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/productLocalizationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use the `GET` method on the Profiles resource to list profiles associated with the access token provided in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Product Localization"
        ]
      }
    },
    "/keywords/localize": {
      "post": {
        "summary": "Returns localized keywords.",
        "requestBody": {
          "description": "Contains list of target details and keywords to localize.",
          "content": {
            "application/vnd.keywordlocalization.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/keywordsLocalizationRequest"
              }
            },
            "application/vnd.keywordlocalization.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/keywordsLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "operationId": "getLocalizedKeywords",
        "description": "Returns localized keywords within specified marketplaces or locales.",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.keywordlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationResponse"
                }
              },
              "application/vnd.keywordlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationResponseV2"
                },
                "example": {
                  "localizedKeywordResponses": [
                    {
                      "localizedKeywordResults": {
                        "ko_KR": {
                          "localizedKeyword": {},
                          "messages": [
                            "This language arc is not supported. Please consult the documentation for the supported language arcs."
                          ],
                          "errorCode": "UNSUPPORTED_LANGUAGE_ARC",
                          "status": "FAILURE"
                        },
                        "es_MX": {
                          "localizedKeyword": {
                            "keyword": "hola"
                          },
                          "status": "SUCCESS"
                        },
                        "fr_FR": {
                          "localizedKeyword": {
                            "keyword": "bonjour"
                          },
                          "status": "SUCCESS"
                        },
                        "en_UK": {
                          "localizedKeyword": {
                            "keyword": "hello"
                          },
                          "status": "SUCCESS"
                        }
                      },
                      "sourceKeyword": {
                        "keyword": "hello"
                      },
                      "errorCode": "MULTIPLE_REASONS",
                      "status": "PARTIAL_SUCCESS"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.keywordlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              },
              "application/vnd.keywordlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Request failed because user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.keywordlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              },
              "application/vnd.keywordlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests - Request was rate-limited. Retry later.",
            "content": {
              "application/vnd.keywordlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              },
              "application/vnd.keywordlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error - Something went wrong on the server. Retry later and report an error if unresolved.",
            "content": {
              "application/vnd.keywordlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              },
              "application/vnd.keywordlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/keywordsLocalizationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a \"Login with Amazon\" account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use `GET` method on Profiles resource to list profiles associated with the access token passed in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Keyword Localization"
        ]
      }
    },
    "/targetingExpression/localize": {
      "post": {
        "summary": "Localizes targeting expressions used for advertising targeting.",
        "requestBody": {
          "description": "Contains a list of targeting expressions to localize.",
          "content": {
            "application/vnd.targetingexpressionlocalization.v1+json": {
              "schema": {
                "$ref": "#/components/schemas/targetingExpressionLocalizationRequest"
              }
            },
            "application/vnd.targetingexpressionlocalization.v2+json": {
              "schema": {
                "$ref": "#/components/schemas/targetingExpressionLocalizationRequest"
              }
            }
          },
          "required": true
        },
        "description": "Localizes (maps) targeting expressions from a source marketplace to one or more target marketplaces.",
        "operationId": "getLocalizedTargetingExpression",
        "responses": {
          "200": {
            "description": "Success.",
            "content": {
              "application/vnd.targetingexpressionlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationResponse"
                }
              },
              "application/vnd.targetingexpressionlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationResponseV2"
                },
                "example": {
                  "responses": [
                    {
                      "localizedTargetingExpressionResults": {
                        "KR": {
                          "errorCode": "UNSUPPORTED_MARKETPLACE_ARC",
                          "messages": [
                            "This marketplace arc is not supported. Please consult the documentation for supported marketplace arcs."
                          ],
                          "localizedTargetingExpression": {},
                          "status": "FAILURE"
                        },
                        "US": {
                          "localizedTargetingExpression": {
                            "isForNegativeTargeting": "false",
                            "expression": [
                              {
                                "type": "asinCategorySameAs",
                                "value": "5939473"
                              }
                            ]
                          },
                          "status": "SUCCESS"
                        },
                        "CA": {
                          "errorCode": "DEPENDENCY_ERROR",
                          "messages": [
                            "A dependency error occurred. Please try again later."
                          ],
                          "localizedTargetingExpression": {},
                          "status": "ERROR"
                        }
                      },
                      "errorCode": "MULTIPLE_REASONS",
                      "sourceTargetingExpression": {
                        "isForNegativeTargeting": "false",
                        "expression": [
                          {
                            "type": "asinCategorySameAs",
                            "value": "3547823"
                          }
                        ]
                      },
                      "status": "PARTIAL_SUCCESS"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request.",
            "content": {
              "application/vnd.targetingexpressionlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              },
              "application/vnd.targetingexpressionlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized: The request failed because the user is not authenticated or is not allowed to invoke the operation.",
            "content": {
              "application/vnd.targetingexpressionlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              },
              "application/vnd.targetingexpressionlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests: The request was rate-limited. Retry later.",
            "content": {
              "application/vnd.targetingexpressionlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              },
              "application/vnd.targetingexpressionlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error: Something went wrong on the server. Retry later and report an error if the issue persists.",
            "content": {
              "application/vnd.targetingexpressionlocalization.v1+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              },
              "application/vnd.targetingexpressionlocalization.v2+json": {
                "schema": {
                  "$ref": "#/components/schemas/targetingExpressionLocalizationError"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-ClientId",
            "description": "The identifier of a client associated with a 'Login with Amazon' account. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Amazon-Advertising-API-Scope",
            "description": "The identifier of a profile associated with the advertiser account. Use the `GET` method on the Profiles resource to list profiles associated with the access token provided in the HTTP Authorization header. This is a required header for advertisers and integrators using the Advertising API.",
            "required": true
          }
        ],
        "tags": [
          "Targeting Expression Localization"
        ]
      }
    }
  },
  "components": {
    "headers": {},
    "examples": {},
    "schemas": {
      "LocalizationKeyword": {
        "description": "An object containing information about a keyword.",
        "type": "object",
        "properties": {
          "keyword": {
            "description": "The keyword string.",
            "type": "string"
          }
        },
        "required": [
          "keyword"
        ]
      },
      "LocalizationKeywordRequest": {
        "description": "A LocalizationKeywordRequest object. Contains information needed about the keyword to be localized.",
        "type": "object",
        "properties": {
          "localizationKeyword": {
            "description": "A keyword to be localized.",
            "$ref": "#/components/schemas/LocalizationKeyword"
          }
        },
        "required": [
          "localizationKeyword"
        ]
      },
      "productLocalizationResponseV2": {
        "type": "object",
        "properties": {
          "localizedProductResponses": {
            "description": "List of product localization map objects. The order matches that of the localizeProductRequests field in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationProductResponseV2"
            }
          }
        },
        "required": [
          "localizedProductResponses"
        ]
      },
      "targetingExpressionLocalizationError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "integer"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "LocalizationProductResponseV2": {
        "type": "object",
        "properties": {
          "sourceProduct": {
            "$ref": "#/components/schemas/LocalizationProduct"
          },
          "localizedProductResults": {
            "description": "Key (string): target marketplace ID. Value (LocalizationProductResult): localized product results. Information regarding how a product was localized, or how a product was not localized in this particular marketplace.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationProductResult"
            },
            "type": "object"
          },
          "errorCode": {
            "description": "If the status is ERROR, the error code. Not present if the status is SUCCESS.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, PARTIAL_SUCCESS or FAILURE, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "PARTIAL_SUCCESS",
              "ERROR"
            ]
          }
        },
        "required": [
          "sourceProduct",
          "localizedProductResults",
          "status"
        ]
      },
      "LocalizationKeywordSourceDetails": {
        "description": "The source details for the LocalizationKeywordRequests. One of locale, marketplaceId, or countryCode has to be present. If locale is present, the content of marketplaceIds or countryCode is ignored.",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The ID of the source marketplace. For example, if the caller is an advertiser based in the UK (marketplace ID A1F83G8C2ARO7P) and wishes to localize keywords to Germany (marketplace ID A1PA6795UKMFR9), the source marketplace ID is that of the UK, i.e., A1F83G8C2ARO7P. This marketplace ID is converted into a default locale for that marketplace. The supported locale arcs are outlined in the targetDetails documentation. The following marketplaces are supported for conversion to default locales:\n|Region|Country Code|Default Locale|Name|Marketplace ID|\n|-|-|-|-|-|\n|EU|AE|en_AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|de_DE|Germany|A1PA6795UKMFR9|\n|EU|EG|ar_EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|es_ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|fr_FR|France|A13V1IB3VIYZZH|\n|EU|GB|en_GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|it_IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|nl_NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|pl_PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|en_SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|sv_SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|tr_TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|en_AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|en_IN|India|A21TJRUUN4KGV|\n|FE|JP|ja_JP|Japan|A1VC38T7YXB528|\n|FE|SG|en_SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|pt_BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|en_CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|es_MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|en_US|United States|ATVPDKIKX0DER|",
            "type": "string"
          },
          "sourceCountryCode": {
            "description": "A two-letter country code. When locale or marketplaceId is present, countryCode is ignored. Please refer to the table above for a list of supported country codes.",
            "type": "string"
          },
          "locale": {
            "description": "The source locale. For example, if the caller is localizing keywords from British English (en_GB) to Simplified Chinese (zh_CN), the source locale is en_GB. Please see the table within the description of the targetDetails object for supported source to target Locale values.",
            "type": "string"
          }
        }
      },
      "targetingExpressionLocalizationRequest": {
        "type": "object",
        "properties": {
          "targetDetailsList": {
            "description": "The targets to which the source targeting expression should be localized.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationTargetingTargetDetails"
            }
          },
          "requests": {
            "maxItems": 100,
            "description": "A list of requests, each containing a targeting expression to localize. Its order will be maintained in `responses` in the corresponding `targetingExpressionLocalizationResponse` object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationTargetingExpressionRequest"
            }
          },
          "sourceDetails": {
            "$ref": "#/components/schemas/LocalizationTargetingSourceDetails"
          }
        },
        "required": [
          "requests",
          "sourceDetails",
          "targetDetailsList"
        ]
      },
      "LocalizationTargetingExpressionResponse": {
        "description": "A response to a request to localize a targeting expression from a source marketplace to one or more target marketplaces.",
        "type": "object",
        "properties": {
          "localizedTargetingExpressions": {
            "description": "A map from target marketplace ID (string) to localized targeting expression (`LocalizationTargetingExpression`). If no entry exists for a given target marketplace, the source targeting expression could not be localized there.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationTargetingExpression"
            },
            "type": "object"
          },
          "localizedTargetingExpressionResults": {
            "description": "A map from target marketplace ID (string) to the localization result (`LocalizationTargetingExpressionResult`). All target marketplaces present in the request will have an entry in this map.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationTargetingExpressionResult"
            },
            "type": "object"
          }
        }
      },
      "productLocalizationRequest": {
        "type": "object",
        "properties": {
          "localizeProductRequests": {
            "maxItems": 1000,
            "description": "The products to be localized. Their order will be maintained in the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationProductRequest"
            }
          },
          "adType": {
            "description": "Used to confirm that the caller is eligible to advertise localized products. Currently, only Sponsored Products advertising is supported.",
            "type": "string",
            "enum": [
              "SPONSORED_PRODUCTS"
            ]
          },
          "sourceCountryCode": {
            "description": "A two-letter country code. When both marketplaceId and countryCode are present, countryCode is ignored. Please refer to the table above for a list of supported country codes.",
            "type": "string"
          },
          "entityType": {
            "description": "The type of the advertiser accounts for which IDs are specified elsewhere in the request.",
            "type": "string",
            "enum": [
              "SELLER",
              "VENDOR"
            ]
          },
          "sourceMarketplaceId": {
            "description": "The ID of the source marketplace. Please see the table within the description of the target details object for supported values.",
            "type": "string"
          },
          "sourceAdvertiserId": {
            "description": "The ID of the source advertiser account. This may be either a marketplace-specific obfuscated ID (AD9EUOBWMS33M), an entity ID (ENTITYYXZDK86N86HG), or a global account ID (amzn1.ads-account.g.e0kbzpoe2gkpai1pqeaca59k8).",
            "type": "string"
          },
          "targetDetails": {
            "description": "The target details for the LocalizationProductRequests. There must be only one target details object per marketplace ID. The advertiser ID may be repeated across target details objects. The order of target details objects is irrelevant. The following marketplaces are supported for product localization:\n|Region|Country Code|Name|Marketplace ID|\n|-|-|-|-|\n|EU|AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|Germany|A1PA6795UKMFR9|\n|EU|EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|France|A13V1IB3VIYZZH|\n|EU|GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|India|A21TJRUUN4KGV|\n|FE|JP|Japan|A1VC38T7YXB528|\n|FE|SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|United States|ATVPDKIKX0DER|",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationProductTargetDetails"
            }
          }
        },
        "required": [
          "adType",
          "entityType",
          "sourceAdvertiserId",
          "targetDetails",
          "localizeProductRequests"
        ]
      },
      "LocalizationTargetingExpressionPredicateType": {
        "description": "Targeting predicate type. The following predicate types are supported:\n| Type | Description | Data in `value` String |\n| --- | --- | --- |\n| `asinCategorySameAs` | Target the specified category. | Integer ID |\n| `asinBrandSameAs` | Target the specified brand. | Integer ID |\n| `asinPriceLessThan` | Target a price less than the specified price. | Real number |\n| `asinPriceBetween` | Target a price between the prices specified. | Two real numbers separated by a hyphen (e.g., `9.99-19.99`) |\n| `asinPriceGreaterThan` | Target a price greater than the specified price. | Real number |\n| `asinReviewRatingLessThan` | Target a review rating less than the specified review rating. | Real number |\n| `asinReviewRatingBetween` | Target a review rating between the specified review ratings. | Two real numbers separated by a hyphen (e.g., `4.5-5`) |\n| `asinReviewRatingGreaterThan` | Target a review rating greater than the specified review rating. | Real number |\n| `asinSameAs` | Target the specified ASIN. | Alphanumeric ASIN |\n| `asinIsPrimeShippingEligible` | Target products that are Prime Shipping Eligible. This refinement can be applied at a category or brand level only. | \"true\" or \"false\" |\n| `asinAgeRangeSameAs` | Target the specified age range. This refinement can be applied to Toys and Games categories only. | Integer ID |\n| `asinGenreSameAs` | Target products related to the specified genre. This refinement can be applied to Books and eBooks categories only. | Integer ID |",
        "type": "string",
        "enum": [
          "asinCategorySameAs",
          "asinBrandSameAs",
          "asinPriceLessThan",
          "asinPriceBetween",
          "asinPriceGreaterThan",
          "asinReviewRatingLessThan",
          "asinReviewRatingBetween",
          "asinReviewRatingGreaterThan",
          "asinSameAs",
          "asinIsPrimeShippingEligible",
          "asinAgeRangeSameAs",
          "asinGenreSameAs"
        ]
      },
      "keywordsLocalizationResponseV2": {
        "type": "object",
        "properties": {
          "localizedKeywordResponses": {
            "description": "List of LocalizationKeywordResponses. The order matches that of the LocalizationKeywordRequests list in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationKeywordResponseV2"
            }
          }
        },
        "required": [
          "localizedKeywordResponses"
        ]
      },
      "keywordsLocalizationRequest": {
        "type": "object",
        "properties": {
          "localizeKeywordRequests": {
            "maxItems": 1000,
            "description": "List of LocalizationKeywordRequests. The order will be maintained in the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationKeywordRequest"
            }
          },
          "sourceDetails": {
            "$ref": "#/components/schemas/LocalizationKeywordSourceDetails"
          },
          "targetDetails": {
            "$ref": "#/components/schemas/LocalizationKeywordTargetDetails"
          }
        },
        "required": [
          "targetDetails",
          "localizeKeywordRequests"
        ]
      },
      "LocalizationTargetingExpressionPredicate": {
        "description": "A targeting expression predicate.",
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/LocalizationTargetingExpressionPredicateType"
          },
          "value": {
            "description": "The value of the predicate. Targeting expression syntax, including examples of predicates and the values they support, is documented [here](https://advertising.amazon.com/API/docs/en-us/bulksheets/sp/sp-general-info/sp-product-attribute-targeting). Only predicates using the following types of data will be localized:\n* Age range ID\n* ASIN\n* Brand ID\n* Category ID\n* Genre ID\n* Price (the currency will be assumed to be the default currency of the source marketplace)\n\nPredicates using other data will be returned unchanged.",
            "type": "string"
          }
        },
        "required": [
          "value",
          "type"
        ]
      },
      "LocalizationTargetingExpression": {
        "description": "A targeting expression composed of one or more predicates.",
        "type": "object",
        "properties": {
          "isForNegativeTargeting": {
            "description": "Specifies whether the expression is for positive targeting (false) or negative targeting (true).",
            "type": "boolean"
          },
          "expression": {
            "description": "The predicates forming the targeting expression.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationTargetingExpressionPredicate"
            }
          }
        },
        "required": [
          "expression",
          "isForNegativeTargeting"
        ]
      },
      "targetingExpressionLocalizationResponse": {
        "type": "object",
        "properties": {
          "responses": {
            "description": "A list of responses containing localized targeting expressions. Its order matches that of `requests` in the corresponding `targetingExpressionLocalizationRequest` object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationTargetingExpressionResponse"
            }
          }
        },
        "required": [
          "responses"
        ]
      },
      "targetingExpressionLocalizationResponseV2": {
        "type": "object",
        "properties": {
          "responses": {
            "description": "A list of responses containing localized targeting expressions. Its order matches that of `requests` in the corresponding `targetingExpressionLocalizationRequest` object.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationTargetingExpressionResponseV2"
            }
          }
        },
        "required": [
          "responses"
        ]
      },
      "LocalizationProductTargetDetails": {
        "description": "The target details for the LocalizationProductRequests. There must be only one target details object per marketplace ID. The advertiser ID may be repeated across target details objects. The order of target details objects is irrelevant. The following marketplaces are supported for product localization:\n|Region|Country Code|Name|Marketplace ID|\n|-|-|-|-|\n|EU|AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|Germany|A1PA6795UKMFR9|\n|EU|EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|France|A13V1IB3VIYZZH|\n|EU|GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|India|A21TJRUUN4KGV|\n|FE|JP|Japan|A1VC38T7YXB528|\n|FE|SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|United States|ATVPDKIKX0DER|",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The ID of a target marketplace (a marketplace in which the caller wishes to localize the specified products). For example, if the caller is an advertiser based in the UK (marketplace ID A1F83G8C2ARO7P) and wishes to localize a product to Germany (marketplace ID A1PA6795UKMFR9), the target marketplace ID is that of Germany, i.e., A1PA6795UKMFR9. The following marketplaces are supported for product localization:\n|Region|Country Code|Name|Marketplace ID|\n|-|-|-|-|\n|EU|AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|Germany|A1PA6795UKMFR9|\n|EU|EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|France|A13V1IB3VIYZZH|\n|EU|GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|India|A21TJRUUN4KGV|\n|FE|JP|Japan|A1VC38T7YXB528|\n|FE|SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|United States|ATVPDKIKX0DER|",
            "type": "string"
          },
          "countryCode": {
            "description": "A two-letter country code. When both marketplaceId and countryCode are present, countryCode is ignored. Please refer to the table above for a list of supported country codes.",
            "type": "string"
          },
          "advertiserId": {
            "description": "The advertiser ID of the caller in the associated target marketplace. The ID of the source advertiser account. This may be either a marketplace-specific obfuscated ID (AD9EUOBWMS33M), an entity ID (ENTITYYXZDK86N86HG), or a global account ID (amzn1.ads-account.g.e0kbzpoe2gkpai1pqeaca59k8). This is the advertiser ID returned by the Profiles API. An entity ID (one starting with \"ENTITY\"), or a global account advertiser ID may be provided instead.",
            "type": "string"
          }
        },
        "required": [
          "advertiserId"
        ]
      },
      "LocalizationProductResponse": {
        "type": "object",
        "properties": {
          "localizedProducts": {
            "description": "Key (string): target marketplace ID. Value (LocalizationProduct): localized product. If no localized product is available in a given target marketplace, the map will not contain an entry for that marketplace. An empty map indicates that the source product could not be localized in any of the target marketplaces.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationProduct"
            },
            "type": "object"
          },
          "errorCode": {
            "description": "If the status is ERROR, the error code. Not present if the status is SUCCESS.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR"
            ]
          }
        },
        "required": [
          "localizedProducts",
          "status"
        ]
      },
      "LocalizationProductRequest": {
        "type": "object",
        "properties": {
          "product": {
            "$ref": "#/components/schemas/LocalizationProduct"
          }
        },
        "required": [
          "product"
        ]
      },
      "productLocalizationError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "integer"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "productLocalizationResponse": {
        "type": "object",
        "properties": {
          "localizedProductResponses": {
            "description": "List of product localization map objects. The order matches that of the localizeProductRequests field in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationProductResponse"
            }
          }
        },
        "required": [
          "localizedProductResponses"
        ]
      },
      "LocalizationCurrencyRequest": {
        "description": "LocalizationCurrencyRequest Object.",
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/LocalizationCurrency"
          }
        },
        "required": [
          "currency"
        ]
      },
      "LocalizationCurrencyResponse": {
        "description": "LocalizationCurrencyResponse Object.",
        "type": "object",
        "properties": {
          "localizedCurrencies": {
            "description": "A map from target marketplace ID (string) to localized monetary amount.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationCurrency"
            },
            "type": "object"
          },
          "errorCode": {
            "description": "If status is ERROR, the error code.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR"
            ]
          }
        },
        "required": [
          "localizedCurrencies",
          "status"
        ]
      },
      "currencyLocalizationResponse": {
        "description": "CurrencyLocalizationResponse Object",
        "type": "object",
        "properties": {
          "localizedCurrencyResponses": {
            "description": "An array of LocalizationCurrencyResponse objects. The order matches that of the input LocalizationCurrencyRequest object array.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationCurrencyResponse"
            }
          }
        },
        "required": [
          "localizedCurrencyResponses"
        ]
      },
      "keywordsLocalizationResponse": {
        "type": "object",
        "properties": {
          "localizedKeywordResponses": {
            "description": "List of LocalizationKeywordResponses. The order matches that of the LocalizationKeywordRequests list in the request.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationKeywordResponse"
            }
          }
        },
        "required": [
          "localizedKeywordResponses"
        ]
      },
      "LocalizationKeywordResult": {
        "description": "LocalizationKeywordResult Object.",
        "type": "object",
        "properties": {
          "localizedKeyword": {
            "$ref": "#/components/schemas/LocalizationKeyword"
          },
          "messages": {
            "description": "If present, contains one or more strings describing why products could not be localized. For manual diagnostic use.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorCode": {
            "description": "If status is ERROR or FAILURE, the error code.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, FAILURE, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR",
              "FAILURE"
            ]
          }
        },
        "required": [
          "status",
          "localizedKeyword"
        ]
      },
      "LocalizationKeywordTargetDetails": {
        "description": "The target details for the LocalizationKeywordRequests. One of locales, countryCode, or marketplaceIds must be present. If locale is present, the content of marketplaceIds and countryCodes is ignored. Each locale / marketplace ID / countryCode across the array must be unique. The following locale pairs are supported. ?? signifies wildcard. For example if en_?? is specified, locales that are supported would include but not be limited to en_US or en_GB:\n* ar_?? to en_??\n* de_?? to en_??\n* de_?? to es_??\n* de_?? to fr_??\n* de_?? to it_??\n* de_?? to nl_??\n* de_?? to zh_??\n* en_?? to ar_??\n* en_?? to de_??\n* en_?? to es_??\n* en_?? to es_MX\n* en_?? to fr_??\n* en_?? to it_??\n* en_?? to ja_??\n* en_?? to nl_??\n* en_?? to pt_??\n* es_?? to de_??\n* es_?? to en_??\n* es_?? to fr_??\n* es_?? to it_??\n* es_?? to nl_??\n* es_?? to zh_??\n* es_MX to en_??\n* fr_?? to de_??\n* fr_?? to en_??\n* fr_?? to es_??\n* fr_?? to it_??\n* fr_?? to nl_??\n* fr_?? to zh_??\n* it_?? to de_??\n* it_?? to en_??\n* it_?? to es_??\n* it_?? to fr_??\n* it_?? to nl_??\n* it_?? to zh_??\n* ja_?? to en_??\n* ja_?? to zh_??\n* nl_?? to de_??\n* nl_?? to en_??\n* nl_?? to es_??\n* nl_?? to fr_??\n* nl_?? to it_??\n* nl_?? to zh_??\n* pt_?? to en_??\n* zh_?? to de_??\n* zh_?? to es_??\n* zh_?? to es_MX\n* zh_?? to fr_??\n* zh_?? to it_??\n* zh_?? to ja_??\n* zh_?? to nl_??\n* zh_?? to pt_??",
        "type": "object",
        "properties": {
          "targetCountryCodes": {
            "maxItems": 10,
            "description": "A list of two-letter country codes. When another form of locale (marketplaceId or locale) is present, countryCode is ignored. Please refer to the table above for a list of supported country codes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "marketplaceIds": {
            "maxItems": 10,
            "description": "The IDs of target marketplaces (marketplaces in which the caller wishes to localize the specified keywords). For example, if the caller is an advertiser based in the UK (marketplace ID A1F83G8C2ARO7P) and wishes to localize keywords to Germany (marketplace ID A1PA6795UKMFR9), the target marketplace ID is that of Germany, i.e., A1PA6795UKMFR9. **Please note:** if locales are provided, any provided marketplace IDs will be ignored. The marketplace IDs are converted into default locales. The supported locale arcs are outlined in the targetDetails locales section. The following marketplaces are supported for conversion to default locales:\n|Region|Country Code|Default Locale|Name|Marketplace ID|\n|-|-|-|-|-|\n|EU|AE|en_AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|de_DE|Germany|A1PA6795UKMFR9|\n|EU|EG|ar_EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|es_ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|fr_FR|France|A13V1IB3VIYZZH|\n|EU|GB|en_GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|it_IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|nl_NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|pl_PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|en_SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|sv_SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|tr_TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|en_AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|en_IN|India|A21TJRUUN4KGV|\n|FE|JP|ja_JP|Japan|A1VC38T7YXB528|\n|FE|SG|en_SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|pt_BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|en_CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|es_MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|en_US|United States|ATVPDKIKX0DER|",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "locales": {
            "maxItems": 10,
            "description": "The target locales (locales to which the caller wishes to localize the specified keywords). For example, if the caller is localizing keywords from British English (en_GB) to Simplified Chinese (zh_CN), the target locale is zh_CN.",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "currencyLocalizationResponseV2": {
        "description": "CurrencyLocalizationResponse Object",
        "type": "object",
        "properties": {
          "localizedCurrencyResponses": {
            "description": "An array of LocalizationCurrencyResponseV2 objects. The order matches that of the input LocalizationCurrencyRequest object array.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationCurrencyResponseV2"
            }
          }
        },
        "required": [
          "localizedCurrencyResponses"
        ]
      },
      "LocalizationCurrency": {
        "description": "A currency to be localized.",
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          }
        },
        "required": [
          "amount"
        ]
      },
      "LocalizationProductResult": {
        "description": "Information regarding how a product was localized, or how a product was not localized in this particular marketplace.",
        "type": "object",
        "properties": {
          "localizedProduct": {
            "$ref": "#/components/schemas/LocalizationProduct"
          },
          "messages": {
            "description": "If present, contains one or more strings describing why products could not be localized. For manual diagnostic use.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorCode": {
            "description": "If the status is ERROR, the error code. Not present if the status is SUCCESS.",
            "type": "string"
          },
          "status": {
            "description": "The status of the localization operation. \nSUCCESS: The product was localized successfully for this marketplace.\nFAILURE: The product could not be localized and retrying later will not change the result.\nERROR: The product could not be localized an error occurred. Retry later.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "ERROR"
            ]
          }
        },
        "required": [
          "status",
          "localizedProduct"
        ]
      },
      "currencyLocalizationError": {
        "description": "A CurrencyLocalizationError Object.",
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "integer"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        },
        "required": [
          "code"
        ]
      },
      "currencyLocalizationRequest": {
        "description": "Currency Localization Request Object.",
        "type": "object",
        "properties": {
          "localizeCurrencyRequests": {
            "maxItems": 1000,
            "description": "An array of LocalizationCurrencyRequest objects. The order will be maintained in the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LocalizationCurrencyRequest"
            }
          },
          "targetCountryCodes": {
            "description": "A list of two-letter country codes. When both marketplaceId and countryCode are present, countryCode is ignored. Please refer to the table above for a list of supported country codes.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sourceCountryCode": {
            "description": "A two-letter country code. When both marketplaceId and countryCode are present, countryCode is ignored. Please refer to the table above for a list of supported country codes.",
            "type": "string"
          },
          "sourceMarketplaceId": {
            "description": "The source marketplace ID. Please see the table in the description of `targetMarketplaces` for supported values.",
            "type": "string"
          },
          "targetMarketplaces": {
            "description": "A list of target marketplace IDs. Each element must be unique. The order is irrelevant. The following marketplaces are supported:\n|Region|Country Code|Name|Marketplace ID|\n|-|-|-|-|\n|EU|AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|Germany|A1PA6795UKMFR9|\n|EU|EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|France|A13V1IB3VIYZZH|\n|EU|GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|India|A21TJRUUN4KGV|\n|FE|JP|Japan|A1VC38T7YXB528|\n|FE|SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|United States|ATVPDKIKX0DER|",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "required": [
          "localizeCurrencyRequests"
        ]
      },
      "LocalizationKeywordResponse": {
        "description": "A LocalizationKeywordResponse object. Contains localized keywords in the various target marketplaces/locales.",
        "type": "object",
        "properties": {
          "errorCode": {
            "description": "If status is ERROR, the error code. Not present if status is SUCCESS.",
            "type": "string"
          },
          "localizedKeywords": {
            "description": "Key (string): target marketplace ID. Value (LocalizationKeyword): localized keyword. If the source keyword cannot be translated into the language associated with a given target marketplace, it will be unchanged for that marketplace.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationKeyword"
            },
            "type": "object"
          },
          "status": {
            "description": "If SUCCESS, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR"
            ]
          }
        },
        "required": [
          "localizedProducts",
          "status"
        ]
      },
      "LocalizationTargetingSourceDetails": {
        "description": "A source marketplace. One of the marketplace ID or the two-letter country code must be present. The latter is ignored if the former is present.",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The ID of the source marketplace. For example, when mapping data from the UK (marketplace ID A1F83G8C2ARO7P) to Germany (marketplace ID A1PA6795UKMFR9), the source marketplace ID is that of the UK, i.e., A1F83G8C2ARO7P. Supported marketplaces are:\n|Region|Country Code|Name|Marketplace ID|\n|-|-|-|-|\n|EU|AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|Germany|A1PA6795UKMFR9|\n|EU|EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|France|A13V1IB3VIYZZH|\n|EU|GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|India|A21TJRUUN4KGV|\n|FE|JP|Japan|A1VC38T7YXB528|\n|FE|SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|United States|ATVPDKIKX0DER|",
            "type": "string"
          },
          "countryCode": {
            "description": "A two-letter country code. Please refer to the table above for a list of supported country codes.",
            "type": "string"
          }
        }
      },
      "keywordsLocalizationError": {
        "type": "object",
        "properties": {
          "code": {
            "description": "Programmatic status code.",
            "type": "integer"
          },
          "details": {
            "description": "A human-readable description of the response.",
            "type": "string"
          }
        }
      },
      "LocalizationTargetingTargetDetails": {
        "description": "A target marketplace. One of the marketplace ID or the two-letter country code must be present. The latter is ignored if the former is present.",
        "type": "object",
        "properties": {
          "marketplaceId": {
            "description": "The ID of the target marketplace. For example, when mapping data from the UK (marketplace ID A1F83G8C2ARO7P) to Germany (marketplace ID A1PA6795UKMFR9), the target marketplace ID is that of the UK, i.e., A1F83G8C2ARO7P. Supported marketplaces are:\n|Region|Country Code|Name|Marketplace ID|\n|-|-|-|-|\n|EU|AE|United Arab Emirates|A2VIGQ35RCS4UG|\n|EU|DE|Germany|A1PA6795UKMFR9|\n|EU|EG|Egypt|ARBP9OOSHTCHU|\n|EU|ES|Spain|A1RKKUPIHCS9HS|\n|EU|FR|France|A13V1IB3VIYZZH|\n|EU|GB|United Kingdom|A1F83G8C2ARO7P|\n|EU|IT|Italy|APJ6JRA9NG5V4|\n|EU|NL|Netherlands|A1805IZSGTT6HS|\n|EU|PL|Poland|A1C3SOZRARQ6R3|\n|EU|SA|Saudi Arabia|A17E79C6D8DWNP|\n|EU|SE|Sweden|A2NODRKZP88ZB9|\n|EU|TR|Turkey|A33AVAJ2PDY3EV|\n|FE|AU|Australia|A39IBJ37TRP1C6|\n|FE|IN|India|A21TJRUUN4KGV|\n|FE|JP|Japan|A1VC38T7YXB528|\n|FE|SG|Singapore|A19VAU5U5O7RUS|\n|NA|BR|Brazil|A2Q3Y263D00KWC|\n|NA|CA|Canada|A2EUQ1WTGCTBG2|\n|NA|MX|Mexico|A1AM78C64UM0Y8|\n|NA|US|United States|ATVPDKIKX0DER|",
            "type": "string"
          },
          "countryCode": {
            "description": "A two-letter country code. Please refer to the table above for a list of supported country codes.",
            "type": "string"
          }
        }
      },
      "LocalizationTargetingExpressionResult": {
        "description": "Information regarding how and to what extent a targeting expression was localized.",
        "type": "object",
        "properties": {
          "errorCode": {
            "description": "If status is ERROR or FAILURE, the error code.",
            "type": "string"
          },
          "messages": {
            "description": "If present, contains one or more strings describing why predicates could not be localized. For manual diagnostic use.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "status": {
            "description": "The status of the localization operation. Note that if the source targeting expression contains an age range predicate that cannot be localized, localization of the entire expression will fail.\nSUCCESS: All predicates within the expression were localized.\nFAILURE: The expression could not be localized.\nERROR: The expression could not be localized because one or more errors occurred.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "FAILURE",
              "ERROR"
            ]
          },
          "localizedTargetingExpression": {
            "$ref": "#/components/schemas/LocalizationTargetingExpression"
          }
        },
        "required": [
          "status"
        ]
      },
      "LocalizationTargetingExpressionRequest": {
        "description": "A request to localize a targeting expression from a source marketplace to one or more target marketplaces.",
        "type": "object",
        "properties": {
          "targetingExpression": {
            "$ref": "#/components/schemas/LocalizationTargetingExpression"
          }
        },
        "required": [
          "targetingExpression"
        ]
      },
      "LocalizationCurrencyResponseV2": {
        "description": "LocalizationCurrencyResponse Object.",
        "type": "object",
        "properties": {
          "errorCode": {
            "description": "If status is ERROR, the error code. Not present if status is SUCCESS",
            "type": "string"
          },
          "sourceCurrency": {
            "$ref": "#/components/schemas/LocalizationCurrency"
          },
          "localizedCurrencyResults": {
            "description": "A map from target marketplace ID (country code) (string) to details regarding the localization status and messages.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationCurrencyResult"
            },
            "type": "object"
          },
          "status": {
            "description": "If SUCCESS, PARTIAL_SUCCESS, or FAILURE, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR",
              "PARTIAL_SUCCESS",
              "FAILURE"
            ]
          }
        },
        "required": [
          "localizedCurrencyResults",
          "status",
          "sourceCurrency"
        ]
      },
      "LocalizationCurrencyResult": {
        "description": "LocalizationCurrencyResult Object.",
        "type": "object",
        "properties": {
          "localizedCurrency": {
            "$ref": "#/components/schemas/LocalizationCurrency"
          },
          "messages": {
            "description": "If present, contains one or more strings describing why products could not be localized. For manual diagnostic use.",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "errorCode": {
            "description": "If status is ERROR, the error code. Not present if status is SUCCESS.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, FAILURE, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "ERROR",
              "FAILURE"
            ]
          }
        },
        "required": [
          "status",
          "localizedCurrency"
        ]
      },
      "LocalizationKeywordResponseV2": {
        "description": "A LocalizationKeywordResponse object. Contains localized keywords in the various target marketplaces/locales.",
        "type": "object",
        "properties": {
          "localizedKeywordResults": {
            "description": "A map from target marketplace ID / locale / countryCode to details regarding the localization status and messages.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationKeywordResult"
            },
            "type": "object"
          },
          "sourceKeyword": {
            "description": "Source keyword that was localized",
            "$ref": "#/components/schemas/LocalizationKeyword"
          },
          "errorCode": {
            "description": "If status is ERROR, the error code. Not present if status is SUCCESS.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, PARTIAL_SUCCESS or FAILURE, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "PARTIAL_SUCCESS",
              "FAILURE",
              "ERROR"
            ]
          }
        },
        "required": [
          "localizedKeywordResults",
          "status"
        ]
      },
      "LocalizationTargetingExpressionResponseV2": {
        "description": "A response to a request to localize a targeting expression from a source marketplace to one or more target marketplaces.",
        "type": "object",
        "properties": {
          "localizedTargetingExpressionResults": {
            "description": "A map from target marketplace ID (string) to the localization result (`LocalizationTargetingExpressionResult`). All target marketplaces present in the request will have an entry in this map.",
            "type": "object",
            "$ref": "#/components/schemas/LocalizationTargetingExpressionResult"
          },
          "sourceTargetingExpressions": {
            "description": "Source targeting expression for this result set.",
            "additionalProperties": {
              "$ref": "#/components/schemas/LocalizationTargetingExpression"
            },
            "type": "object"
          },
          "errorCode": {
            "description": "If status is ERROR, the error code. Not present if status is SUCCESS.",
            "type": "string"
          },
          "status": {
            "description": "If SUCCESS, PARTIAL_SUCCESS or FAILURE, do not retry. If ERROR, may retry.",
            "type": "string",
            "enum": [
              "SUCCESS",
              "PARTIAL_SUCCESS",
              "FAILURE",
              "ERROR"
            ]
          }
        },
        "required": [
          "sourceTargetingExpression",
          "localizedTargetingExpressionResults",
          "status"
        ]
      },
      "LocalizationProduct": {
        "description": "A product to be localized.",
        "type": "object",
        "properties": {
          "asin": {
            "description": "The product's Amazon Standard Identification Number. Required for entityType=VENDOR. If caller's entityType is SELLER, this field is optional and can yield better localization results if included.",
            "type": "string"
          },
          "sku": {
            "description": "The product's Stock Keeping Unit. Required for entityType=SELLER. If caller's entityType is VENDOR, this field is ignored.",
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {},
    "responses": {},
    "callbacks": {},
    "links": {},
    "securitySchemes": {},
    "parameters": {}
  },
  "openapi": "3.0.1"
}